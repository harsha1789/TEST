package Modules.Regression.FunctionLibrary;

import org.openqa.selenium.JavascriptException;
import org.openqa.selenium.JavascriptExecutor;
import static io.appium.java_client.touch.WaitOptions.waitOptions;
import static io.appium.java_client.touch.offset.PointOption.point;
//import static java.time.Duration.ofMillis;
import static org.testng.Assert.assertTrue;

import java.awt.Robot;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.StringReader;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.text.DecimalFormat;
import java.time.Duration;
//import java.time.Duration;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import java.util.Random;
import java.util.Set;
import java.util.UUID;
import java.util.concurrent.TimeUnit;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.apache.commons.io.FileUtils;
import org.apache.log4j.Logger;
import org.apache.xmlbeans.impl.xb.xsdschema.FieldDocument.Field.Xpath;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.ElementNotVisibleException;
import org.openqa.selenium.Keys;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.ScreenOrientation;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.TimeoutException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebDriverException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.interactions.touch.TouchActions;
import org.openqa.selenium.remote.RemoteWebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.sikuli.script.Screen;
import org.testng.Assert;
import org.testng.annotations.Optional;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

//import com.sun.media.jfxmediaimpl.platform.osx.OSXPlatform;
import com.zensar.automation.api.RestAPILibrary;
import com.zensar.automation.framework.driver.MobileDriver;
import com.zensar.automation.framework.library.TestdroidImageRecognition;
import com.zensar.automation.framework.model.Coordinates;
import com.zensar.automation.framework.report.Desktop_HTML_Report;
import com.zensar.automation.framework.report.Mobile_HTML_Report;
import com.zensar.automation.framework.utils.Constant;
import com.zensar.automation.framework.utils.ExcelDataPoolManager;
import com.zensar.automation.framework.utils.Util;
import com.zensar.automation.library.CommonUtil;
import com.zensar.automation.library.DataBaseFunctions;
import com.zensar.automation.library.ImageLibrary;
import com.zensar.automation.library.TestPropReader;
import com.zensar.automation.model.FreeGameOfferResponse;

import io.appium.java_client.AppiumDriver;
import io.appium.java_client.MobileBy;
import io.appium.java_client.MobileElement;
import io.appium.java_client.TouchAction;
import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.ios.IOSDriver;
import io.appium.java_client.ios.IOSElement;
import io.appium.java_client.touch.WaitOptions;
import io.appium.java_client.touch.offset.PointOption;
import net.lightbody.bmp.BrowserMobProxyServer;
import net.lightbody.bmp.core.har.Har;
import net.lightbody.bmp.core.har.HarEntry;
import net.lightbody.bmp.core.har.HarLog;

public class CFNLibrary_Mobile {

	Logger log = Logger.getLogger(CFNLibrary_Mobile.class.getName());

	Properties OR = new Properties();
	WebDriverWait Wait;

	// public RemoteWebDriver webdriver;// changes for selenium grid
	public AppiumDriver<WebElement> webdriver;
	public BrowserMobProxyServer proxy;
	public Mobile_HTML_Report repo1;
	public String GameName;
	public Map<String, String> xpathMap;
	public static final String UTF8_BOM = "\uFEFF";
	public String userName;
	String osVersion;
	String osPlatform;
	public String selectedamout = "";

	public CFNLibrary_Mobile(AppiumDriver<WebElement> webdriver1, BrowserMobProxyServer proxy1, Mobile_HTML_Report tc06,
			String gameName) throws IOException {
		log.info("In mobile super class");
		webdriver = webdriver1;
		proxy = proxy1;
		repo1 = tc06;
		// webdriver.manage().timeouts().implicitlyWait(5, TimeUnit.MINUTES);
		Wait = new WebDriverWait(webdriver, 60);
		String newGameurl = null;
		this.GameName = gameName;

		String testDataExcelPath = TestPropReader.getInstance().getProperty("TestData_Excel_Path");
		ExcelDataPoolManager excelpoolmanager = new ExcelDataPoolManager(testDataExcelPath);
		log.info("Read Excel file");
		Map<String, String> rowData1 = null;
		int rowcount1 = excelpoolmanager.rowCount(testDataExcelPath, GameName);
		log.info("Total row " + rowcount1);

		xpathMap = new HashMap<>();
		for (int i = 1; i < rowcount1; i++) {
			// System.out.println("I value is "+i);
			rowData1 = excelpoolmanager.readExcelByRow(testDataExcelPath, GameName, i);
			String element = rowData1.get("Element").trim();
			String xpath = rowData1.get("Xpath").trim();

			xpathMap.put(element, xpath);
		}
		if (TestPropReader.getInstance().getProperty("GameMobileUrl") != null) {
			String gameurl = TestPropReader.getInstance().getProperty("GameMobileUrl");

			log.debug("Before encoding string is=" + gameurl);

			Pattern p = Pattern.compile("\\\\u0026");
			Matcher m = p.matcher(gameurl);

			if (m.find()) {
				newGameurl = m.replaceAll("&");
			} else {
				newGameurl = gameurl;
			}

			log.debug("Decoded Url=" + newGameurl);
			xpathMap.put("ApplicationURL", newGameurl);

		}
	}

	Util clickAt = new Util();

	public void closeOverlay() {

		if (osPlatform.equalsIgnoreCase("iOS")) {
			TouchAction touchAction = new TouchAction(webdriver);
			touchAction.tap(PointOption.point(120, 120)).perform();
		} else {// For Andriod mobile
			Actions act = new Actions(webdriver);
			act.moveByOffset(20, 80).click().build().perform();
			act.moveByOffset(-20, -80).build().perform();

		}

	}

	/*
	 * Date: 07/01/2019 Author:Sneha Jawarkar Description: Freegame_GTR Parameter:
	 * NA
	 */
	public void quickspinwithBasegameFreespin() throws InterruptedException {
		// method signature define in parent class
	}
	/*
	 * Author : Anand Bhayre Description: To fill Spain Start Session Form Param:
	 * Time Limit, Reminder Period, Loss Limit and prevent Future Slot Game for Play
	 * Return: Boolean value
	 */

	public boolean fillSatrtSessionForm(String timeLimit, String reminderPeriod, String lossLimit,
			String preventFuture) {
		boolean ret = false;
		Wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath(xpathMap.get("timeLimitInput"))));
		Select sel = new Select(webdriver.findElement(By.xpath(xpathMap.get("timeLimitInput"))));
		sel.selectByVisibleText(timeLimit);
		sel = new Select(webdriver.findElement(By.xpath(xpathMap.get("reminderLimitInput"))));
		sel.selectByVisibleText(reminderPeriod);
		webdriver.findElement(By.xpath(xpathMap.get("lossLimitInput"))).sendKeys(lossLimit);
		sel = new Select(webdriver.findElement(By.xpath(xpathMap.get("preventfutureslotgamefor"))));
		sel.selectByVisibleText(preventFuture);

		webdriver.findElement(By.xpath(xpathMap.get("setlimitbutton"))).click();

		Wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath(xpathMap.get("okButton"))));
		webdriver.findElement(By.xpath(xpathMap.get("okButton"))).click();
		closeSavePasswordPopup();
		ret = isElementExist("newFeature", 120);

		return ret;

	}

	/*
	 * Date: 30/04/2019 Description:To verify is_autoplay_window. *Parameter: NA
	 * 
	 * @return boolean
	 */
	public boolean isAutoplayWindow() {

		return true;

	}

	/*
	 * Date: 30/04/2019 Description:To verify autoplay must stop when focus being
	 * removed. Parameter: NA
	 * 
	 * @return boolean
	 */
	public boolean autoplayFocusRemoved() {

		boolean focus = false;
		try {
			webdriver.findElement(By.id(xpathMap.get("AutoplayID"))).click();
			webdriver.findElement(By.id(xpathMap.get("Start_Autoplay_ID"))).click();
//			webdriver.runAppInBackground(Duration.ofMinutes(3));
			webdriver.launchApp();
			focus = true;
		}

		catch (Exception e) {
			log.error("Focus not get changed");
			log.error(e.getMessage());

		}
		return focus;

	}

	/**
	 * Date: 26/6/2019 Author: Sneha Jawarkar Description: GTR Reelspin
	 */
	public boolean clickspintostop() {
		return false;
	}

	/* Sneha Jawarkar: Wait for Spin button */
	public boolean waitForSpinButtonstop() {
		return false;
	}

	/**
	 * * Date: 14/05/2019 Author: Sneha Jawarkar. Description: This function is used
	 * in GTR_freegame Parameter: play letter
	 */
	public void clickBaseSceneDiscardButton() {
		// Do nothing , just define in parent class
	}

	/**
	 * * Date: 17/05/2019 Author: Sneha Jawarkar. Description: This function is used
	 * in GTR_freegame Parameter: resume play button
	 */
	public boolean clickFreegameResumePlayButton() {
		return false;
	}

	/**
	 * This method is used to wait till FS scene loads Author: Sneha Jawarkar
	 */
	public boolean freeSpinEntryScene() {
		return false;
	}

	/*
	 * Date: 16/05/2019 Author:Sneha Jawarkar Description: Freegame_GTR Parameter:
	 * NA
	 */
	public boolean completeFreeGameOfferFreespin(int freegamescount) {
		return false;
	}

	/**
	 * Date: 21/6/2019 Author: Sneha Jawarkar Description: GTR Reelspin
	 * 
	 * @throws InterruptedException
	 */
	public long reelSpinspeedDuration() throws InterruptedException {
		long avgspinduration = 0;
		return avgspinduration;
	}

	/*
	 * Date: 16/05/2019 Author:Sneha Jawarkar Description: Freegame_GTR Parameter:
	 * NA
	 */
	public boolean completeFreeGameOffer(int freegamescount) {
		return false;

	}

	/**
	 * * Date: 14/05/2019 Author: Sneha Jawarkar. Description: This function is used
	 * in GTR_freegame Parameter: play letter
	 */

	public boolean clickOnPlayLater() {
		return false;
	}

	/**
	 * Date:15/5/19 Author:Sneha Jawarkar GTR_Freegame purpose
	 */

	public void backtogameCenterclick() {
		// declearing methode signature
	}

	/*
	 * Date: 16/05/2019 Author:Sneha Jawarkar Description: Freegame_GTR Parameter:
	 * NA
	 */
	public void reelspinDurationDuringWinLoss() throws InterruptedException {
		// declearing methode signature
	}

	/**
	 * Date: 21/6/2019 Author: Sneha Jawarkar Description: GTR Reelspin
	 * 
	 * @throws InterruptedException
	 */
	public long reelSpinSpeedDurationNormal() throws InterruptedException {
		long Avgnormalspinduration = 0;
		return Avgnormalspinduration;
	}

	/**
	 * Date: 21/6/2019 Author: Sneha Jawarkar Description: GTR Reelspin
	 * 
	 * @throws InterruptedException
	 */
	public void reelSpinDifferecneDurationNormalspinQuickspin() throws InterruptedException {
		// declearing methode signature
	}

	/**
	 * Date: 21/6/2019 Author: Sneha Jawarkar Description: GTR Reelspin
	 * 
	 * @throws InterruptedException
	 */
	public long reelspinSpeedDuringAutoplay() {
		long avgAutoplayDuration = 0;
		return avgAutoplayDuration;

	}

	/**
	 * Date: 26/6/2019 Author: Sneha Jawarkar Description: GTR Reelspin
	 * 
	 * @throws Exception
	 */
	public void reelspinInAll() throws Exception { // declearing methode signature
	}

	/*
	 * Date: 5/05/2019 Description:To verify Autoplay after free spin Parameter: NA
	 * 
	 * @return boolean
	 */

	public boolean isAutoplayWithFreespin() {
		boolean freeSpin = false;
		try {
			webdriver.findElement(By.xpath(xpathMap.get("Start_Autoplay"))).click();
			Thread.sleep(5000);
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("spin_button"))));
			log.debug("Free spin over");
			freeSpin = true;
		} catch (Exception e) {
			log.error("Free Spins are not completed");
		}
		return freeSpin;
	}

	/*
	 * Date: 30/04/2019 Description:To verify Auto play on refreshing Parameter: NA
	 * 
	 * @return boolean
	 */
	public boolean autoplayOnRefresh() {
		boolean onrefresh = false;
		try {
			nativeClickByID(xpathMap.get("Start_Autoplay_ID"));
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			funcFullScreen();
			Wait.until(ExpectedConditions.elementToBeClickable(By.id(xpathMap.get("Spin_Button_ID"))));
			log.debug("On refresh previous autoplay session has not resume");
			onrefresh = true;
		} catch (Exception e) {
			log.error("On refresh previous autoplay session has resume");

		}

		return onrefresh;
	}

	/*
	 * Date: 30/04/2019 Description:To verify maximum count of spin. *Parameter: NA
	 * 
	 * @return boolean
	 */
	public boolean maxSpinChk() {
		boolean maxSpin = false;
		try {
			Thread.sleep(5000);
			nativeClickByID(xpathMap.get("AutoplayID"));
			WebElement sizeSlider = webdriver.findElement(By.id(xpathMap.get("SpinSizeSlider_ID")));
			clickWithWebElement(sizeSlider, 500);
			log.debug("drag and drop performed");

			String value2 = webdriver.findElement(By.id(xpathMap.get("SpinCount_ID"))).getText();

			if (value2.equals("100")) {
				maxSpin = true;
			} else {
				maxSpin = false;
			}

		} catch (Exception e) {
			log.error("Session not over after autoplay spin", e);

		}
		return maxSpin;
	}

	/*
	 * Date: 30/04/2019 Description:To verify Autoplay spin session stop Parameter:
	 * NA
	 * 
	 * @return boolean
	 */
	public boolean isAutoplaySessionEnd() {

		boolean spinSession = false;

		try {

			WebElement e = webdriver.findElement(By.id("spinsSlidertrack"));
			Thread.sleep(2000);
			clickWithWebElement(e, -400);
			nativeClickByID(xpathMap.get("Start_Autoplay_ID"));
			log.debug("Clicked Auto paly..");
			Wait.until(ExpectedConditions.elementToBeClickable(By.id(xpathMap.get("Spin_Button_ID"))));
			spinSession = true;

		} catch (Exception e) {
			log.error("Session not over after autoplay spin", e);
		}
		return spinSession;
	}

	/*
	 * Date: 30/04/2019 Description:To verify Autoplay spin selection Parameter: NA
	 * 
	 * @return boolean
	 */

	public boolean autoplaySpinSelection() {
		boolean spinAutoplay = false;
		try {
			WebElement e = webdriver.findElement(By.id("spinsSlidertrack"));
			clickWithWebElement(e, 200);
			spinAutoplay = true;
		} catch (Exception e) {
			log.error("Spin count not getting change.", e);
		}
		return spinAutoplay;
	}

	/*
	 * Date: 30/04/2019 Description:To verify Autoplay with quick spin on Parameter:
	 * NA
	 * 
	 * @return boolean
	 */

	public boolean autoPlayWithQSOn() {
		boolean qsoff = webdriver.findElement(By.xpath(xpathMap.get("QuickSpin_Off"))).isDisplayed();
		WebElement qsoffele = webdriver.findElement(By.xpath(xpathMap.get("QuickSpin_Off")));
		if (qsoff) {
			qsoffele.click();

			boolean qson = webdriver.findElement(By.xpath(xpathMap.get("QuickSpin_On"))).isDisplayed();
			if (qson) {
				webdriver.findElement(By.id(xpathMap.get("AutoplayID"))).click();
			}

		}
		return qsoff;

	}

	public boolean ISAutoplayAvailable() {
		boolean autoplay;
		try {
			autoplay = webdriver.findElement(By.id(xpathMap.get("AutoplayID"))).isDisplayed();
		} catch (Exception e) {
			log.error("Autoplay id button is not visible", e);
			autoplay = false;
		}
		return autoplay;
	}

	public void waitBonus() {
		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("M_Bonus"))));
	}

	public String functNavigateURLCacheClear(String url) throws Exception {
		String ret = null;
		try {
			funcLandscape();
			webdriver.get(url);
			Thread.sleep(30000);
			ret = webdriver.getTitle();
		} catch (Exception e) {
			e.printStackTrace();
			evalException(e);
		}
		return ret;
	}

	public String responsiblepara1() {
		String para1 = null;
		try {
			para1 = webdriver.findElement(By.xpath(xpathMap.get("responsibleParagraph1"))).getText();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return para1;
	}

	public String functNavigateURLnewPortrait(String url) throws Exception {
		String ret = null;
		try {
			funcPortrait();
			webdriver.get(url);
			Thread.sleep(30000);
			ret = webdriver.getTitle();
		} catch (Exception e) {
			e.printStackTrace();
			evalException(e);
		}
		return ret;
	}

	public boolean fillSatrtSessionForm1(String timeLimit, String reminderPeriod, String lossLimit,
			String preventFuture) {
		boolean ret = false;
		Wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath(xpathMap.get("timeLimitInput"))));
		Select sel = new Select(webdriver.findElement(By.xpath(xpathMap.get("timeLimitInput"))));
		sel.selectByVisibleText(timeLimit);
		sel = new Select(webdriver.findElement(By.xpath(xpathMap.get("reminderLimitInput"))));
		sel.selectByVisibleText(reminderPeriod);
		webdriver.findElement(By.xpath(xpathMap.get("lossLimitInput"))).sendKeys(lossLimit);
		sel = new Select(webdriver.findElement(By.xpath(xpathMap.get("preventfutureslotgamefor"))));
		sel.selectByVisibleText(preventFuture);
		Wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath(xpathMap.get("setlimitbutton"))));
		closeSavePasswordPopup();
		ret = isElementExist("setlimitbutton", 120);

		return ret;
	}

	public String refreshpageResponsible() {
		// refresh page
		String refresh = null;
		WebElement slotgametitle;
		try {
			slotgametitle = webdriver.findElement(By.xpath(xpathMap.get("SlotGameLimit")));
			refresh = slotgametitle.getText();
		} catch (Exception e) {
			log.error(e.getMessage());
		}
		return refresh;
	}

	public String refreshPageSlotGameSummary() {
		String refresh = null;
		WebElement slotgametitle;
		webdriver.navigate().refresh();
		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("responsiblegaming"))));
		slotgametitle = webdriver.findElement(By.xpath(xpathMap.get("responsiblegaming")));
		refresh = slotgametitle.getText();
		return refresh;
	}

	/*
	 * Author: Anand Bhayre Description: Click on given element Param: Element Xpath
	 * Key -Target -Expected Return: boolean value
	 */
	public boolean clickOnElement(String targetElementKey, String expectedElementKey) {
		Wait.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathMap.get(targetElementKey)))).click();
		return isElementExist(expectedElementKey, 60);
	}

	public String verifyFlag() throws InterruptedException {
		nativeClickByID(xpathMap.get("Denamrk_FlagID"));
		return (webdriver.findElement(By.id(xpathMap.get("Denamrk_FlagID"))).getText());
	}

	/*
	 * Date: 03/04/2017 Author: Author: Dhairaya Gautam Description: This function
	 * used for page load Parameter: NA
	 */
	public String verifyResponsibleLinkworking() {
		return (webdriver.findElement(By.id("responsibleGaming")).getText());
	}

	public String getText(String elementKeyName) {
		return webdriver.findElement(By.xpath(xpathMap.get(elementKeyName))).getText();
	}

	// Navigation
	public boolean nativeClickByID(String locator) throws InterruptedException {
		boolean present = false;
		try {
			String context = webdriver.getContext();

			try {
				Wait.until(ExpectedConditions.elementToBeClickable(By.id(locator)));
			} catch (Exception e) {
				log.error("Unable to find" + locator, e);
				// System.out.println("Unable to find"+locator);
			}
			MobileElement element = (MobileElement) webdriver.findElement(By.id(locator));

			if (element != null) {
				if (osPlatform.equalsIgnoreCase("Android")) {
					element.click();
					Thread.sleep(6000);
					System.out.println("Element Found");
					log.debug("Element Found");
					// clickWithWebElement(element, 0);
				} else {
					// for IOS device

					webdriver.executeScript("arguments[0].click();", element);
					Thread.sleep(6000);
					System.out.println("Element Found");
					log.debug("Element Found");

					// element.click();

					/*
					 * Actions actions = new Actions(webdriver); actions.click(element);
					 * actions.build().perform();
					 */
					// JavascriptExecutor js = (JavascriptExecutor) webdriver;
					// js.executeScript("javascript:document.getElementById(xpathMap.get(locator)");

					// IOSElement btn = (IOSElement)new WebDriverWait(webdriver ,
					// 30).until(ExpectedConditions.elementToBeClickable(MobileBy.id(locator)));
					// btn.click();
					// clickWithWebElement(element, 0);
					// element.click();

				}

				present = true;
			}
			webdriver.context(context);
		} catch (NoSuchElementException e) {
			System.out.println(e.getMessage());
			System.out.println("Unable to Navigate to the clicked Page");
			log.debug("Unable to Navigate to the clicked Page");
			present = false;
		}
		return present;
	}
	/*
	 * Author: Anand Description: To test element is present or not Param: Key of
	 * element's xpath from OR Return: Boolean value
	 */

	public boolean isElementExist(String keyName, int timeInSeconds) {
		boolean ret = false;
		try {
			webdriver.manage().timeouts().implicitlyWait(timeInSeconds, TimeUnit.SECONDS);
			if (!webdriver.findElements(By.xpath(xpathMap.get(keyName))).isEmpty()) {
				ret = true;
			}
		} catch (Exception e) {
			webdriver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);
		}
		return ret;
	}

	/**
	 * 
	 * Autohr: Havish Jain Description: This function used for navigating to
	 * Gibraltar url
	 * 
	 * @return true
	 */
	public String funcNavigateDirectURL(String urlNavigate) {
		Wait = new WebDriverWait(webdriver, 500);
		String title = null;
		try {
			webdriver.context("NATIVE_APP");
			webdriver.rotate(ScreenOrientation.LANDSCAPE);
			webdriver.context("CHROMIUM");
			webdriver.navigate().to(urlNavigate);
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("Spin_Button_ID"))));
			funcFullScreen();
			title = webdriver.getTitle();

		} catch (Exception e) {
			e.printStackTrace();
		}
		return title;
	}

	/**
	 * Autohr: Havish Jain Description: This function used for verifying the help
	 * icon in Gibraltar reg market
	 * 
	 * @return
	 */

	public boolean verifyHelp() throws InterruptedException {

		return false;
	}

	/**
	 * Autohr: Havish Jain Description: This function used for clicking help icon in
	 * Gibraltar reg market
	 * 
	 * @return
	 */
	public String clickHelp() {

		String googleTitle = null;

		googleTitle = webdriver.getTitle();

		return googleTitle;
	}

	/*
	 * Date: 13/11/2017 Author: Ashish Kshatriya Description: This function is used
	 * for send keys on text box Parameter: By locator, String keys
	 */
	public boolean funcSendClick(By locator, String keys) {
		try {
			WebElement ele = webdriver.findElement(locator);
			if (ele != null) {
				ele.sendKeys(keys);
			}
			return true;
		} catch (NoSuchElementException e) {
			return false;
		}
	}

	public String funcNavigate(String applicationName, String url) {
		String gameDesktopName = null;
		try {
			webdriver.manage().deleteAllCookies();
			webdriver.get(url);
			Wait.until(ExpectedConditions.elementToBeClickable(By.id(xpathMap.get("LobbyfiveReels"))));
			webdriver.findElement(By.xpath(xpathMap.get("LobbyNewGames"))).click();

			Wait.until(ExpectedConditions.elementToBeClickable(By.id(applicationName)));
			webdriver.findElement(By.id(applicationName)).click();
			gameDesktopName = webdriver.findElement(By.id(applicationName)).getText();
			log.info("application name" + gameDesktopName);
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("loginPopUp"))));
		} catch (Exception e) {
			e.printStackTrace();
		}
		return gameDesktopName;
	}

	/*
	 * Date: 03/04/2017 Author: Author: Dhairaya Gautam Description: This function
	 * used for page load Parameter: NA
	 */
	public String funcLogoutSpain() {
		String loginTitle = null;
		try {

			Wait.until(ExpectedConditions.elementToBeClickable(By.id(xpathMap.get("accountsLobbyID")))).click();
			;
			Thread.sleep(2000);

			webdriver.findElement(By.id(xpathMap.get("logoutbuttonId"))).click(); // Clicking on log out button
			Thread.sleep(1000);
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("LoginTitleid"))));
			loginTitle = webdriver.findElement(By.id(xpathMap.get("LoginTitleid"))).getText(); // Clicking on log out
																								// button
			Thread.sleep(1000);
			webdriver.findElement(By.id(xpathMap.get("closeButtonid"))).click(); // Clicking on log out button
			Thread.sleep(1000);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return loginTitle;
	}

	/**
	 * Date:07/12/2017 Author:premlata mishra This method is to get win amount
	 * 
	 * @return true
	 */
	public String getWinAmt() {
		return null;
	}

	public String getBetAmt() {
		return null;
	}
	/*
	 * Date: 11/04/2017 Author:Robin Dulhani Description: This function verifies the
	 * working of the TOGGLE TOPBAR. Parameter: imagepath
	 */

	public String verifyToggleTopbar() {
		String topbarData = null;
		try {

			Thread.sleep(1000);
			nativeClickByID(xpathMap.get("Toggle_TopBar_ID"));
			webdriver.switchTo().frame(webdriver.findElement(By.name("commonUIIFrame")));
			String stake = webdriver.findElement(By.id("stake")).getText() + "!";
			String paid = webdriver.findElement(By.id("paid")).getText() + "!";
			String balance = webdriver.findElement(By.id("balance")).getText() + "!";
			topbarData = stake + paid + balance;

		} catch (Exception e) {
			e.printStackTrace();

		}
		return topbarData;
	}

	/**
	 * Date: 03/04/2017 Author: Kamal Kumar Vishwakarma Description: Parameter:
	 */
	public int[] getAttributes(String nodeValue, String attribute1, String attribute2, String attribute3) {

		int[] data = new int[4];
		String balance = null;
		String loyaltyBalance = null;
		String totalWin = null;
		int totalWinNew = 0;
		try {
			waitForPageToBeReady();
			Thread.sleep(1000);
			clickAt(xpathMap.get("spinButtonPixels"));
			Thread.sleep(15000);
			String dataFromHar = clickAt.getData(nodeValue, attribute1, attribute2, attribute3, proxy);
			balance = dataFromHar.split(",")[0];
			loyaltyBalance = dataFromHar.split(",")[1];
			totalWin = dataFromHar.split(",")[2];
			totalWinNew = Integer.parseInt(totalWin);

			data[0] = Integer.parseInt(balance);
			data[1] = Integer.parseInt(loyaltyBalance);
			data[2] = Integer.parseInt(totalWin);
			data[3] = totalWinNew;

		} catch (Exception e) {
			e.printStackTrace();
		}
		return data;
	}

	/*
	 * Date: 03/04/2017 Author: Author: Dhairaya Gautam Description: This function
	 * used for page load Parameter: NA
	 */
	public boolean navigateSettingsUK() {
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("canvasxPath"))));
			Thread.sleep(1000);
			clickAt(xpathMap.get("bargurMenu"));
			Thread.sleep(500);
			clickAt(xpathMap.get("settingsUK"));
			Thread.sleep(500);
		} catch (Exception exception) {
			log.error(exception);
		}
		return true;
	}

	/*
	 * Date: 03/04/2017 Author: Author: Kanchan B Description: This function use to
	 * open URL page load Parameter: url
	 */
	public void openUrl(String url) {
		try {
			webdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
			webdriver.manage().window().maximize();
			webdriver.get(url);

			Thread.sleep(20000);
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("canvasxPath"))));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/*
	 * Date: 03/04/2017 Author: Author: Dhairaya Gautam Description: This function
	 * used for page load Parameter: NA
	 */

	public boolean clickok() {
		boolean close = false;
		close = webdriver.findElements(By.xpath(xpathMap.get("LossLimitOverOk"))).isEmpty();
		if (!close) {
			webdriver.findElement(By.xpath(xpathMap.get("LossLimitOverOk"))).click();
			close = true;
		}
		return close;
	}

	/*
	 * Date: 06/04/2017 Author: Ashish Kshatriya Description:Verify
	 * SlotGameSession,TotalWagered,TotalPayouts & TotalBalance for regulatory
	 * market Spain Parameter: N/A
	 */
	public boolean lossLimitPopupOverLay() throws InterruptedException {
		try {
			boolean popup = webdriver.findElements(By.id(xpathMap.get("LossLimitOverPopup"))).isEmpty();
			while (!popup) {
				clickAt.clickAt(xpathMap.get("spinButtonPixels"), webdriver, "");
				Thread.sleep(2000);
				boolean popup1 = webdriver.findElements(By.id(xpathMap.get("LossLimitOverPopup"))).isEmpty();
				if (!popup1) {
					break;
				}
			}
			boolean ok = webdriver.findElements(By.id(xpathMap.get("LossLimitOverOk"))).isEmpty();
			if (!ok) {
				webdriver.findElement(By.id(xpathMap.get("LossLimitOverOk"))).click();
			}
			boolean close = webdriver.findElements(By.id(xpathMap.get("LossLimitClose"))).isEmpty();
			if (!close) {
				webdriver.findElement(By.id(xpathMap.get("LossLimitClose"))).click();
			}
		} catch (NoSuchElementException e) {
			e.printStackTrace();
			return false;
		}
		return true;
	}

	/*
	 * Date: 06/04/2017 Author: Kanchan B Description: This function Navigate Game
	 * application by taking application name Parameter: applicationName to search
	 * in different page
	 */
	public String funcNavigate(String urlNavigate) throws InterruptedException {
		try {

			webdriver.navigate().to(urlNavigate);
			Thread.sleep(5000);
			/*
			 * JavascriptExecutor js = ((JavascriptExecutor)webdriver); String javascript =
			 * "return arguments[0].innerHTML"; String
			 * pageSource=(String)js.executeScript(javascript,
			 * webdriver.findElement(By.tagName("html"))); //System.out.println(pageSource);
			 * if (pageSource.contains("Arthur")) {
			 * log.debug("Inside Microgaming Skin fuctionality");
			 * js.executeScript("arguments[0].scrollIntoView(true);",webdriver.findElement(
			 * By.xpath(xpathMap.get("GameName_Arthur"))));
			 * js.executeScript("arguments[0].click();",
			 * webdriver.findElement(By.id(GameName))); if
			 * (webdriver.findElement(By.xpath(xpathMap.get("PlayNow_Arthur"))).isDisplayed(
			 * )) {
			 * webdriver.findElement(By.xpath(xpathMap.get("GameName_Arthur"))).click(); } }
			 * else { log.debug("Inside Mint Skin block");
			 * 
			 * js.executeScript("arguments[0].scrollIntoView(true);",webdriver.findElement(
			 * By.id(GameName)));
			 * 
			 * js.executeScript("arguments[0].click();",
			 * webdriver.findElement(By.id(GameName))); }
			 * Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.
			 * get("Login"))));
			 */
			// Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("OneDesign_NewFeature_ClickToContinue"))));
			// new WebDriverWait(webdriver,
			// 60).until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("Spin_Button_ID"))));
			log.debug("entered on lobby and clicked on game");
		} catch (Exception e) {
			log.error("Error in navigating url", e);
		}
		return GameName;
	}

	public boolean funcPortrait() throws Exception {
		boolean ret = false;
		try {
			String curContext = webdriver.getContext();
			webdriver.context("NATIVE_APP");
			try {
				webdriver.rotate(ScreenOrientation.PORTRAIT);
			} catch (WebDriverException ignore) {
				// Ignore the exception
			}
			webdriver.context(curContext);
			ret = true;
		} catch (Exception e) {
			evalException(e);
			log.error("Error :" + e);
		}
		return ret;
	}

	public boolean funcLandscape() throws Exception {
		boolean ret = false;
		try {
			String curContext = webdriver.getContext();
			webdriver.context("NATIVE_APP");
			try {
				webdriver.rotate(ScreenOrientation.LANDSCAPE);
			} catch (WebDriverException ignore) {
				// Ignore the exception
			}
			webdriver.context(curContext);
			ret = true;
		} catch (Exception e) {
			evalException(e);
			log.error("Error :" + e);
		}
		return ret;
	}

	/* game play error handling */

	public String funGamePlayError() {
		String gameplay = null;
		try {
			gameplay = webdriver.findElement(By.xpath(xpathMap.get("gameplayerror"))).getText();

		} catch (Exception t1) {
			t1.getMessage();
		}
		return gameplay;
	}

	/*
	 * Date: 10/04/2017 Author: Author: Ashish Kshatriya Description: This function
	 * is used for get Data from the Har Parameter: NA
	 */
	public String parseXML(String nodeValue, String attribute1, String attribute2, String attribute3, String xmlData)
			throws SAXException, IOException, ParserConfigurationException {
		String dataList = "";
		Node nNode;
		NodeList nList;
		DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
		DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
		InputSource is = new InputSource();
		is.setCharacterStream(new StringReader(xmlData));
		Document doc = dBuilder.parse(is);
		doc.getDocumentElement().normalize();
		log.debug("Root element :" + doc.getDocumentElement().getNodeName());
		nList = doc.getElementsByTagName(nodeValue);
		nNode = nList.item(0);
		if (nNode.getNodeType() == Node.ELEMENT_NODE) {
			Element eElement = (Element) nNode;
			dataList += eElement.getAttribute(attribute1) + ",";
			dataList += eElement.getAttribute(attribute2) + ",";
			dataList += eElement.getAttribute(attribute3);
		}
		return dataList;
	}

	public void checkPage(Mobile_HTML_Report tc10) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			boolean test = webdriver.findElements(By.xpath(xpathMap.get("spain_StartNewSession"))).isEmpty();
			if (!test) {
				tc10.detailsAppend("Verify that Start New Sessiosn Overlay appears before the game loads ",
						"Start New Sessiosn Overlay should appear before the game loads",
						"Start New Sessiosn Overlay is appearing before the game loads", "Pass");
				funcClick(xpathMap.get("spain_StartNewSession"));
			} else {
				log.debug("Slot Game limit overlay appears");
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public String funcLoginNew(String username, String password, String applicationName) throws Exception {
		String gameDesktopName;
		Wait.until(ExpectedConditions.elementToBeClickable(By.id(xpathMap.get("LobbyfiveReels"))));

		webdriver.findElement(By.id(xpathMap.get("LobbyfiveReels"))).click();

		gameDesktopName = webdriver.findElement(By.id(applicationName)).getText();
		log.debug("application name " + gameDesktopName);
		webdriver.findElement(By.id(applicationName)).click();

		Wait.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathMap.get("GameUserName"))));
		webdriver.findElement(By.xpath(xpathMap.get("GameUserName"))).clear();
		webdriver.findElement(By.xpath(xpathMap.get("GameUserName"))).sendKeys(username);
		webdriver.findElement(By.xpath(xpathMap.get("GamePassword"))).clear();
		webdriver.findElement(By.xpath(xpathMap.get("GamePassword"))).sendKeys(password);
		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("GameLogin"))));
		webdriver.findElement(By.xpath(xpathMap.get("GameLogin"))).click();
		Thread.sleep(5000);
		String titlenew = webdriver.getTitle();
		closeSavePasswordPopup();
		closeSavePasswordPopup();

		return titlenew;
	}

	/* Verify the last Login Pop up */

	public boolean lastLoginPopup() {

		Wait.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath(xpathMap.get("loadingContainer"))));
		WebElement lastlogin = webdriver.findElement(By.xpath(xpathMap.get("lastLoginPopup")));
		lastlogin.click();

		return true;
	}

	public String tapAt(String elementKey) throws InterruptedException {
		double userwidth;
		double userheight;
		int userElementX;
		int userElementY;
		int Ty;
		int Tx;
		String userdata = xpathMap.get(elementKey);
		String[] coordinates1 = userdata.split(",");
		userwidth = Integer.parseInt(coordinates1[0]);
		userheight = Integer.parseInt(coordinates1[1]);
		userElementX = Integer.parseInt(coordinates1[2]);
		userElementY = Integer.parseInt(coordinates1[3]);

		webdriver.context("NATIVE_APP");
		double deviceHeight = webdriver.manage().window().getSize().getHeight();
		double deviceWidth = webdriver.manage().window().getSize().getWidth();
		log.debug("Device H=" + deviceHeight + " Device W=" + deviceWidth);
		Tx = (int) ((deviceWidth / userwidth) * userElementX);
		Ty = (int) ((deviceHeight / userheight) * userElementY);

		webdriver.context("CHROMIUM");
		Thread.sleep(5000);
		return Tx + "," + Ty;
	}

	public String functNavigateURLnew(String url) throws Exception {

		String ret = null;

		try {
			funcLandscape();
			webdriver.get(url);
			ret = "Spain";

		} catch (Exception e) {
			e.printStackTrace();
			evalException(e);

		}
		return ret;
	}

	/*
	 * Date: 04/05/2017 Author: Anish Description: This function Func_Login use to
	 * perform login operation Commented By :Kanchan Parameter: applicationName and
	 * url
	 */
	public String funcLogin(String userName, String password) {
		String title = null;
		try {
			webdriver.findElement(By.xpath(xpathMap.get("GameUserName"))).clear();
			webdriver.findElement(By.xpath(xpathMap.get("GameUserName"))).sendKeys(userName);
			webdriver.findElement(By.xpath(xpathMap.get("GamePassword"))).clear();
			webdriver.findElement(By.xpath(xpathMap.get("GamePassword"))).sendKeys(password);
			webdriver.findElement(By.xpath(xpathMap.get("GameLogin"))).click();
			Thread.sleep(2000);
			closeSavePasswordPopup();
			title = webdriver.getTitle();
			log.debug("The Title is" + title);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return title;
	}

	/*
	 * Date: 18/04/2017 Author: Ashish Kshatriya Description: This function is used
	 * for Swipe max Parameter:Swipe Max Coin Size
	 */
	public boolean swipeMaxCoinSize(double maxCoinSize) throws Exception {
		try {
			clickAt(xpathMap.get("SelectCredits"));
			Thread.sleep(300);
			clickAt(xpathMap.get("SelectCoins"));
			Thread.sleep(500);
			clickAt(xpathMap.get("CoinSize"));
			Thread.sleep(500);
			for (double i = 0; i < maxCoinSize; i++) {
				clickAt(xpathMap.get("CoinMax"));
				Thread.sleep(500);
			}
			clickAt(xpathMap.get("CoinSize"));
			Thread.sleep(500);
		} catch (Exception e) {
			return false;
		}
		return true;
	}

	/*
	 * Date: 18/04/2017 Author: Ashish Kshatriya Description: This function is used
	 * for Swipe min Parameter:Swipe Min Coin Size
	 */
	public boolean swipeMinCoinSize(double minCoinSize) throws Exception {
		try {
			clickAt(xpathMap.get("SelectCredits"));
			Thread.sleep(300);
			clickAt(xpathMap.get("SelectCoins"));
			Thread.sleep(500);
			clickAt(xpathMap.get("CoinSize"));
			Thread.sleep(500);
			for (double i = 0; i < minCoinSize; i++) {
				clickAt(xpathMap.get("CoinMin"));
				Thread.sleep(500);
			}
			clickAt(xpathMap.get("CoinSize"));
			Thread.sleep(500);
		} catch (Exception e) {
			return false;
		}
		return true;
	}

	/*
	 * Date: 18/04/2017 Author: Ashish Kshatriya Description: This function is used
	 * for Swipe min Bet Size Parameter:Swipe Min Bet Size
	 */
	public boolean swipeMinBetSize(double minBetSize) {
		try {
			clickAt.clickAt(xpathMap.get("SelectCredits"), webdriver, "");
			Thread.sleep(300);
			clickAt.clickAt(xpathMap.get("SelectCoins"), webdriver, "");
			Thread.sleep(500);
			clickAt.clickAt(xpathMap.get("BetSize"), webdriver, "");
			Thread.sleep(500);
			for (int i = 0; i < minBetSize; i++) {
				clickAt.clickAt(xpathMap.get("BetMin"), webdriver, "");
				Thread.sleep(500);
			}
			clickAt.clickAt(xpathMap.get("BetSize"), webdriver, "");
			Thread.sleep(500);
		} catch (Exception e) {
			return false;
		}
		return true;
	}

	/*
	 * Date: 18/04/2017 Author: Ashish Kshatriya Description: This function is used
	 * for Swipe max Parameter:Swipe Max Bet Size
	 */
	public boolean swipeMaxBetSize(double maxBetSize) throws Exception {
		try {
			clickAt(xpathMap.get("SelectCredits"));
			Thread.sleep(300);
			clickAt(xpathMap.get("SelectCoins"));
			Thread.sleep(500);
			clickAt(xpathMap.get("BetSize"));
			Thread.sleep(500);
			for (double i = 0; i < maxBetSize; i++) {
				clickAt(xpathMap.get("BetMax"));
				Thread.sleep(500);
			}
			clickAt(xpathMap.get("BetSize"));
			Thread.sleep(500);
		} catch (Exception e) {
			return false;
		}
		return true;
	}

	/*
	 * Date: 04/12/2017 Author:Kanchan Badhiye Description: openhambermenu use to
	 * click on menu screen Parameter: NA
	 */

	public boolean openhambermenu() {
		try {
			clickAt(xpathMap.get("bargurMenu"));
			Thread.sleep(500);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return true;
	}

	/**
	 * Date: 13/11/2017 Author: Ashish Kshatriya Description: This function is used
	 * for click on element Parameter: By locator
	 */
	public boolean funcClick(String locator) {
		boolean abletoClick = false;
		try {
			// webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			WebElement ele = webdriver.findElement(By.xpath(locator));
			// WebElement ele1 = webdriver.findElement(By.id(locator));
			// MobileElement ele1 = (MobileElement) webdriver.findElement(By.id(locator));
			if (ele != null) {
				ele.click();
				abletoClick = true;
			}

		} catch (NoSuchElementException e) {
			log.error(e);
		}
		return abletoClick;

	}

	/**
	 * Date: 30/05/2018 Autohr: Havish Jain Description: This function used to
	 * launch game with Practice Play
	 * 
	 * @return Title
	 * 
	 */

	public String loginWithPracticePlay() {
		Wait = new WebDriverWait(webdriver, 500);
		String title = null;
		try {
			funcClick(xpathMap.get("practice_Play"));
			closeOverlay();
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("func_FullScreen"))));
			title = webdriver.getTitle();
			funcFullScreen();

		} catch (Exception e) {
			e.printStackTrace();

		}
		return title;
	}

	public boolean openTotalBet() {
		return false;
		// declearing method signature

	}

	public void closeTotalBet() throws InterruptedException {
		// declearing method signature
	}

	/**
	 * Date: 29/05/2018 Author: Havish Jain Description: This function is used to
	 * refresh the page and will take screenshot of splash screen before navigating
	 * to Base Scene. Parameter:
	 * 
	 */
	public boolean splashScreen(Mobile_HTML_Report report, String language) {
		boolean status = false;
		Wait = new WebDriverWait(webdriver, 30);
		try {
			webdriver.navigate().refresh();

			if ("Yes".equalsIgnoreCase(xpathMap.get("LoadingScreen"))) {
				elementWait("return " + xpathMap.get("currentScene"), "LOADING");
			} else {
				Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("preLoaderBackgroundID"))));
				Thread.sleep(1000);
			}
			report.detailsAppendFolder("verify the Splash Screen", "Splash Screen should display",
					"Splash screen is displaying", "pass", language);
			log.debug("Splash screen screenshot has taken");
			if (Constant.STORMCRAFT_CONSOLE.equalsIgnoreCase(xpathMap.get("TypeOfGame"))
					|| (Constant.YES.equalsIgnoreCase(xpathMap.get("continueBtnOnGameLoad")))) {

				if ("Yes".equalsIgnoreCase(xpathMap.get("CntBtnNoXpath"))) {
					elementWait("return " + xpathMap.get("CntBtnNoXpathSatus"), true);

				} else {
					Wait.until(ExpectedConditions.visibilityOfElementLocated(
							By.xpath(xpathMap.get("ONEDESIGN_NEWFEATURE_CLICKTOCONTINUE"))));
				}

			} else {
				Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get(Constant.CLOCK))));
			}
			status = true;
		} catch (TimeoutException timeoutException) {
			log.error("exception in splshScreen method: " + timeoutException.getMessage(), timeoutException);
		} catch (Exception e) {
			log.error("exception in splshScreen method", e);
		}
		return status;

	}

	/*
	 * Date: 03/04/2017 Author: Author: Dhairaya Gautam Description: This function
	 * used for page load Parameter: NA
	 */
	public String loginToDenmark(String username, String password) {
		String title = null;
		try {
			Thread.sleep(10000);
			webdriver.findElement(By.xpath(xpathMap.get("GameUserName"))).clear();
			Thread.sleep(500);
			webdriver.findElement(By.xpath(xpathMap.get("GameUserName"))).sendKeys(username);
			Thread.sleep(500);
			webdriver.findElement(By.xpath(xpathMap.get("GamePassword"))).clear();
			Thread.sleep(500);
			webdriver.findElement(By.xpath(xpathMap.get("GamePassword"))).sendKeys(password);
			Thread.sleep(500);
			webdriver.findElement(By.xpath(xpathMap.get("GameLogin"))).click();
			Thread.sleep(10000);
			try {
				boolean regulaoryLastLogin = webdriver.findElements(By.xpath(xpathMap.get("regulatoryLastLoginPopup")))
						.isEmpty();
				if (!regulaoryLastLogin) {
					webdriver.findElement(By.xpath(xpathMap.get("GameLogin"))).click();
					Thread.sleep(2000);
					webdriver.findElement(By.xpath(xpathMap.get("regulatoryClose"))).click();

				}
			} catch (Exception e) {
				log.error("Error :" + e);
			}

			Thread.sleep(30000);
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("inGameClock")));
			Thread.sleep(500);
			clickAt(xpathMap.get("newfeatures"));
			title = webdriver.getTitle();
			log.info("The Title is " + title);

		} catch (Exception e) {
			e.printStackTrace();
		}
		return title;
	}

	/*
	 * Date: 03/04/2017 Author: Author: Dhairaya Gautam Description: This function
	 * used for page load Parameter: NA
	 */

	public String navigateToRegulatoryMarket(String applicationName, String url) {
		String gameDesktopName = null;
		try {
			Wait = new WebDriverWait(webdriver, 120);
			webdriver.manage().deleteAllCookies();
			webdriver.manage().window().maximize();
			webdriver.get(url);
			waitForPageToBeReady();
			JavascriptExecutor js = (JavascriptExecutor) webdriver;
			js.executeScript("arguments[0].scrollIntoView(true);",
					webdriver.findElement(By.xpath(xpathMap.get("LobbyfiveReels"))));
			Thread.sleep(4000);
			js.executeScript("arguments[0].scrollIntoView(true);", webdriver.findElement(By.id(applicationName)));
			Thread.sleep(1000);
			gameDesktopName = webdriver.findElement(By.id(applicationName)).getText();
			webdriver.findElement(By.id(applicationName)).click();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return gameDesktopName;
	}

	/*
	 * Date: 07/04/2017 Author: Dhairaya Gautam Description: Method to verify
	 * responsible gaming link present in Denmark regulatory markets Parameter:image
	 * path
	 *
	 */
	public boolean verifyResponsibleLink(String imagepath) throws InterruptedException {
		Screen screen = new Screen();
		org.sikuli.script.Pattern image = new org.sikuli.script.Pattern(imagepath);
		try {
			Thread.sleep(2000);
			screen.exists(image);
			Thread.sleep(2000);
			closeMenu();
			/*
			 * clickAt(xpathMap.get("responsiblegmaingclick")); Thread.sleep(15000);
			 * if(webdriver.getTitle().equalsIgnoreCase("Responsible Gaming")){
			 * title=webdriver.getTitle();
			 * System.out.println("Resonsible Gaming link is present"); } else{
			 * title=webdriver.getTitle(); System.out.println(title);
			 * /*webdriver.navigate().back(); webdriver.navigate().refresh();
			 * Thread.sleep(30000); closeMenu(); }
			 */
		} catch (Exception e) {
			e.printStackTrace();
		}
		return true;
	}

	/*
	 * Date: 03/04/2017 Author: Author: Dhairaya Gautam Description: This function
	 * used for page load Parameter: NA
	 */
	public boolean loginToItalyMarket(String username, String password) {
		Wait = new WebDriverWait(webdriver, 500);
		String title = null;
		boolean present = false;

		try {
			webdriver.findElement(By.xpath(xpathMap.get("userName"))).clear();
			webdriver.findElement(By.xpath(xpathMap.get("userName"))).sendKeys(username);
			Thread.sleep(1500);
			webdriver.findElement(By.xpath(xpathMap.get("password"))).clear();
			webdriver.findElement(By.xpath(xpathMap.get("password"))).sendKeys(password);
			Thread.sleep(1500);
			webdriver.findElement((By.xpath(xpathMap.get("Login")))).click();
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("italyHeader"))));
			title = webdriver.getTitle();
			if (title != null) {

				present = true;
			} else {
				present = false;
			}

		} catch (Exception e) {
			e.printStackTrace();

		}
		return present;
	}

	/*
	 * Date: 03/04/2017 Author: Author: Anish Description: This function used for
	 * page load Parameter: NA
	 */
	public String javaScriptExecutor2(String js) {

		String jsResultFinal1;
		String jsResult1;
		JavascriptExecutor jse = webdriver;
		jsResult1 = (String) jse.executeScript("return " + js);
		jsResultFinal1 = jsResult1.replace("$", "");
		log.debug("The Credit Balance is :" + jsResultFinal1);
		return jsResultFinal1;

	}

	public void gameToLobby() {
		try {
			closeTotalBet();
			String lobbyX = "return mgs.mobile.casino.slotbuilder.v1.automation.getControlById('MenuIconPanelComponent.lobbyButton').centerX";
			String lobbyY = "return mgs.mobile.casino.slotbuilder.v1.automation.getControlById('MenuIconPanelComponent.lobbyButton').centerY";
			clickAtCoordinates(lobbyX, lobbyY);
		} catch (Exception e) {
			e.getMessage();
		}
	}

	/*
	 * Date: 03/04/2017 Author: Author: Dhairaya Gautam Description: This function
	 * used for page load Parameter: NA
	 */
	public String clickamount(Mobile_HTML_Report italy, String amount) {
		try {
			Thread.sleep(1000);
			webdriver.findElement(By.id("userInput")).sendKeys(amount);
			Thread.sleep(2000);
			nativeClickByID(xpathMap.get("italySubmit_ID"));
			Thread.sleep(4000);
			italy.detailsAppend(" Verify that Take to Game screen appears ", " Take to Game screen should appear ",
					" Take to Game screen is appearing ", "Pass");
			nativeClickByID(xpathMap.get("italySubmit_ID"));
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("clock_ID"))));
		} catch (Exception e) {
			e.printStackTrace();
		}

		return amount;
	}

	public void jackpotSceneWait() {
		// declearing method signature
	}

	public boolean elementWait(String element, String currentSceneText) {

		while (true) {
			String currentScene = GetConsoleText(element);
			if (currentScene != null && currentScene.equalsIgnoreCase(currentSceneText)) {
				return true;
			}
		}
	}

	public boolean spinclick() throws InterruptedException {

		try {
			clickAt.clickAt(OR.getProperty("spinButtonPixels"), webdriver, "//*[@id='gameCanvas']");
			Thread.sleep(1000);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return true;
	}

	/**
	 * Date: 14/11/2017 Author:Premlata Mishra Description: This function is used
	 * verify incomplete game dialogue Parameter:String applicationName,String
	 * urlNavigate
	 */
	public String incompleteGameName(String gamename) {
		String incompleteGameName = null;
		try {
			Wait = new WebDriverWait(webdriver, 20);
			JavascriptExecutor js = webdriver;
			js.executeScript("arguments[0].scrollIntoView(true);", webdriver.findElement(By.id(gamename)));

			js.executeScript("arguments[0].click();", webdriver.findElement(By.id(gamename)));
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("defaultOverlayContent")));
			incompleteGameName = webdriver.findElement(By.id("defaultOverlayContent")).getText();
		} catch (Exception e) {
			incompleteGameName = null;
		}
		log.debug("incompletegamegame" + incompleteGameName);
		return incompleteGameName;
	}

	/*
	 * Date: 03/04/2017 Author: Author: Anish Description: This function used for
	 * page load Parameter: NA
	 */
	public String verifyCreditsValue() {
		String balance = null;
		try {
			String dataFromHar = clickAt.getData("Player", "balance", "", "", proxy);
			balance = dataFromHar.split(",")[0];

			Thread.sleep(2000);
		} catch (Exception e) {
			e.printStackTrace();
		}

		return balance;

	}

	// function for check game play req
	/*
	 * Date: 03/04/2017 Author: Author: Dhairaya Gautam Description: This function
	 * used for page load Parameter: NA
	 */
	public String isGamePlay() {
		String s = null;
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id='header']")));
			WebElement ele1 = webdriver.findElement(By.xpath("//*[@id='header']"));
			s = ele1.getText();

		} catch (Exception e) {
			e.printStackTrace();
		}
		return s;
	}

	/**
	 * Date: 24/05/2018 Author: Havish Jain Description: This function is used to
	 * remove hand gesture and to play in full screen. Parameter:
	 * 
	 * @return boolean
	 */

	public boolean funcFullScreen() {

		Wait = new WebDriverWait(webdriver, 10);
		boolean isOverlayRemove = false;
		try {

			// Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("clock_ID"))));

			if (true) {
				if (osPlatform.equalsIgnoreCase("Android")) {
					String context = webdriver.getContext();
					webdriver.context("NATIVE_APP");
					Dimension size1 = webdriver.manage().window().getSize();
					int startx = size1.width / 2;
					int starty = size1.height / 2;
					TouchAction action = new TouchAction(webdriver);
					action.press(PointOption.point(startx, starty)).release().perform();
					webdriver.context(context);
					// Native_ClickByXpath(xpathMap.get("ClickOnCloseBonusReminder"));
					isOverlayRemove = true;
				} else {
					// For IOS to perform scroll
					// Thread.sleep(2000);
					// System.out.println("current contex"+webdriver.getContext());
					Dimension size = webdriver.manage().window().getSize();

					int anchor = (int) (size.width * 0.5);
					/*
					 * int startPoint = (int) (size.height * 0.5); int endPoint = (int) (size.height
					 * * 0.4); new TouchAction(webdriver).press(point(anchor,
					 * startPoint)).waitAction(waitOptions(ofMillis(1000))).moveTo(point(anchor,
					 * endPoint)).release().perform();
					 */
					// Added another swipe to avoid swipe issue on few latest OS(1.14)
					// Thread.sleep(1000);
					int startPoint = (int) (size.height * 0.75);
					int endPoint = (int) (size.height * 0.5);
					// new TouchAction(webdriver).press(point(anchor,
					// startPoint)).waitAction(waitOptions(ofMillis(1000))).press(point(anchor,
					// endPoint)).release().perform();
//					new TouchAction(webdriver).press(point(anchor, startPoint)).waitAction(waitOptions(ofMillis(1000)))
//							.moveTo(point(anchor, endPoint)).release().perform();

					isOverlayRemove = true;
				}
			}

			log.debug("tapped on full screen overlay");

		} catch (Exception e) {
			log.error(e.getStackTrace());
			log.error("Error in full screen ", e);
		}
		return isOverlayRemove;
	}

	public boolean verifyImage(String image) {
		boolean test = false;
		try {
			TestdroidImageRecognition findImage = new TestdroidImageRecognition(webdriver);

			if (findImage.findImageOnScreen(image) != null) {
				test = true;
			} else {
				test = false;
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return test;
	}

	/*
	 * Date: 03/04/2017 Author: Author: Dhairaya Gautam Description: This function
	 * used for page load Parameter: NA
	 */
	public String taketoGame() {
		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("canvasxPath"))));
		clickAt(xpathMap.get("newfeatures"));

		return null;
	}

	/**
	 * Date: 03/04/2017 Author: Robin Dulhani Description: Returns the title of the
	 * web page. Parameter: Reference of WebDriver.
	 */

	public String getPageTitle(WebDriver w) {
		String title = null;
		try {

			title = w.getTitle();
		} catch (Exception e) {
			log.debug("Error : " + e);

		}

		return title;

	}

	public boolean logintoGibraltarMarket(String username, String password) {
		String title = null;
		try {
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("GameUserName"))).clear();
			Thread.sleep(500);
			webdriver.findElement(By.xpath(xpathMap.get("GameUserName"))).sendKeys(username);
			webdriver.findElement(By.xpath(xpathMap.get("GamePassword"))).clear();
			webdriver.findElement(By.xpath(xpathMap.get("GamePassword"))).sendKeys(password);
			webdriver.findElement(By.xpath(xpathMap.get("GameLogin"))).click();

			Thread.sleep(25000);
			try {
				boolean regulaoryLastLogin = webdriver.findElements(By.xpath(xpathMap.get("regulatoryLastLoginPopup")))
						.isEmpty();
				if (!regulaoryLastLogin) {
					webdriver.findElement(By.xpath(xpathMap.get("GameLogin"))).click();
					Thread.sleep(9000);

				}
			} catch (Exception e) {
				log.error("Error : " + e);
			}
			Thread.sleep(15000);
			Thread.sleep(10000);
			title = webdriver.getTitle();

		} catch (Exception e) {
			e.printStackTrace();
		}
		return true;
	}

	/*
	 * Date: 03/04/2017 Author: Ashish Kshatriya Description: Close Bargur Menu
	 * Parameter: N/A
	 */
	public boolean closeMenu() throws InterruptedException {
		try {

			clickAt.clickAt(xpathMap.get("backFrompayTableMenu"), webdriver, "");
			Thread.sleep(500);
			clickAt.clickAt(xpathMap.get("closeHamBurgurMenu"), webdriver, "");
			Thread.sleep(500);

		} catch (Exception e) {
			log.error(e.getMessage());
			return false;
		}
		return true;
	}

	public boolean verifyQuickSpin(String imagepath) {
		boolean newimage = false;
		try {
			newimage = verifyImage(imagepath);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return newimage;
	}

	/*
	 * /** Date:31/05/2018 Author:Havish Jain This method is actually not necessery
	 * in component store just declaration needed
	 * 
	 * @return true
	 */
	public boolean settingsBack() {
		return false;
	}

	/**
	 * This method is used to stop is avalable or not Author: Premlata Mishra
	 * 
	 * @return true
	 */
	public boolean verifyStop(String imagepath) throws InterruptedException {
		boolean newimage = false;
		spinclick();
		Screen screen = new Screen();

		org.sikuli.script.Pattern image = new org.sikuli.script.Pattern(imagepath);
		try {
			org.sikuli.script.Region r = screen.exists(image, 5);
			if (r != null) {
				log.debug("image found");
				newimage = true;
			} else {
				log.debug("image not found");
				newimage = false;
			}
		} catch (Exception e) {
			e.printStackTrace();
			return false;
		}
		return newimage;
	}

	/**
	 * Date:31/05/2018 Author:Havish Jain This method is used to open the settings
	 * 
	 * @return true
	 * @throws InterruptedException
	 */
	public boolean settingsOpen() throws InterruptedException {

		try {
			clickAt(xpathMap.get("menubuttonPixels"));
			Thread.sleep(500);
			clickAt(xpathMap.get("settings"));
			Thread.sleep(1500);
		}

		catch (Exception e) {
			e.printStackTrace();
		}
		return true;
	}
	/*
	 * Date: 04/05/2017 Author:Kanchan Badhiye Description: vclickonsetting use to
	 * click on setting screen Parameter: NA
	 */

	public boolean clickonsetting() {
		try {
			clickAt(xpathMap.get("menubuttonPixels"));
			Thread.sleep(500);
			clickAt(xpathMap.get("settings"));
			Thread.sleep(500);
		}

		catch (Exception e) {
			e.printStackTrace();
		}
		return true;
	}

	/*
	 * Date: 04/05/2017 Author:Kanchan Badhiye Description: verify_Win_Amount use to
	 * verify TotalWin Parameter: nodeValue, attributes
	 */
	public int verifyWinAmount(String nodeValue, String attribute1, String attribute2, String attribute3)
			throws InterruptedException {
		Wait = new WebDriverWait(webdriver, 180);
		String balance = null;
		String loyaltyBalance = null;
		String totalWin = null;
		int totalWinNew = 0;
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("canvasxPath"))));
			clickAt(xpathMap.get("spinButton"));
			Thread.sleep(15000);
			String dataFromHar = getData(nodeValue, attribute1, attribute2, attribute3);
			balance = dataFromHar.split(",")[0];
			loyaltyBalance = dataFromHar.split(",")[1];
			totalWin = dataFromHar.split(",")[2];
			totalWinNew = Integer.parseInt(totalWin);
		} catch (Exception e) {
			e.printStackTrace();
		}
		Thread.sleep(2000);
		return totalWinNew;
	}

	/*
	 * Date: 30/03/2017 Author:Anish Gadgil Description:This function is used to
	 * logout from the game. Parameter: No parameters are required
	 */
	public String funcLogout() {
		String loginTitle = null;
		Wait = new WebDriverWait(webdriver, 120);
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("canvasxPath"))));

			clickAt(xpathMap.get("bargurMenu")); // Clicking on hamburger menu
			Thread.sleep(500);
			clickAt(xpathMap.get("gameLink")); // Clicking on Games menu
			waitForPageToBeReady();
			Thread.sleep(5000);
			Wait.until(ExpectedConditions.elementToBeClickable(By.id(xpathMap.get("accountsLobbyID"))));
			Thread.sleep(2000);
			webdriver.findElement(By.id(xpathMap.get("accountsLobbyID"))).click(); // Clickin on Accounts
			Thread.sleep(1000);
			Wait.until(ExpectedConditions.elementToBeClickable(By.id(xpathMap.get("logoutbuttonId"))));
			Thread.sleep(1000);
			webdriver.findElement(By.id("log-out")).click(); // Clicking on log out button
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("dialogTitle")));
			Thread.sleep(1000);
			loginTitle = webdriver.findElement(By.id("dialogTitle")).getText();
			// Clicking on log out button
			webdriver.findElement(By.id("dialogCloseBttn")).click(); // Clicking on log out button
			Thread.sleep(1000);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return loginTitle;
	}

	public String verifyCurrencySymbolAtFront() throws InterruptedException {
		String symbol;
		Thread.sleep(2000);
		JavascriptExecutor jse = webdriver;
		String currencySymbol = (String) jse.executeScript(
				"return Game.instance._componentMap.BaseScene._componentMap.infoBar._componentMap.balanceLabel.properties.value.text");
		symbol = Character.toString(currencySymbol.charAt(0));
		return symbol;

	}

	public String verifyCurrencySymbolAtBack() throws InterruptedException {
		String symbol2;
		Thread.sleep(2000);
		JavascriptExecutor jse = webdriver;
		String currencySymbol = (String) jse.executeScript(
				"return Game.instance._componentMap.BaseScene._componentMap.infoBar._componentMap.balanceLabel.properties.value.text");
		symbol2 = currencySymbol.substring(0, 2);
		return symbol2;
	}

	public String verifyNoCurrencySymbol() throws InterruptedException {
		String symbol5;
		String[] symbol4;
		Thread.sleep(2000);
		JavascriptExecutor jse = webdriver;
		String currencySymbol = (String) jse.executeScript(
				"return Game.instance._componentMap.BaseScene._componentMap.infoBar._componentMap.balanceLabel.properties.value.text");

		symbol4 = currencySymbol.split(Character.toString(currencySymbol.charAt(0)));
		symbol5 = symbol4[0];
		return symbol5;

	}

	/*
	 * Date: 10/04/2017 Author: Author: Ashish Kshatriya Description: This function
	 * is used for filter Data from the Har Parameter: NA
	 */
	public String getData(String nodeValue, String attribute1, String attribute2, String attribute3) {
		Har nhar;
		HarLog hardata;
		List<HarEntry> entries;
		Iterator<HarEntry> itr;

		nhar = proxy.getHar();
		hardata = nhar.getLog();
		entries = hardata.getEntries();
		itr = entries.iterator();
		String data = "";
		while (itr.hasNext()) {
			try {
				HarEntry entry = itr.next();
				String requestUrl = entry.getRequest().getUrl().toString();
				if (requestUrl.contains("x.x?")) {
					String reloadData = entry.getResponse().getContent().getText();
					log.debug("Response Data is==" + reloadData);
					if (reloadData.contains(nodeValue)) {
						data = parseXML(nodeValue, attribute1, attribute2, attribute3, reloadData);
					}
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		return data;
	}

	/*
	 * Date: 03/04/2017 Author: Kanchan Badhiye Description: clickAt() use for
	 * getting user data and click on particular button Parameter: userwidth,height
	 * ,x,y
	 */
	public String clickAt(String userdata) {
		double userwidth;
		double userheight;
		int userElementX;
		int userElementY;
		int newY;
		int newX;
		String[] coordinates1 = userdata.split(":");
		userwidth = Integer.parseInt(coordinates1[0]);
		userheight = Integer.parseInt(coordinates1[1]);
		userElementX = Integer.parseInt(coordinates1[2]);
		userElementY = Integer.parseInt(coordinates1[3]);
		Actions act = new Actions(webdriver);
		WebElement ele1 = webdriver.findElement(By.id(xpathMap.get("canvasxPath")));
		double deviceHeight = ele1.getSize().height;
		double deviceWidth = ele1.getSize().width;
		newX = (int) ((deviceWidth / userwidth) * userElementX);
		newY = (int) ((deviceHeight / userheight) * userElementY);
		act.moveToElement(ele1, newX, newY).click().build().perform();
		return newX + "," + newY;
	}

	/*
	 * Date: 03/04/2017 Author: Anish Gadgil Description: Verifying the multiplier
	 * for Currency Parameter: nodeValue, attribute1, attribute2, attribute3
	 */
	public double currencymultiplier(String nodeValue, String attribute1, String attribute2, String attribute3)
			throws InterruptedException {
		double multiplier = 0;
		try {
			Wait = new WebDriverWait(webdriver, 300);
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("inGameClock")));
			clickAt(xpathMap.get("spinButton"));
			Thread.sleep(7000);
			String dataFromHar = getData(nodeValue, attribute1, attribute2, attribute3);
			String numchips = dataFromHar.split(",")[0];
			multiplier = Double.parseDouble(numchips);
		} catch (Exception e) {
			e.printStackTrace();
		}
		Thread.sleep(2000);
		return multiplier;
	}

	/*
	 * Date: 04/05/2017 Author: Anish Description: This function Func_Login use to
	 * perform login operation Parameter: username andpassword Commented By :Kanchan
	 */
	public String loginToBaseScene(String username, String password) {
		Wait = new WebDriverWait(webdriver, 500);
		String title = null;

		try {
			webdriver.findElement(By.xpath(xpathMap.get("userName"))).clear();
			webdriver.findElement(By.xpath(xpathMap.get("userName"))).sendKeys(username);
			webdriver.findElement(By.xpath(xpathMap.get("password"))).clear();
			webdriver.findElement(By.xpath(xpathMap.get("password"))).sendKeys(password);

			webdriver.findElement((By.xpath(xpathMap.get("Login")))).click();
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("clock"))));
			title = GameName;
		} catch (Exception e) {
			log.error(e.getMessage());
		}
		return title;
	}

	/*
	 * Date: 04/04/2017 Author: Anish Gadgil Description: Function Navigate url for
	 * Language Test scripts Parameter: applicationName and urlNavigate
	 */
	public String navigateTourl(String applicationName, String urlNavigate) {
		String gameDesktopName = null;
		try {
			webdriver.navigate().to(urlNavigate);
			webdriver.findElement(By.id(xpathMap.get("LobbyNewGamesIdLAnguage"))).click();
			Thread.sleep(2000);
			gameDesktopName = webdriver.findElement(By.id(applicationName)).getText();
			webdriver.findElement(By.id(applicationName)).click();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return gameDesktopName;
	}

	/*
	 * Date: 03/04/2017 Author: Kanchan Badhiye Description: verifyTime
	 * functionality for verifying time Parameter: NA
	 */
	public String verifyTime() {
		Wait = new WebDriverWait(webdriver, 300);
		String strTime = null;
		WebElement time = null;
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("canvasxPath"))));
			time = webdriver.findElement(By.xpath(xpathMap.get("GameTime")));
			strTime = time.getText();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return strTime;
	}

	public String verifybacktolobby() {
		String backtolobbytitle = null;
		try {
			// click on hyperlink
			WebElement backtolobby1 = webdriver.findElement(By.xpath(xpathMap.get("backtolobby")));
			backtolobby1.click();
			Thread.sleep(2000);
			// Back To Lobby
			backtolobbytitle = webdriver.getTitle();
		} catch (Exception e) {
			log.error(e.getMessage());
		}
		return backtolobbytitle;
	}

	public String logoutSpainMarket() {
		String loginTitle = null;
		try {

			Wait.until(ExpectedConditions.elementToBeClickable(By.id(xpathMap.get("accountsLobbyID"))));
			Thread.sleep(2000);
			webdriver.findElement(By.id(xpathMap.get("accountsLobbyID"))).click(); // Clickin on Accounts
			Thread.sleep(1000);
			Wait.until(ExpectedConditions.elementToBeClickable(By.id(xpathMap.get("logoutbuttonId"))));
			Thread.sleep(1000);
			webdriver.findElement(By.id(xpathMap.get("logoutbuttonId"))).click(); // Clicking on log out button
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("LoginTitleid"))));
			Thread.sleep(1000);
			loginTitle = webdriver.findElement(By.id(xpathMap.get("LoginTitleid"))).getText(); // Clicking on log out
																								// button
			webdriver.findElement(By.id(xpathMap.get("closeButtonid"))).click(); // Clicking on log out button
			Thread.sleep(1000);

		}

		catch (Exception e) {
			e.printStackTrace();
		}
		return loginTitle;
	}

	/*
	 * Date: 03/04/2017 Author: Ashish Kshatriya Description: Login with Set game
	 * limit for Regulatory Market Spain Country Parameter: Username, Password,
	 * Application Name
	 */
	public String loginToRegulatoryMarketSpain(String username, String password) {
		Wait = new WebDriverWait(webdriver, 50);
		String title = null;
		try {
			webdriver.findElement(By.xpath(xpathMap.get("userName"))).clear();
			webdriver.findElement(By.xpath(xpathMap.get("userName"))).sendKeys(username);
			webdriver.findElement(By.xpath(xpathMap.get("password"))).clear();
			webdriver.findElement(By.xpath(xpathMap.get("password"))).sendKeys(password);
			Thread.sleep(1000);

			webdriver.findElement((By.xpath(xpathMap.get("Login")))).click();
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("spain_LobbyOK"))));
			Thread.sleep(1000);
			webdriver.findElement((By.xpath(xpathMap.get("spain_LobbyOK")))).click();

			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("spain_SlotGameOverlay"))));
			title = webdriver.getTitle();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return title;
	}

	// Creating random player in uk

	public String loginWithRandomUserUKMarket(CommonUtil gcfnlib, String password) {
		String gameTitle = null;
		try {
			DataBaseFunctions createplayer1 = new DataBaseFunctions(
					TestPropReader.getInstance().getProperty("ServerName"),
					TestPropReader.getInstance().getProperty("dataBaseName"),
					TestPropReader.getInstance().getProperty("serverIp"),
					TestPropReader.getInstance().getProperty("port"),
					TestPropReader.getInstance().getProperty("serverID"));

			userName = gcfnlib.randomStringgenerator();
			log.debug("The New username is ==" + userName);
			createplayer1.createUser(userName, "0", 0);
			String url = xpathMap.get("UK_url");
			funcNavigate(url);
			gameTitle = loginToBaseScene(userName, password);

		} catch (Exception e) {
			log.error(e.getMessage());
		}
		return gameTitle;
	}

	/*
	 * Date: 29/05/2019 Author:Snehal Gaikwad Description: To Check the bet
	 * selection on autoplay bet setting Parameter: NA
	 */

	public boolean autoplaybetselection() {

		boolean betselection = false;
		try {
			GetConsoleText("return " + xpathMap.get("ClickAutoplayOpenMobileBtn"));
			WebElement coinsbet = webdriver.findElement(By.xpath(xpathMap.get("Coins_Bet")));
			Select coins = new Select(coinsbet);
			coins.selectByValue("6");
			webdriver.findElement(By.id(xpathMap.get("Start_Autoplay"))).click();
			Thread.sleep(2000);
			betselection = true;
		} catch (Exception e) {
			log.error("Error in Autoplay Bet Selection");
			betselection = false;

		}
		return betselection;
	}

	/*
	 * Date: 17/05/2019 Author:Snehal Gaikwad Description: To set bet to maximum
	 * Parameter: NA
	 */

	public String setMaxBet() {
		String betAmount = null;
		try {
			String bet = "return " + xpathMap.get("SetMaxBet");
			GetConsoleText(bet);

			betAmount = GetConsoleText("return " + xpathMap.get("BetSizeText"));
		} catch (Exception e) {
			log.error("Exception while setting Max value", e);
			return null;

		}

		return betAmount;
	}

	/*
	 * Date: 17/05/2019 Author:Snehal Gaikwad Description: To Check whether the Loss
	 * Limit is less than current bet (Negative scenario) Parameter: NA
	 */
	public boolean isLossLimitLowerThanCurBet() {
		boolean flag = false;
		try {
			webdriver.findElement(By.id(xpathMap.get("Cancel_Autoplay"))).click();
			Thread.sleep(2000);
			setMaxBet();
			GetConsoleText("return " + xpathMap.get("ClickAutoplayOpenMobileBtn"));
			webdriver.findElement(By.id(xpathMap.get("Start_Autoplay"))).click();
			log.debug("Loss limit is less than current bet error message display");
			flag = true;
		} catch (Exception e) {
			log.error("Loss limit is less than current bet error message not display");
			flag = false;
		}
		return flag;
	}

	public boolean getConsoleBooleanText(String text) {
		boolean consoleText = true;
		JavascriptExecutor js = webdriver;
		try {
			consoleText = (Boolean) js.executeScript(text);
		} catch (JavascriptException e) {
			// log.error("Please check hook");
			// log.error(e.getMessage());
			consoleText = false;
		} catch (Exception e) {
			// Following condition is added if it retuns 1 or 0 insted of true or false
			log.error(e.getMessage());
			consoleText = false;
		}
		return consoleText;
	}

	public void clickAtButton(String button) {
		JavascriptExecutor js = webdriver;
		js.executeScript(button);
	}

	/*
	 * Date: 29/05/2019 Author:Snehal Gaikwad Description: To Check whether the Loss
	 * Limit is reach or not Parameter: NA
	 */
	public boolean isLossLimitReached() {
		boolean flag = false;
		try {
			webdriver.findElement(By.id(xpathMap.get("Cancel_Autoplay"))).click();
			GetConsoleText(
					"return mgs.mobile.casino.slotbuilder.v1.automation.getServiceById('BetService').betModel.setBetValue(5625)");
			Thread.sleep(2000);
			GetConsoleText(
					"return mgs.mobile.casino.slotbuilder.v1.automation.getControlById('AutoplayOptionsComponent').onButtonClicked('autoplayOpenMobileButton')");
			WebElement losslimit = webdriver.findElement(By.xpath(xpathMap.get("Loss_Limit")));
			Select limits = new Select(losslimit);
			limits.selectByValue("10000");

			webdriver.findElement(By.id(xpathMap.get("Start_Autoplay"))).click();
			while (true) {
				if ((!getConsoleBooleanText(
						"return mgs.mobile.casino.slotbuilder.v1.automation.getServiceById('AutoplayService').canAutoplayContinue().autoPlayContinue"))) {
					Thread.sleep(4000);
					clickAtButton(
							"return mgs.mobile.casino.slotbuilder.v1.automation.getControlById('DialogComponent').onButtonClicked('primaryOnlyButton')");
					log.debug("Clicked on Loss Limit reached dailog  ");
					flag = true;
					break;
				} else {
					continue;
				}
			}
		} catch (Exception e) {
			log.error("Loss limit is not reached");
			flag = false;

		}
		return flag;
	}
	/*
	 * Date: 29/05/2019 Author:Snehal Gaikwad Description: To Check whether the win
	 * Limit is reach or not Parameter: NA
	 */

	public boolean isWinLimitReached() {
		boolean flag = false;
		try {
			GetConsoleText(
					"return mgs.mobile.casino.slotbuilder.v1.automation.getServiceById('BetService').betModel.setBetValue(5625)");
			Thread.sleep(2000);
			GetConsoleText(
					"return mgs.mobile.casino.slotbuilder.v1.automation.getControlById('AutoplayOptionsComponent').onButtonClicked('autoplayOpenMobileButton')");
			WebElement losslimit = webdriver.findElement(By.xpath(xpathMap.get("Loss_Limit")));
			Select limits = new Select(losslimit);
			limits.selectByValue("100000");

			WebElement winlimit = webdriver.findElement(By.xpath(xpathMap.get("Win_Limit")));
			Select winlimits = new Select(winlimit);
			winlimits.selectByValue("10000");
			webdriver.findElement(By.id(xpathMap.get("Start_Autoplay"))).click();
			while (true) {
				if (!getConsoleBooleanText(
						"return mgs.mobile.casino.slotbuilder.v1.automation.getServiceById('AutoplayService').canAutoplayContinue().autoPlayContinue")) {
					Thread.sleep(2000);
					clickAtButton(
							"return mgs.mobile.casino.slotbuilder.v1.automation.getControlById('DialogComponent').onButtonClicked('primaryOnlyButton')");
					log.debug("Clicked on Win Limit reached dailog  ");
					flag = true;
					break;
				} else {
					continue;
				}
			}
		} catch (Exception e) {
			log.error("Win limit is not reached");
			flag = false;

		}
		return flag;
	}

	/*
	 * Date: 29/05/2019 Author: Snehal Gaikwad. Description:To verify autoplay must
	 * stop when focus being removed. Parameter: NA
	 * 
	 * @return boolean
	 */
	public boolean autoplayFocusRemovedUK() {

		boolean focus = false;
		try {
			clickAtButton(
					"return mgs.mobile.casino.slotbuilder.v1.automation.getControlById('AutoplayOptionsComponent').onButtonClicked('autoplayMoreOptionsButton')");
			Thread.sleep(1000);
			webdriver.findElement(By.id(xpathMap.get("Start_Autoplay"))).click();
//			webdriver.runAppInBackground(Duration.ofSeconds(30));
			focus = true;
		}

		catch (Exception e) {
			log.error("Focus not get changed");
			log.error(e.getMessage());
		}

		return focus;

	}

	/*
	 * Date: 04/05/2017 Author:Kanchan Badhiye Description: paylinesExist use to
	 * verify paylines Parameter: nodeValue, attributes
	 */
	public int paylinesExist() throws InterruptedException {
		String numline = null;
		int totalnumline = 0;
		try {
			clickAt.clickAt(xpathMap.get("spinButtonPixels"), webdriver, "");
			Thread.sleep(2000);
			String dtaFromHar = clickAt.getData("VisArea", "numPaylines", "", "", proxy);
			numline = dtaFromHar.split(",")[0];
			totalnumline = Integer.parseInt(numline);
		} catch (Exception e) {
			e.printStackTrace();
		}
		Thread.sleep(2000);
		return totalnumline;
	}

	/*
	 * Date: 04/05/2017 Author:Kanchan Badhiye Description:
	 * validate_credits_firstSpin use to verify credit amounts afer first spin
	 * Parameter: nodeValue, attributes
	 */
	public int validate_credits_firstSpin() throws InterruptedException {
		Wait = new WebDriverWait(webdriver, 120);
		String balance = null;
		int previousBalance = 0;
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("canvasxPath"))));
			clickAt.clickAt(xpathMap.get("spinButtonPixels"), webdriver, "");
			Thread.sleep(2000);
			String DataFromHar = clickAt.getData("Player", "balance", "", "", proxy);
			balance = DataFromHar.split(",")[0];
			previousBalance = Integer.parseInt(balance);
		} catch (Exception e) {
			e.printStackTrace();
		}
		Thread.sleep(2000);
		return previousBalance;
	}

	/*
	 * Date:19/08/17 Author: Anish Gadgil Description:This function is used to click
	 * anywhere on the screen. Parameters: No Parameters
	 */
	public boolean clickAnywhere() throws InterruptedException {

		clickAt.clickAt(xpathMap.get("menubuttonextended"), webdriver, "");
		Thread.sleep(2000);
		return true;
	}

	/**
	 * Date: 25/10/2017 Author: Kamal Kumar Vishwakarma Description: This function
	 * is used for get Data from the Common Language File provided by Derivco
	 */
	public void getCommonLanguageFile(String language) throws IOException {
		String commonLanguageContent;
		File commonLanguage = new File("languageFiles/" + language + "/language.json");
		commonLanguageContent = clickAt.removeUTF8BOM(FileUtils.readFileToString(commonLanguage, "UTF-8"));

	}

	/**
	 * @return
	 */
	public double verify_Bet_Amount() {
		int betAmount = 0;
		try {
			/*
			 * String betValue=func_GetText(xpathMap.get("betValue")); String
			 * BetValue=func_String_Operation(betValue);
			 */
			// betAmount=Integer.parseInt(BetValue);
			System.out.println(betAmount);
		} catch (NumberFormatException e) {
			e.printStackTrace();
		}
		return betAmount;
	}

	/*
	 * Date: 04/05/2017 Author:Kanchan Badhiye Description:
	 * validate_credits_firstSpin use to verify credit amounts afer next spin
	 * Parameter: nodeValue, attributes
	 */
	public int validate_credits_nextSpin() throws InterruptedException {
		Wait = new WebDriverWait(webdriver, 120);
		String balance = null;
		int newBalance = 0;
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("canvasxPath"))));
			clickAt.clickAt(xpathMap.get("spinButtonPixels"), webdriver, "");
			Thread.sleep(5000);
			String DataFromHar = clickAt.getData("Player", "balance", "", "", proxy);
			balance = DataFromHar.split(",")[0];
			newBalance = Integer.parseInt(balance);
		} catch (Exception e) {
			e.printStackTrace();
		}
		Thread.sleep(2000);
		return newBalance;
	}

	/*
	 * Date: 04/05/2017 Author:Kanchan Badhiye Description: verifycredit use to
	 * verify credit amounts Parameter: nodeValue, attributes
	 */
	public String verifyCredit() {
		Wait = new WebDriverWait(webdriver, 120);
		String balance = null;
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("canvasxPath"))));
			clickAt.clickAt(xpathMap.get("spinButtonPixels"), webdriver, "");
			Thread.sleep(2000);
			String DataFromHar = clickAt.getData("Player", "balance", "", "", proxy);
			balance = DataFromHar.split(",")[0];
			// initialbalance1 = balance);
			Thread.sleep(2000);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return balance;
	}

	/*
	 * Date: 04/05/2017 Author:Kanchan Badhiye Description: verifySpinBeforeClick()
	 * use to verify balance amount Parameter: nodeValue, attributes
	 */
	public String verifySpinBeforeClick(String nodeValue, String attribute1, String attribute2, String attribute3)
			throws InterruptedException {
		Wait = new WebDriverWait(webdriver, 120);
		String balance = null;
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("canvasxPath"))));
			Thread.sleep(10000);
			String outputData = getData(nodeValue, attribute1, attribute2, attribute3);
			System.out.println("The outputData is " + outputData);
			System.out.println(outputData.split(",")[0]);
			balance = outputData.split(",")[0];
			Thread.sleep(1000);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return balance;
	}

	/*
	 * Date: 06/04/2017 Author: Ashish Kshatriya Description:Overlay popup for Set
	 * Session Limit for regulatory market Spain Parameter: N/A
	 */
	public boolean overLay() throws InterruptedException {
		try {
			boolean SetSessionLimits = webdriver.findElements(By.xpath(xpathMap.get("spain_SlotGameOverlay")))
					.size() > 0;
			if (SetSessionLimits) {

				System.out.println("\n Slot game overlay is present ");
				log.debug("\n Slot game overlay is present ");
				return true;
			}

			else {
				System.out.println("\n Slot game overlay is not present ");
				log.debug("\n Slot game overlay is not present ");
				return false;
			}
		} catch (NoSuchElementException e) {
			return false;
		}
	}

	/*
	 * Date: 06/04/2017 Author: Ashish Kshatriya Description:Verify
	 * SlotGameSession,TotalWagered,TotalPayouts & TotalBalance for regulatory
	 * market Spain Parameter: N/A
	 */
	public String[] lossLimit() throws InterruptedException {
		String ar[] = new String[4];
		try {
			boolean SlotGameSession = webdriver.findElements(By.xpath(xpathMap.get("SlotGamesession1"))).size() > 0;
			try {
				if (SlotGameSession)
					;
				String slotGame = webdriver.findElement(By.xpath(xpathMap.get("SlotGamesession1"))).getText().toString()
						.trim();
				ar[0] = slotGame;
			} catch (IllegalArgumentException e) {
				e.printStackTrace();
			}
			boolean TotalWagered = webdriver.findElements(By.xpath(xpathMap.get("TotalWagered"))).size() > 0;
			try {
				if (TotalWagered)
					;
				String totalWagered = webdriver.findElement(By.xpath(xpathMap.get("TotalWagered"))).getText().toString()
						.trim();
				ar[1] = totalWagered;
			} catch (NoSuchElementException e) {
				e.printStackTrace();
			}
			boolean TotalPayouts = webdriver.findElements(By.xpath(xpathMap.get("TotalPayouts"))).size() > 0;
			try {
				if (TotalPayouts)
					;
				String totalPayout = webdriver.findElement(By.xpath(xpathMap.get("TotalPayouts"))).getText().toString()
						.trim();
				ar[2] = totalPayout;
			} catch (NoSuchElementException e) {
				e.printStackTrace();
			}
			boolean TotalBalance = webdriver.findElements(By.xpath(xpathMap.get("TotalBalance"))).size() > 0;
			try {
				if (TotalBalance)
					;
				String totalBalance = webdriver.findElement(By.xpath(xpathMap.get("TotalBalance"))).getText().toString()
						.trim();
				ar[3] = totalBalance;
			} catch (NoSuchElementException e) {
				e.printStackTrace();
			}
		} catch (NoSuchElementException e) {
			e.printStackTrace();
		}
		return ar;
	}

	/*
	 * Date: 03/04/2017 Author: Ashish Kshatriya Description: Set Session Limit for
	 * regulatory market Spain Parameter: LossLimit
	 */
	public String setLimit(String losslimit) throws InterruptedException {
		Wait = new WebDriverWait(webdriver, 300);
		try {
			boolean SetSessionLimits = webdriver.findElements(By.id(xpathMap.get("SetSessionLimitsForm"))).size() > 0;
			if (SetSessionLimits) {
				WebElement setTimeLimit = webdriver.findElement(By.id(xpathMap.get("SelectTimeLimit")));
				selectValue(setTimeLimit, xpathMap.get("TimeLimitdata"));
				Thread.sleep(1000);
				WebElement setReminderPeriod = webdriver.findElement(By.id(xpathMap.get("SelectReminderPeriod")));
				selectValue(setReminderPeriod, xpathMap.get("ReminderPeriod"));
				Thread.sleep(1000);
				WebElement setLossLimit = webdriver.findElement(By.id(xpathMap.get("SelectLossLimit")));
				// setLossLimit.sendKeys(xpathMap.get("LossLimit"));
				setLossLimit.sendKeys(losslimit);
				Thread.sleep(1000);
				/*
				 * WebElement setPreventFutureSlotGame=webdriver.findElement(By.id(xpathMap.get(
				 * "SelectFutureSlotGame"))); selectValue(setPreventFutureSlotGame,
				 * xpathMap.get("FutureSlotGame"));
				 */
				webdriver.findElement(By.id(xpathMap.get("SetLimitButton"))).click();
				waitForPageToBeReady();
				Thread.sleep(500);
				boolean confirmgame = webdriver.findElements(By.id(xpathMap.get("ConfirmLaunchGame"))).size() > 0;
				if (confirmgame) {
					webdriver.findElement(By.id(xpathMap.get("ConfirmLaunchGame"))).click();
					waitForPageToBeReady();
				} else {
				}
				WebElement ele1 = webdriver.findElement(By.id(xpathMap.get("canvasxPath")));
				ele1 = Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("canvasxPath"))));
			}
		} catch (NoSuchElementException e) {
			e.printStackTrace();
		}
		String Title = webdriver.getTitle();
		return Title;
	}

	/*
	 * Date: 03/04/2017 Author: Ashish Kshatriya Description: Select value from the
	 * dropdown Parameter: UserName, Password, Application Name
	 */
	public void selectValue(WebElement ele, String selectData) throws InterruptedException {
		try {
			Select select = new Select(ele);
			select.selectByValue(selectData);
			Thread.sleep(500);
		} catch (ElementNotVisibleException e) {
			e.printStackTrace();
		}
	}

	/*
	 * Date: 06/04/2017 Author: Author: Ashish Kshatriya Description: This function
	 * is used for take screenshots in application. Parameter: WebDriver driver
	 */
	public static String createScreenshot(WebDriver webdriver) throws InterruptedException {
		UUID uuid = UUID.randomUUID();
		String screenshotsFolder = "";
		/*
		 * screenshotsFolder = "ImageScreenshot//Mobile//"; File dir = new
		 * File(screenshotsFolder); dir.mkdirs();
		 */
		String imageLocation = "D:\\Mobile_Image_Parallel\\Parallel\\ImageScreenshot\\Mobile";
		File scrFile = ((TakesScreenshot) webdriver).getScreenshotAs(OutputType.FILE);
		Thread.sleep(1000);
		try {
			FileUtils.copyFile(scrFile, new File(imageLocation + uuid + ".png"));
		} catch (IOException e) {
			System.out.println("Error while generating screenshot:\n" + e.toString());
		}
		return imageLocation + uuid + ".png";
	}

	/*
	 * Date: 10/04/2017 Author: Author: Ashish Kshatriya Description: This function
	 * is used for to Verify error has occurred on not in Game Parameter: NA
	 */
	public String errorMessage() throws InterruptedException {
		String getMessage = null;
		try {
			if (webdriver.findElement(By.id(xpathMap.get("errorNotificationPopup"))).isDisplayed()) {
				getMessage = webdriver.findElement(By.id(xpathMap.get("errorNotificationPopupBody"))).getText();
			} else {
			}
		} catch (NoSuchElementException e) {
			// getTest().log(LogStatus.ERROR, "Error has been found on
			// screen"+getTest().addScreenCapture(createScreenshot(webdriver)));
		}
		return getMessage;
	}

	/*
	 * Date: 10/04/2017 Author: Author: Ashish Kshatriya Description: This function
	 * is used for close save password popup in chrome browser Parameter: NA
	 */
	public WebElement closeSavePasswordPopup() {
		WebElement closepopup = null;
		try {
			webdriver.context("NATIVE_APP");
			// Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("closeSavePassword"))));
			boolean pop = webdriver.findElements(By.xpath(xpathMap.get("closeSavePassword"))).size() > 0;
			if (pop) {
				closepopup = webdriver.findElement(By.xpath(xpathMap.get("closeSavePassword")));
				closepopup.click();
				webdriver.context("CHROMIUM");
			} else {
				webdriver.context("CHROMIUM");
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return closepopup;
	}

	public void waitForPageToBeReady() {
		JavascriptExecutor js = (JavascriptExecutor) webdriver;
		for (int i = 0; i < 800; i++) {
			try {
				Thread.sleep(1000);
			} catch (InterruptedException e) {
			}
			if (js.executeScript("return document.readyState").toString().equals("complete")) {
				break;
			}
		}
	}

	/*************
	 * code for spain
	 * 
	 * @throws Exception
	 ***********************/
	/* code for verifying slottitle */
	public String verifyslottitle() throws Exception {
		String slotgametitle1 = null;
		WebElement slotgametitle;
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("DefaultOverlayContent"))));

			String innerText = webdriver.findElement(By.xpath(xpathMap.get("DefaultOverlayContent"))).getText();

			if (innerText.contains("Error")) {
				slotgametitle1 = "Error";

			} else {

				slotgametitle = webdriver.findElement(By.xpath(xpathMap.get("SlotGameLimit")));
				slotgametitle1 = slotgametitle.getText();
			}
		} catch (Exception e) {

		}
		return slotgametitle1;
	}

	public String ReminderPeriod() throws Exception {
		String ReminderPeriod1 = null;
		WebElement ReminderTime;
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("DefaultOverlayContent"))));

			String innerText = webdriver.findElement(By.xpath(xpathMap.get("DefaultOverlayContent"))).getText();

			if (innerText.contains("Error")) {
				ReminderPeriod1 = "Error";

			} else {
				ReminderTime = webdriver.findElement(By.xpath(xpathMap.get("ReminderPeriod")));
				ReminderPeriod1 = ReminderTime.getText();
			}
		} catch (Exception e) {

		}
		return ReminderPeriod1;
	}

	public String PreventFuture() throws Exception {
		Exception ex = null;
		String PreventFuture1 = null;
		WebElement futurePrevent;
		try {

			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("DefaultOverlayContent"))));

			String innerText = webdriver.findElement(By.xpath(xpathMap.get("DefaultOverlayContent"))).getText();

			if (innerText.contains("Error")) {
				PreventFuture1 = "Error";

			} else {
				futurePrevent = webdriver.findElement(By.xpath(xpathMap.get("PreventFuture")));

				PreventFuture1 = futurePrevent.getText();
			}
		} catch (Exception e) {

		}
		return PreventFuture1;
	}

	public String verifysetlimitbutton() throws Exception {
		String setlimit1 = null;
		try {

			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("DefaultOverlayContent"))));

			String innerText = webdriver.findElement(By.xpath(xpathMap.get("DefaultOverlayContent"))).getText();

			if (innerText.contains("Error")) {
				setlimit1 = "Error";

			} else {
				WebElement setlimit = webdriver.findElement(By.xpath(xpathMap.get("setlimitbutton")));
				setlimit1 = setlimit.getText();
			}
		} catch (Exception e) {

		}
		return setlimit1;
	}

	public boolean verifyhyperlink() {
		boolean ret = false;
		try {
			// Thread.sleep(30000);
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("DefaultOverlayContent"))));
			String innerText = webdriver.findElement(By.xpath(xpathMap.get("DefaultOverlayContent"))).getText();
			System.out.println(innerText);

			if (innerText.contains("Error")) {
				System.out.println("Game Play Error");
				ret = false;

			} else if (webdriver.findElement(By.xpath(xpathMap.get("backtolobby"))).isDisplayed()) {

				System.out.println("backtolobby is enabled");
				String dialogActionText = webdriver.findElement(By.xpath(xpathMap.get("dialogAction"))).getText();
				System.out.println(dialogActionText);

				if (dialogActionText.contains("START NEW SESSION")) {
					webdriver.findElement(By.xpath(xpathMap.get("startNewSession"))).click();
				}

				ret = true;
			}

		} catch (Exception ex) {
			ex.printStackTrace();
		}
		return ret;
	}

	/**
	 * Date:10-1-2018 Name:Havish Jain Description: this function is clicking on
	 * anyelement it will take screen shot
	 * 
	 * @throws Exception
	 */
	public void GeneralError(Mobile_HTML_Report report) {
		String generalError = null;
		try {
			if (webdriver.findElements(By.xpath(xpathMap.get("General_Error_ID"))).size() > 0)
				;
			{
				generalError = webdriver.findElement(By.xpath(xpathMap.get("General_Error_ID"))).getText();
				webdriver.navigate().to(xpathMap.get("Italy_url"));
			}
		} catch (Exception e) {
			e.getMessage();
		}
	}

	public String Func_navigate_again(String appName) {
		String GameDesktopName = null;
		try {
			Wait = new WebDriverWait(webdriver, 300);
			Wait.until(ExpectedConditions.elementToBeClickable(By.id(xpathMap.get("LobbyfiveReels"))));
			boolean newGame = webdriver.findElements(By.id(xpathMap.get("LobbyNewGamesId"))).size() > 0;
			if (newGame) {
				webdriver.findElement(By.id(xpathMap.get("LobbyNewGamesId"))).click();
				waitForPageToBeReady();
				Thread.sleep(1000);
				boolean game = webdriver.findElements(By.id(appName)).size() > 0;
				if (game) {
					webdriver.findElement(By.id(appName)).click();
				} else {
					System.out.println(appName + " not available in the lobby");
				}

			} else {
				webdriver.findElement(By.id(xpathMap.get("LobbyfiveReels"))).click();
				waitForPageToBeReady();
				Thread.sleep(1000);
				boolean game = webdriver.findElements(By.id(appName)).size() > 0;
				if (game) {
					webdriver.findElement(By.id(appName)).click();
				} else {
					System.out.println(appName + " not available in the lobby");
				}
			}
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("loginPopUp"))));
		} catch (Exception e) {
			e.printStackTrace();
		}
		return GameDesktopName;
	}

	// ********************************Exception
	// Handler********************************************************//
	public void evalException(Exception ex) throws Exception {
		// System.out.println("*************In Exception Handling
		// Class*************"+ex.getClass());
		// ex.printStackTrace();
		// repo1.details_append( "Execution Interrupted because of exception" , "" , "",
		// "Interrupted");
		System.out.println("value of ex is " + ex);
		String exClass = ex.getClass().toString();
		// ex.printStackTrace();
		if (exClass.contains("StaleElementReferenceException")) {
			// System.out.println("Identified specific exception "+exClass);
			// System.out.println();
			repo1.detailsAppend("Execution Interrupted because of StaleElementReferenceException", "", "",
					"Interrupted");
			webdriver.close();
		} else if (exClass.contains("NoSuchElementException")) {
			String gameplay = funGamePlayError();

			if (gameplay != null) {
				repo1.detailsAppend(gameplay + " error occurred", "", "", "Interrupted");
				// System.out.println("Identified specific exception "+exClass);
			} else {
				repo1.detailsAppend("NoSuchElementException because of Element not found", "", "", "Interrupted");
			}
			webdriver.close();
		} else if (exClass.contains("InvalidElementStateException")) {
			repo1.detailsAppend("Execution Interrupted because of InvalidElementStateException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
			webdriver.close();
		} else if (exClass.contains("ElementNotVisibleException")) {
			repo1.detailsAppend("Execution Interrupted because of ElementNotVisibleException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
			webdriver.close();
		} else if (exClass.contains("ErrorInResponseException")) {
			repo1.detailsAppend("Execution Interrupted because of ErrorInResponseException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("InvalidSwitchToTargetException")) {
			repo1.detailsAppend("Execution Interrupted because of InvalidSwitchToTargetException", "", "",
					"Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("NoSuchFrameException")) {
			repo1.detailsAppend("Execution Interrupted because of NoSuchFrameException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("NoSuchWindowException")) {
			repo1.detailsAppend("Execution Interrupted because of NoSuchWindowException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("NoSuchAttributeException")) {
			repo1.detailsAppend("Execution Interrupted because of NoSuchAttributeException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("NoAlertPresentException")) {
			repo1.detailsAppend("Execution Interrupted because of NoAlertPresentException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("ElementNotSelectableException")) {
			repo1.detailsAppend("Execution Interrupted because of ElementNotSelectableException", "", "",
					"Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("InvalidCookieDomainException")) {
			repo1.detailsAppend("Execution Interrupted because of InvalidCookieDomainException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("UnableToSetCookieException")) {
			repo1.detailsAppend("Execution Interrupted because of UnableToSetCookieException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("RemoteDriverServerException")) {
			repo1.detailsAppend("Execution Interrupted because of RemoteDriverServerException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("TimeoutException")) {

			repo1.detailsAppend("Execution Interrupted because of TimeoutException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("MoveTargetOutOfBoundsException")) {
			repo1.detailsAppend("Execution Interrupted because of MoveTargetOutOfBoundsException", "", "",
					"Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("UnexpectedTagNameException")) {
			repo1.detailsAppend("Execution Interrupted because of UnexpectedTagNameException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("InvalidSelectorException")) {
			repo1.detailsAppend("Execution Interrupted because of InvalidSelectorException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("ImeNotAvailableException")) {
			repo1.detailsAppend("Execution Interrupted because of ImeNotAvailableException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("ImeActivationFailedException")) {
			repo1.detailsAppend("Execution Interrupted because of ImeActivationFailedException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("UnhandledAlertException")) {
			repo1.detailsAppend("Execution Interrupted because of Unhandled message ALERT", "", "", "Interrupted");
			Thread.sleep(2000);
			// System.out.println("Identified specific exception "+exClass);

			// Alert alert = null;
			// try {
			// //System.out.println("Alert found"+((TargetLocator)
			// driver).alert().getText());
			// alert = driver.switchTo().alert();
			// } catch (Exception e) {
			// e.printStackTrace();
			// System.out.println("Alert found"+alert.getText());
			//
			//
			// }
			// // Get the text of the alert or prompt
			//
			// //System.out.println("Alert found");
			//
			//
			// // And acknowledge the alert (equivalent to clicking "OK")
			// alert.accept();
		} else if (exClass.contains("NullPointerException")) {

			String gameplay = funGamePlayError();

			if (gameplay != null) {
				repo1.detailsAppend(gameplay + " error occurred", "", "", "Interrupted");
				// System.out.println("Identified specific exception "+exClass);
			} else {
				repo1.detailsAppend("NoSuchElementException because of Element not found", "", "", "Interrupted");
			}

		}
	}

	/*
	 * Date: 29/05/2018 Author:Havish Jain Description: To open menu container
	 * Parameter: NA
	 */
	public boolean menuOpen() {
		return false;

	}

	/*
	 * Date: 29/05/2018 Author:Havish Jain Description: To Close menu container
	 * Parameter: NA
	 */
	public boolean menuClose() {
		return false;

	}

	/**
	 * Date:25-7-2018 Name:Premlata Mishra Description: This method is to verify
	 * error is coming or not
	 * 
	 * @throws Exception
	 */
	public boolean func_SwipeRight() {
		return false;
	}

	/**
	 * Date: 07-01-2018 Author:Laxmikanth Kodam Description: verify New Feature
	 * Dialogue is appearing on the screen
	 * 
	 * @return
	 * @throws InterruptedException
	 */

	public void newFeature() {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			boolean test = webdriver.findElements(By.id("countinue_txt")).size() > 0;

			if (test) {
				nativeClickByID(xpathMap.get("M_NewFeatureScreen"));
				// func_Click(xpathMap.get("OneDesign_NewFeature_ClickToContinue"));
			}

			else {

				System.out.println("Continue Button  is not displaying");
			}
		} catch (Exception e) {

			e.getMessage();
		}
	}

	/* Click on quick spin toggle button */
	public boolean clickOnQuickSpin() {
		Wait.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathMap.get("OneDesignQuickSpin"))));
		// func_Click(xpathMap.get("OneDesignQuickSpin"));

		return true;
	}

	public boolean betDecrease() {

		return true;
	}

	public String FS_summaryScreenClick() {

		return null;
	}

	/**
	 * *Author:Premlata This method is used to wait till the free spin summary
	 * screen won't come
	 * 
	 * @throws InterruptedException
	 */

	public boolean isElementPresent(String locator) {
		boolean isPresent = false;
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			if (webdriver.findElements(By.xpath(locator)).size() > 0) {
				log.debug("Error is coming while refreshing the game");
				isPresent = true;
			}
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		} catch (Exception e) {
			log.error("error in isElementPresent", e);
		}
		return isPresent;
	}

	public void capturePaytableScreenshot(Mobile_HTML_Report report, String language) throws Exception {

	}

	public boolean paytableOpen(Mobile_HTML_Report report, String CurrencyName) throws Exception {
		return true;

	}

	public void winHistoryClose() throws Exception {

	}

	/**
	 * *Author:Premlata This method is used to click on win history button
	 * 
	 * @return
	 * @throws InterruptedException
	 */
	public boolean winHistoryClick() throws Exception {
		return false;
	}

	public boolean FSSceneLoading() {
		return true;
	}

	public boolean waitSummaryScreen() {
		return true;
	}

	/**
	 * This method is used to logout ,if any error occure while launching the game
	 * Author: Premlata Mishra
	 * 
	 * @return true
	 */
	public void errorLogout() {
		try {
			webdriver.findElement(By.xpath(xpathMap.get("spain_LobbyOK"))).click();
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("five_Reel_slot"))));
			funcClick(xpathMap.get("navigation_MyAccount"));
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("logout"))));
			funcClick(xpathMap.get("logout"));
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("Login"))));
			funcClick(xpathMap.get("closeButtonLogin"));
		} catch (Exception e) {
			log.error("error in logout", e);
		}
	}

	/**
	 * This method is used to login with random string generator Author: Havish Jain
	 * 
	 * @return true
	 */
	public long Random_LoginBaseScene(String userName) throws Exception {
		long loadingTime = 0;

		try {
			webdriver.findElement(By.xpath(xpathMap.get("userName"))).clear();
			String password = xpathMap.get("Password");
			webdriver.findElement(By.xpath(xpathMap.get("userName"))).sendKeys(userName);
			webdriver.findElement(By.xpath(xpathMap.get("password"))).clear();
			webdriver.findElement(By.xpath(xpathMap.get("password"))).sendKeys(password);
			// Thread.sleep(2000);
			webdriver.findElement((By.xpath(xpathMap.get("Login")))).click();
			log.debug("Clicked on login button after entering usename and password");
			long start = System.currentTimeMillis();
			new WebDriverWait(webdriver, 500).until(ExpectedConditions.or(
					ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("clock_ID"))),
					ExpectedConditions.visibilityOfElementLocated(
							By.xpath(xpathMap.get("OneDesign_NewFeature_ClickToContinue")))));

			long finish = System.currentTimeMillis();
			long totalTime = finish - start;
			loadingTime = totalTime / 1000;
			log.debug("Total Time for Game load in Seconds is: " + loadingTime);
			// newFeature(); //Full Screen overlay will appear first in mobile
			// func_FullScreen();

		} catch (NoSuchElementException e) {
			e.printStackTrace();
			log.debug("error while login");
			throw new Exception(e);
		}
		return loadingTime;
	}

	public String entryScreen_Wait(String clickToContinue) {
		String wait = "";
		return wait;
	}

	public String clickToContinue() {
		String FreeSpin = "";
		return FreeSpin;

	}

	public void FS_continue() {

	}

	public String waitUntilSessionLoss() {
		return null;
	}

	public String waitUntilSessionReminder(Mobile_HTML_Report tc10) {
		Wait = new WebDriverWait(webdriver, 300);

		String header = null;
		try {

			boolean stopbutton = isStopButtonAvailable();
			if (!stopbutton) {
				tc10.detailsAppend("Verify the Stop button is not available in Spain Regulatory Markets.",
						"Stop Button should not display.", "Stop Button is not gettting displayed in game", "Pass");
				System.out.println("Waiting for SessionReminder Continue overlay  and checking for stop button");
				log.debug("Waiting for SessionReminder Continue overlay  and checking for stop button");
			} else {
				System.out.println("Waiting for SessionReminder Continue overlay  and checking for stop button");
				log.debug("Waiting for SessionReminder Continue overlay  and checking for stop button");
				tc10.detailsAppend("Verify the Stop button is not available in Spain Regulatory Markets.",
						"Stop Button should not display.", " Stop Button is gettting displayed in game", "Fail");

			}

			Wait.until(ExpectedConditions
					.visibilityOfElementLocated(By.xpath(xpathMap.get("spain_SessionReminderContinue"))));
			Thread.sleep(1000);
			header = webdriver.findElement(By.xpath(xpathMap.get("spain_SessionReminderContinue"))).getText();
		} catch (Exception e) {

			e.printStackTrace();
		}
		return header;
	}

	/*
	 * Close Session loss popup for spain
	 */

	public void closeSessionLossPopup(Mobile_HTML_Report report) {
		try {
			report.detailsAppend("  Loss Limit Summary overlay ", "check if Loss Limit Summary overlay appear",
					"check if Loss Limit Summary overlay appear", "PASS");
			funcClick(xpathMap.get("spain_lossLimitDialogueOK"));
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("spain_CloseBtn"))));
			report.detailsAppend("Close ", "Loss Limit Summary overlay Close clicked ",
					"Loss Limit Summary overlay Close clicked", "PASS");
			funcClick(xpathMap.get("spain_CloseBtn"));
			// Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("five_Reel_slotID"))));
			report.detailsAppend("Close naviagtion ",
					"User should redirect to lobby after clicking on close button when loss limit is reached",
					"User is redirected to lobby", "Pass");
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public boolean FSSceneLoading(int bonusSelection) {
		return false;
	}

	public void acceptAlert() {

	}

	public String clickBonusSelection(int i) {
		return null;
	}

	public void coolingOffPeriod(Mobile_HTML_Report tc10) {
		try {
			nativeClickByID(xpathMap.get("five_Reel_slotID"));

			JavascriptExecutor js = ((JavascriptExecutor) webdriver);
			js.executeScript("arguments[0].scrollIntoView(true);", webdriver.findElement(By.id(GameName)));

			js.executeScript("arguments[0].click();", webdriver.findElement(By.id(GameName)));

			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("spain_CloseBtn"))));
			tc10.detailsAppend("To check if Cooling Off Period Overlay appear on launching same game",
					"Cooling Off Period Overlay should appear on launching same game",
					"Cooling Off Period Overlay appears on launching same game", "Pass");
			funcClick(xpathMap.get("spain_CloseBtn"));
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("five_Reel_slotID"))));
			tc10.detailsAppend(
					"To verify user navigates to lobby after clicking on close button when cooling off period is running",
					"User should redirect to lobby after clicking on close button when cooling off period is running",
					"User is redirected to lobby", "Pass");
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void spainContinueSession() {
		// Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("spain_SessionReminderContinue"))));
		webdriver.findElement(By.xpath(xpathMap.get("spain_SessionReminderContinue"))).click();
		System.out.println("Clicked on Continue  ");
		log.debug("Clicked on Continue ");
	}

	public void coolingOffPeriodNewGame(String gamename, Mobile_HTML_Report tc10) {
		try {
			nativeClickByID(xpathMap.get("five_Reel_slotID"));

			JavascriptExecutor js = ((JavascriptExecutor) webdriver);
			js.executeScript("arguments[0].scrollIntoView(true);", webdriver.findElement(By.id(gamename)));
			js.executeScript("arguments[0].click();", webdriver.findElement(By.id(gamename)));

			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("spain_CloseBtn"))));
			tc10.detailsAppend("To check if Cooling Off Period Overlay appear on launching another game",
					"Cooling Off Period Overlay should appear on launching another game",
					"Cooling Off Period Overlay appears on launching another game", "Pass");
			funcClick(xpathMap.get("spain_CloseBtn"));
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("five_Reel_slotID"))));
			tc10.detailsAppend(
					"To verify user navigates to lobby after clicking on close button when cooling off period is running",
					"User should redirect to lobby after clicking on close button when cooling off period is running",
					"User is redirected to lobby", "Pass");
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void waitUntilTimeLimitSession(Mobile_HTML_Report tc10) {
		try {
			for (int i = 0; i <= 5; i++) {
				spainContinueSession();
				boolean b = webdriver.findElements(By.xpath(xpathMap.get("spain_CloseBtn"))).size() > 0;
				if (b) {
					break;
				}
			}
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("spain_CloseBtn"))));
			tc10.detailsAppend("To check if Time Limit Summary overlay appear when Time limit is reached",
					"Time Limit Summary overlay should appear", "Time Limit summary overlay appears", "Pass");
			funcClick(xpathMap.get("spain_CloseBtn"));
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("five_Reel_slotID"))));
			tc10.detailsAppend(
					"To verify user navigates to lobby after clicking on close button when Time limit is reached",
					"User should redirect to lobby after clicking on close button when Time limit is reached",
					"User is redirected to lobby", "Pass");
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void relaunchGame() throws InterruptedException {
		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("five_Reel_slotID"))));
		nativeClickByID(xpathMap.get("five_Reel_slotID"));

		JavascriptExecutor js = ((JavascriptExecutor) webdriver);
		js.executeScript("arguments[0].scrollIntoView(true);", webdriver.findElement(By.id(GameName)));

		js.executeScript("arguments[0].click();", webdriver.findElement(By.id(GameName)));

		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("spain_SlotGameOverlay"))));
	}

	public boolean verifyQuickSpin() {
		return false;
	}

	public String getCurrencySymbol() {
		return null;
	}

	public String getCurrentBet() {
		return null;
	}

	public boolean betCurrencySymbol(String currencySymbol) {
		return false;
	}

	public boolean betSettingCurrencySymbol(String currencySymbol, Mobile_HTML_Report report, String currencyName)
			throws Exception {
		return false;
	}

	public boolean waitforWinAmount(String currencyFormat, Mobile_HTML_Report currencyReport, String currencyName) {
		return false;
	}

	public String Func_logout_OD() throws Exception {
		String loginTitle = null;
		try {
			nativeClickByID(xpathMap.get("M_OneDesign_HomeIconID"));

			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("five_Reel_slot"))));

			loginTitle = func_GetText(xpathMap.get("five_Reel_slot"));

			if (webdriver.getPageSource().contains("Arthur")) {
				Native_Click(xpathMap.get("Profile"));
				// func_Click("//*[@id='myaccount']");
				log.debug("Clicked on profile");

			} else {
				nativeClickByID(xpathMap.get("M_navigation_MyAccountID"));
				log.debug("Clicked on My Account");

			}
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("logout"))));
			loginTitle = func_GetText(xpathMap.get("logout"));
			// func_Click(xpathMap.get("logout"));
			JavascriptExecutor js = ((JavascriptExecutor) webdriver);
			js.executeScript("arguments[0].scrollIntoView(true);",
					webdriver.findElement(By.id(xpathMap.get("logout_ID"))));

			js.executeScript("arguments[0].click();", webdriver.findElement(By.id(xpathMap.get("logout_ID"))));
			// Native_ClickByID(xpathMap.get("logout_ID"));
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("Login"))));
			// func_Click(xpathMap.get("closeButtonLogin"));
			nativeClickByID(xpathMap.get("closeButtonLoginID"));
		} catch (WebDriverException e) {
			e.getMessage();
			throw new Exception(e);
		}
		return loginTitle;
	}

	public boolean open_Bet() {
		return false;
	}

	public void verifyStopLanguage(Mobile_HTML_Report tc01, String language) {

	}

	public void FS_Start() {

	}

	public void waitForSpinButton() {

	}

	public void jackpotSummary(Mobile_HTML_Report report, String language) {

	}

	public String func_String_Operation(String value) {
		String str = value;
		String str1 = str.substring(1);
		return str1;
	}

	public boolean func_SwipeDown() {
		try {
			webdriver.context("NATIVE_APP");
			Dimension size1 = webdriver.manage().window().getSize();
			int startx = size1.width / 2;
			String startyString = xpathMap.get("startY");
			String endyString = xpathMap.get("endY");
			double startyDouble = Double.parseDouble(startyString);
			double endyDouble = Double.parseDouble(endyString);
			int starty = (int) (size1.height * startyDouble);
			int endy = (int) (size1.height * endyDouble);
			TouchAction action = new TouchAction(webdriver);
			action.press(PointOption.point(startx, starty)).moveTo(PointOption.point(startx, endy)).release().perform();
			// action.press(startx, starty).moveTo(startx, endy).release().perform();
			webdriver.context("CHROMIUM");
			Thread.sleep(500);
		} catch (Exception e) {
			e.printStackTrace();
			System.out.println(e);
			return false;
		}
		return true;
	}

	/*
	 * public void assignFreeGames(Mobile_HTML_Report tc01, String userName) { try{
	 * webdriver.findElement(By.xpath(xpathMap.get("FreeGamesUsername"))).clear();
	 * webdriver.findElement(By.xpath(xpathMap.get("FreeGamesUsername"))).sendKeys(
	 * username); Thread.sleep(2000);
	 * webdriver.findElement(By.xpath("//*[@class='ui-menu-item-wrapper']")).click()
	 * ; webdriver.findElement(By.xpath(xpathMap.get("FreeGamesMultipleCheckBox"))).
	 * click(); Thread.sleep(1000);
	 * webdriver.findElement(By.xpath(xpathMap.get("FreeGamesMultipleCount"))).clear
	 * (); webdriver.findElement(By.xpath(xpathMap.get("FreeGamesMultipleCount"))).
	 * sendKeys("20");
	 * webdriver.findElement(By.xpath(xpathMap.get("FreeGamesSearchBox"))).sendKeys(
	 * "football"); Thread.sleep(2000);
	 * webdriver.findElement(By.xpath(xpathMap.get("FreeGameOffer1"))).click();
	 * webdriver.findElement(By.xpath(xpathMap.get("FreeGameOffer2"))).click();
	 * webdriver.findElement(By.xpath(xpathMap.get("FreeGamesAssignOffer"))).click()
	 * ; tc01.details_append("Verify Free Games Offer assigned successfully",
	 * "Free Games offer should be assigned",
	 * "Free Games Offer assigned successfully", "Pass"); Thread.sleep(5000); }
	 * catch(Exception e){ e.printStackTrace(); }
	 * 
	 * }
	 */

	public boolean freeGamesExpriyScreen() {
		return false;
	}

	public String freeGamesContinueExpiry() {
		return null;
	}

	public boolean freeGamesEntryScreen() {
		return false;
	}

	public boolean freeGameEntryInfo() {
		return false;
	}

	public boolean clickPlayNow() {
		return false;
	}

	public String freeGamesResumescreen() {
		return null;
	}

	public boolean freeGameResumeInfo() {
		return false;
	}

	public boolean resumeScreenDiscardClick() {
		return false;
	}

	public boolean confirmDiscardOffer() {
		return false;
	}

	public void getConsoleValue() {
		Coordinates coordinateObj = new Coordinates();
		JavascriptExecutor js = ((JavascriptExecutor) webdriver);
	}

	/**
	 * *Author:Pramlata Mishra This method is used to get element and convert the
	 * parameter type to long
	 * 
	 * @throws InterruptedException
	 */
	public void typeCasting(String cx, Coordinates coordinateObj) {
		JavascriptExecutor js = ((JavascriptExecutor) webdriver);
		try {
			Long sx = (Long) js.executeScript(cx);
			coordinateObj.setX(sx);
			log.debug(+sx);
		} catch (Exception e) {
			Double sdx = (Double) js.executeScript(cx);
			Long sx = sdx.longValue();
			coordinateObj.setX(sx);
			log.debug(+sx);
		}
	}

	public double typeCasting(Object object, AppiumDriver<WebElement> driver) {
		int value = 0;
		JavascriptExecutor js = ((JavascriptExecutor) driver);
		try {
			if (object instanceof Long)
				value = ((Long) object).intValue();
			else if (object instanceof Double)
				value = ((Double) object).intValue();

		} catch (Exception e) {
			e.getMessage();
		}
		return value;
	}

	public void clickAtCoordinates(String cx, String cy) {
		try {
			JavascriptExecutor js = ((JavascriptExecutor) webdriver);
			System.out.println(js.executeScript(cx));
			System.out.println(js.executeScript(cy));
			int dx = 0, dy = 0;
			try {
				Long sx = (Long) js.executeScript(cx);
				dx = sx.intValue();
			} catch (Exception e) {
				Double sx = (Double) js.executeScript(cx);
				dx = sx.intValue();
			}
			try {
				Long sy = (Long) js.executeScript(cy);
				dy = sy.intValue();
			} catch (Exception e) {
				Double sy = (Double) js.executeScript(cy);
				dy = sy.intValue();
			}
			/*
			 * Double sx = (Double) js.executeScript(cx); Double sy = (Double)
			 * js.executeScript(cy);
			 * 
			 * double dx = sx.doubleValue(); double dy = sy.doubleValue();
			 * 
			 * System.out.println("width:" +dx ); System.out.println("Height:" +dy);
			 */

			if (dx == 0) {
				dx = 1;
			}

			if (dy == 0) {
				dy = 1;
			}
			/*
			 * dx = dx * (size1.width) / 1280; dy = dy * (size1.height) / 720;
			 */

			System.out.println("width:" + dx);
			System.out.println("Height:" + dy);

			/*
			 * x = (int)dx; y = (int)dy;
			 */

			Thread.sleep(100);
			Actions act = new Actions(webdriver);
			WebElement ele1 = webdriver.findElement(By.id("gameCanvas"));
			act.moveToElement(ele1, dx, dy).click().build().perform();
		}

		catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * *Author:Pramlata Mishra This method is used to click at the element
	 * 
	 * @throws InterruptedException
	 */
	public void clickAtCoordinates(Long sx, Long sy) {
		try {
			// JavascriptExecutor js = ((JavascriptExecutor)webdriver);
			// Dimension d=webdriver.manage().window().getSize();
			int dx = 0, dy = 0;
			try {
				dx = sx.intValue();
			} catch (Exception e) {
				dx = sx.intValue();
			}
			try {
				dy = sy.intValue();
			} catch (Exception e) {
				dy = sy.intValue();
			}
			Thread.sleep(100);
			Actions act = new Actions(webdriver);
			WebElement ele1 = webdriver.findElement(By.id("gameCanvas"));
			/*
			 * for(int i=0;i<=100;i++) {
			 */

			act.moveToElement(ele1, dx, dy).click().build().perform();

			// dx=dy+5;dy=dy+10;
			// }

		}

		catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * *Author:Pramlata Mishra This method is used to get element text form game
	 * console
	 * 
	 * @throws InterruptedException
	 */
	public String GetConsoleText(String text) {
		String consoleText = null;
		try {
			JavascriptExecutor js = (webdriver);
			consoleText = (String) js.executeScript(text);
			log.debug("Text Read from Console=" + consoleText);
		} catch (Exception e) {
			e.getMessage();
		}
		return consoleText;
	}

	/**
	 * Date:07/12/2017 Author:premlata Mishra This method is to split the string
	 * accprding to given string or symbol
	 * 
	 * @return true
	 */
	public String[] splitString(String val, String toreplace) {
		String splitedval[] = null;
		try {
			String valnew = val.replace(toreplace, "/");
			splitedval = valnew.split("/");
		} catch (Exception e) {
			e.getMessage();
		}
		return splitedval;
	}

	public ArrayList<Map<String, Long>> getConsoleListMap(String text) {
		ArrayList<Map<String, Long>> list = null;
		try {
			JavascriptExecutor js = ((JavascriptExecutor) webdriver);
			list = (ArrayList<Map<String, Long>>) js.executeScript(text);
		} catch (Exception e) {
			e.getMessage();
		}
		return list;
	}

	/*
	 * Date: 13/11/2017 Author: Ashish Kshatriya Description: This function is used
	 * for get Webelement text Parameter: By locator
	 */
	public String func_GetText(String locator) {
		/*
		 * try { WebElement ele = webdriver.findElement(By.xpath(locator)); return
		 * ele.getText();
		 * 
		 * } catch (NoSuchElementException e) { return null; }
		 */
		return null;
	}

	/**
	 * *Author:Premlata This method is used to tap on the toggle button
	 * 
	 * @throws InterruptedException
	 */

	public void clickWithWebElement(WebElement webViewElement, int Xcoordinate_AddValue) {
		String s = null;
		try {
			if (webdriver instanceof AndroidDriver) {
				webdriver.context("CHROMIUM");
			} else if (webdriver instanceof IOSDriver) {
				Set<String> contexts = webdriver.getContextHandles();
				for (String context : contexts) {
					if (context.startsWith("WEBVIEW")) {
						log.debug("context going to set in IOS is:" + context);
						webdriver.context(context);
					}
				}
			}
			double urlHeight = 0.0;
			JavascriptExecutor javaScriptExe = (JavascriptExecutor) webdriver;

			int webViewInnerWidth = ((Long) javaScriptExe
					.executeScript("return window.innerWidth || document.body.clientWidth")).intValue();
			// System.out.println("webViewInnerWidth "+webViewInnerWidth);
			int webViewOuterWidth = ((Long) javaScriptExe
					.executeScript("return window.outerWidth || document.body.clientWidth")).intValue();
			// System.out.println("webViewInnerWidth "+webViewInnerWidth);

			int webViewInnerHeight = ((Long) javaScriptExe
					.executeScript("return window.innerHeight || document.body.clientHeight")).intValue();
			// System.out.println("webViewInnerHeight "+webViewInnerHeight);
			int webViewOuterHeight = ((Long) javaScriptExe
					.executeScript("return window.outerHeight || document.body.clientHeight")).intValue();
			// System.out.println("webViewOuterHeight "+webViewOuterHeight);

			int webViewOffsetHeight = ((Long) javaScriptExe
					.executeScript("return window.offsetHeight || document.body.clientHeight")).intValue();
			// System.out.println("webViewOffsetHeight "+webViewOffsetHeight);

			int webViewBottomHeight = webViewOffsetHeight - webViewInnerHeight;
			// System.out.println("webViewBottomHeight "+webViewBottomHeight);

			Dimension elementSize = webViewElement.getSize();
			// System.out.println("elementSize "+elementSize);

			int webViewElementCoX = webViewElement.getLocation().getX() + (elementSize.width / 2);
			// System.out.println("webViewElementCoX "+webViewElementCoX);

			int webViewElementCoY = webViewElement.getLocation().getY() + (elementSize.height / 2);
			// System.out.println("webViewElementCoY "+webViewElementCoY);

			// double connectedDeviceWidth = typeCasting(javaScriptExe.executeScript("return
			// window.screen.width * window.devicePixelRatio"), webdriver);
			// double connectedDeviceHeight =
			// typeCasting(javaScriptExe.executeScript("return window.screen.height *
			// window.devicePixelRatio"), webdriver);

			// System.out.println("connectedDeviceWidth "+connectedDeviceWidth);
			// System.out.println("connectedDeviceHeight "+connectedDeviceHeight);
			String curContext = webdriver.getContext();
			// webdriver.context("NATIVE_APP");

			urlHeight = (double) webViewOuterHeight - (double) webViewInnerHeight;
			// System.out.println("url height "+urlHeight);

			// urlHeight=0.0;
			double relativeScreenViewHeight = webViewOuterHeight - urlHeight;
			// System.out.println("relativeScreenViewHeight "+relativeScreenViewHeight);

			double nativeViewEleX = (double) (((double) webViewElementCoX / (double) webViewInnerWidth)
					* webViewOuterWidth);
			// System.out.println("nativeViewEleX "+nativeViewEleX);

			double nativeViewEleY = (double) (((double) webViewElementCoY / (double) webViewOuterHeight)
					* relativeScreenViewHeight);
			System.out.println("nativeViewEleY " + nativeViewEleY);

			tapOnCoordinates((nativeViewEleX + Xcoordinate_AddValue), ((nativeViewEleY + urlHeight + 1)));
			webdriver.context(curContext);

			/*
			 * if(xpathMap.get("serviceUrl").equalsIgnoreCase("yes")) urlHeight = (double)
			 * screenHeight * (0.12); else
			 * if(xpathMap.get("serviceUrl").equalsIgnoreCase("no")) urlHeight = 0.0; else
			 * urlHeight = (double) screenHeight * (0.22);
			 */
			// double nativeViewEleY = (double) (((double) webViewElementCoY / (double)
			// webViewHeight) );
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/*
	 * public void clickWithWebElement(WebElement webViewElement, int
	 * Xcoordinate_AddValue) { String s = null;
	 * 
	 * try { double urlHeight = 0.0; JavascriptExecutor javaScriptExe =
	 * (JavascriptExecutor) webdriver; int webViewWidth = ((Long) javaScriptExe
	 * .executeScript("return window.innerWidth || document.body.clientWidth")).
	 * intValue(); int webViewHeight = ((Long) javaScriptExe
	 * .executeScript("return window.innerHeight || document.body.clientHeight")).
	 * intValue(); Dimension elementSize = webViewElement.getSize(); int
	 * webViewElementCoX = webViewElement.getLocation().getX() + (elementSize.width
	 * / 2); int webViewElementCoY = webViewElement.getLocation().getY() +
	 * (elementSize.height / 2); webdriver.context("NATIVE_APP"); double screenWidth
	 * = webdriver.manage().window().getSize().getWidth(); double screenHeight =
	 * webdriver.manage().window().getSize().getHeight(); if
	 * (xpathMap.get("serviceUrl").equalsIgnoreCase("yes")) { urlHeight = (double)
	 * screenHeight * (0.12); } else if
	 * (xpathMap.get("serviceUrl").equalsIgnoreCase("no")) { urlHeight = 0.0; } else
	 * {
	 * 
	 * } urlHeight = (double) screenHeight * (0.22); double relativeScreenViewHeight
	 * = screenHeight - urlHeight; double nativeViewEleX = (double) (((double)
	 * webViewElementCoX / (double) webViewWidth) * screenWidth); double
	 * nativeViewEleY = (double) (((double) webViewElementCoY / (double)
	 * webViewHeight) relativeScreenViewHeight); tapOnCoordinates(nativeViewEleX +
	 * Xcoordinate_AddValue, (nativeViewEleY + urlHeight + 1));
	 * webdriver.context("CHROMIUM"); } catch (Exception e) { e.printStackTrace(); }
	 * }
	 */

	public void tapOnCoordinates(final double x, final double y) {
		// new TouchAction(webdriver).tap((int)x, (int)y).perform();
		// int X=(int) Math.round(x); // it will round off the values
		// int Y=(int) Math.round(y);
		System.out.println("X cor - " + x + "," + " Y cor - " + y);
		System.out.println(x);
		System.out.println(y);
		TouchAction action = new TouchAction(webdriver);

		action.tap(PointOption.point((int) x, (int) y)).perform();
		// action.press(PointOption.point((int) x, (int) y)).release().perform();

		// action.tap(PointOption.point(X, Y)).perform();

	}

	/**
	 * Date:07/12/2017 Author:Premlata Mishra only declaration of component store
	 * method
	 * 
	 * @return true
	 */
	public void refresh() {
		try {
			String currentUrl = webdriver.getCurrentUrl();
			webdriver.navigate().to(currentUrl);
		} catch (Exception e) {
			e.getMessage();
		}
	}

	/**
	 * Date:07/12/2017 Author:Premlata Mishra only declaration of component store
	 * method
	 * 
	 * @return true
	 */
	public String gamelogo() {
		return null;
	}

	public String quickSpinStatus() {
		String opacityvalue = null;
		return opacityvalue;
	}

	public void SettingsToBasescen() throws InterruptedException {

	}

	public boolean verifySpin_Stop() {
		boolean spin = false;
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("Spin_Button"))));
			Native_Click(xpathMap.get("Spin_Button"));
			spin = webdriver.findElement(By.id(xpathMap.get("Stop_button_ID"))).isDisplayed();
		} catch (Exception e) {
			spin = false;
			e.getMessage();
		}
		return spin;
	}

	/**
	 * Date: 04/06/2018 Author: Havish Jain Description: This function is used for
	 * touch event in mobile devices Parameter: By locator
	 */
	public boolean Native_Click(String locator) {
		boolean present = true;
		try {
			webdriver.context("NATIVE_APP");
			MobileElement el4 = (MobileElement) webdriver.findElement(By.xpath(locator));
			el4.click();
			webdriver.context("CHROMIUM");
		} catch (NoSuchElementException e) {
			System.out.println(e.getMessage());
		}
		return present;
	}

	/**
	 * Date:07/12/2017 Author:premlata mishra This method is to wait till reels got
	 * land
	 * 
	 * @return true
	 * @throws InterruptedException
	 */
	public void waitTillStop() throws InterruptedException {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			boolean test = webdriver.findElements(By.xpath("//*[@id='respin-footer-4']")).size() > 0;
			if (test) {
				while (webdriver.findElement(By.xpath("//*[@id='respin-footer-4']")).getText().isEmpty()) {
					Thread.sleep(500);
				}
			} else {
				Wait.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathMap.get("spinButtonBox"))));
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void winClick() {
		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("OneDesign_Spin_Text"))));
	}

	/**
	 * *Author:Premlata This method is used to tap on quick spin
	 * 
	 * @throws InterruptedException
	 */
	public boolean tap_quickSpin() throws Exception {
		boolean flag = true;
		try {
			new WebDriverWait(webdriver, 100)
					.until(ExpectedConditions.visibilityOf(webdriver.findElement(By.id("inGameClock"))));
			WebElement e = webdriver.findElement(By.xpath(xpathMap.get("quickSpin_Toggle")));
			clickWithWebElement(e, 0);
			return flag;
		} catch (Exception e) {
			e.getStackTrace();
			return flag = false;
		}

	}

	/**
	 * Date: 30/05/2018 Autohr: Havish Jain Description: This function used to
	 * handle the error
	 * 
	 * @return Title
	 */

	public void error_Handler(Mobile_HTML_Report report) {

		String error = xpathMap.get("Error");
		for (int i = 1; i <= Constant.REFRESH_RETRY_COUNT; i++) {
			if (isElementPresent(error)) {
				try {
					report.detailsAppend("Error is present", "Error is present", "Error is present", "Interrupted");
				} catch (Exception e) {

					e.printStackTrace();
				}
				webdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
				webdriver.navigate().refresh();
			} else {
				break;
			}
		}
	}

	/**
	 * *Author:Premlata This method is used to slide the coin size slider
	 * 
	 * @throws InterruptedException
	 */
	public boolean moveCoinSizeSlider() throws InterruptedException {
		// func_Click(xpathMap.get("OneDesignbetbutton"));
		WebElement CoinSizeSlider = webdriver.findElement(By.xpath(xpathMap.get("OneDesignCoinSizeSlider")));
		Thread.sleep(2000);
		Actions action = new Actions(webdriver);
		action.dragAndDropBy(CoinSizeSlider, 127, 0).build().perform();
		return true;

	}

	public void Coinselectorclose() {

	}

	/**
	 * method is for paytable close
	 * 
	 * @throws InterruptedException
	 */
	public void paytableClose() throws InterruptedException {

	}

	public boolean bigWin_Wait() {
		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("OD_BIgWin"))));
		return true;
	}

	public String Slider_TotalBetamnt() {
		return null;
	}

	public String refreshWait() {
		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("OneDesign_Spin_Text"))));
		// newFeature();
		return null;
	}

	/**
	 * Date:07/12/2017 Author:Premlata Mishra actually not necessery in component
	 * store just declaration needed
	 * 
	 * @return true
	 */
	public boolean betIncrease() {
		return true;
	}

	/**
	 * Date:12/08/2021 This method used to enable address bar
	 * 
	 * @return void
	 * @throws InterruptedException
	 */
	public void clickOnAddressBar() {
		Wait = new WebDriverWait(webdriver, 50);
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("clock_ID"))));
			if (osPlatform.equalsIgnoreCase("Android")) {
				String context = webdriver.getContext();
				webdriver.context("NATIVE_APP");
				Dimension size1 = webdriver.manage().window().getSize();
				int startx = size1.width / 2;
				int starty = size1.height / 2;
				TouchAction action = new TouchAction(webdriver);
				action.press(PointOption.point(0, 0)).release().perform();
				webdriver.context(context);
			} else {// tapping at down on the screen for ios 15 and above version
				Thread.sleep(2000);
				Dimension size = webdriver.manage().window().getSize();
				int anchor = (int) (size.width * 0.5);
				int startPoint = (int) (size.height * 0.2);
				int endPoint = (int) (size.height * 0.95);
				new TouchAction(webdriver).tap(PointOption.point(10, endPoint)).perform();
				Thread.sleep(2000);
				/*
				 * TouchAction touchAction = new TouchAction(webdriver);
				 * touchAction.tap(PointOption.point(10, 110)) .perform();
				 */
			}
		} catch (Exception e) {
			log.error(e.getMessage(), e);
		}
	}

	public String FS_RefreshWait() {
		return null;
	}

	public String summaryScreen_Wait() {
		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("clock_ID"))));
		return "";
	}

	public boolean customeverifyimage(String button) throws InterruptedException {
		boolean isMatch = false;
		return isMatch;
	}

	/**
	 * This method is used to verify the Base Game Logo
	 * 
	 * @param imagepath
	 * @return
	 * @throws InterruptedException
	 */
	public boolean verifySpin() {
		boolean spin = false;
		return spin;
	}

	public String freeGamesDiscardExistingOffer() {
		return null;
	}

	public void clickNextOffer() {

	}

	public void clickBaseSceneDiscard() {

	}

	public boolean open_Autoplay() {
		// TODO Auto-generated method stub
		return false;
	}

	public void close_Autoplay() {
		// TODO Auto-generated method stub
	}

	/**
	 * Author: Havish Jain This method is used to get data from the har and get the
	 * URL of assets.
	 * 
	 * @param proxy
	 * @return ArrayList
	 */
	public ArrayList<String> cacheBustingCDN(BrowserMobProxyServer proxy2) {
		List<String> al = new ArrayList<String>();
		Har nhar;
		HarLog hardata;
		List<HarEntry> entries;
		Iterator<HarEntry> itr;
		waitForPageToBeReady();
		nhar = proxy2.getHar();

		hardata = nhar.getLog();
		entries = hardata.getEntries();
		itr = entries.iterator();

		while (itr.hasNext()) {
			HarEntry entry = itr.next();
			String requestUrl = entry.getRequest().getUrl().toString();
			al.add(requestUrl);
		}
		return (ArrayList<String>) al;
	}

	/**
	 * Author: Havish Jain This method is used read Manifest file from the server
	 * and save the json data in a list.
	 * 
	 * @param manifest file
	 * @return ArrayList
	 */
	public ArrayList<String> readManifestFile(String manifestFile) throws ParseException, IOException {
		List<String> al = new ArrayList<String>();
		FileReader reader = new FileReader(manifestFile);

		String str = null;
		try (BufferedReader br = new BufferedReader(reader)) {
			String st = new String();
			while (true) {
				str = new String(st);
				st = br.readLine();
				if (st == null) {
					break;
				}
			}
		}

		String[] words = str.split("=");

		JSONParser jsonParser = new JSONParser();
		JSONObject jsonObject = (JSONObject) jsonParser.parse(words[1]);

		Set set = jsonObject.keySet();
		for (Object s : set) {
			JSONObject jsonObject3 = (JSONObject) jsonObject.get(s);
			String resourcePath = jsonObject3.get("path").toString();
			if (!resourcePath.contains("960x640") && !resourcePath.contains("1024x768"))
				al.add(jsonObject3.get("path").toString());
		}
		return (ArrayList<String>) al;
	}

	public void setNameSpace() {
	}

	/*
	 * Function overloading check page navigation
	 * 
	 * @input: Report,page tital
	 * 
	 * @return: void
	 */

	public void checkPageNavigation(Mobile_HTML_Report report, String pagetital) {
		try {

			// Below code is for if responsible gaming link is opening in new tab
			String mainwindow = webdriver.getWindowHandle();
			Set<String> s1 = webdriver.getWindowHandles();
			if (s1.size() > 1) {
				Iterator<String> i1 = s1.iterator();
				while (i1.hasNext()) {
					String ChildWindow = i1.next();

					if (mainwindow.equalsIgnoreCase(ChildWindow)) {
						String ChildWindow1 = i1.next();
						webdriver.switchTo().window(ChildWindow1);
					}

					String tital = webdriver.getTitle();
					log.debug(tital);
					if (tital.equalsIgnoreCase(pagetital)) {
						report.detailsAppend("verify the " + pagetital + " link ",
								" Should nevigate to" + pagetital + " link", "Navigate to " + pagetital + " link",
								"pass");
						log.debug("Page navigated succesfully");
						webdriver.close();// closing new window
						webdriver.switchTo().window(mainwindow);
						waitForSpinButton();

					} else {
						report.detailsAppend("verify the" + pagetital + " link ",
								" Should nevigate to " + pagetital + "link",
								"Does not Navigate to " + pagetital + " link", "fail");
					}
				}
			}
			// To check is responsible gaming link is open in same tab
			else {
				String tital = webdriver.getTitle();
				log.debug(tital);
				if (tital.equalsIgnoreCase(pagetital)) {
					report.detailsAppend("verify the" + pagetital + " link ",
							" Should nevigate to" + pagetital + " link", "Navigate to" + pagetital + " link", "pass");
					log.debug("Page navigated succesfully");
					webdriver.navigate().back();
					webdriver.navigate().refresh();
					// JavascriptExecutor js = (JavascriptExecutor) webdriver;
					// js.executeScript("window.history.go(-1)");
					waitForSpinButton();

				} else {
					report.detailsAppend("verify the " + pagetital + " link ",
							" Should nevigate to" + pagetital + "link", "Does not Navigate to " + pagetital + " link",
							"fail");
					webdriver.navigate().back();
					webdriver.navigate().refresh();
				}
			}

		} catch (Exception e) {
			log.error("error in navigation of page");
		}
	}

	public boolean isStopButtonAvailable() {
		return false;
	}

	/*
	 * To get the numaric text from the console
	 */
	public long getConsoleNumeric(String text) {
		long consoleNumeric = 0;
		try {
			JavascriptExecutor js = ((JavascriptExecutor) webdriver);
			consoleNumeric = (Long) js.executeScript(text);
		} catch (Exception e) {
			e.getMessage();
		}
		return consoleNumeric;
	}

	public boolean verifyAutoplayConsoleOptions(Mobile_HTML_Report report) {

		return false;
	}

	public boolean verifyAutoplayPanelOptions(Mobile_HTML_Report report) {

		return false;
	}

	/*
	 * Date: 25/04/2019 Description:To verify Auto play on refreshing Parameter: NA
	 * 
	 * @return boolean
	 */
	public boolean isAutoplayOnAfterRefresh() {
		boolean onrefresh;
		try {
			webdriver.findElement(By.xpath(xpathMap.get("Start_Autoplay"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("spin_button"))));
			log.debug("On refresh previous autoplay session has not resume");
		} catch (Exception e) {
			log.error("On refresh previous autoplay session has resume");
			return onrefresh = false;
		}

		return onrefresh = true;
	}

	public boolean isAutoplayPauseOnFocusChange(Mobile_HTML_Report sanityreport) {

		return false;
	}

	public boolean isAutoplayStoppedOnMenuClick() {
		return false;
	}

	public boolean verifyALLBetValues(Mobile_HTML_Report report) {

		return false;
	}

	public boolean verifyAllQuickBets(Mobile_HTML_Report report) {

		return false;
	}

	public boolean verifyCurrencyFormat(String currencyFormat) {
		// TODO Auto-generated method stub
		return false;
	}

	public void verifyPaytableCurrency(Mobile_HTML_Report currencyReport, String currencyName) {
		// TODO Auto-generated method stub

	}

	public boolean isBetChangedOnRefresh() {

		return true;
	}

	public boolean validateMiniPaytable(String bet, Mobile_HTML_Report sanityreport) {

		return false;
	}

	public void openBetPanel() {
	}

	public String setTheNextLowBet() {

		return null;
	}

	public void verifyMenuOptionNavigations(Mobile_HTML_Report report) {
	}

	public boolean verifyResponsibleGamingNavigation(Mobile_HTML_Report denmark) {
		return false;
	}

	public boolean verifyHelpNavigation(Mobile_HTML_Report denmark) {
		return false;
	}

	public void BackTogamefromnavigation(Mobile_HTML_Report report) {
	}

	public boolean verifysettingsOptions(Mobile_HTML_Report report) throws InterruptedException {
		return false;
	}

	public boolean verifypaytablenavigation(Mobile_HTML_Report report) {
		return false;
	}

	public boolean verifyhelpenavigation(Mobile_HTML_Report report) {
		return false;
	}

	public void paytablenavigationClose() {
	}

	public boolean verifyresponsiblegamingenavigation(Mobile_HTML_Report report) {
		return false;
	}

	public boolean verifyplaychecknavigation(Mobile_HTML_Report report) {
		boolean ret = false;
		return ret;
	}

	public boolean verifyloyaltynavigation(Mobile_HTML_Report report) {
		return false;
	}

	public boolean verifycashChecknavigation(Mobile_HTML_Report report) {
		return false;
	}

	public boolean verifylobbynavigation() {
		return false;
	}

	public boolean CheckNavigateGameToBanking(Mobile_HTML_Report report) {
		return false;

	}

	public String Verifystoryoptioninpaytable(Mobile_HTML_Report report, String languageCode) {
		return languageCode;
	}

	public boolean waitForbigwin() {
		return false;
	}

	public void miniPaytableScreeShots(Mobile_HTML_Report currencyReport, String currencyName) {

	}

	public String getMinimumBet() {

		return null;
	}

	public String getCurrentCredits() {
		return null;
	}

	public boolean freeSpinWinSummaryCurrencyFormat(String currencyFormat) {
		return false;
	}

	public boolean reSpinOverlayCurrencyFormat(String currencyFormat) {
		return false;
	}

	public void clickOnReSpinOverlay() {

	}

	public boolean loadGame(String url) {
		boolean isGameLaunch = false;
		try {
			Wait = new WebDriverWait(webdriver, 120);
			setChromiumWebViewContext();
			webdriver.navigate().to(url);
			System.out.println(url);
			if (Constant.STORMCRAFT_CONSOLE.equalsIgnoreCase(xpathMap.get("TypeOfGame"))
					|| (Constant.YES.equalsIgnoreCase(xpathMap.get("continueBtnOnGameLoad")))) {
				// log.debug("Waiting for clock to be visible");
				// Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("clock"))));
				isGameLaunch = true;
				log.debug(" clock is visible");

				webdriver.getContext();

				if ("Yes".equalsIgnoreCase(xpathMap.get("CntBtnNoXpath"))) {
					threadSleep(2000);
					elementWait("return " + xpathMap.get("CntBtnNoXpathSatus"), true);

					isGameLaunch = true;

				} else {

					Wait.until(ExpectedConditions.visibilityOfElementLocated(
							By.xpath(xpathMap.get("OneDesign_NewFeature_ClickToContinue"))));
					isGameLaunch = true;

				}

			} else {
				log.debug("Waiting for clock to be visible");
				Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("clock"))));
				isGameLaunch = true;
				log.debug(" clock is visible");
			}
			log.debug("game loaded ");
		} catch (WebDriverException e) {
			log.debug("Exception occur in loadgame()");
			log.error(e.getMessage());
		}
		log.info("Latest URL : " + url);
		return isGameLaunch;
	}

	public void verifySpinBtnState(Mobile_HTML_Report sanityreport) {

	}

	public void Payoutvarificationforallbet(Mobile_HTML_Report sanityreport) {
		// TODO Auto-generated method stub

	}

	/**
	 * * Date: 29/05/2018 Author: Premlata Mishra Description: This function is used
	 * to verify paytable payouts and it's values Parameter:
	 */
	public double verifyPaytable_Payouts(String xmlpayout, double payline, double bet, String scatter) {
		double verifypayout = 0.0, intPayout, verifypayoutnew = 0.0;
		try {
			// double gamepayout_Double=gamepayout(xpath);
			intPayout = Integer.parseInt(xmlpayout);// xmlpayout
			if (scatter.equalsIgnoreCase("yes")) {
				verifypayout = (bet * intPayout);
				verifypayoutnew = round(verifypayout);
				return verifypayoutnew;
			} else {
				verifypayout = (bet * intPayout) / payline;
				verifypayoutnew = round(verifypayout);
				return verifypayoutnew;
			}
		} catch (Exception e) {
			log.error("error in verifying payout", e);
		}
		return verifypayout;
	}

	public double round(double number) {
		DecimalFormat dnf = new DecimalFormat("#.##");
		double roundednumber = new Double(dnf.format(number));
		return roundednumber;
	}

	public boolean isPaytableAvailable() {
		// TODO Auto-generated method stub
		return false;
	}

	public boolean checkAvilability(String string) {
		// TODO Auto-generated method stub
		return false;
	}

	public boolean verifyBigWinCurrencyFormat(String currencyFormat, Mobile_HTML_Report currencyReport,
			String currencyName) {
		// TODO Auto-generated method stub
		return false;
	}

	public void setDefaultBet() {
		// TODO Auto-generated method stub

	}

	/*
	 * Function to decode the url. Input- String encoded url Output- String decoded
	 * url
	 * 
	 * @author:- Snehal Gaikwad
	 */
	public String decode(String url) {
		try {
			String prevURL = "";
			String decodeURL = url;
			while (!prevURL.equals(decodeURL)) {
				prevURL = decodeURL;
				decodeURL = URLDecoder.decode(decodeURL, "UTF-8");
			}
			log.info("Decoded Url=" + decodeURL);
			return decodeURL;
		} catch (UnsupportedEncodingException e) {
			return "Issue while decoding" + e.getMessage();
		}
	}

	public void validateMenuInBigWin(Mobile_HTML_Report report) {
		// declaring in super class
	}

	public void validatePaytableNavigationInBigWin(Mobile_HTML_Report report) {
		// declaring in super class

	}

	public void bigWinQuickSpinOnOffValidation(Mobile_HTML_Report report) {
		// declaring in super class

	}

	public void bigwinwithAutoplay(Mobile_HTML_Report report) {
		// declaring in super class

	}

	public void bigWinWithOrientationChange(Mobile_HTML_Report report) {
		// declaring in super class

	}

	public void bigWinWithSpin(Mobile_HTML_Report report) {
		// declaring in super class
	}

	public boolean elementWait(String element, boolean value) {
		// declaring in super class
		return false;
	}

	public Map<String, Long> getConsoleLongMap(String text) {
		Map<String, Long> map = null;
		JavascriptExecutor js = ((JavascriptExecutor) webdriver);
		map = (Map<String, Long>) js.executeScript(text);
		return map;
	}

	public List<Long> getConsoleLongList(String text) {
		List<Long> list = null;

		JavascriptExecutor js = ((JavascriptExecutor) webdriver);
		list = (List<Long>) js.executeScript(text);
		return list;
	}

	public void verifyJackPotBonuswithScreenShots(Mobile_HTML_Report report, String languageCode) {
		// declare in parent class

	}

	public void threadSleep(int time) {
		try {
			Thread.sleep(time);
		} catch (InterruptedException e) {
			log.debug("Exception while thread sleep", e);
			Thread.currentThread().interrupt();

		}
	}

	public String convertToMonthWeekssFormat(long seconds) {

		String convertedStr = null;
		long month = seconds / (4 * 7 * 24 * 3600);
		seconds = seconds % (4 * 7 * 24 * 3600);

		long week = seconds / (7 * 24 * 3600);
		seconds = seconds % (7 * 24 * 3600);

		long day = seconds / (24 * 3600);
		seconds = seconds % (24 * 3600);

		long hour = seconds / 3600;
		seconds %= 3600;

		long minutes = seconds / 60;
		convertedStr = new String(
				month + "m" + " " + week + "w" + " " + day + "d" + " " + hour + "h" + " " + minutes + "m");

		return convertedStr;

	}

	public void setMaxBetPanel() {
		// TODO Auto-generated method stub

	}

	public void funvFullScreenOff() {
		// TODO Auto-generated method stub

	}

	public ArrayList<String> getConsoleList(String string) {
		// TODO Auto-generated method stub
		return null;
	}

	public String getBetAmtString() {
		return null;
	}

	public boolean quickSpinOff() {
		return false;
	}

	public boolean quickSpinclickWith() {
		return false;

	}

	public boolean quickSpinOn() {
		return false;
	}

	public boolean openTotalBetBoolean() {
		return false;
	}

	public boolean verifypaytable() {
		return false;
	}

	public void waitFor(String string) {
		// declaration in parent class
	}

	public boolean drawCollectBaseGame(Mobile_HTML_Report report, String languageCode) throws InterruptedException {
		// declaration in parent class
		return false;
	}

	public void doubleToCollect(Mobile_HTML_Report sanityReport) throws Exception {
		// declaration in parent class
	}

	public boolean verifyPaytablePresent() {
		return false;
	}

	public double getBetAmtDouble() {
		return 0;
	}

	public boolean dealClick() throws InterruptedException {
		return false;
	}

	public boolean drawClick() throws InterruptedException {
		return false;
	}

	public void doubleToGambleReached(Mobile_HTML_Report languageReport, String languageCode)
			throws InterruptedException {
		// declaration in parent class
	}

	public void paytableClickVideoPoker(Mobile_HTML_Report languageReport, String languageCode)
			throws InterruptedException {
		// declaration in parent class

	}

	public void clickWithWebElement1(WebElement webViewElement, int Xcoordinate_AddValue) {
		String s = null;
		try {
			double urlHeight = 0.0;
			String currentcontext = webdriver.getContext();
			JavascriptExecutor javaScriptExe = (JavascriptExecutor) webdriver;
			int webViewWidth = ((Long) javaScriptExe
					.executeScript("return window.innerWidth || document.body.clientWidth")).intValue();
			int webViewHeight = ((Long) javaScriptExe
					.executeScript("return window.innerHeight || document.body.clientHeight")).intValue();
			Dimension elementSize = webViewElement.getSize();
			int webViewElementCoX = webViewElement.getLocation().getX() + (elementSize.width / 2);
			int webViewElementCoY = webViewElement.getLocation().getY() + (elementSize.height / 2);

			webdriver.context("NATIVE_APP");
			double screenWidth = webdriver.manage().window().getSize().getWidth();
			double screenHeight = webdriver.manage().window().getSize().getHeight();

			urlHeight = screenHeight - webViewHeight;
			double relativeScreenViewHeight = screenHeight - urlHeight;
			double nativeViewEleX = (double) (((double) webViewElementCoX / (double) webViewWidth) * screenWidth);
			double nativeViewEleY = (double) (((double) webViewElementCoY / (double) webViewHeight)
					* relativeScreenViewHeight);
			tapOnCoordinates(nativeViewEleX + Xcoordinate_AddValue, (nativeViewEleY + urlHeight + 1));
			webdriver.context(currentcontext);
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	public void setSoundFalgActive(boolean b) {

	}

	public void setQuickSpinOn() {

	}

	public void startAutoPlay() {

	}

	public void clickFregamesPlay() {

	}

	/**
	 * This method crate freegames using free game api and assign to user
	 * 
	 * @param userName
	 * @param defaultNumberOfGames
	 * @param offerExpirationUtcDate
	 * @param balanceTypeId
	 * @param mid
	 * @param cid
	 * @param noOffers               optional parameter
	 */

	public boolean addFreeGameToUserInBluemesa(String userName, int defaultNumberOfGames, String offerExpirationUtcDate,
			String balanceTypeId, int mid, int cid, @Optional("1") int noOfOffers) {
		RestAPILibrary apiobj = new RestAPILibrary();
		CommonUtil util = new CommonUtil();
		boolean isFreeGameAssigned = false;
		FreeGameOfferResponse freeGameOfferRes = apiobj.addFreeGameOffer(defaultNumberOfGames,
				util.randomFreegameOfferName(), offerExpirationUtcDate, balanceTypeId, mid, cid);
		if (freeGameOfferRes != null) {
			// assign multiple offer
			for (int OfferCnt = 1; OfferCnt <= noOfOffers; OfferCnt++) {
				isFreeGameAssigned = apiobj.assignFreeGameOfferByOfferID(userName, freeGameOfferRes.getOfferId(),
						freeGameOfferRes.getOfferAvailableFromUtcDate());
			}
		}
		return isFreeGameAssigned;
	}

	/**
	 * This method create and assign free game offer to user in axiom
	 * 
	 * @param userName
	 * @param defaultNumberOfGames
	 * @param offerExpirationUtcDate
	 * @param balanceTypeId
	 * @param mid
	 * @param cid
	 * @param noOfOffers             optional parameter
	 */

	public boolean addFreeGameToUserInAxiom(String userName, int defaultNoOfFreeGames, String offerExpirationUtcDate,
			String balanceTypeID, int mid, int cid, @Optional("1") int noOfOffers) {
		RestAPILibrary apiobj = new RestAPILibrary();
		CommonUtil util = new CommonUtil();
		boolean isFreeGameAssigned = false;
		for (int OfferCnt = 1; OfferCnt <= noOfOffers; OfferCnt++) {
			isFreeGameAssigned = apiobj.createFreeGameInAxiom(userName, util.randomFreegameOfferName(),
					defaultNoOfFreeGames, offerExpirationUtcDate, balanceTypeID, mid, cid);
		}
		return isFreeGameAssigned;
	}

	/**
	 * Below code unlock the bonus by clicking on bonus selction iteam depending on
	 * the NoOfBonusSelection count
	 */
	public void unlockBonus(Mobile_HTML_Report language) {
		// decleration in parent class

	}

	public String replaceParamInHook(String selectBonus, Map<String, String> paramMap) {
		return null;
	}

	public boolean elementWait(String string, boolean b, int i) {
		return false;
	}

	public boolean isCreditDeducted(String currentCreditAmount, String currentBet) {
		return false;
	}

	public boolean isPlayerWon() {
		return false;
	}

	public boolean isWinAddedToCredit(String currentCreditAmount, String currentBet) {
		return false;
	}

	public void validateCreditForWinLoss(String currentBet, Mobile_HTML_Report language, String languageCode) {

	}

	public boolean waitForWinDisplay() {
		return false;
	}

	public void paytableOpenScroll(Mobile_HTML_Report report, String language) throws Exception {

	}

	public void waitFreeSpinEntry(Mobile_HTML_Report language, String languageDescription, String languageCode) {

	}

	public void func_FullScreen(Mobile_HTML_Report language) {

	}

	public void freeSpinWithAddressBar(Mobile_HTML_Report language, String languageDescription, String languageCode) {

	}

	/**
	 * To verify bonus game win currency format
	 * 
	 * @param currencyFormat
	 * @return
	 */
	public boolean bonusWinCurrFormat(String currencyFormat) {
		// TODO Auto-generated method stub
		return false;
	}

	/**
	 * To click on the continue button after bonus game completion
	 * 
	 * @return
	 */
	public String clickContinueInBonusGame() {
		String FreeSpin = "";
		return FreeSpin;
		// TODO Auto-generated method stub

	}

	/**
	 * To select the bonus books in bonus game(hotInk)
	 */
	public boolean bonusSelection(String currencyFormat, int iteamCnt) {
		// TODO Auto-generated method stub
		return false;

	}

	/**
	 * To validate currency amount with the currency format in excel sheet
	 */
	public boolean currencyFormatValidator(String curencyAmount, String currencyFormat) {
		return false;
	}

	/**
	 * To verify piggybank bonus in bust the bank
	 * 
	 * @return
	 */
	public boolean piggyBankBonus(String currencyFormat) {
		// TODO Auto-generated method stub
		return false;
	}

	public String getOsPlatform() {
		return osPlatform;
	}

	public void setOsPlatform(String osPlatform) {
		this.osPlatform = osPlatform;
	}

	/**
	 * @return the osVersion
	 */
	public double getOsVersion() {
		double dOsVersion = 0;
		if (osVersion != null && !osVersion.equals("")) {
			if (osVersion.indexOf('.', osVersion.indexOf('.') + 1) != -1) {
				osVersion = osVersion.substring(0, osVersion.indexOf('.'));
				log.debug("osVersion" + osVersion);
			}
			dOsVersion = Double.parseDouble(osVersion);
		}
		return dOsVersion;
	}

	/**
	 * @param osVersion the osVersion to set
	 */
	public void setOsVersion(String osVersion) {

		this.osVersion = osVersion;

	}

	/**
	 * This method returns boolean value based on fullscreen overlay visibility
	 * 
	 * @return
	 */

	public boolean isFullScreenOverlayVisible() {
		boolean isVisible = false;
		WebDriverWait expWait = new WebDriverWait(webdriver, 5);

		int size = webdriver.findElements(By.xpath(xpathMap.get("fullScreenOverlay"))).size();

		if (size != 0) {
			isVisible = true;
		}

		return isVisible;
	}

	// verify Session Reminder
	public boolean verifySessionReminderPresent(Mobile_HTML_Report report) {
		return false;
	}

	/**
	 * This method is used To click on continue button in session reminder
	 */
	public void selectContinueSession() {
		// TODO Auto-generated method stub

	}

	/**
	 * This method is used to check whether Topbar is present or not
	 * 
	 * @return
	 */
	public boolean isTopBarVisible() {

		boolean isTopBarPresentinGame = false;
		try {
			isTopBarPresentinGame = webdriver.findElement(By.xpath(xpathMap.get("isTopbarPresent"))).isDisplayed();
			// System.out.println(isTopBarPresentinGame);
			if (isTopBarPresentinGame) {
				log.debug("Topbar is visible");
				System.out.println("Topbar is visible");
				return isTopBarPresentinGame;
			}
		} catch (Exception e) {
			log.error("Not able to verify Topbar", e);
		}

		return isTopBarPresentinGame;
	}

	/**
	 * This method is used to click on the Autoplay win/loss limit dialog box
	 */
	public void clickOnPrimaryBtn() {

	}

	/**
	 * Below methods are for Pokerstar GTR Teast cases
	 */

	public boolean openAutoplay() {
		return false;
	}

	/**
	 * getWinLimitValues returns the list of Loss Limit Values
	 * 
	 * @return
	 */

	public List<WebElement> getLossLimitValues() {
		List<WebElement> winLimitList = null;
		try {
			Select selection = new Select(webdriver.findElement(By.xpath((xpathMap.get("lossLimit")))));
			winLimitList = selection.getOptions();
		} catch (Exception e) {
			log.error(e.getMessage(), e);
		}
		return winLimitList;
	}

	public boolean checkLossLimitReachedForBet(String lossLimit, int counter) {
		return false;
	}

	public boolean checkWinLimitReachedForBet(String winLimit, int counter) {
		return false;
	}
	/*
	 * get Win limit values using hooks Used for screch games
	 */

	/**
	 * getWinLimitValues returns the list of Win Limit Values
	 * 
	 * @return
	 */

	public List<WebElement> getWinLimitValues() {
		List<WebElement> winLimitList = null;
		try {
			WebElement webElement = webdriver.findElement(By.xpath((xpathMap.get("winLimit"))));
			Select selection = new Select(webElement);
			winLimitList = selection.getOptions();

		} catch (Exception e) {
			log.error(e.getMessage(), e);
		}
		return winLimitList;
	}

	/*
	 * To verify Safe bonus bonus in bust the bank
	 * 
	 * @return
	 */
	public boolean verifySafeBonusCurrency(String currencyFormat) {
		// TODO Auto-generated method stub
		return false;
	}

	/**
	 * Verify the Italy Game paly Feature / Verify that game has scroll bar feature
	 */

	public void italyScrollBarCickAmount(Mobile_HTML_Report italy, String amount) {
		try {

			WebElement slider = webdriver.findElement(By.id(xpathMap.get("userInput")));// select scroll bar
			System.out.println("Verify that game has Game play feature");
			log.debug("Verify that  game has Game play feature ");
			italy.detailsAppend(" Verify that  game has Game play feature ", " Game play feature selected",
					" Game play feature selected", "PASS");
			Thread.sleep(2000);

			JavascriptExecutor js = (JavascriptExecutor) webdriver;
			js.executeScript(
					"javascript:document.getElementById(\"" + xpathMap.get("userInput") + "\").value=" + amount + ";");// (Value
																														// took
																														// from
																														// Excel)
			Thread.sleep(2000);
			System.out.println("Slider value1 for credits is : " + slider.getAttribute("value"));// value is not updated
																									// in the game 90 on
																									// the gaming screen
			log.debug("Slider value1 for credits is : " + slider.getAttribute("value"));

			if (osPlatform.equalsIgnoreCase("Android")) {
				slider.sendKeys(Keys.RIGHT);
			} else {
				slider.sendKeys(Keys.TAB);
				// slider.click();

			}

			Thread.sleep(2000);

			System.out.println("Slider value2 for credits is : " + slider.getAttribute("value"));// value updated in the
																									// game 90.01
			log.debug("Slider value2 for credits is : " + slider.getAttribute("value"));
			selectedamout = slider.getAttribute("value");

			italy.detailsAppend(" Game Play  scroll Bar  ", " Amount Slided ", " Amount Slided", "PASS");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("Italy_Submit"))).click();
			System.out.println("Clicked on Submit");
			log.debug("Clicked on Submit");
			italy.detailsAppend(" Submit Button ", " Clicked on Submit Button ", "Clicked on Submit Button ", "PASS");
			Thread.sleep(2000);

			// webdriver.findElement(By.xpath(xpathMap.get("Italy_Play"))).click();
			MobileElement italyplay = (MobileElement) webdriver.findElement(By.xpath(xpathMap.get("Italy_Play")));
			webdriver.executeScript("arguments[0].click();", italyplay);
			italy.detailsAppend("  Play Button ", " Clicked on play Button ", " Clicked on play Button ", "PASS");
			System.out.println("Clicked on Play");
			log.debug("Clicked on Play");
			Thread.sleep(2000);

			/*
			 * webdriver.findElement(By.xpath(xpathMap.get("Italy_Continue"))).click();
			 * italy.detailsAppend(" Verify that  game is clicked on Continue Button ",
			 * " clicked on Continue Button"," clicked on Continue Button ", "Pass" );
			 * System.out.println("Clicked on Continue Button ");
			 */

		} catch (Exception e) {
			log.error(e.getMessage(), e);
			e.printStackTrace();
		}
		System.out.println("selected amount is " + selectedamout);
		log.debug("selected amount is " + selectedamout);
	}

	/**
	 * method is used to check if it is displayed or not
	 * 
	 * @param locator
	 * @return
	 */
	public boolean isDisplayed(String locator) {
		boolean islocatorVisible = false;
		try {
			islocatorVisible = webdriver.findElement(By.xpath(xpathMap.get(locator))).isDisplayed();
			if (islocatorVisible) {
				log.debug("Topbar is visible");
				islocatorVisible = true;
			}
		} catch (Exception e) {
			log.error("Not able to verify Topbar", e);
		}
		return islocatorVisible;
	}

	/**
	 * This method is used to check whether Topbar is present or not
	 * 
	 * @return
	 */
	public boolean topBarVisibilitycheck() {
		boolean ret = false;
		String TopBar = "TopBar";
		try {
			isDisplayed(TopBar);
			ret = true;
		} catch (Exception e) {
			log.error("Not able to verify Topbar", e);
		}
		return ret;
	}

	/**
	 * method is for to check if it is Displayed or not and to get the Text
	 */
	public String isDisplayedAndGetText(String locator) {
		String getText = null;
		try {
			boolean isloactorVisible = webdriver.findElement(By.xpath(xpathMap.get(locator))).isDisplayed();
			if (isloactorVisible) {
				getText = webdriver.findElement(By.xpath(xpathMap.get(locator))).getText();
				log.debug("Text  is " + getText);
				// System.out.println(getText);
			} else {
				log.debug("Locator from Menu is not Visible");
			}
		} catch (Exception e) {
			log.error(e.getMessage(), e);
		}
		return getText;
	}

	/**
	 * Compare Game Name from Top Bar
	 */

	public String gameNameFromTopBar(Mobile_HTML_Report report) {
		String GameName = "GameName_From _TopBar";
		String gameNamefromExcel = xpathMap.get("GameName");
		String gamenametext = isDisplayedAndGetText(GameName);
		try {
			if (gamenametext.equals(gameNamefromExcel)) // Expected VS Actual Name .
			{
				log.debug("Game name is same");
			} else {
				log.debug("Game name is different");
			}
		} catch (Exception e) {
			log.error("Not able to verify Game name", e);
		}
		return GameName;

	}

	/**
	 * verify clock on topbar
	 * 
	 * @return
	 */
	public String clockFromTopBar() {
		String clock = null;
		try {
			boolean isClockPresent = webdriver.findElement(By.id(xpathMap.get("clock_ID"))).isDisplayed();
			if (isClockPresent) {
				log.debug("clock is visible");
				clock = webdriver.findElement(By.id(xpathMap.get("clock_ID"))).getText();
				log.debug("Time is :" + clock);
			} else {
				log.debug("closck on thetop bar is not visible");
			}
		} catch (Exception e) {
			log.error("Not able to verify clock", e);
		}
		return clock;
	}

	/*
	 * Verify and get currency values
	 */
	public String italygetCurrentCredits() {
		String balance = null;
		String consoleBalance = null;

		if (!GameName.contains("Scratch")) {
			if (Constant.STORMCRAFT_CONSOLE.equalsIgnoreCase(xpathMap.get("TypeOfGame")))// force console
			{
				balance = "return " + xpathMap.get("Balancetext");
			} else
				balance = "return " + xpathMap.get("Balancetext");
		} else {
			balance = "return " + xpathMap.get("InfoBarBalanceTxt");

		}
		consoleBalance = GetConsoleText(balance);
		System.out.println("Console Balanace is " + consoleBalance);

		String consolebalance = consoleBalance.replace("CREDITS: � ", " ").replace(",", ".");

		System.out.println("Console Balanace is" + consolebalance);
		return consolebalance;

	}

	/**
	 * This method is to check whether the Credit amount is same selected one or not
	 */

	public String italyCreditAmountComparission() {

		String gameconsolecredit = "";

		try {

			String creditamount = italygetCurrentCredits(); // get Console credit from italygetCurrentCredits method
			creditamount = creditamount.replace(" ", "");// replace space with null(from italygetCurrentCredits method)

			double dblSelectAmount = Double.parseDouble(selectedamout);
			double dblCreditAmount = Double.parseDouble(creditamount);

			// we get selected amount from click amount method
			if (dblCreditAmount == dblSelectAmount) // Expected VS Actual Name .
			{
				log.debug("Take away screen game credit is selected as" + selectedamout);
				log.debug("Credit Amounts are Same ");
			} else {
				log.debug("Take away screen game credit is selected as " + selectedamout);
				log.debug("Credit Amounts are different  ");
			}
		} catch (Exception e) {
			log.error("Not able to verify Game name", e);
		}
		return gameconsolecredit;

	}

	/**
	 * This method checks whether quickspin available or not in Italy Market
	 * 
	 * @return
	 */

	public boolean italy_IsQuickspinAvailable() {
		// TODO Auto-generated method stub
		return false;
	}

	/**
	 * This method checks whether quickspin available or not in Italy Market
	 * 
	 * @return
	 */

	public boolean italy_isStopButtonAvailable() {
		// TODO Auto-generated method stub
		return false;
	}

	/**
	 * To verify Responsible gaming is present on topbat in uk market
	 * 
	 * @return
	 */
	public boolean verifyResponsibleGamingOnTopbar() {
		boolean isResponsibleGamingAvailable = false;

		try {
			List<WebElement> elementList = webdriver.findElements(By.id(xpathMap.get("clickOnMenuOnTopbar"))); // Search
																												// on
																												// the
																												// page.
			if (elementList.size() > 0) {
				// webdriver.findElement(By.id(xpathMap.get("clickOnMenuOnTopbar"))).click(); //
				// If size is > Zero then it will click on session continue button

				nativeClickByID(xpathMap.get("clickOnMenuOnTopbar"));
				System.out.println("Element found for Responsible Gaming on the Top Bar ");
				log.debug("Element found for Responsible Gaming on the Top Bar  ");

			} else {
				System.out.print(" Element not found for Responsible Gaming on the Top Bar ");
				log.debug(" Element not found for Responsible Gaming on the Top Bar ");
			}

			String isResponsibleGaming = webdriver.findElement(By.xpath(xpathMap.get("isResponsibleGamingAvailable")))
					.getText();
			// System.out.println(isResponsibleGamingAvailable);
			if (isResponsibleGaming.equals("Responsible Gaming")) {
				log.debug("Responsible Gaming name is Same");
				System.out.println("Responsible Gaming name is Same");
				isResponsibleGamingAvailable = true;
			} else {
				log.error("Responsible Gaming name is not  Same");
				System.out.println("Responsible Gaming name is not  Same");
				isResponsibleGamingAvailable = false;
			}
		} catch (Exception e) {
			log.error("Not able to verify Responsible Gaming Availability", e);
		}
		return isResponsibleGamingAvailable;
	}

	/**
	 * To verify Help is present on topbar in uk market or not
	 * 
	 * @return
	 * @throws InterruptedException
	 */
	public boolean verifyHelpOnTopbar() throws InterruptedException {
		boolean isHelpAvailable = false;
		try {

			List<WebElement> elementList = webdriver.findElements(By.id(xpathMap.get("clickOnMenuOnTopbar"))); // Search
																												// on
																												// the
																												// page.

			if (elementList.size() > 0) {
				// webdriver.findElement(By.id(xpathMap.get("clickOnMenuOnTopbar"))).click(); //
				// If size is > Zero then it will click on session continue button

				nativeClickByID(xpathMap.get("clickOnMenuOnTopbar")); // Nativate to click on
				System.out.println("Element found for Help on the Top Bar  ");
				log.debug("Element found for Help on the Top Bar ");

				// IOSElement btn = (IOSElement)new WebDriverWait(webdriver ,
				// 30).until(ExpectedConditions.elementToBeClickable(MobileBy.id("clickOnMenuOnTopbar")));
				// btn.click();

			} else {
				log.debug(" Element not found   for Help on the Top Bar ");
				System.out.print(" Element not found for Help on the Top Bar ");
			}

			String isHelp = webdriver.findElement(By.xpath(xpathMap.get("isHelpAvailable"))).getText();
			System.out.println(isHelp);

			if (isHelp.equals("Help")) {
				log.debug("Help  name is Same");
				System.out.println("Helpname is Same");
				isHelpAvailable = true;
			} else {
				log.error("Help is not available");
				System.out.println("Help is not available");
				isHelpAvailable = false;
			}
		} catch (Exception e) {
			log.error("Not able to verify Help Availability", e);
		}
		return isHelpAvailable;
	}

	public boolean fillStartSessionLossForm(String LossLimit, Mobile_HTML_Report report, String languageCode) {
		Wait = new WebDriverWait(webdriver, 90);
		boolean ret = false;
		try {
			// Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("spain_TimeLimit"))));

			List<WebElement> elementList = webdriver.findElements(By.xpath(xpathMap.get("spain_TimeLimit")));

			if (elementList.size() > 0) {

				WebElement timelimit = webdriver.findElement(By.xpath(xpathMap.get("spain_TimeLimit")));
				timelimit.click();
				report.detailsAppendFolder(" Spain Limit ", "Spain Limit is Present ", "Spain Limit is Present ",
						"PASS", languageCode);
				Select dropdown1 = new Select(timelimit);
				dropdown1.selectByIndex(2);
				Thread.sleep(2000);
				report.detailsAppendFolder(" Spain Limit ", "Spain Limit is Selected ", "Spain Limit is Selected ",
						"PASS", languageCode);
				System.out.println("Time Limit Selected ");
				log.debug("Time Limit Selected ");
			} else {
				System.out.println("Time Limit not  Selected ");
				log.debug("Time Limit not  Selected ");
				report.detailsAppendFolder(" Spain Limit ", "Spain Limit is Selected ", "Spain Limit is Selected ",
						"FAIL", languageCode);
			}

			WebElement reminderpreiod = webdriver.findElement(By.xpath(xpathMap.get("spain_ReminderPeriod")));
			reminderpreiod.click();
			report.detailsAppendFolder("Spain Reminder Period ", "Spain Reminder Period is Present ",
					"Spain Reminder Period is Present ", "PASS", languageCode);
			Select dropdown1 = new Select(reminderpreiod);
			dropdown1.selectByIndex(1);
			Thread.sleep(2000);
			report.detailsAppendFolder(" Spain Reminder Period ", "Spain Limit is Selected ",
					"Spain Limit is Selected ", "PASS", languageCode);
			System.out.println("Reminder Period selected d");

			WebElement lossvalue = webdriver.findElement(By.xpath(xpathMap.get("spain_LossLimit")));
			lossvalue.sendKeys(LossLimit);
			report.detailsAppendFolder(" Spain LossLimit ", "Spain LossLimit is Selected ",
					"Spain LossLimit is Selected ", "PASS", languageCode);
			Thread.sleep(2000);
			System.out.println("Loss Limit is  " + LossLimit);
			Thread.sleep(2000);

			WebElement takeaway = webdriver.findElement(By.xpath(xpathMap.get("takwAway")));

			if (osPlatform.equalsIgnoreCase("Android")) {
				takeaway.click(); // just Click for IOS

			}
			JavascriptExecutor js = (JavascriptExecutor) webdriver;
			js.executeScript("arguments[0].scrollIntoView();", takeaway); // scroll the window
			takeaway.click(); // just Click for Andriod

			report.detailsAppendFolder(" Spain Reminder Period ", " Spain Reminder Period is Present ",
					"Spain Reminder Period is Present ", "PASS", languageCode);
			Select dropdown3 = new Select(takeaway);
			dropdown3.selectByIndex(1);
			report.detailsAppendFolder("Spain  Reminder Period ", "Spain Reminder Period is Selected ",
					"Spain Reminder Period is Selected ", "PASS", languageCode);
			Thread.sleep(1000);
			// reportSpain.detailsAppendFolder("Verify Loss Limit ", "Loss Limit is Present
			// ", "Loss Limit is Present ", "PASS",languageCode);
			System.out.println(" Clicked  Take a break from slot");

			webdriver.findElement(By.xpath(xpathMap.get("spain_SetLimits"))).click();
			Thread.sleep(1000);
			System.out.println("Set Limits Clicked  successfully");
			report.detailsAppendFolder("Spain Set limit  ", "Spain Set Limit is clicked ", "Spain Set Limit is clicked",
					"PASS", languageCode);

			// funcFullScreen();
			ret = true;

		} catch (Exception e) {
			e.printStackTrace();
		}
		return ret;
	}

	/**
	 * This method checks whether quickspin available or not
	 * 
	 * @return
	 */
	public boolean isQuickspinAvailable() {
		return false;
	}

	public boolean waitUntilSessionReminder(String languageCode) {
		Wait = new WebDriverWait(webdriver, 300);

		boolean header = false;
		try {
			log.debug("Waiting for SessionReminder Continue overlay");

			Wait.until(ExpectedConditions
					.visibilityOfElementLocated(By.xpath(xpathMap.get("spain_SessionReminderContinue"))));
			System.out.println("Slot Game Limit Reminder is Present ");
			log.debug("Slot Game Limit Reminder is Present ");
			Thread.sleep(1000);
			header = true;
		} catch (Exception e) {

			e.printStackTrace();
		}
		return header;
	}

	public boolean waitUntilSessionLoss(String lossLimit) {
		return false;
	}

	public void closeSessionLossPopup(Mobile_HTML_Report reportSpain, String languageCode) {
		try {

			Thread.sleep(2000);

			WebElement close = webdriver.findElement(By.xpath(xpathMap.get("spain_CloseBtn")));
			close.click();
			Thread.sleep(2000);

			System.out.println("Cliked on close");
			log.debug(" Cliked on close");
			// reportSpain.detailsAppendFolder("To check if Loss Limit Summary overlay
			// appear", "Loss Limit Summary overlay should appear", "Loss Limit summary
			// overlay appears", "Pass",languageCode);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * This method checks whether stop available or not in Italy Market
	 * 
	 * @return
	 */
	public boolean isStopButtonAvailablity() {
		return false;
	}

	/*
	 * public void spainStartNewSession(Mobile_HTML_Report reportSpain,String
	 * languageCode) { try { boolean test =
	 * webdriver.findElements(By.xpath(xpathMap.get("spain_StartNewSession"))).size(
	 * ) > 0;
	 * 
	 * if (test) { //reportSpain.
	 * detailsAppendFolder("Verify that Start New Sessiosn Overlay appears before the game loads "
	 * ,"Start New Sessiosn Overlay should appear before the game loads"
	 * ,"Start New Sessiosn Overlay is appearing before the game loads",
	 * "Pass",languageCode); funcClick(xpathMap.get("spain_StartNewSession"));
	 * Thread.sleep(2000);
	 * 
	 * } else { System.out.println("Slot Game limit overlay appears"); } } catch
	 * (Exception e) { e.getMessage(); } }
	 */
	public boolean spainStartNewSession(Mobile_HTML_Report reportSpain, String languageCode) {
		boolean strtnewsession = false;
		try {

			// If the session reminder present It will click on continue
			List<WebElement> strtsession = webdriver.findElements(By.xpath(xpathMap.get("spain_StartNewSession")));

			// boolean ele =
			// Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("SessionContinue")))).isDisplayed();
			if (strtsession.size() > 0) {
				webdriver.findElement(By.xpath(xpathMap.get("spain_StartNewSession"))).click(); // If size is > Zero
																								// then it will click on
																								// session continue
																								// button
				log.debug("Start New seesion clicked ");
				System.out.print("Start New seesion clicked ");
				reportSpain.detailsAppendFolder("Verify Start new session present on the screen  ",
						"Start new session is present", "Start new session is present ", "PASS", languageCode);
				strtnewsession = true;
			}

			else {
				log.debug("Start New seesion is not present and unable to click ");
				System.out.print("Start New seesion is not present and unable to click ");
				reportSpain.detailsAppendFolder("Verify Start new session present on the screen  ",
						"Start new session is not present", "Start new session is not present ", "FAIL", languageCode);
			}
		}

		catch (Exception e) {
			log.error("Not able to verify session reminder status", e);
			System.out.print("Session reminder not found");
			strtnewsession = false;
		}
		return strtnewsession;
	}

	public boolean spain_checkStartNewSession(Mobile_HTML_Report reportSpain, String languageCode) {
		boolean strtnewsession = false;
		try {

			// If the session reminder present It will click on continue
			List<WebElement> strtsession = webdriver.findElements(By.xpath(xpathMap.get("spain_StartNewSession")));

			// boolean ele =
			// Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("SessionContinue")))).isDisplayed();
			if (strtsession.size() > 0) {
				System.out.print("Start New seesion is present ");
				strtnewsession = true;
			}

			else {
				log.debug("Start New seesion is not  present ");
				System.out.print("Start New seesion is not  present ");
				strtnewsession = false;
			}
		}

		catch (Exception e) {
			log.error("Not able to verify session reminder status", e);
			System.out.print("Session reminder not found");
			strtnewsession = false;
		}
		return strtnewsession;
	}

	/**
	 * To open Help
	 */
	public boolean openHelpFromTopbar(Mobile_HTML_Report report) {
		return false;
	}

	/**
	 * To open PlayerProtection from Topbar
	 */
	public boolean openPlayerProtectionFromTopbar(Mobile_HTML_Report report) {
		return false;
	}

	/**
	 * To verify Player Protection is present on topbat in uk market
	 * 
	 * @return
	 * @throws InterruptedException
	 */
	public boolean Verify_PlayerProtection(Mobile_HTML_Report report) throws InterruptedException {
		MobileElement element = (MobileElement) webdriver.findElement(By.xpath(xpathMap.get("clickOnMenuOnTopbar")));
		webdriver.executeScript("arguments[0].click();", element);
		report.detailsAppend("  Menu  ", "Menu Clicked ", "Menu Clicked", "PASS");
		// System.out.println("PlayerProtection is same");
		boolean playerprotection = false;

		try {
			String plyrprotection = webdriver.findElement(By.xpath(xpathMap.get("Denmark_PlayerProtection"))).getText();
			System.out.println(plyrprotection);
			if (plyrprotection.equals("Player Protection") || plyrprotection.equals("Spillerbeskyttelse")) {
				log.debug("PlayerProtection  is same");
				System.out.println("PlayerProtection  is same");
				playerprotection = true;
			} else {
				log.error("PlayerProtection is not  same");
				System.out.println("PlayerProtection is not  same");
				playerprotection = false;
			}
		} catch (Exception e) {
			report.detailsAppend(" Verify Menu  ", "Menu isn't Clicked ", "Menu  isn't Clicked", "FAIL");
			log.error("Not able to verify Player Protection Availability", e);
		}
		return playerprotection;

	}

	/**
	 * To verify Help from Menu
	 * 
	 * @return
	 * @throws InterruptedException
	 */
	public boolean Verify_Help(Mobile_HTML_Report report) throws InterruptedException {
		MobileElement element = (MobileElement) webdriver.findElement(By.xpath(xpathMap.get("clickOnMenuOnTopbar")));
		webdriver.executeScript("arguments[0].click();", element);
		report.detailsAppend("  Menu  ", "Menu Clicked ", "Menu Clicked", "PASS");
		boolean isHelpAvailable = false;
		try {
			String isHelp = webdriver.findElement(By.xpath(xpathMap.get("Italy_Help"))).getText();
			System.out.println(isHelp);

			if (isHelp.equals("Help")) {
				log.debug("Help  name is Same");
				System.out.println("Helpname is Same");
				isHelpAvailable = true;
			} else {
				log.error("Help is not available");
				System.out.println("Help is not available");
				isHelpAvailable = false;
			}
		} catch (Exception e) {
			log.error("Not able to verify Help Availability", e);
		}
		return isHelpAvailable;
	}

	/**
	 * To verify Responsiblegaming from Menu
	 * 
	 * @return
	 * @throws InterruptedException
	 */
	public boolean Verify_Responsiblegaming(Mobile_HTML_Report report) throws InterruptedException {
		MobileElement element = (MobileElement) webdriver.findElement(By.xpath(xpathMap.get("clickOnMenuOnTopbar")));
		webdriver.executeScript("arguments[0].click();", element);
		report.detailsAppend("  Menu  ", "Menu Clicked ", "Menu Clicked", "PASS");
		boolean isResponsiblegaming = false;
		try {
			String responsibleGaming = webdriver.findElement(By.xpath(xpathMap.get("Italy_ResponsibleGaming")))
					.getText();
			System.out.println(responsibleGaming);

			if (responsibleGaming.equals("Responsible Gaming")) {
				log.debug("Responsiblegaming  name is Same");
				System.out.println("Responsiblegaming is Same");
				isResponsiblegaming = true;
			} else {
				log.error("Responsiblegaming is not available");
				System.out.println("Responsiblegaming is not available");
				isResponsiblegaming = false;
			}
		} catch (Exception e) {
			log.error("Not able to verify Responsiblegaming Availability", e);
		}
		return isResponsiblegaming;
	}

	// reelspin duration
	public long reelSpinDuration() {
		return 0;

	}

	public boolean openResponsiblegamingFromTopbar(Mobile_HTML_Report report) {
		// TODO Auto-generated method stub
		return false;
	}

	public boolean currency_check(Mobile_HTML_Report report) {
		// TODO Auto-generated method stub
		return false;
	}

	/*
	 * Continue Button
	 */
	public void Continue() {
		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("ClickonContinue"))));
		webdriver.findElement(By.id(xpathMap.get("ClickonContinue"))).click();
		log.debug("Clicked on Continue Button ");
		System.out.println("Clicked on Continue Button ");

	}

	/**
	 * This method is used to check whether session reminder is present or not
	 * 
	 * @return
	 */
	public boolean verifySessionReminderPresentDenmark(Mobile_HTML_Report report) {
		// TODO Auto-generated method stub
		return false;
	}

	public boolean verifyTopBarVisible() {
		// TODO Auto-generated method stub
		return false;
	}

	// game name on top bar
	public String gameNameOnTopBarForDenmark(Mobile_HTML_Report report) {
		String getGameName = null;
		try {
			boolean isGameNamePresent = webdriver.findElement(By.xpath(xpathMap.get("Denmark_GameName"))).isDisplayed();
			// System.out.println(isGameNamePresent);
			if (isGameNamePresent) {
				log.debug("Gamename is visible");
				System.out.println("Gamename is visible");

				getGameName = webdriver.findElement(By.xpath(xpathMap.get("Denmark_GameName"))).getText();

				System.out.println(getGameName);
				log.debug(getGameName);
				if (getGameName.equals("Reel Thunder")) {
					System.out.println("Game name is same");
				} else {
					System.out.println("Game name is different");
				}

			} else {
				System.out.println("Game name is not visible on top bar");
			}
		} catch (Exception e) {
			log.error("Not able to verify Game name", e);
		}
		return getGameName;

	}

	public String clockOnTheTopBar() {
		String clock = null;

		try {
			boolean isClockPresent = webdriver.findElement(By.xpath(xpathMap.get("Denmark_ClockonTheTopBar")))
					.isDisplayed();
			// System.out.println(isClockPresent);
			if (isClockPresent) {
				log.debug("clock is visible");
				System.out.println("clock is visible");
				clock = webdriver.findElement(By.xpath(xpathMap.get("Denmark_ClockonTheTopBar"))).getText();
				System.out.println("Time is :" + clock);
				log.debug("Time is :" + clock);

			} else {
				System.out.println("closck on thetop bar is not visible");
			}
		} catch (Exception e) {
			log.error("Not able to verify clock", e);
		}
		return clock;

	}

	public void refresh(Mobile_HTML_Report report) {

	}

	/**
	 * Verify Session Reminder is Present or not
	 */
	public boolean sessionReminderPresent(Mobile_HTML_Report report) {
		return false;
	}

	public boolean closeSymbol(Mobile_HTML_Report report) {

		return false;
	}

	/*
	 * To verify Bonus Reminder
	 */

	public void verifyBonusReminder(Mobile_HTML_Report report) {

	}

	/**
	 * To verify gamename on topbar
	 */
	public void gameNameOnTopBar(Mobile_HTML_Report report) {
		String getGameName = null;
		try {
			setChromiumWebViewContext();
			boolean isGameNamePresent = webdriver.findElement(By.xpath(xpathMap.get("isGamename"))).isDisplayed();
			System.out.println(isGameNamePresent);
			if (isGameNamePresent) {
				log.debug("Gamename is visible");
				System.out.println("Gamename is visible");
				getGameName = webdriver.findElement(By.xpath(xpathMap.get("isGamename"))).getText();
				System.out.println(getGameName);
				log.debug(getGameName);
				String name = xpathMap.get(("TopbarGameName"));
				System.out.println(name);
				Thread.sleep(2000);
				if (getGameName.equals(name)) {
					System.out.println("Game name is same");
					report.detailsAppendNoScreenshot("Verify Gamename must be is displayed on Topbar",
							"Gamename should be is displayed on Topbar",
							"Gamename is displayed on Topbar and it is correct " + getGameName, "pass");
				} else {
					System.out.println("Game name is different");
					report.detailsAppendNoScreenshot("Gamename must be is displayed on Topbar",
							"Gamename should be is displayed on Topbar",
							"Gamename is displayed on Topbar and in correct " + getGameName, "fail");
				}

			}
		} catch (Exception e) {
			log.error("Not able to verify Game name", e);
			System.out.println("Game name is not visible on top bar");
			report.detailsAppend("Gamename must be is displayed on Topbar", "Gamename should be is displayed on Topbar",
					"Gamename is not displayed on Topbar", "fail");

		}

	}

	/**
	 * To verify bet value on topbar
	 */
	public void betOnTopBar(Mobile_HTML_Report report) {
		String getBetValue = null;
		try {
			boolean isBet = webdriver.findElement(By.xpath(xpathMap.get("isBetOnTopbarVisible"))).isDisplayed();
			if (isBet) {
				log.debug("Bet on Top is visible");
				System.out.println("Bet on Top bar is visible");
				getBetValue = webdriver.findElement(By.xpath(xpathMap.get("isBetOnTopbarVisible"))).getText();
				System.out.println(getBetValue);
				String betValue = GetConsoleText("return " + xpathMap.get("BetButtonLabel"));
				System.out.println(betValue);
				Thread.sleep(2000);
				if (getBetValue.equalsIgnoreCase(betValue)) {
					System.out.println("Bet values are same");
					report.detailsAppend("Verify Bet value must be is displayed on Topbar",
							"Bet value should be is displayed on Topbar",
							"Bet value is displayed on Topbar and is correct " + getBetValue, "pass");
				} else {
					System.out.println("Bet values are different");
					report.detailsAppend("Verify Bet value must be is displayed on Topbar",
							"Bet value should be is displayed on Topbar",
							"Bet value is displayed on Topbar and incorrect " + getBetValue, "fail");

				}
			}
		}

		catch (Exception e) {
			log.error("Not able to verify bet", e);
			System.out.println("Bet value is not visible on top bar");
			report.detailsAppend("Bet value must be is displayed on Topbar",
					"Bet value should be is displayed on Topbar", "Bet value is not displayed on Topbar", "fail");

		}
	}

	/**
	 * To verify clock on topbar
	 */
	public void clockOnTopBar(Mobile_HTML_Report report) {
		String clock = null;

		try {
			setChromiumWebViewContext();
			boolean isClockPresent = webdriver.findElement(By.xpath(xpathMap.get("isClockVisible"))).isDisplayed();
			Thread.sleep(2000);
			if (isClockPresent) {
				log.debug("clock is visible");
				System.out.println("clock is visible");
				clock = webdriver.findElement(By.xpath(xpathMap.get("isClockVisible"))).getText();
				System.out.println(clock);
				report.detailsAppendNoScreenshot("Verify Clock must be is displayed on Topbar",
						"Clock should be is displayed on Topbar", "Clock is displayed on Topbar", "pass");
			}
		}

		catch (Exception e) {
			log.error("Not able to verify clock", e);
			System.out.println("clock is not visible on top bar");
			report.detailsAppendNoScreenshot("Clock must be is displayed on Topbar",
					"Clock should be is displayed on Topbar", "Clock is not displayed on Topbar", "fail");

		}
	}

	/**
	 * To verfiy net postion
	 * 
	 * @return
	 */
	public boolean verifyNetPosition(Mobile_HTML_Report reportUK) {
		return false;
	}

	/**
	 * To verify Menu navigations from topbar in uk
	 * 
	 * @return
	 */
	public void verifyMenuOptionNavigationsForUK(Mobile_HTML_Report report) {
	}

	/**
	 * To verify Responsible Gaming is present on topbar and navigate to it
	 * 
	 * @return
	 */
	public void verifyResposibleGamingOnTopbar(Mobile_HTML_Report report) {
	}

	/**
	 * To verify Help is present on topbar and navigate to it
	 * 
	 * @return
	 */
	public void verifyHelpOnTopbar(Mobile_HTML_Report report) {
	}

	/**
	 * To verify Transaction History is present on topbar and navigate to it
	 * 
	 * @return
	 */
	public void verifyTransactionHistoryOnTopbar(Mobile_HTML_Report report) {
	}

	/**
	 * To verify Game History is present on topbar and navigate to it
	 * 
	 * @return
	 */
	public void verifyGameHistoryOnTopbar(Mobile_HTML_Report report) {
	}

	/**
	 * To verify Player Protection is present on topbar and navigate to it
	 * 
	 * @return
	 */
	public void verifyPlayerProtectionOnTopbar(Mobile_HTML_Report report) {
	}

	/**
	 * To click on Menu on topbar
	 * 
	 * @return
	 */
	public boolean clickOnMenuOnTopbar() {
		boolean ret = false;
		try {
			webdriver.findElement(By.xpath(xpathMap.get("clickOnMenuOnTopbar"))).click();
			log.debug("Clicked on menu button on topbar to open");
			ret = true;
		} catch (Exception e) {
			log.error("Error in opening menu", e);
		}
		return ret;
	}

	/**
	 * Date: 04/06/2018 Author: Havish Jain Description: This function is used for
	 * touch event in mobile devices Parameter: By locator
	 */

	public boolean Native_ClickByXpath(String locator) {
		boolean present = false;
		try {
			// String context = webdriver.getContext();
			Wait.until(ExpectedConditions.elementToBeClickable(By.xpath(locator)));
			WebElement element = webdriver.findElement(By.xpath(locator));

			if (element != null) {
				if (osPlatform.equalsIgnoreCase("Android")) {
					clickWithWebElementAndroid(webdriver, element, 0);
					System.out.println("Element Found and Clicked");
					log.debug("Element Found and Clicked");
				} else {
					System.out.println("Element   Found");
					log.debug("Element Found");
					clickWithWebElement(element, 0);
				}

				present = true;
			}
			// webdriver.context(context);
		} catch (NoSuchElementException e) {
			System.out.println(e.getMessage());
			System.out.println("Unable to Navigate to the clicked Page");
			log.debug("Unable to Navigate to the clicked Page");
			present = false;
		}
		return present;
	}

	/*
	 * Verify Italy Currency
	 */
	public boolean italyCurrencyCheck(Mobile_HTML_Report report) {
		return false;

	}

	/*
	 * Verify Italy Currency
	 */
	public boolean spainCurrencyCheck(Mobile_HTML_Report report) {
		return false;

	}

	/**
	 * Verify the player protrection Icon From Top bar
	 */
	public boolean playerProtectionIcon(Mobile_HTML_Report report) {
		return false;

	}

	/**
	 * method is for click , navigate and back to game screen for Italy Market using
	 * Xpath (For Android & IOS click action is same)
	 */
	public boolean italyClickAndNavigate(Mobile_HTML_Report report, String locator) {
		return false;

	}

	/**
	 * Verify Italy check page navigation for Menu check
	 */
	public void italyCheckPageNavigation(Mobile_HTML_Report report, String gameurl) {

	}

	/**
	 * Verify ResponsibleGaming From TopBar
	 */
	public boolean italyResponsibleGamingFromMenu(Mobile_HTML_Report report) throws InterruptedException {

		MobileElement element = (MobileElement) webdriver.findElement(By.xpath(xpathMap.get("clickOnMenuOnTopbar")));
		webdriver.executeScript("arguments[0].click();", element);
		Thread.sleep(2000);
		report.detailsAppend(" Verify Menu  ", "Menu Clicked ", "Menu Clicked", "PASS");
		boolean isResponsiblegaming = false;
		try {
			String responsibleGaming = webdriver.findElement(By.xpath(xpathMap.get("Italy_ResponsibleGaming")))
					.getText();
			System.out.println(responsibleGaming);

			if (responsibleGaming.equals("Responsible Gaming") || responsibleGaming.equals("Gioco Responsabile")) {
				log.debug("Responsiblegaming  name is Same");
				System.out.println("Responsiblegaming is Same");
				isResponsiblegaming = true;
			} else {
				log.error("Responsiblegaming is not available");
				System.out.println("Responsiblegaming is not available");
				isResponsiblegaming = false;
			}
		} catch (Exception e) {
			log.error("Not able to verify Responsiblegaming Availability", e);
		}
		return isResponsiblegaming;

	}

	/*
	 * Click and navigate through Responsible gaming from Menu
	 */
	public boolean italyOpenResponsibleGamingFromMenu(Mobile_HTML_Report report) {
		boolean ret = false;
		Wait = new WebDriverWait(webdriver, 500);
		try {
			String gameurl = webdriver.getCurrentUrl();
			if (osPlatform.equalsIgnoreCase("Android")) {
				WebElement element1 = webdriver.findElement(By.xpath(xpathMap.get("Italy_ResponsibleGaming")));
				element1.click();
				Thread.sleep(2000);
				report.detailsAppend("ResponsibleGaming from Menu ", "ResponsibleGaming Clicked  ",
						"ResponsibleGaming Clicked", "PASS");
				Thread.sleep(2000);
				log.debug("clicked on Responsible");
				System.out.println("clicked on Responsible");
				Thread.sleep(2000);
				funcFullScreen();

			} else {
				MobileElement element = (MobileElement) webdriver
						.findElement(By.xpath(xpathMap.get("Italy_ResponsibleGaming")));
				webdriver.executeScript("arguments[0].click();", element);
				Thread.sleep(2000);
				report.detailsAppend("ResponsibleGaming from Menu", "ResponsibleGaming Clicked ",
						"ResponsibleGaming Clicked", "PASS");
				italyCheckPageNavigation(report, gameurl);
				Thread.sleep(2000);
				log.debug("clicked on Responsible");
				System.out.println("clicked on ResponsibleGameing and Back to base Game ");
				Thread.sleep(2000);
				Thread.sleep(2000);

			}
			ret = true;

		} catch (Exception e) {
			report.detailsAppend("ResponsibleGaming from Menu", "ResponsibleGaming Clicked ",
					"ResponsibleGaming Clicked", "FAIL");
			log.error("Error in navigetion to ResponsibleGameing  page ", e);
		}
		return ret;
	}

	/*
	 * Check Italy Player protection from Menu
	 */
	public boolean italyPlayerProtectionFromMenu(Mobile_HTML_Report report) throws InterruptedException {
		MobileElement element = (MobileElement) webdriver.findElement(By.xpath(xpathMap.get("clickOnMenuOnTopbar")));
		webdriver.executeScript("arguments[0].click();", element);
		Thread.sleep(2000);
		boolean playerprotection = false;
		try {
			String plyrprotection = webdriver.findElement(By.xpath(xpathMap.get("Italy_PlayerProtection"))).getText();
			System.out.println(plyrprotection);
			if (plyrprotection.equals("Player Protection") || plyrprotection.equals("Tutela del giocatore")) {
				log.debug("PlayerProtection  is same");
				System.out.println("PlayerProtection  is same");
				playerprotection = true;
			} else {
				log.error("PlayerProtection is not  same");
				System.out.println("PlayerProtection is not  same");
				playerprotection = false;
			}
		} catch (Exception e) {
			report.detailsAppend(" Verify Menu  ", "Menu isn't Clicked ", "Menu  isn't Clicked", "FAIL");
			log.error("Not able to verify Player Protection Availability", e);
		}
		return playerprotection;
	}

	/*
	 * Italy Responsible gaming name comparisiions and visibility check
	 */
	public boolean italyOpenPlayerProtectionFromMenu(Mobile_HTML_Report report) {
		boolean ret = false;
		Wait = new WebDriverWait(webdriver, 500);
		try {
			String gameurl = webdriver.getCurrentUrl();
			MobileElement element = (MobileElement) webdriver
					.findElement(By.xpath(xpathMap.get("Italy_PlayerProtection")));
			webdriver.executeScript("arguments[0].click();", element);
			Thread.sleep(4000);
			report.detailsAppend("  PlayerProtection from Menu ", "PlayerProtection Clicked ",
					"PlayerProtection Clicked", "PASS");
			Thread.sleep(2000);
			log.debug("clicked on Player Protection");
			System.out.println("clicked on Player Protection");

			italyCheckPageNavigation(report, gameurl);
			System.out.println("Page navigated to Back to Game ");
			log.debug("Page navigated to Back to Game");
			ret = true;
		} catch (Exception e) {
			log.error("Error in navigetion to help page ", e);
			report.detailsAppend("PlayerProtection from Menu  ", "PlayerProtection isn't  Clicked ",
					"PlayerProtection isn't Clicked", "FAIL");
		}
		return ret;
	}

	/**
	 * Italy Help from menu text comparison and visibility check
	 */
	public boolean italyHelpFromTopBarMenu(Mobile_HTML_Report report) throws InterruptedException {
		return false;

	}

	/*
	 * open help from menu for italy market
	 */

	public boolean italyOpenHelpFromMenu(Mobile_HTML_Report report) {

		boolean ret = false;
		Wait = new WebDriverWait(webdriver, 90);
		try {
			String gameurl = webdriver.getCurrentUrl();

			MobileElement element = (MobileElement) webdriver.findElement(By.xpath(xpathMap.get("Italy_Help")));
			webdriver.executeScript("arguments[0].click();", element);
			// report.detailsAppend(" Help from Menu ", "Menu Clicked ","Menu
			// Clicked","PASS");
			Thread.sleep(2000);
			log.debug("clicked on Help");
			System.out.println("clicked on Help");
			if (osPlatform.equalsIgnoreCase("Android")) {
				italyAndriodHelp_CheckPageNavigation(report, gameurl); // Checkpage Navigation

			} else {

				italyCheckPageNavigation(report, gameurl);
			}

			log.debug(" Back to the Game Screen from Help");
			System.out.println(" Back to the Game Screen from Help");
			Thread.sleep(2000);

			ret = true;
		} catch (Exception e) {
			report.detailsAppend(" Help from Menu  ", "Menu isn't Clicked ", "Menu isn't Clicked", "FAIL");
			log.error("Error in navigetion to help page ", e);
		}
		return ret;

	}

	/**
	 * This is for italy Andriod Help from Menu to PageNavigation
	 */
	public void italyAndriodHelp_CheckPageNavigation(Mobile_HTML_Report report, String gameurl) {

	}

	/**
	 * verify QuickSpin Availablity
	 * 
	 */
	public boolean verifyQuickSpinAvailablity() {
		boolean isQuickSpin = false;
		try {

			boolean isQuickspinVisible = getConsoleBooleanText("return " + xpathMap.get("QuickSpinBtnAvailable"));
			if (isQuickspinVisible) {
				System.out.print("Quickspin is available");
				log.debug("Quickspin is available");
				isQuickSpin = true;
			} else {
				System.out.print("Quickspin is not available");
				log.error("Quickspin is not available");
				isQuickSpin = false;
			}
		} catch (Exception e) {
			log.error("Not able to verify quickspin Availability", e);
		}
		return isQuickSpin;
	}

	/**
	 * verify StopButton Availability
	 */
	public boolean verifyStopButtonAvailablity() {
		boolean isstopbutton = true;
		try {
			clickAtButton("return " + xpathMap.get("ClickSpinBtn"));
			// To verify the stop button
			String stopbutton = GetConsoleText("return " + xpathMap.get("SpinBtnCurrState"));

			if (stopbutton.equalsIgnoreCase("activeSecondary") || !(stopbutton.equalsIgnoreCase("disabled"))) {
				// As current state of button is ActiveSecondary
				log.debug("Stop button is available");
				System.out.println("Stop button is available");
				isstopbutton = true;
			} else {
				log.error("Stop button is not available");
				System.out.println("Stop button is not available");
				isstopbutton = false;
			}
		} catch (Exception e) {
			log.debug(e.getMessage());
		}

		return isstopbutton;
	}

	/**
	 * Verify Reel Spin Duration
	 */
	public long reelSpinDuratioN(Mobile_HTML_Report report) {
		long avgspinduration = 0;
		return avgspinduration;
	}

	/*
	 * Verify denmark Currency Check
	 * 
	 */
	public boolean denmarkCurrencyCheck(Mobile_HTML_Report report) {

		return false;
	}

	/**
	 * Denmark Help comparison from Menu, click and navigation
	 */

	public boolean denmarkHelpFromTopBarMenu(Mobile_HTML_Report report) {
		return false;
	}

	/**
	 * spain Help comparission from Menu
	 */

	public boolean spainHelpFromTopBarMenu(Mobile_HTML_Report report) {
		return false;
	}

	/**
	 * Denmark PlayerProtection comparison from Menu, click and navigation
	 */
	public boolean denmarkPlayerProtectionFromMenu(Mobile_HTML_Report report) {
		return false;

	}

	/*
	 * Verify cHeckPageNavigation - It is for the games which doesn't / does have
	 * continue button on Loading screen
	 */
	public void cHeckPageNavigation(Mobile_HTML_Report report, String gameurl) {
		try {
			String mainwindow = webdriver.getWindowHandle();

			Set<String> s1 = webdriver.getWindowHandles();
			if (s1.size() > 1) {
				Iterator<String> i1 = s1.iterator();
				while (i1.hasNext()) {
					String ChildWindow = i1.next();
					if (mainwindow.equalsIgnoreCase(ChildWindow)) {
						// ChildWindow=i1.next();
						report.detailsAppend("verify the Navigation screen shot ", " Navigation page screen shot",
								"Navigation page screenshot ", "PASS");
						Thread.sleep(1000);
						webdriver.switchTo().window(ChildWindow);
						Thread.sleep(2000);
						String url = webdriver.getCurrentUrl();
						log.debug("Reload URL is :: " + url);
						if (!url.equalsIgnoreCase(gameurl)) {
							// pass condition for navigation
							report.detailsAppend("verify the Navigation screen shot ", " Navigation page screen shot",
									"Navigation page screenshot ", "PASS");
							log.debug("Page navigated succesfully");
							// System.out.println("Page navigated succesfully");
							webdriver.close();
						} else {
							log.debug("Now On game page");
						}
					}
				}
				webdriver.switchTo().window(mainwindow);
			} else {
				String url = webdriver.getCurrentUrl();
				// System.out.println("Reloaded URL is :: " + url);
				log.debug("Reloaded URL is :: " + url);
				if (!url.equalsIgnoreCase(gameurl)) {
					// pass condition for navigation
					Thread.sleep(2000);
					report.detailsAppend("verify the Navigation screen shot", " Navigation page screen shot",
							"Navigation page screenshot ", "PASS");
					// Thread.sleep(2000);
					// System.out.println("Page navigated succesfully");
					log.debug("Page navigated succesfully");
					webdriver.navigate().to(gameurl);
					Thread.sleep(2000);
					waitForSpinButton();
					if ((Constant.YES.equalsIgnoreCase(xpathMap.get("continueBtnOnGameLoad")))) {
						// Continue();
						newFeature();
					}

				} else {
					report.detailsAppend("verify the Navigation screen shot", " Navigation page screen shot",
							"Navigation page screenshot ", "PASS");
					webdriver.navigate().to(gameurl);
					log.debug(gameurl);
					Thread.sleep(2000);
					// System.out.println(gameurl);
					waitForSpinButton();

					log.debug("Now On game page");
				}
			}
			// webdriver.navigate().to(gameurl);
		} catch (Exception e) {
			log.error("error in navigation of page");
		}
	}

	/**
	 * Spain cooing of period
	 */
	public void spainCoolingOffPeriod(Mobile_HTML_Report report) {
		// TODO Auto-generated method stub

	}

	/**
	 * To verify Help text link on top bar
	 */
	public boolean helpTextLink(Mobile_HTML_Report report) {
		return false;

	}

	/**
	 * verify HelpText link for spain
	 */
	public void verifyHelpTextlink(Mobile_HTML_Report report) {
		boolean isHelpTextNaviagted = false;
		try {
			String gameurl = webdriver.getCurrentUrl();

			MobileElement element = (MobileElement) webdriver.findElement(By.xpath(xpathMap.get("ishelpsymbol_Icon")));
			webdriver.executeScript("arguments[0].click();", element);
			report.detailsAppend("Help Text ", "Help Text is clicked", "Help Text is clicked", "PASS");
			System.out.println("Clicked on Help Icon");
			Thread.sleep(2000);
			// italy_Checkpagenavigation(report, gameurl);
			cHeckPageNavigation(report, gameurl); // Checkpage Navigation
			isHelpTextNaviagted = true;
			Thread.sleep(2000);
			if (isHelpTextNaviagted) {
				System.out.println("Game navigated from Help to Game screen");
				log.debug("Help  text link navigation verified succesfully");
				funcFullScreen();
				newFeature();
				report.detailsAppend(" Navigation", "Navigation from  Help screen to Game",
						"Navigation from  Help screen to Game", "PASS");
			} else {
				report.detailsAppend(" Navigation", "Navigation from  Help screen to Game",
						"Navigation from  Help screen to Game", "FAIL");
			}

		} catch (Exception e) {
			log.error("Error in checking help page ", e);
		}

	}

	/*
	 * verify MenuOption Navigations ForSpain
	 */
	public void verifyMenuOptionNavigationsForSpain(Mobile_HTML_Report report) {
		try {
			// To verify help
			verifyHelpOnTopbar(report);
			Thread.sleep(2000);
		} catch (Exception e) {
			log.error("Error in checking help navigation from top bar ", e);

		}

	}

	/**
	 * help text comparison from Menu, click and navigation
	 */
	public boolean helpIcon(Mobile_HTML_Report report) {
		return false;

	}

	/**
	 * To verify Session Duration on topbar in sweden market
	 */

	public String sessionDurationFromTopBar() {
		String sessionduration = null;
		try {
			boolean issessionduration = webdriver.findElement(By.xpath(xpathMap.get("Swden-SessionDuation_OnTopBar")))
					.isDisplayed();
			// System.out.println(isClockPresent);
			if (issessionduration) {
				log.debug("sessionDuration is visible");
				sessionduration = webdriver.findElement(By.xpath(xpathMap.get("Swden-SessionDuation_OnTopBar")))
						.getText();
				log.debug("Session Duration is :" + sessionduration);

			} else {
				log.debug("sessionDuration on thetop bar is not visible");
			}
		} catch (Exception e) {
			log.error("Not able to verify sessionDuration", e);
		}
		return sessionduration;

	}

	/*
	 * //To Compare consolebalance on the Top Bar
	 */
	public String creditComparissionfromFromTopBar() {
		String balance = null;
		String topbarconsolebalance = null;

		if (!GameName.contains("Scratch")) {
			if (Constant.STORMCRAFT_CONSOLE.equalsIgnoreCase(xpathMap.get("TypeOfGame")))// force console
			{
				balance = "return " + xpathMap.get("Balancetext");
			} else
				balance = "return " + xpathMap.get("InfoBarBalanceTxt");
		}

		String consoleBalance = GetConsoleText(balance);
		log.debug("Console Credits are " + consoleBalance);
		String bal1 = consoleBalance.replace("CREDITS: ", "");
		String bal2 = consoleBalance.replace("KREDITER: ", "");
		// System.out.println("Console Credits are "+bal); System.out.println("Console
		// Credits are "+bal1);

		// now get the Top bar console balance
		try {

			boolean istopbarconsolebalance = webdriver
					.findElement(By.xpath(xpathMap.get("Sweden_ConosoleBalance_From_TopBar"))).isDisplayed();
			// System.out.println(isClockPresent);
			if (istopbarconsolebalance) {
				log.debug("Balance from the Top Bar is visible");
				topbarconsolebalance = webdriver
						.findElement(By.xpath(xpathMap.get("Sweden_ConosoleBalance_From_TopBar"))).getText();
				log.debug("Balance from Top Bar is  :" + topbarconsolebalance);
				String topbarBal = topbarconsolebalance.replace("Balance: ", "");
				String topbarBa2 = topbarconsolebalance.replace("Saldo: ", "");
				// System.out.println("TopBar Balance is:"+topbarBal);System.out.println("TopBar
				// Balance is:"+topbarBa2);

				if (bal1.equals(topbarBal) || bal2.equals(topbarBa2)) {
					log.debug("Credits are Same");
				} else {
					log.debug("Credits are Different");
				}

			} else {
				log.debug("Balance on thetop bar is not visible");
			}
		} catch (Exception e) {
			log.error(e.getMessage(), e);
		}

		return consoleBalance;
	}

	/**
	 * betComparissionFromTopBar
	 */
	public String betComparissionFromTopBar() {
		String Bet = null;
		String Betfromtopbar = null;

		if (!GameName.contains("Scratch")) {
			if (Constant.STORMCRAFT_CONSOLE.equalsIgnoreCase(xpathMap.get("TypeOfGame")))// force console
			{
				Bet = "return " + xpathMap.get("InfobarBettext");
			} else
				Bet = "return " + xpathMap.get("BetBalanceTxt");
		}

		String consoleBet = GetConsoleText(Bet);
		log.debug("Console Bet is " + consoleBet);
		String betconsole = consoleBet.replace("BET: ", "");
		String betconsole1 = consoleBet.replace("INSATS: ", "");
		// System.out.println("Console Bet is "+betconsole); System.out.println("Console
		// Bet is "+betconsole1);

		try {
			boolean isBetfromtopbar = webdriver.findElement(By.xpath(xpathMap.get("Swden_Bet_From_TopBar")))
					.isDisplayed();
			// System.out.println(isClockPresent);
			if (isBetfromtopbar) {
				log.debug("Bet on Top Bar is visible ");
				Betfromtopbar = webdriver.findElement(By.xpath(xpathMap.get("Swden_Bet_From_TopBar"))).getText();
				log.debug("Bet from Top Bar is " + Betfromtopbar);
				String TopBarBet = Betfromtopbar.replace("Bet: ", "");
				String TopBarBet1 = Betfromtopbar.replace("Insats: ", "");
				// System.out.println("Console Bet is "+TopBarBet); System.out.println("Console
				// Bet is "+TopBarBet1);

				if (betconsole.equals(TopBarBet) || betconsole1.equals(TopBarBet1)) {
					log.debug("Bet Values are Same");
				}

				else {
					log.debug("Bet Values are Different");
				}

			} else {
				log.debug("Bet on thetop bar is not visible");
			}
		} catch (Exception e) {
			log.error("Not able to verify Bet", e);
		}
		return Bet;

	}

	/*
	 * /Verify Sweden Seesion Reminder
	 */
	public boolean swedenSessionReminderAvailability(Mobile_HTML_Report report) {

		String SessionReminderPresent = null;
		try {
			boolean isSessionReminderPresent = webdriver
					.findElement(By.xpath(xpathMap.get("Sweden_SessionReminder_Continue"))).isDisplayed();
			if (isSessionReminderPresent) {
				log.debug("clock is visible");
				System.out.println("clock is visible");
				MobileElement element = (MobileElement) webdriver
						.findElement(By.xpath(xpathMap.get("Sweden_SessionReminder_Continue")));
				webdriver.executeScript("arguments[0].click();", element);

			} else {
				System.out.println("SessionReminder on thetop bar is not visible");
			}
		} catch (Exception e) {
			log.error("Not able to verify SessionReminder", e);
		}
		return SessionReminderPresent != null;
	}

	/**
	 * method is for click , navigate and back to game screen using Xpath (For
	 * Android & IOS click action is different)
	 */
	public boolean clickAndNavigate(Mobile_HTML_Report report, String locator) {
		return false;
	}

	/**
	 * method is for click , navigate and back to game screen using Xpath (For
	 * Android & IOS click action is same)
	 */
	public boolean clickandNavigate(Mobile_HTML_Report report, String locator) {
		return false;
	}

	/**
	 * Sweden three log Symbols from Top Bar
	 */

	public boolean swedenLogosFromTopBar(Mobile_HTML_Report report) {
		return false;

	}

	/**
	 * Click and get the Text
	 */
	public String clickAndGetText(Mobile_HTML_Report report, String menuclick, String locator) {
		return null;

	}

	/**
	 * Sweden Help text comparison from Menu , click and Navigate
	 * 
	 * @throws InterruptedException
	 */
	public boolean swedenTopBarMenu(Mobile_HTML_Report report) throws InterruptedException {
		return false;

	}

	/**
	 * Sewden Currency Checks
	 */
	public boolean swedenCurrencyCheck(Mobile_HTML_Report report) {
		return false;

	}

	// verify win or loss for Stop Button
	public Double winORLossForStopButton(Mobile_HTML_Report report) {

		return null;
	}

	// verify win or loss for Reel Spin Duration
	public Double winORLossForReelSpinDuration(Mobile_HTML_Report report) {

		return null;
	}

	// verify session Reminder Win or Loss
	public void sessionReminderWinOrLoss(Mobile_HTML_Report sweden, Double valueAfterSpin1, Double valueAfterSpin2) {

	}

	/**
	 * verify session reminder is visible or not
	 * 
	 */
	public boolean isSessionReminderPresent() {
		return false;
	}

	/**
	 * Verify Germany Currency Format
	 */
	public boolean germanyCurrencyCheck(Mobile_HTML_Report report) {

		return false;
	}

	/**
	 * verify Autoplay Availabilty
	 */
	public boolean verifyAutoplayAvailabilty() {
		return false;
	}

	/**
	 * germay help text comparison from Menu, click and navigation
	 */
	public boolean germanyHelpFromTopBarMenu(Mobile_HTML_Report report) throws InterruptedException {
		return false;
	}

	/**
	 * germay ResponsibleGaming text comparison from Menu, click and navigation
	 */
	public boolean germanyResponsibleGamingFromTopBarMenu(Mobile_HTML_Report report) throws InterruptedException {
		return false;
	}

	/**
	 * germay GameHistory text comparison from Menu, click and navigation
	 */
	public boolean germanyGameHistoryFromTopBarMenu(Mobile_HTML_Report report) throws InterruptedException {
		return false;
	}

	/**
	 * Malta GameHistory text comparison from Menu, click and navigation
	 */
	public boolean maltaGameHistoryFromTopBarMenu(Mobile_HTML_Report report) throws InterruptedException {
		return false;
	}

	/**
	 * Malta help text comparison from Menu, click and navigation
	 */
	public boolean maltaHelpFromTopBarMenu(Mobile_HTML_Report report) throws InterruptedException {
		return false;
	}

	/**
	 ** Malta ResponsibleGaming text comparison from Menu, click and navigation
	 */
	public boolean maltaResponsibleGamingFromTopBarMenu(Mobile_HTML_Report report) throws InterruptedException {
		return false;
	}

	/**
	 * Verify malta Currency Format
	 */
	public boolean maltaCurrencyCheck(Mobile_HTML_Report report) {

		return false;
	}

	/**
	 * verify & Compare portugal Currency
	 */
	public boolean portugalCurrencyCheck(Mobile_HTML_Report report) {
		return false;
	}

	/**
	 * Verifies Portugal help text comparison , click and its navigation from menu
	 */
	public boolean portugalHelpFromTopBarMenu(Mobile_HTML_Report report) throws InterruptedException {
		return false;

	}

	/**
	 * Verifies Portugal GameHistory text comparison , click and its navigation from
	 * menu
	 */
	public boolean portugalGameHistoryFromTopBarMenu(Mobile_HTML_Report report) throws InterruptedException {
		return false;
	}

	/**
	 * Verifies Romania help text comparison , click and its navigation from menu
	 */
	public boolean romaniaHelpFromTopBarMenu(Mobile_HTML_Report report) throws InterruptedException {
		return false;

	}

	/**
	 * Verifies Romania GameHistory text comparison , click and its navigation from
	 * menu
	 */
	public boolean romaniaGameHistoryFromTopBarMenu(Mobile_HTML_Report report) throws InterruptedException {
		return false;
	}

	/**
	 * verify & Compare romania Currency
	 */
	public boolean romaniaCurrencyCheck(Mobile_HTML_Report report) {
		return false;
	}

	public boolean swedenHelpFromMenu1(Mobile_HTML_Report sweden) throws InterruptedException {
		// TODO Auto-generated method stub
		return false;
	}

	public boolean check(Mobile_HTML_Report sweden, String amount) throws InterruptedException {
		// TODO Auto-generated method stub
		return false;
	}

	/**
	 * Verifies the Currency Format - using String method
	 */

	public boolean verifyRegularExpression(Mobile_HTML_Report report, String regExp, String method) {
		// TODO Auto-generated method stub
		return false;
	}

	/**
	 * verifies mini bet
	 * 
	 * @return
	 */
	public String moveCoinSizeSliderToMinBet(Mobile_HTML_Report report, String CurrencyName) {
		return null;
	}

	/**
	 * Verifies the current credits
	 * 
	 */
	public String getCurrentCredit(Mobile_HTML_Report report, String CurrencyName) {
		return null;

	}

	/**
	 * Verifies the current Bet
	 * 
	 */
	public String getCurrentBetAmt(Mobile_HTML_Report report, String CurrencyName) {
		return null;

	}

	/**
	 * method is used to scroll the paytable
	 * 
	 * @param lvcReport
	 * @return
	 */
	public boolean paytableScroll(Mobile_HTML_Report report, String CurrencyName) {
		// TODO Auto-generated method stub
		return false;
	}

	/**
	 * Verifies the Currency Format - using String method
	 */

	public boolean verifyRegularExpressionUsingArrays(Mobile_HTML_Report report, String regExp, String[] method) {
		// TODO Auto-generated method stub
		return false;
	}

	/**
	 * method is used to validate the Paytable Values
	 * 
	 * @return
	 */
	public String[] validatePayoutsFromPaytable(Mobile_HTML_Report report, String CurrencyName) // String[] array
	{
		return null;

	}

	/**
	 * method is to get the text using by ID .
	 */
	public String func_click(String locator) {
		return null;
	}

	/* Method is for component store */
	public boolean func_Click(String locator) {
		boolean present;
		// Thread.sleep(1000);
		try {

			/*
			 * JavascriptExecutor js = (JavascriptExecutor) webdriver;
			 * js.executeScript("arguments[0].click();",
			 * webdriver.findElement(By.id("titan-infobar-titanDynamicMenuIcon"))); //
			 * js.executeScript(
			 * "javascript:document.getElementById(xpathMap.get(//*[@id=\"infobar-row1column1\"])"
			 * ); Wait.until(ExpectedConditions.elementToBeClickable(By.xpath(
			 * "//*[@id=\"infobar-row1column1\"]"))); WebElement ele =
			 * webdriver.findElement(By.xpath("//*[@id=\"infobar-row1column1\"]"));
			 */

			WebElement ele = webdriver.findElement(By.xpath(locator));
			if (ele != null) {
				Wait.until(ExpectedConditions.elementToBeClickable(By.xpath(locator)));
				ele.click();
			}
			present = true;
		} catch (NoSuchElementException e) {
			present = false;
		}
		return present;
	}

	/**
	 * Verifies the Autoplay
	 * 
	 */

	public boolean isAutoplayAvailable() {
		// TODO Auto-generated method stub
		return false;
	}

	/**
	 * Verifies the current Win
	 * 
	 */
	public String getCurrentWinAmt(Mobile_HTML_Report report, String CurrencyName) {
		return null;

	}

	/**
	 * Verifies the Scatter Win
	 * 
	 */
	public String getScatterAmt(Mobile_HTML_Report report, String CurrencyName) {
		return null;

	}

	/**
	 * Check Availablity of an Element
	 * 
	 * @param string
	 * @return
	 */
	public boolean checkAvilabilityofElement(String string) {
		// TODO Auto-generated method stub
		return false;
	}

	/**
	 * Verifies the Big Win
	 * 
	 */
	public String verifyBigWin(Mobile_HTML_Report report, String CurrencyName) {
		return null;

	}

	/**
	 * Verify Bonus Feature by clicking and get text
	 * 
	 * @param report
	 * @return
	 */

	public String[] bonusFeatureClickandGetText(Mobile_HTML_Report report, String CurrencyName) {

		return null;
	}

	/**
	 * method verifies the bonus summary screen and get Text
	 */
	public String bonusSummaryScreen(Mobile_HTML_Report report, String CurrencyName) {
		return null;
	}

	/**
	 * Get the text by using attribute
	 * 
	 * @param report
	 * @param locator
	 * @return
	 */
	public String func_GetTextbyAttribute(Mobile_HTML_Report report, String locator, String CurrencyName) {
		return null;
	}

	/**
	 * Verifies the current tOtal wins in FS
	 * 
	 */

	public String getCurrentTotalWinINFS(Mobile_HTML_Report report, String CurrencyName) {
		// TODO Auto-generated method stub
		return null;
	}

	/**
	 * method verifies the bonus summary screen and get Text
	 */
	public String freeSpinsSummaryScreen(Mobile_HTML_Report report, String CurrencyName) {
		// TODO Auto-generated method stub
		return null;
	}

	/**
	 * This method retuns max bet value
	 */
	public String moveCoinSizeSliderToMaxBet(Mobile_HTML_Report report, String CurrencyName) {
		return null;
	}

	public boolean verifyWinAmtCurrencyFormat(String currencyFormat, Mobile_HTML_Report currencyReport) {
		// TODO Auto-generated method stub
		return false;
	}

	public void jackpotSummaryWinCurrFormat(String currencyFormat, Mobile_HTML_Report currencyReport,
			String currencyName) {

	}

	public void payoutverificationforBetLVC(Mobile_HTML_Report currencyReport, String regExpression,
			String currencyName) {
		// TODO Auto-generated method stub

	}

	public void freeGameSummaryWinCurrFormat(String currencyFormat, Mobile_HTML_Report currencyReport,
			String currencyName) {
		// TODO Auto-generated method stub
	}

	public boolean assignFreeGames(String userName, String offerExpirationUtcDate, int mid, int cid, int languageCnt,
			int defaultNoOfFreeGames) {
		// TODO Auto-generated method stub
		return false;
	}

	public String getWinAmtFromFreegames() {
		return GameName;
		// TODO Auto-generated method stub
	}

	public boolean verifyCurrencyFormatForCredits(String regExpression) {
		// TODO Auto-generated method stub
		return false;
	}

	public boolean betCurrencySymbolForLVC(String regExpression) {
		// TODO Auto-generated method stub
		return false;
	}

	public boolean verifyWinAmtCurrencyFormat(String regExpression) {
		// TODO Auto-generated method stub
		return false;
	}

	public boolean verifyBigWinCurrencyFormatForLVC(String regExpression, Mobile_HTML_Report currencyReport,
			String currencyName) {
		// TODO Auto-generated method stub
		return false;
	}

	public void jackpotSummaryWinCurrFormatForLVC(String regExpression, Mobile_HTML_Report currencyReport,
			String currencyName) {
		// TODO Auto-generated method stub

	}

	public void freeSpinSummaryWinCurrFormatForLVC(String regExpression, Mobile_HTML_Report currencyReport,
			String currencyName) {
		// TODO Auto-generated method stub

	}

	public void freeGameSummaryWinCurrFormatForLVC(String regExpression, Mobile_HTML_Report currencyReport,
			String currencyName) {
		// TODO Auto-generated method stub

	}

	public boolean verifyWinAmtCurrencyFormatForLVC(String regExpression) {
		// TODO Auto-generated method stub
		return false;
	}

	public void setMinBet() {
		try {

		} catch (Exception e) {
			e.getMessage();
		}
	}

	/**
	 * method is used to click by using xpath
	 * 
	 * @param locator
	 * @return
	 */
	public boolean TapbyXpath(String locator) {
		try {
			Thread.sleep(2000);
			WebElement ele = webdriver.findElement(By.xpath(xpathMap.get(locator)));
			clickWithWebElementAndroid(webdriver, ele, 0);
			log.debug("Clicked on spin button");
			// need to uncomment for other game
			// Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("Spin_Button_ID"))));
		} catch (Exception e) {
			log.error("rror while clicking on spin button", e);
		}
		return true;
	}

	/**
	 * method is used to click by using ID
	 * 
	 * @param locator
	 * @return
	 */
	public boolean TapbyID(String locator) {
		try {
			Thread.sleep(2000);
			WebElement we = webdriver.findElement(By.id(locator));
			clickWithWebElement(we, 0);
			log.debug("Clicked on spin button");
			// need to uncomment for other game
			// Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(xpathMap.get("Spin_Button_ID"))));
		} catch (Exception e) {
			log.error("rror while clicking on spin button", e);
		}
		return true;
	}

	public void clickWithWebElement(AppiumDriver<WebElement> webdriver, WebElement webViewElement,
			int Xcoordinate_AddValue) {
		String s = null;
		try {
			double urlHeight = 0.0;
			JavascriptExecutor javaScriptExe = (JavascriptExecutor) webdriver;
			int webViewInnerWidth = ((Long) javaScriptExe
					.executeScript("return window.innerWidth || document.body.clientWidth")).intValue();
			System.out.println("webViewInnerWidth " + webViewInnerWidth);
			int webViewOuterWidth = ((Long) javaScriptExe
					.executeScript("return window.outerWidth || document.body.clientWidth")).intValue();
			System.out.println("webViewInnerWidth " + webViewInnerWidth);
			int webViewInnerHeight = ((Long) javaScriptExe
					.executeScript("return window.innerHeight || document.body.clientHeight")).intValue();
			System.out.println("webViewInnerHeight " + webViewInnerHeight);
			int webViewOuterHeight = ((Long) javaScriptExe
					.executeScript("return window.outerHeight || document.body.clientHeight")).intValue();
			System.out.println("webViewOuterHeight " + webViewOuterHeight);
			int webViewOffsetHeight = ((Long) javaScriptExe
					.executeScript("return window.offsetHeight || document.body.clientHeight")).intValue();
			System.out.println("webViewOffsetHeight " + webViewOffsetHeight);
			int webViewBottomHeight = webViewOffsetHeight - webViewInnerHeight;
			System.out.println("webViewBottomHeight " + webViewBottomHeight);
			Dimension elementSize = webViewElement.getSize();
			System.out.println("elementSize " + elementSize);
			int webViewElementCoX = webViewElement.getLocation().getX() + (elementSize.width / 2);
			System.out.println("webViewElementCoX " + webViewElementCoX);
			int webViewElementCoY = webViewElement.getLocation().getY() + (elementSize.height / 2);
			System.out.println("webViewElementCoY " + webViewElementCoY); // double connectedDeviceWidth =
																			// typeCasting(javaScriptExe.executeScript("return
																			// window.screen.width *
																			// window.devicePixelRatio"), webdriver);
			// double connectedDeviceHeight =
			// typeCasting(javaScriptExe.executeScript("return window.screen.height *
			// window.devicePixelRatio"), webdriver);
			// //System.out.println("connectedDeviceWidth "+connectedDeviceWidth);
			// System.out.println("connectedDeviceHeight "+connectedDeviceHeight);
			String curContext = webdriver.getContext();
			webdriver.context("NATIVE_APP");
			urlHeight = (double) webViewOuterHeight - (double) webViewInnerHeight;
			System.out.println("url height " + urlHeight);
			// urlHeight=0.0;
			double relativeScreenViewHeight = webViewOuterHeight - urlHeight;
			System.out.println("relativeScreenViewHeight " + relativeScreenViewHeight);
			double nativeViewEleX = (double) (((double) webViewElementCoX / (double) webViewInnerWidth)
					* webViewOuterWidth);
			System.out.println("nativeViewEleX " + nativeViewEleX);
			double nativeViewEleY = (double) (((double) webViewElementCoY / (double) webViewOuterHeight)
					* relativeScreenViewHeight);
			System.out.println("nativeViewEleY " + nativeViewEleY);
			tapOnCoordinates(webdriver, (nativeViewEleX + Xcoordinate_AddValue), ((nativeViewEleY + urlHeight + 1)));
			webdriver.context(curContext);
		} catch (Exception e) {
			e.getStackTrace();
		}
	}

	public void tapOnCoordinates(AppiumDriver<WebElement> webdriver, final double x, final double y) {
		// new TouchAction(webdriver).tap((int)x, (int)y).perform();
		// int X=(int) Math.round(x); // it will round off the values
		// int Y=(int) Math.round(y);
		System.out.println("X cor - " + x + "," + " Y cor - " + y);
		System.out.println(x);
		System.out.println(y);
		TouchAction action = new TouchAction(webdriver);

		action.press(PointOption.point((int) x, (int) y)).release().perform();

		// action.tap(PointOption.point(X, Y)).perform();

	}

	/**
	 * Click with Web Element using the co-ordinates
	 * 
	 * @param webdriver
	 * @param webViewElement
	 * @param Xcoordinate_AddValue
	 */
	public void clickWithWebElementAndroid(AppiumDriver<WebElement> webdriver, WebElement webViewElement,
			int Xcoordinate_AddValue) {
		String s = null;
		try {
			double urlHeight = 0.0;
			JavascriptExecutor javaScriptExe = (JavascriptExecutor) webdriver;
			int webViewWidth = ((Long) javaScriptExe
					.executeScript("return window.innerWidth || document.body.clientWidth")).intValue();
			int webViewHeight = ((Long) javaScriptExe
					.executeScript("return window.innerHeight || document.body.clientHeight")).intValue();
			Dimension elementSize = webViewElement.getSize();
			int webViewElementCoX = webViewElement.getLocation().getX() + (elementSize.width / 2);
			int webViewElementCoY = webViewElement.getLocation().getY() + (elementSize.height / 2);

			double connectedDeviceWidth = typeCasting(
					javaScriptExe.executeScript("return window.screen.width * window.devicePixelRatio"), webdriver);
			double connectedDeviceHeight = typeCasting(
					javaScriptExe.executeScript("return window.screen.height * window.devicePixelRatio"), webdriver);

			String curContext = webdriver.getContext();
			webdriver.context("NATIVE_APP");
			// urlHeight = (double) connectedDeviceHeight * (0.12);
			/*
			 * if(xpathMap.get("serviceUrl").equalsIgnoreCase("yes")) urlHeight = (double)
			 * screenHeight * (0.12); else
			 * if(xpathMap.get("serviceUrl").equalsIgnoreCase("no")) urlHeight = 0.0; else
			 * urlHeight = (double) screenHeight * (0.22);
			 */
			// urlHeight=0.0;
			double relativeScreenViewHeight = connectedDeviceHeight - urlHeight;
			double nativeViewEleX = (double) (((double) webViewElementCoX / (double) webViewWidth)
					* connectedDeviceWidth);
			// double nativeViewEleY = (double) (((double) webViewElementCoY / (double)
			// webViewHeight) );
			double nativeViewEleY = (double) (((double) webViewElementCoY / (double) webViewHeight)
					* relativeScreenViewHeight);
			tapOnCoordinates(webdriver, nativeViewEleX + Xcoordinate_AddValue, (nativeViewEleY + urlHeight + 1));
			webdriver.context(curContext);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	// method is used to click on the webelements
	public void clickWithTheWebElementAndriod(AppiumDriver<WebElement> webdriver, WebElement webViewElement,
			int Xcoordinate_AddValue) {
		String s = null;
		try {

			JavascriptExecutor javaScriptExe = (JavascriptExecutor) webdriver;
			int webViewWidth = ((Long) javaScriptExe
					.executeScript("return window.innerWidth || document.body.clientWidth")).intValue();
			int webViewHeight = ((Long) javaScriptExe
					.executeScript("return window.innerHeight || document.body.clientHeight")).intValue();
			Dimension elementSize = webViewElement.getSize();
			int webViewElementCoX = webViewElement.getLocation().getX() + (elementSize.width / 2);
			int webViewElementCoY = webViewElement.getLocation().getY() + (elementSize.height / 2);

			double connectedDeviceWidth = typeCasting(
					javaScriptExe.executeScript("return window.screen.width * window.devicePixelRatio"), webdriver);
			double connectedDeviceHeight = typeCasting(
					javaScriptExe.executeScript("return window.screen.height * window.devicePixelRatio"), webdriver);

			System.out.println("webViewHeight " + webViewHeight);
			System.out.println("connectedDeviceHeight " + connectedDeviceHeight);

			int webViewInnerHeight = ((Long) javaScriptExe
					.executeScript("return window.innerHeight || document.body.clientHeight")).intValue();
			System.out.println("webViewInnerHeight " + webViewInnerHeight);
			int webViewOuterHeight = ((Long) javaScriptExe
					.executeScript("return window.outerHeight || document.body.clientHeight")).intValue();
			System.out.println("webViewOuterHeight " + webViewOuterHeight);
			int webViewOffsetHeight = ((Long) javaScriptExe
					.executeScript("return window.offsetHeight || document.body.clientHeight")).intValue();
			System.out.println("webViewOffsetHeight " + webViewOffsetHeight);
			int webViewBottomHeight = webViewOffsetHeight - webViewInnerHeight;
			System.out.println("webViewBottomHeight " + webViewBottomHeight);

			AndroidDriver<WebElement> androidDriver = (AndroidDriver<WebElement>) webdriver;

			long statusBarHeight = (Long) androidDriver.getCapabilities().getCapability("statBarHeight");
			System.out.println("statusBarHeight " + statusBarHeight);

			double pixelRatio = 0;
			Object pixelRatioObject = androidDriver.getCapabilities().getCapability("pixelRatio");

			if (pixelRatioObject instanceof Long) {
				pixelRatio = (Long) androidDriver.getCapabilities().getCapability("pixelRatio");

			} else if (pixelRatioObject instanceof Double) {
				pixelRatio = (Double) androidDriver.getCapabilities().getCapability("pixelRatio");
			}

			/***************************************/
			double navigationBarHeight = 0;
			double urlHeight = 0.0;

			double webViewOffsetHeightInPixel = webViewOffsetHeight * pixelRatio;

			// to check the game in fullscreen
			double hightDifference = connectedDeviceHeight - webViewOffsetHeightInPixel;

			boolean isGameInFullScreenMode = (hightDifference < 2 && hightDifference > -2);
			System.out.println(" isGameInFullScreenMode ::" + isGameInFullScreenMode);

			if (!isGameInFullScreenMode) {
				if (webViewOffsetHeight != 0) {
					// Calculate the navigation Bar height and urlHeigt
					navigationBarHeight = connectedDeviceHeight - (webViewOffsetHeightInPixel + statusBarHeight);

					System.out.println("navigationBarHeight " + navigationBarHeight);
					urlHeight = ((webViewOffsetHeight - webViewHeight) * pixelRatio) + statusBarHeight;
					System.out.println(" urlHeight and  statusBarHeight " + urlHeight);
				} else {
					navigationBarHeight = 0;
					urlHeight = connectedDeviceHeight - ((webViewHeight * pixelRatio));
				}
			}

			/***************************************/

			String curContext = webdriver.getContext();
			webdriver.context("NATIVE_APP");

			/*
			 * if(xpathMap.get("serviceUrl").equalsIgnoreCase("yes")) urlHeight = (double)
			 * screenHeight * (0.12); else
			 * if(xpathMap.get("serviceUrl").equalsIgnoreCase("no")) urlHeight = 0.0; else
			 * urlHeight = (double) screenHeight * (0.22);
			 */
			// urlHeight=0.0;
			double relativeScreenViewHeight = connectedDeviceHeight - urlHeight - navigationBarHeight;
			double nativeViewEleX = (double) (((double) webViewElementCoX / (double) webViewWidth)
					* connectedDeviceWidth);
			// double nativeViewEleY = (double) (((double) webViewElementCoY / (double)
			// webViewHeight) );
			double nativeViewEleY = (double) (((double) webViewElementCoY / (double) webViewHeight)
					* relativeScreenViewHeight);
			tapOnCoordinates(webdriver, nativeViewEleX + Xcoordinate_AddValue, (nativeViewEleY + urlHeight + 1));
			webdriver.context(curContext);
		} catch (Exception e) {
			e.getStackTrace();
		}
	}

	// To get the Bet pannel values
	public String[] verifyBetPannelValues(Mobile_HTML_Report report, String CurrencyName) {
		// TODO Auto-generated method stub
		return null;
	}

	// method is to click the WebElements using Xpath for Component Store Games
	public boolean NativeClickByXpath_CS(String locator) {
		boolean present = false;
		try {
			if (osPlatform.equalsIgnoreCase("Android")) {

				Wait.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathMap.get(locator))));
				WebElement element = webdriver.findElement(By.xpath(xpathMap.get(locator)));
				// clickWithWebElementAndroid(webdriver, element, 0);
				clickWithTheWebElementAndriod(webdriver, element, 0);
				System.out.println("Element Found and Clicked");
				log.debug("Element Found and Clicked");
			}

			else {
				Wait.until(ExpectedConditions.elementToBeClickable(By.xpath(xpathMap.get(locator))));
				/*
				 * MobileElement ele = (MobileElement)
				 * webdriver.findElement(By.xpath(xpathMap.get(locator))); ele.click();
				 */
				// webdriver.executeScript("arguments[0].click();", ele);

				Thread.sleep(2000);
				WebElement ele1 = webdriver.findElement(By.xpath(xpathMap.get(locator)));
				System.out.println(xpathMap.get(locator));
				ele1.click();
				// clickWithWebElement(ele,0);
				/*
				 * int elementWidth =
				 * ele.getSize().getWidth();System.out.println("Element width: "+
				 * elementWidth);int elementHeight =
				 * element.getSize().getHeight();System.out.println("Element width: "+
				 * elementHeight); Actions actions = new Actions(webdriver);
				 * actions.moveToElement(webdriver.findElement(By.tagName("body")), 0, 0);
				 * actions.moveByOffset(xCoordinate, yCoordinate).click().build().perform();
				 */
				System.out.println("Element Found and Clicked");
				log.debug("Element Found and Clicked");

			}

			present = true;
			// webdriver.context(context);
		} catch (Exception e) {
			System.out.println(e.getMessage());
			System.out.println("Unable to click");
			log.debug("Unable to click");
			present = false;
		}
		return present;
	}

	// method is to click the WebElements using id for Component Store Games
	public boolean NativeClickByID_CS(String locator) throws InterruptedException {
		boolean present = false;
		try {
			if (osPlatform.equalsIgnoreCase("Android")) {

				Wait.until(ExpectedConditions.elementToBeClickable(By.id(xpathMap.get(locator))));
				WebElement element = webdriver.findElement(By.id(xpathMap.get(locator)));
				// clickWithWebElementAndroid(webdriver, element, 0);
				clickWithTheWebElementAndriod(webdriver, element, 0);
				System.out.println("Element Found and Clicked");
				log.debug("Element Found and Clicked");

			}

			else {
				// MobileElement ele = (MobileElement)
				// webdriver.findElement(By.id(xpathMap.get(locator)));
				WebElement ele = webdriver.findElement(By.id(xpathMap.get(locator)));
				// webdriver.executeScript("arguments[0].click();", ele);
				ele.click();
				Thread.sleep(2000);
				System.out.println("element Found and Clicked");
				log.debug("Element Found and Clicked");

			}

			present = true;
			// webdriver.context(context);
		} catch (NoSuchElementException e) {
			System.out.println(e.getMessage());
			System.out.println("Unable to Navigate to the clicked Page");
			log.debug("Unable to Navigate to the clicked Page");
			present = false;
		}
		return present;
	}

	/*
	 * Method for payout verification for all bets
	 * 
	 * public void PayoutValidationforBetLVC(Mobile_HTML_Report report,String
	 * regExpression,String currencyName); {
	 * 
	 * }
	 */

	public void freeGameInfoCurrencyFormat(String regExpression, Mobile_HTML_Report currencyReport,
			String currencyName) {

		// TODO Auto-generated method stub

	}

	/*
	 * verifies the RegularExpression
	 */
	public boolean verifyRegularExpression(String curencyAmount, String regExp) {
		return false;

	}

	public void validateMiniPaytableForLVC(Mobile_HTML_Report currencyReport, String regExpression,
			String currencyName) {
		// TODO Auto-generated method stub

	}

	public boolean currencyFormatValidatorForLVC(String curencyAmount, String regExpression) {
		return false;

	}

	public void closeOverlayForLVC() {
		try {
			if (osPlatform.equalsIgnoreCase("iOS")) {
				if (webdriver.getOrientation().equals(ScreenOrientation.PORTRAIT)) {
					TouchAction touchAction = new TouchAction(webdriver);
					touchAction.tap(PointOption.point(40, 120)).perform();
				} else {
					TouchAction touchAction = new TouchAction(webdriver);
					touchAction.tap(PointOption.point(50, 80)).perform();
				}
			} else {// For Andriod mobile

				Actions act = new Actions(webdriver);
				act.moveByOffset(20, 80).click().build().perform();
				act.moveByOffset(-20, -80).build().perform();
			}
		} catch (Exception e) {
			log.error("error while closing overlay ", e);
			log.error(e.getMessage());
		}
	}

	public void isFreeGamesVisible(String url) {
		// TODO Auto-generated method stub

	}

	public boolean assignFreeGames21(String userName, String offerExpirationUtcDate, int mid, int cid, int languageCnt,
			int defaultNoOfFreeGames) {
		// assign free games to above created user
		boolean isFreeGameAssigned = true;
		try {
			String balanceTypeId = xpathMap.get("BalanceTypeID");
			Double dblBalanceTypeID = Double.parseDouble(balanceTypeId);
			balanceTypeId = "" + dblBalanceTypeID.intValue() + "";

			// Assign free games offers to user
			if (TestPropReader.getInstance().getProperty("EnvironmentName").equalsIgnoreCase("Bluemesa")) {
				isFreeGameAssigned = addFreeGameToUserInBluemesa(userName, defaultNoOfFreeGames, offerExpirationUtcDate,
						balanceTypeId, mid, cid, languageCnt * 2);
			} else {
				isFreeGameAssigned = addFreeGameToUserInAxiom(userName, defaultNoOfFreeGames, offerExpirationUtcDate,
						balanceTypeId, mid, cid, languageCnt * 2);
			}
		} catch (Exception e) {
			log.error(e.getMessage(), e);
		}
		return isFreeGameAssigned;
	}

	// @Override
	public void setNameSpace2() {
		int nameSpaceCount = Integer.parseInt(TestPropReader.getInstance().getProperty("ForceNameSpaceCount"));

		for (int count = 0; count < nameSpaceCount; count++) {
			String nameSpace = TestPropReader.getInstance().getProperty("ForceNameSpace" + count);

			String namspaceResponce = null;
			namspaceResponce = GetConsoleText("return " + nameSpace + ".currentScene");
			if (namspaceResponce != null && !"".equals(namspaceResponce)) {
				log.debug("NameSpace for this game :: " + nameSpace);
				GameName = nameSpace;
				log.debug("namsspace for game=" + nameSpace);
				break;
			}
		}

	}

	// @Override
	public boolean clickPlayNow2() {
		Wait = new WebDriverWait(webdriver, 500);

		boolean b = false;
		isAutoplayAvailable();
		try {
			/*
			 * JavascriptExecutor js = ((JavascriptExecutor)webdriver); Coordinates
			 * coordinateObj=new Coordinates(); String align="return "+forceNamespace+
			 * ".getControlById('FreeGamesComponent').views.freeGamesOfferView.Buttons.playNowButton.buttonData.text.layoutStyles.desktop.alignment";
			 * typeCasting("return "+forceNamespace+
			 * ".getControlById('FreeGamesOffersView.playNowButton').x",coordinateObj);
			 * coordinateObj.setX(coordinateObj.getSx());
			 * typeCasting("return "+forceNamespace+
			 * ".getControlById('FreeGamesOffersView.playNowButton').y",coordinateObj );
			 * coordinateObj.setY(coordinateObj.getSx());
			 * typeCasting("return "+forceNamespace+
			 * ".getControlById('FreeGamesOffersView.playNowButton').height",coordinateObj);
			 * coordinateObj.setHeight(coordinateObj.getSx());
			 * typeCasting("return "+forceNamespace+
			 * ".getControlById('FreeGamesOffersView.playNowButton').width",coordinateObj);
			 * coordinateObj.setWidth(coordinateObj.getSx());
			 * coordinateObj.setAlign((js.executeScript(align)).toString());
			 * getComponentCenterCoordinates(coordinateObj);
			 * clickAtCoordinates(coordinateObj.getCenterX(), coordinateObj.getCenterY());
			 */

			// clickAtButton("return "+xpathMap.get("FreeGamesPlayNow"));
			Thread.sleep(2000);
			b = true;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return b;
	}

	/**
	 * method verifies the entry screen of Free Games
	 * 
	 * @param report
	 * @param currencyName
	 * @return
	 */
	public boolean freeGamesEntryScreen(Mobile_HTML_Report report, String currencyName) {
		return false;

	}

	/**
	 * method is for free game Information Icon
	 */
	public String freeGameEntryInfo(Mobile_HTML_Report report, String currencyName, String locator1, String Locator2) {
		return null;
	}

	/**
	 * method is to refresh in Free Games
	 */
	public boolean freeGameOnRefresh(Mobile_HTML_Report report, String currencyName) {
		return false;
	}

	/**
	 * Verifies the Big Win on refresh Base Game
	 * 
	 */
	public String verifyBigWinOnRefresh(Mobile_HTML_Report report, String CurrencyName) {
		return null;

	}

	/**
	 * method is to Back to BaseGame in Free Games
	 */
	public String freeGameBackToBaseGame(Mobile_HTML_Report report, String currencyName) {
		return null;
	}

	// Method is to get the text by using ID
	public String func_GetTextID(String locator) {
		return null;

	}

	/**
	 * Verifies Paytable open
	 * 
	 */
	public boolean paytableVarification(Mobile_HTML_Report report, String CurrencyName) {
		return false;

	}

	/**
	 * Verifies the Paytable text validation
	 * 
	 */
	public String textValidationForPaytableBranding(Mobile_HTML_Report report, String CurrencyName) {
		return null;

	}

	/**
	 * Verifies Paytable payout varification for 3 reel game
	 * 
	 */
	public String[] singlePaytablePayouts(Mobile_HTML_Report report, String CurrencyName) {
		return null;

	}

	/**
	 * method is to
	 * 
	 * @param report
	 * @param currencyName
	 * @return
	 */
	public boolean topBarMenuButtonIcons(Mobile_HTML_Report report, String currencyName) {
		return false;

	}

	/**
	 * Verify Clock from Top Bar
	 *
	 */
	public boolean clockFromTopBar(Mobile_HTML_Report report) {
		return false;
	}

	public boolean clockFromTopBar(Mobile_HTML_Report lvcReport, String currencyName) {
		// TODO Auto-generated method stub
		return false;
	}

	/**
	 * Click menu Buttons
	 * 
	 * @param currencyName
	 * @return
	 * @throws InterruptedException
	 */
	public boolean menuButtonS(Mobile_HTML_Report report, String currencyName) {
		return false;

	}

	/*
	 * set Max bet using scroll bar
	 */
	public String setMaxBetUsingScrollBar(Mobile_HTML_Report report, String CurrencyName) {
		return null;
	}

	/*
	 * set min bet using scroll bar
	 */
	public String setMinBetUsingScrollBar(Mobile_HTML_Report lvcReport, String currencyName) {
		// TODO Auto-generated method stub
		return null;
	}

	/**
	 * method is for to scroll five times
	 * 
	 * @param report
	 * @param CurrencyName
	 * @return
	 */
	public boolean paytableScrollOfFive(Mobile_HTML_Report report, String CurrencyName) {
		return false;

	}

	/**
	 * method is for to scroll seven times
	 * 
	 * @param report
	 * @param CurrencyName
	 * @return
	 */
	public boolean paytableScrollOfSeven(Mobile_HTML_Report report, String CurrencyName) {
		return false;
	}

	/**
	 * method is used to validate the Paytable Values
	 * 
	 * @return
	 */
	public boolean validatePayoutsFromPaytable(Mobile_HTML_Report report, String CurrencyName, String regExpr) // String[]
																												// array
	{
		return false;

	}

	/**
	 * Method for payout verification for all bets
	 */

	public void PayoutValidationforBetLVC(Mobile_HTML_Report report, String regExpr, String currencyName) {

	}

	/**
	 * Verifies the Big Win on refresh
	 * 
	 */
	public String verifyBigWinRefreshOnFreeSpins(Mobile_HTML_Report report, String CurrencyName) {
		return null;

	}

	public void closeOverlayForGamePannelsLVC() {
		try {
			if (Constant.STORMCRAFT_CONSOLE.equalsIgnoreCase(xpathMap.get("TypeOfGame"))) {
				boolean flag = getConsoleBooleanText("return " + xpathMap.get("isSpinBackBtnVisible"));
				if (flag) {
					clickAtButton("return " + xpathMap.get("ClickSpinBackBtn"));
					log.debug("Clicked close totalBet button");
				}
			} else {
				closeOverlayForLVC();
				log.debug("Clicked on screen to close overlay");
			}
		} catch (Exception e) {
			log.error("error in closing overlay", e);
			log.error(e);
		}
	}

	public void isBonusMultiplierVisible() {
		// TODO Auto-generated method stub

	}

	public boolean isFreeSpinTriggered() {
		// TODO Auto-generated method stub
		return false;
	}

	public void fullScreenOverOnTopofContinue() {
		try {
			if (osPlatform.equalsIgnoreCase("Android")) {
				newFeature();
			}
		} catch (Exception e) {
			log.error("error", e);
			log.error(e);
		}

	}

	public boolean loadGameForLVC(String url) {
		boolean isGameLaunch = false;
		try {
			Wait = new WebDriverWait(webdriver, 120);
			webdriver.navigate().to(url);
			System.out.println(url);
			if ((Constant.YES.equalsIgnoreCase(xpathMap.get("continueBtnOnGameLoad")))) {

				if ("Yes".equalsIgnoreCase(xpathMap.get("CntBtnNoXpath"))) {
					log.debug("Waiting for clock to be visible");
					Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("clock"))));
					isGameLaunch = true;
					log.debug(" clock is visible");
				} else {

					Wait.until(ExpectedConditions.visibilityOfElementLocated(
							By.xpath(xpathMap.get("OneDesign_NewFeature_ClickToContinue"))));
					isGameLaunch = true;

				}

			} else {
				log.debug("Waiting for clock to be visible");
				Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("clock"))));
				isGameLaunch = true;
				log.debug(" clock is visible");
			}
			log.debug("game loaded ");
		} catch (WebDriverException e) {
			log.debug("Exception occur in loadgame()");
			log.error(e.getMessage());
		}
		return isGameLaunch;
	}

	// TS64283
	public void autoPlay_with_QSUpdated(Mobile_HTML_Report report) {

	}

	// TS64283
	public void capturePaytableScreenshotWithLandscape(Mobile_HTML_Report report, String language) {

	}

	// TS64283
	public String VerifystoryoptioninpaytableWithLandscape(Mobile_HTML_Report report, String languageCode) {
		String story = null;
		return story;
	}

	// TS64283
	public boolean UnlockAllFreeSpin() {
		return false;
	}

	public void closeOverlay(int x, int y) {

	}

	public boolean isElementVisible(String element) {
		return false;

	}

	public void clickOnButtonUsingCoordinates(String X, String Y) {

	}

	public boolean elementVisible_Xpath(String Xpath) {
		return false;

	}

	/**
	 * for playnext ui sanity
	 * 
	 * @param report
	 * @return
	 */
	public boolean paytableScroll(Mobile_HTML_Report report) {
		// TODO Auto-generated method stub
		return false;
	}

	public void validateCoinSizeSlider(Mobile_HTML_Report sanityReport, String sliderPoint, String betValue,
			String currencyName) {

	}

	public void validateCoinsPerLineSlider(Mobile_HTML_Report report, String sliderPoint, String betValue,
			String CurrencyName) {

	}

	public void validateLinesSlider(Mobile_HTML_Report report, String sliderPoint, String betValue,
			String CurrencyName) {

	}

	public boolean verifySliderValue(String sliderPoint, String betValue) {
		return false;

	}

	public boolean setMaxbetPlayNext() {
		return false;

	}

	public void quickSpinOnBaseGame(Mobile_HTML_Report report) {

	}

	public void validateNFDButton(Mobile_HTML_Report report, String CurrencyName) {

	}

	public boolean verifyPaytableScroll(Mobile_HTML_Report report, String CurrencyName) {
		return false;

	}

	public void verifyMenuOptions(Mobile_HTML_Report report, String CurrencyName) {

	}

	public boolean paytableScrollOfNine(Mobile_HTML_Report report, String CurrencyName) {
		return false;

	}

	public boolean waitForContinueButton() {
		return false;

	}

	public boolean openAutoplayPanel() {
		return false;
		// TODO Auto-generated method stub

	}

	public void verifyBetSliders(Mobile_HTML_Report report, ImageLibrary imageLibrary, String CurrencyName) {

	}

	public boolean openBetPanelOnBaseScene() {
		return false;

	}

	public String entryScreen_Wait_Upadated_FreeSpin(String freeSpinEntryScreen) {

		return null;
	}

	public void validateLossLimitSliderAutoplay(Mobile_HTML_Report report, String sliderPoint, String Value,
			String CurrencyName) {

	}

	public void validateWinLimitSliderAutoplay(Mobile_HTML_Report report, String sliderPoint, String Value,
			String CurrencyName) {

	}

	public void validateTotalBetSliderAutoplay(Mobile_HTML_Report report, String sliderPoint, String Value,
			String CurrencyName) {

	}

	public void validateSpinsSliderAutoplay(Mobile_HTML_Report report, String sliderPoint, String Value,
			String CurrencyName) {

	}

	public void stopAutoPlay() {

	}

	public boolean openMenuPanel() {
		return false;

	}

	public String verifyBonusWin(Mobile_HTML_Report report, String CurrencyName) {
		return null;

	}

	public void verifyBetValuesAppended(boolean isBetChangedIntheConsole, String quickBetVal, Mobile_HTML_Report report,
			String currencyName) {

	}

	public boolean isBetChangedIntheConsole(String betValue) {
		return false;

	}

	public void verifyQuickbetOptionsRegExp(Mobile_HTML_Report report, String currencyName, String regExpr,
			String regExprNoSymbol, String isoCode) {

	}

	public void verifyquickbetsWithNoSymbol(Mobile_HTML_Report report, String currencyName, String regExprNoSymbol) {

	}

	public String verifyFSCurrentWinAmt(Mobile_HTML_Report report, String CurrencyName) {
		return null;

	}

	public String verifyFreeSpinBigWin(Mobile_HTML_Report report, String CurrencyName) {
		return null;

	}

	public boolean waitForElement(String hook) {
		return false;

	}

	public boolean verifyGridPayouts(Mobile_HTML_Report report, String regExp, String CurrencyName, String isoCode) {
		return false;

	}

	public String[] paytablePayoutsOfScatter(Mobile_HTML_Report report, String CurrencyName) // String[] array
	{
		return null;

	}

	public String[] paytablePayoutsOfScatterWild(Mobile_HTML_Report report, String CurrencyName) // String[] array
	{
		return null;

	}

	public void paytableOpen() {

	}

	public boolean isElementVisibleUsingHook(String elementHook) {
		return false;

	}

	public String funcGetText(String locator) {
		return locator;

	}

	public void closeUsingCoordinates() {

	}

	public boolean scrollUsingElement(String element) {
		return false;
	}

	public boolean verifyRegularExpressionPlayNext(Mobile_HTML_Report report, String regExp, String method,
			String isoCode) {
		return false;
	}

	public String verifyBonusWinInFS(Mobile_HTML_Report report, String CurrencyName) {
		return null;

	}

	/*
	 * Method to click FG info btn and return FGinfo
	 */
	public String freeGameEntryInfo(ImageLibrary imageLibrary, String fgInfotxt) {
		return null;
	}

	public boolean clickOnEntryScreenDiscard(ImageLibrary imageLibrary) {
		return false;

	}

	public boolean verifySettingsOptions(Mobile_HTML_Report report, String CurrencyName) {
		return false;
	}

	public void verifyHelpOnTopbar(Mobile_HTML_Report report, String CurrencyName) {
	}

	public void checkpagenavigation(Mobile_HTML_Report report, String gameurl, String CurrencyName) {

	}

	public void verifyquickbetOptionsRegExp(Mobile_HTML_Report report, String currencyName, String regExpr,
			String regExprNoSymbol, String isoCode) {

	}

	public void clickOnContinue() {

	}

	public boolean clickOnPlayLater(ImageLibrary imageLibrary) {

		return false;

	}

	public boolean confirmDiscardOffer(ImageLibrary imageLibrary) {
		return false;
	}

	public boolean clickPlayNow(ImageLibrary imageLibrary) {
		return false;
	}

	public boolean spinclick(ImageLibrary imageLibrary) {
		return true;
	}

	public void verifyAutoplayOptions(Mobile_HTML_Report report, String languageCurrency) {
		// TODO Auto-generated method stub

	}

	/**
	 * This method is used to verify big win with image
	 * 
	 * @author pb61055
	 */
	public String verifyBigWinImg(Mobile_HTML_Report report, ImageLibrary imageLibrary, String CurrencyName) {
		return CurrencyName;

	}

	/**
	 * This method is used to current win with image
	 * 
	 * @author pb61055
	 */
	public String getCurrentWinAmtImg(Mobile_HTML_Report report, ImageLibrary imageLibrary, String CurrencyName) {
		return CurrencyName;

	}

	/**
	 * This method is used to set mobile context as chrominum/web view
	 * 
	 * @author pb61055
	 */
	public void setChromiumWebViewContext() {
		try {
			if (webdriver instanceof AndroidDriver) {
				webdriver.context("CHROMIUM");
			} else if (webdriver instanceof IOSDriver) {
				Set<String> contexts = webdriver.getContextHandles();
				for (String context : contexts) {
					if (context.startsWith("WEBVIEW")) {
						log.debug("context going to set in IOS is:" + context);
						webdriver.context(context);
					}
				}
			}
			Thread.sleep(2000);
		} catch (Exception e) {
			log.error(e.getMessage(), e);
		}
	}

	/**
	 * This method is used to click on Base scene continue/NFD buttin
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 */
	public void clickOnBaseSceneContinueButton(Mobile_HTML_Report report, ImageLibrary imageLibrary,
			String currencyName) {

	}

	/**
	 * This method is used to refresh game
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 */
	public void refreshGame(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName) {

	}

	/**
	 * This method is used to verify quick spin
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 */
	public void verifyQuickSpin(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName) {

	}

	/**
	 * This method is used to open Autoplay
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 * @return
	 */
	public boolean openAutoplayPanel(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName) {
		return false;

	}

	/**
	 * This method is used to validate Autoplay panel
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 */
	public void verifyAutoplayPanel(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName) {

	}

	/**
	 * This method is used to click on start autoplay
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 */
	public void startAutoplay(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName) {

	}

	/**
	 * This method is used to stop autoplay spins
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 */
	public void stopAutoplay(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName) {

	}

	/**
	 * This method is used to open bet panel
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 * @return
	 */
	public boolean openBetPanel(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName) {
		return false;

	}

	/**
	 * This method is used to validate bet panel
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 */
	public void verifyBetPanel(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName) {

	}

	/**
	 * This method is used to validate set max bet
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 */
	public void setMaxBet(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName) {

	}

	/**
	 * This method is used to open Menu panel
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 * @return
	 */
	public boolean openMenuPanel(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName) {
		return false;

	}

	/**
	 * This method is used to close settings/Paytable/Autoplay/bet using close
	 * button
	 * 
	 * @author pb61055
	 * @param imageLibrary
	 * @return
	 */
	public boolean closeButton(ImageLibrary imageLibrary) {
		return false;

	}

	/**
	 * This method is is used to verify paytable and paytable scroll
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 */
	public void verifyPaytable(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName) {

	}

	/**
	 * This method is used to validate Settings panel
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 */
	public void verifySettingsPanel(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName) {

	}

	/**
	 * *This method is used to open paytable
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 * @return
	 */
	public boolean openPaytable(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName) {
		return false;

	}

	/**
	 * This method is used to close paytable
	 * 
	 * @author pb61055
	 * @param imageLibrary
	 * @return
	 */
	public boolean closePaytable(ImageLibrary imageLibrary) {
		return false;

	}

	/**
	 * This method is used to open settings
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 * @return
	 */
	public boolean openSettingsPanel(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName) {
		return false;

	}

	public void verifyHelpNavigation(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName,
			String RTP) {

	}

	/**
	 * This method is used for verifying currency format for credits
	 * 
	 * @author pb61055
	 * @param report
	 * @param currencyName
	 * @param regExpr
	 */

	public void verifyCreditsCurrencyFormat(Mobile_HTML_Report report, String regExpr) {

	}

	/**
	 * This method is used for verifying currency format for credits
	 * 
	 * @author pb61055
	 * @param report
	 * @param currencyName
	 * @param regExpr
	 */

	public void verifyBetCurrencyFormat(Mobile_HTML_Report report, String regExpr) {

	}

	/**
	 * This method is used to validate paytable payout currency format
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 * @param regExpr
	 */
	public void validatePaytablePayoutsCurrencyFormat(Mobile_HTML_Report report, ImageLibrary imageLibrary,
			String currencyName, String regExpr, String isoCode) {

	}

	/**
	 * This method is used to validate normal win amount
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 * @param regExpr
	 */
	public void verifyNormalWinCurrencyFormat(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName,
			String regExpr, String isoCode) {

	}

	/**
	 * This method is used to validate big win amount
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 * @param regExpr
	 */
	public void verifyBigWinCurrencyFormat(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName,
			String regExpr, String isoCode) {

	}

	/**
	 * This method is used to validate Bonus/Amazing win amount
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 * @param regExpr
	 */
	public void verifyBonusWinCurrencyFormat(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName,
			String regExpr, String isoCode) {

	}

	/**
	 * This method is used to verify Freespins currency format
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 * @param regExpr
	 */
	public void verifyFreeSpinsCurrencyFormat(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName,
			String regExpr, String isoCode, String regExprNoSymbol) {

	}

	/**
	 * This method is used to verify Free spins summary currency format
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 * @param regExpr
	 */
	public void verifyFreeSpinsSummaryScreen(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName,
			String regExpr) {

	}

	/**
	 * This method is used to verify Free games entry screen and free games info
	 * text currency format
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 * @param regExpr
	 */
	public void verifyFreeGamesEntryScreen(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName,
			String regExpr, String isoCode) {

	}

	/**
	 * This method is used to verify and click on free games play later button
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 */
	public void freeGamesPlayLater(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName) {

	}

	/**
	 * This method is used to verify and click on free games play now button
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 */
	public void freeGamesPlayNow(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName) {

	}

	/**
	 * This method is used to verify delete button on FG's entry screen
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 */
	public void freeGamesDeleteEntryScreen(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName) {

	}

	/**
	 * This method is used for free games delete on base game screen
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 * @param regExpr
	 */
	public void freeGamesDeleteBaseGameScreen(Mobile_HTML_Report report, ImageLibrary imageLibrary,
			String currencyName) {

	}

	/**
	 * This method is used verify FG Summary screen currency format
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 * @param regExpr
	 */
	public void verifyFGSummaryScreen(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName,
			String regExpr, String isoCode) {

	}

	public void verifyValueAddsNavigation(Mobile_HTML_Report report, ImageLibrary imageLibrary, String languageCode,
			String playerProtectionNavigation, String cashCheckNavigation, String helpNavigation,
			String playCheckNavigation, String rTP, String playCheckTranscations, String playCheckLast30days) {
		// TODO Auto-generated method stub

	}

	public void validateSessionReminderBaseScene(Mobile_HTML_Report report, String userName2, ImageLibrary imageLibrary,
			String languageCode, String sessionReminderUserInteraction, String sessionReminderContinue,
			String sessionReminderExitGame) {
		// TODO Auto-generated method stub

	}

	public void validateBonusFundsNotificationBaseScene(Mobile_HTML_Report report, String userName2,
			ImageLibrary imageLibrary, String languageCode, String closeBtnEnabledCMA) {
		// TODO Auto-generated method stub

	}

	/**
	 * To verify Session reminder is visible or not
	 */
	public boolean sessionReminderPresent() {
		boolean isSessionReminderVisible = false;
		WebDriverWait Wait = new WebDriverWait(webdriver, 60);
		try {
			setChromiumWebViewContext();
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(xpathMap.get("sessionReminderVisible"))));
			List<WebElement> elementList = webdriver.findElements(By.xpath(xpathMap.get("sessionReminderVisible")));
			if (elementList.size() > 0) {
				log.debug("Session reminder found");
				System.out.println("Session reminder found");
				isSessionReminderVisible = true;
			}
		} catch (Exception e) {
			log.error("Not able to verify session reminder status", e);
			System.out.println("Session reminder not found");
			isSessionReminderVisible = false;
		}
		return isSessionReminderVisible; // if it return false then there is no session reminder present on the screen
	}

	public void checkSpinStopBaseScene(Mobile_HTML_Report report, ImageLibrary imageLibrary, String languageCode,
			String checkSpinStopBaseSceneUsingCoordinates) {
		// TODO Auto-generated method stub

	}

	/**
	 * This method is used to create market specific url by using Application url
	 * 
	 * @author pb61055
	 * @param url
	 * @param productId
	 * @param market
	 * @param brand
	 * @param retrunUrlParam
	 * @return
	 */
	public String createRegMarketUrl(String userName, String url, int productId, String market, String brand,
			String retrunUrlParam, String languageCode) {
		String launchURl = null;
		String urlNew = null;
		try {
			launchURl = url.replaceFirst("\\busername=.*?(&|$)", "username=" + userName + "$1");
			launchURl = launchURl.replaceAll("productId=5007", "productId=" + productId);
			launchURl = launchURl.replaceAll("market=dotcom", "market=" + market);
			launchURl = launchURl.replaceAll("brand=islandparadise", "brand=" + brand);
			launchURl = launchURl.replaceFirst("IslandParadise", retrunUrlParam);

			urlNew = replaceUserNameLanguageCode(launchURl, languageCode, userName);

			log.info(market + " url = " + urlNew);
			System.out.println(market + " url = " + urlNew);

		} catch (Exception e) {
			log.error(e.getMessage(), e);
		}
		return urlNew;
	}

	/**
	 * This method is used to change language code and username
	 * 
	 * @author pb61055
	 * @param url
	 * @param languageCode
	 * @return
	 */
	public String replaceUserNameLanguageCode(String url, String languageCode, String userName) {
		String launchURl = null;
		try {
			launchURl = url.replaceFirst("\\busername=.*?(&|$)", "username=" + userName + "$1");
			if (launchURl.contains("LanguageCode"))
				launchURl = launchURl.replaceAll("LanguageCode=en", "LanguageCode=" + languageCode);
			else if (launchURl.contains("languagecode"))
				launchURl = launchURl.replaceAll("languagecode=en", "languagecode=" + languageCode);
			else if (launchURl.contains("languageCode"))
				launchURl = launchURl.replaceAll("languageCode=en", "languageCode=" + languageCode);
			log.debug("URL : " + launchURl);
		} catch (Exception e) {
			log.error(e.getMessage(), e);
		}
		return launchURl;
	}

	/**
	 * This method is used to launch the game and click on NFD button
	 * 
	 * @author pb61055
	 * @param url
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 * @return
	 */
	public boolean loadGameAndClickContinueBtn(String url, Mobile_HTML_Report report, ImageLibrary imageLibrary,
			String currencyName) {
		return false;

	}

	/**
	 * This method used to spin until free spins are triggered
	 * 
	 * @author pb61055
	 * @param imageLibrary
	 */
	public void spinClick(ImageLibrary imageLibrary) {

	}

	/**
	 * This method is used to verify free spins entry screen
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param languageCode
	 */
	public void freeSpinsEntryScreen(Mobile_HTML_Report report, ImageLibrary imageLibrary, String languageCode,
			String FreeSpinTransitionBaseGameToFeature) {

	}

	/**
	 * This method is used to select FS option
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 */
	public void SelectFreeSpinOption(Mobile_HTML_Report report, ImageLibrary imageLibrary) {
	}

	public void netPositioninFSAfterRefresh(Mobile_HTML_Report report, String languageCode) {

	}

	public void checkFSRefresh(Mobile_HTML_Report report, ImageLibrary imageLibrary, String languageCode,
			String NetPositionInFS, String BounsFundsNotification, String freeSpinUserName) {

	}

	public void checkSpinReelLanding(Mobile_HTML_Report report, ImageLibrary imageLibrary, String languageCode) {

	}

	public void validateSessionReminderFSScene(Mobile_HTML_Report report, String userName, ImageLibrary imageLibrary,
			String languageCode, String SessionReminderUserInteraction, String SessionReminderContinue,
			String SessionReminderExitGame) {

	}

	/**
	 * This method is used for check reel landing in FS and Bonus
	 * 
	 * @author pb61055
	 * @param report
	 * @param currencyName
	 */
	public void checkSpinReelLandingFeature(Mobile_HTML_Report report, String languageCode) {
		// TODO Auto-generated method stub

	}

	/**
	 * This method is used to verify Free Spins- Transition from Feature to Base
	 * Game and refresh during transition
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param languageCode
	 */
	public void freeSpinsToBaseGameTransitions(Mobile_HTML_Report report, ImageLibrary imageLibrary,
			String languageCode, String FreeSpinTransitionFeatureToBaseGame,
			String FreeSpinTransitionFeatureToBaseGameRefresh) {

	}

	/**
	 * This method is used to wait till Free spins continue button is visible
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param languageCode
	 * @return
	 */
	public boolean waitTillFreespinSummary(Mobile_HTML_Report report, ImageLibrary imageLibrary, String languageCode) {
		return false;

	}

	/**
	 * This method is used to close freespins
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 */
	public void closeFreeSpins(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName) {

	}

	/**
	 * This method is used to refresh game
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 */
	public void refreshGameAndClickContinueBtn(Mobile_HTML_Report report, ImageLibrary imageLibrary,
			String currencyName) {

	}

	/**
	 * This method is used to check net position value after refresh
	 * 
	 * @author pb61055
	 * @param report
	 * @param languageCode
	 */
	public void checkNetPositionAfterRefresh(Mobile_HTML_Report report, ImageLibrary imageLibrary,
			String languageCode) {

	}

	/**
	 * This method is used to calculate net postion value and verify if win amount
	 * is updated correctly
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 * @param winType
	 */
	public void verifyNetPositionValue(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName,
			String winType) {

	}

	/**
	 * This method is used to validate if player has won any win
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 * @param winType
	 * @return
	 */
	public boolean isPlayerWon(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName,
			String winType) {
		return false;

	}

	/**
	 * This method is used to validate if player has won any win
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 * @param winType
	 * @return
	 */
	public boolean isPlayerWon(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName) {
		return false;

	}

	/**
	 * This method is used to get Player win amount by Passing win type
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 * @param winType
	 * @return
	 */
	public String playerWinAmount(Mobile_HTML_Report report, ImageLibrary imageLibrary, String currencyName,
			String winType) {
		return winType;

	}

	/**
	 * This method is used to verify Net Position in Free spins
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param languageCode
	 * @param winType
	 */
	public void verifyNetPositionFreeSpins(Mobile_HTML_Report report, ImageLibrary imageLibrary, String languageCode,
			double dblNetPositionBeforeFS) {

	}

	/**
	 * This method is used to get net poition before any feature is triggered
	 * 
	 * @author pb61055
	 * @return
	 */
	public double getNetPositionDblValue() {
		return 0;

	}

	/**
	 * This method is used to validate cma for Free spins
	 * 
	 * @author pb61055
	 * @param report
	 * @param userName
	 * @param imageLibrary
	 * @param languageCode
	 * @param closeBtnEnabledCMA
	 */
	public void validateBonusFundsNotificationFS(Mobile_HTML_Report report, String userName, ImageLibrary imageLibrary,
			String languageCode, String closeBtnEnabledCMA) {

	}

	/**
	 * This method is used t trigger bonus
	 * 
	 * @author pb61055
	 * @param imageLibrary
	 */
	public boolean triggerBonus(ImageLibrary imageLibrary) {
		return false;
	}

	/**
	 * This method is used to select bonus option
	 * 
	 * @author pb61055
	 * @param imageLibrary
	 */
	public void selectBonusOption(ImageLibrary imageLibrary) {
	}

	/**
	 * This method is used to verify Link and Win Transitions
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param languageCode
	 * @param BonusTransitionBaseGameToFeature
	 * @param BonusTransitionBaseGameToFeatureRefresh
	 */
	public void verifyBonusTransitionBaseToBonus(Mobile_HTML_Report report, ImageLibrary imageLibrary,
			String languageCode, String BonusTransitionBaseGameToFeature,
			String BonusTransitionBaseGameToFeatureRefresh) {
	}

	/**
	 * This method is used to validate Bonus session reminder
	 * 
	 * @author pb61055
	 * @param report
	 * @param userName
	 * @param imageLibrary
	 * @param languageCode
	 * @param SessionReminderUserInteraction
	 * @param SessionReminderContinue
	 * @param SessionReminderExitGame
	 */
	public void validateSessionReminderBonus(Mobile_HTML_Report report, String userName, ImageLibrary imageLibrary,
			String languageCode, String SessionReminderUserInteraction, String SessionReminderContinue,
			String SessionReminderExitGame) {
	}

	/**
	 * This method is used to verify link and win feature
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param languageCode
	 */
	public void verifyLinkAndWinFeature(Mobile_HTML_Report report, ImageLibrary imageLibrary, String languageCode) {
	}

	/**
	 * This method is used to spin until img appear on screen
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param image
	 */
	public void spinUntilImageAppears(Mobile_HTML_Report report, ImageLibrary imageLibrary, String image) {
	}

	/**
	 * This method is used to verify Net Position in Bonus
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param languageCode
	 * @param winType
	 */
	public void verifyNetPositionBonus(Mobile_HTML_Report report, ImageLibrary imageLibrary, String languageCode,
			String winType, double dblNetPositionBeforeBonus) {
	}

	/**
	 * This method is used to verify Link and Win Transitions
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param languageCode
	 * @param BonusTransitionFeatureToBaseGame
	 * @param BonusTransitionFeatureToBaseGameRefresh
	 */
	public void verifyBonusTransitionBonusToBase(Mobile_HTML_Report report, ImageLibrary imageLibrary,
			String languageCode, String BonusTransitionFeatureToBaseGame,
			String BonusTransitionFeatureToBaseGameRefresh) {
	}

	public void FGOfferDelete(Mobile_HTML_Report report, ImageLibrary imageLibrary, String languageCode) {
		// TODO Auto-generated method stub

	}

	public void RefreshGame(String Element) {

	}

	/**
	 * This method is used to check FG offer Screen
	 * 
	 * @author sp68146
	 * @param report
	 * @param imageLibrary
	 * @param languageCode
	 * @throws InterruptedException
	 */
	public boolean fGAssignment(Mobile_HTML_Report report, ImageLibrary imageLibrary, String languageCode)
			throws InterruptedException {
		return false;
	}

	public void fGPlayLater(Mobile_HTML_Report report, ImageLibrary imageLibrary, String languageCode) {
		// TODO Auto-generated method stub

	}

	public void freeSpinsInFG(Mobile_HTML_Report report, ImageLibrary imageLibrary, String languageCode) {

	}

	public void FGOfferAcceptAndResumeFG(Mobile_HTML_Report report, ImageLibrary imageLibrary, String languageCode,
			String FGOfferResume, String FGSummaryScreen, String fGOfferDiscardBaseScene) {

	}

	public boolean AcceptfgOffer(Mobile_HTML_Report report, ImageLibrary imageLibrary, String languageCode) {
		return false;

	}

	/**
	 * This method is used to change language code and username
	 * 
	 * @author pb61055
	 * @param url
	 * @param languageCode
	 * @return
	 */
	public String replaceExternalTokenLanguageCode(String url, String languageCode, String userName) {
		String launchURl = null;
		try {
			launchURl = url.replaceFirst("\\bexternalToken=.*?(&|$)", "externalToken=" + userName + "$1");
			if (launchURl.contains("LanguageCode"))
				launchURl = launchURl.replaceAll("LanguageCode=en", "LanguageCode=" + languageCode);
			else if (launchURl.contains("languagecode"))
				launchURl = launchURl.replaceAll("languagecode=en", "languagecode=" + languageCode);
			else if (launchURl.contains("languageCode"))
				launchURl = launchURl.replaceAll("languageCode=en", "languageCode=" + languageCode);
			log.debug("URL : " + launchURl);

			loadGame(launchURl);
			Thread.sleep(5000);

		} catch (Exception e) {
			log.error(e.getMessage(), e);
		}
		return launchURl;
	}

	/**
	 * This method is used to validate set required bet
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param Image
	 * @param currencyName
	 */
	public void setBet(Mobile_HTML_Report report, ImageLibrary imageLibrary, String string, String languageCode) {
		// TODO Auto-generated method stub

	}

	/**
	 * This method is used to validate set Min bet
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param Image
	 * @param currencyName
	 */
	public void setMinBet(Mobile_HTML_Report report, ImageLibrary imageLibrary, String string, String languageCode) {
		// TODO Auto-generated method stub

	}

	/**
	 * This method is used to change language code and username
	 * 
	 * @author pb61055
	 * @param url
	 * @param languageCode
	 * @return
	 */
	public String replaceUserNameExternalTokenLanguageCode(String url, String languageCode, String userName,
			String QuickFire) {
		String launchURl = null;
		try {

			if (QuickFire.equalsIgnoreCase("yes")) {
				loadGame(url);
				Thread.sleep(5000);
				launchURl = url.replaceFirst("\\bexternalToken=.*?(&|$)", "externalToken=" + userName + "$1");
			} else {
				launchURl = url.replaceFirst("\\busername=.*?(&|$)", "username=" + userName + "$1");
			}
			if (launchURl.contains("LanguageCode"))
				launchURl = launchURl.replaceAll("LanguageCode=en", "LanguageCode=" + languageCode);
			else if (launchURl.contains("languagecode"))
				launchURl = launchURl.replaceAll("languagecode=en", "languagecode=" + languageCode);
			else if (launchURl.contains("languageCode"))
				launchURl = launchURl.replaceAll("languageCode=en", "languageCode=" + languageCode);
			log.debug("URL : " + launchURl);

		} catch (Exception e) {
			log.error(e.getMessage(), e);
		}
		return launchURl;
	}

	/**
	 * To verify Help text link on top bar
	 */
	public void verifyHelpTextlink(Mobile_HTML_Report report, String currencyName) {
		// TODO Auto-generated method stub
	}

	/**
	 * This method used to spin until free spins are triggered
	 * 
	 * @author pb61055
	 */
	public void spin(Mobile_HTML_Report report, ImageLibrary imageLibrary, String languageCode) {

	}

	/**
	 * This method is used to verify SelfTest using image or xpath
	 * 
	 * @author pb61055
	 */
	public void verifySelfTestNavigation(Mobile_HTML_Report report, String currencyName) {

	}

	public void practicePlay(Mobile_HTML_Report report, ImageLibrary imageLibrary, String languageCode) {
		// TODO Auto-generated method stub

	}

	/**
	 * This method is used to go to RTP in helpfile
	 * 
	 * @author pb61055
	 * @param report
	 * @param currencyName
	 */
	public void helpFileRTP(Desktop_HTML_Report report, String currencyName) {

	}

	/**
	 * This method is used to refresh during spin
	 * 
	 * @author pb61055
	 * @param report
	 * @param imageLibrary
	 * @param currencyName
	 */
	public void spinRefresh(Desktop_HTML_Report report, ImageLibrary imageLibrary, String currencyName) {

	}

	public void verifyNetPositionBaseScene(Mobile_HTML_Report report, ImageLibrary imageLibrary, String languageCode,
			String regExpr, String netPositionLaunch, String netPositionRefresh, String netPositionWinLoss,
			String netPositionBigWin, String netPositionRefreshWin, String netPositionRefreshLoss) {
		// TODO Auto-generated method stub

	}

	/**
	 * This method is used to check if net posotion is available or not
	 */
	public boolean isNetProfitAvailable() {
		return false;

	}

	public void spinCases(Mobile_HTML_Report report, ImageLibrary imageLibrary, String languageCode) {
		// TODO Auto-generated method stub

	}

	public void loadGamewithCredits(Mobile_HTML_Report report, ImageLibrary imageLibrary, String languageCode) {
		// TODO Auto-generated method stub

	}

	public void loadGamewithoutCredits(Mobile_HTML_Report report, ImageLibrary imageLibrary, String languageCode,
			String userName2, String balance) {
		// TODO Auto-generated method stub

	}

	public boolean creditDepositUsingBanking(Mobile_HTML_Report report, String userName2, String balance,
			String languageCode, ImageLibrary imageLibrary, String currencySymbol) {
		// TODO Auto-generated method stub
		return false;
	}

	public void verifyPlayCheckNavigation(Mobile_HTML_Report report, ImageLibrary imageLibrary, String languageCode,
			String PlayCheckTransactions, String PlayCheckLast30days) {

	}

	// TC-00 (Betway)PD69988//
	// Cookies Button Handling//
	public boolean Autoplay(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
//					report.detailsAppend("Betway Home Page", "before clicking Cookies", "Cookies Btn Should Display", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("AutoPlayID"))).click();
			Thread.sleep(1000);
//					Allure.addAttachment("Cookies Btn In Home Page",new ByteArrayInputStream(((TakesScreenshot) driver).getScreenshotAs(OutputType.BYTES)));
//					File destinationFile = new File("D:\\EasyHelp\\BetwayScreenShots\\screenshot.png");			
//					report.detailsAppend("Betway Home Page", "after click Cookies", "Cookies Btn is Disappeared", "Pass");

		} catch (Exception e) {
			log.error("Focus not get changed");

			webdriver.navigate().refresh();
			return false;
		}
		// webdriver.getWindowHandle();
		return true;

	}

	// Vuvuzela SignUp
	/// BETWAY VuvuZela Cookies TCS ////
	public boolean VuvuzelCookies(Mobile_HTML_Report report) throws InterruptedException {

		try {

			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuBetwayLogoPopup"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaCookies"))).click();
			report.detailsAppend("BetwayVuvuzela CookiesClick", "CookiesButton Should be Clicked",
					"CookuesButton is Clicked", "Pass");
			log.debug("Switch to default tab");
		} catch (Exception e) {

			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaCookies"))).click();
			report.detailsAppend("BetwayVuvuzela CookiesClick", "CookiesButton Should be Clicked",
					"CookuesButton is Clicked", "Pass");

			return false;
		}
		return true;

	}

	/// BETWAY VuvuZela Cookies TCS ////
	// TC-1 (SignUp) PD69988//
	// Check if the "Sign Up" Button is visible on the homepage.//
	public boolean SignupInHomePage(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			report.detailsAppend("TC-1 BetwayVuvuzela SignUp", "Signup Button in Home page Should be Visible",
					"Signup Button in Home page is Visible", "Pass");
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-1 BetwayVuvuzela SignUp", "Signup Button in Home page Should be Visible",
					"Signup Button in Home page is Visible", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-3 (SignUp) PD69988//
	// Check if there is a visible "Sign Up" button on the Hamburger Menu.//
	public boolean SignupInHamburgerMenu(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC-3 BetwayVuvuzela SignUp", "Signup In HamburgerMenu Should be Visible",
					"Signup in HamburgerMenu  is Visible", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseHamburgerMenu"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-3 BetwayVuvuzela SignUp", "Signup in HamburgerMenu Should be Visible",
					"Signup in HamburgerMenu  is Visible", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-5 (SignUp) PD69988//
	// Check if the required sign-up fields (e.g., mobile number, password) are
	// visible on the sign-up form..//
	public boolean SignUpForm(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(6, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC-5 BetwayVuvuzela SignUp", "Signup Form Should be Visible",
					"Signup form  is Visible", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInMenu"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-5 BetwayVuvuzela SignUp", "Signup form Should be Visible",
					"Signup form is Visible", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-7 (SignUp) PD69988//
	// Check if the required sign-up fields (e.g., mobile number, password) are
	// visible on the sign-up form..//
	public boolean SignupValidNumber(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno1"));
				Thread.sleep(2000);
			} else {

				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno"));
				Thread.sleep(2000);
			}

			report.detailsAppend("TC-7 BetwayVuvuzela SignUp", "Mobile Number Should be Valid",
					"Mobile Number is Valid", "Pass");

			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInMenu"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-7 BetwayVuvuzela SignUp", "Mobile Number Should be Valid",
					"Mobile Number is Valid", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-9 (SignUp) PD69988//
	// Check if the system accepts a strong password.//
	public boolean SignupStrongPassword(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno1"));
				Thread.sleep(2000);
			} else {

				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno"));
				Thread.sleep(2000);
			}
			webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("Passworddata"));
			Thread.sleep(2000);
			report.detailsAppend("TC-9 BetwayVuvuzela SignUp", "Strong Password Should be Valid",
					"Strong Password is Valid", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-9 BetwayVuvuzela SignUp", "Strong Password Should be Valid",
					"Strong Password is Valid", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-11 (SignUp) PD69988//
	// Check if the system rejects a blank password.//
	public boolean SignupBlankStrongPassword(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno1"));
				Thread.sleep(2000);
			} else {

				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno"));
				Thread.sleep(2000);
			}
			webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys("");
			Thread.sleep(2000);

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("Register"))).click();
				Thread.sleep(2000);
			} else {
				webdriver.findElement(By.xpath(xpathMap.get("SignupNextButton"))).click();
				Thread.sleep(2000);

			}
			report.detailsAppend("TC-11 BetwayVuvuzela SignUp", "Blank Password Should be Rejected",
					"Blank Password is Rejected", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-11 BetwayVuvuzela SignUp", "Blank Password Should be Rejected",
					"Blank Password is Rejected", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-13 (SignUp) PD69988//
	// Check if the system rejects a password succeeding the maximum allowed
	// length.//
	public boolean SignupMinimumPassword(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno1"));
				Thread.sleep(2000);
			} else {

				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno"));
				Thread.sleep(2000);
			}
			webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("MinPass"));
			Thread.sleep(2000);
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("Register"))).click();
				Thread.sleep(2000);
			} else {
				webdriver.findElement(By.xpath(xpathMap.get("SignupNextButton"))).click();
				Thread.sleep(2000);

			}
			report.detailsAppend("TC-13 BetwayVuvuzela SignUp", "Minimum length Password Should be Rejected",
					"Minimum length is Rejected", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-13 BetwayVuvuzela SignUp", "Minimum length Should be Rejected",
					"Minimum length is Rejected", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-15 (SignUp) PD69988//
	// Check if the system accepts a valid Last name.//
	public boolean SignupLastName(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno1"));
				Thread.sleep(2000);
			} else {

				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno"));
				Thread.sleep(2000);
			}

			webdriver.findElement(By.xpath(xpathMap.get("Lastname"))).sendKeys(xpathMap.get("Betway"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Firstname"))).sendKeys(xpathMap.get("Zensar"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("Passworddata"));
			Thread.sleep(2000);

			report.detailsAppend("TC-15 BetwayVuvuzela SignUp", "Last Name Should be Valid", "Last Name is Valid",
					"Pass");

			webdriver.navigate().refresh();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC-15 BetwayVuvuzela SignUp", "Last Name Should be Valid", "Last Name is Valid",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-17 (SignUp) PD69988//
	// Check if the system accepts a valid Last name.//
	public boolean SignupNextButton(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC-17 BetwayVuvuzela SignUp", "Next Button Should be Visible",
					"Next Button is Visible", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-17 BetwayVuvuzela SignUp", "Next Button Should be Visible",
					"Next Button is Visible", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-19 (SignUp) PD69988//
	// Verify user is not able to signup if Day is not selected from date of birth
	// dropdown//
	public boolean SignupDayClick(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno1"));
				Thread.sleep(2000);
			} else {

				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno"));
				Thread.sleep(2000);
			}

			webdriver.findElement(By.xpath(xpathMap.get("Lastname"))).sendKeys(xpathMap.get("Betway"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Firstname"))).sendKeys(xpathMap.get("Zensar"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("Passworddata"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("EyeIcon"))).click();
			Thread.sleep(2000);

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				Thread.sleep(2000);
			} else {
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SignupNextButton"))).click();
				Thread.sleep(2000);
			}
			Thread.sleep(2000);
			System.out.print("NextButton is Present");
			webdriver.findElement(By.xpath(xpathMap.get("MonthSelection"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Month"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("YearSelection"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Year"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Register"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC-19 BetwayVuvuzela SignUp", "Warning Should be Visible when Day not Selected",
					"Warning is Visible when Day not Selected", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			System.out.print(e);
			report.detailsAppend("TC-19 BetwayVuvuzela SignUp", "Warning Should be Visible when Day not Selected",
					"Warning is Visible when Day not Selected", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-21 (SignUp) PD69988//
	// Verify user is not able to signup if Month is not selected from date of birth
	// dropdown//
	public boolean SignupMonthClick(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno1"));
				Thread.sleep(2000);
			} else {

				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno"));
				Thread.sleep(2000);
			}

			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Lastname"))).sendKeys(xpathMap.get("Betway"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Firstname"))).sendKeys(xpathMap.get("Zensar"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("Passworddata"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("EyeIcon"))).click();
			Thread.sleep(2000);

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				Thread.sleep(2000);
			} else {
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SignupNextButton"))).click();
				Thread.sleep(2000);
			}
			Thread.sleep(2000);
			System.out.print("NextButton is Present");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("Register"))).isDisplayed());
			System.out.print("RegisterButton is Present");
			webdriver.findElement(By.xpath(xpathMap.get("DaySelection"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Day"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("YearSelection"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Year"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Register"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC-21 BetwayVuvuzela SignUp", "Warning Should be Visible when Month not Selected",
					"Warning is Visible when Month not Selected", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-21 BetwayVuvuzela SignUp", "Warning Should be Visible when Month not Selected",
					"Warning is Visible when Month not Selected", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-23 (SignUp) PD69988//
	// Verify user is not able to signup if Year is not selected from date of birth
	// dropdown//
	public boolean SignupYearClick(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno1"));
				Thread.sleep(2000);
			} else {
				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno"));
				Thread.sleep(2000);
			}

			webdriver.findElement(By.xpath(xpathMap.get("Firstname"))).sendKeys(xpathMap.get("Zensar"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Lastname"))).sendKeys(xpathMap.get("Betway"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("Passworddata"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("EyeIcon"))).click();
			Thread.sleep(2000);

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				Thread.sleep(2000);
			} else {
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SignupNextButton"))).click();
				Thread.sleep(2000);
			}
			Thread.sleep(2000);
			System.out.print("NextButton is Present");
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("Register"))).isDisplayed());
			System.out.print("RegisterButton is Present");
			webdriver.findElement(By.xpath(xpathMap.get("DaySelection"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Day"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MonthSelection"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Month"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Register"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC-23 BetwayVuvuzela SignUp", "Warning Should be Visible when Year not Selected",
					"Warning is Visible when Year not Selected", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-23 BetwayVuvuzela SignUp", "Warning Should be Visible when Year not Selected",
					"Warning is Visible when Year not Selected", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-25 (SignUp) PD69988//
	// Verify two fields are available "voucher code signup code" and "referral
	// code" when clicked on have signup code field//
	public boolean SignupCodeDropdown(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno1"));
				Thread.sleep(2000);

				webdriver.findElement(By.xpath(xpathMap.get("Firstname"))).sendKeys(xpathMap.get("Zensar"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("Lastname"))).sendKeys(xpathMap.get("Betway"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("Passworddata"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SignupNextButton"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SignupCodeDropdown"))).click();
				Thread.sleep(2000);

			} else {
				webdriver.findElement(By.xpath(xpathMap.get("SignupCodeDropdown"))).click();
				Thread.sleep(2000);

			}

			report.detailsAppend("TC-25 BetwayVuvuzela SignUp", "VoucherCode and ReferalCode fields Should be Visible ",
					"VoucherCode and ReferalCode fields is Visible ", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-25 BetwayVuvuzela SignUp", "VoucherCode and ReferalCode fields Should be Visible ",
					"VoucherCode and ReferalCode fields is Visible ", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-27 (SignUp) PD69988//
	// Verify "select your welcome offer" radio button is available//
	public boolean SignupRadiobutton(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno1"));
				Thread.sleep(2000);
			} else {

				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno"));
				Thread.sleep(2000);
			}
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Firstname"))).sendKeys(xpathMap.get("Zensar"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Lastname"))).sendKeys(xpathMap.get("Betway"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("Passworddata"));
			Thread.sleep(2000);
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				Thread.sleep(2000);
			} else {
				webdriver.findElement(By.xpath(xpathMap.get("SignupNextButton"))).click();
				Thread.sleep(2000);

			}
			report.detailsAppend("TC-27 BetwayVuvuzela SignUp", "Selcet Welcome offer Radio buttons should be visible",
					"Selcet Welcome offer Radio buttons is visible", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-27 BetwayVuvuzela SignUp", "Selcet Welcome offer Radio buttons should be visible",
					"Selcet Welcome offer Radio buttons is visible", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-29 (SignUp) PD69988//
	// Verify signup window is closed when clicked on "X" (close crossmark)//
	public boolean SignupCloseButton(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInMenu"))).click();
			Thread.sleep(1000);
			report.detailsAppend("TC-29 BetwayVuvuzela SignUp", "Signup popup window should be closed ",
					"Signup popup window is closed ", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-29 BetwayVuvuzela SignUp", "Signup popup window should be closed ",
					"Signup popup window is closed ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-31 (SignUp) PD69988//
	// To check Signup window opens when clicked on signup button from the hamburger
	// menu//
	public boolean SignupInHamburger(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC-31 BetwayVuvuzela SignUp", "Signup Form should be opened ",
					"Signup Form  is opened ", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInMenu"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-31 BetwayVuvuzela SignUp", "Signup Form should be opened ",
					"Signup Form  is opened ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-35 (SignUp) PD69988//
	// To check user is not able to signup if I am over 18 is not checked//
	public boolean Signup18YearsCheckbox(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno1"));
				Thread.sleep(2000);
			} else {

				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno"));
				Thread.sleep(2000);
			}

			webdriver.findElement(By.xpath(xpathMap.get("Lastname"))).sendKeys(xpathMap.get("Betway"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Firstname"))).sendKeys(xpathMap.get("Zensar"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("Passworddata"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("EyeIcon"))).click();
			Thread.sleep(2000);
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				Thread.sleep(2000);
			} else {
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SignupNextButton"))).click();
				Thread.sleep(2000);
			}
			System.out.print("NextButton is Present");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("Register"))).isDisplayed());
			System.out.print("RegisterButton is Present");
			webdriver.findElement(By.xpath(xpathMap.get("DaySelection"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Day"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MonthSelection"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Month"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("YearSelection"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Year"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("AlreadyAccount"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Register"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC-35 BetwayVuvuzela SignUp",
					"User should not able to signup if I am over 18 is not checked",
					"User is not able to signup if I am over 18 is not checked", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInMenu"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-35 BetwayVuvuzela SignUp",
					"User should not able to signup if I am over 18 is not checked",
					"User is not able to signup if I am over 18 is not checked", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-37 (SignUp) PD69988//
	// To check A field to enter ID number (or passport number ) is available//
	public boolean SignupIDField(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno1"));
				Thread.sleep(2000);
			} else {

				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno"));
				Thread.sleep(2000);
			}

			webdriver.findElement(By.xpath(xpathMap.get("Lastname"))).sendKeys(xpathMap.get("Betway"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Firstname"))).sendKeys(xpathMap.get("Zensar"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("Passworddata"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("EyeIcon"))).click();
			Thread.sleep(2000);
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				Thread.sleep(2000);
			} else if ((currentUrl).contains("za")) {
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SignupNextButton"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC-37 BetwayVuvuzela SignUp", "User should  able to See ID Field",
						"User is  able to See ID Field", "Pass");
				Thread.sleep(2000);
			}

			else if ((currentUrl).contains("ng")) {
				webdriver.findElement(By.xpath(xpathMap.get("SignupNextButton"))).click();
				Thread.sleep(2000);
			}

			webdriver.findElement(By.xpath(xpathMap.get("CloseInMenu"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-37 BetwayVuvuzela SignUp", "User should  able to See ID Field",
					"User is  able to See ID Field", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-39 (SignUp) PD69988//
	// To check back button is available on 2nd step of signup window//
	public boolean SignupBackButton(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("ng")) {
				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno1"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("Firstname"))).sendKeys(xpathMap.get("Zensar"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("Lastname"))).sendKeys(xpathMap.get("Betway"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("Passworddata"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SignupNextButton"))).click();
				Thread.sleep(2000);
//						webdriver.findElement(By.xpath(xpathMap.get("AlreadyAccount"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC-39 BetwayVuvuzela SignUp", "User should  able to See Back Button",
						"User is  able to See Back Button", "Pass");
				Thread.sleep(2000);

				webdriver.findElement(By.xpath(xpathMap.get("CloseInMenu"))).click();
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
				log.debug("Switch to default tab");
			} else if ((title).contains("za")) {

				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("Lastname"))).sendKeys(xpathMap.get("Betway"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("Firstname"))).sendKeys(xpathMap.get("Zensar"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("Passworddata"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("EyeIcon"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SignupNextButton"))).click();
				Thread.sleep(2000);
//						webdriver.findElement(By.xpath(xpathMap.get("AlreadyAccount"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC-39 BetwayVuvuzela SignUp", "User should  able to See Back Button",
						"User is  able to See Back Button", "Pass");
				Thread.sleep(2000);

				webdriver.findElement(By.xpath(xpathMap.get("CloseInMenu"))).click();
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
				log.debug("Switch to default tab");
			} else {

				Thread.sleep(1000);
			}

		} catch (Exception e) {
			report.detailsAppend("TC-39 BetwayVuvuzela SignUp", "User should  able to See Back Button",
					"User is  able to See Back Button", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-41 (SignUp) PD69988//
	// To check user is able to register when Register button is clicked.//
	public boolean SignupRegister(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			System.out.println("Title is " + title);
			long min = 807060501; // Minimum 9-digit number
			long max = 999999999; // Maximum 9-digit number
            // Create an instance of Random class
			Random random = new Random();
            // Generate random number within the specified range
			long randomNumber = random.nextLong() % (max - min + 1) + min;
            // Ensure the generated number is positive
			randomNumber = Math.abs(randomNumber);
			String randomString = Long.toString(randomNumber);
			System.out.println(randomString);
			webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(randomString);
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Semail"))).sendKeys("absd@gmail.com");
			webdriver.findElement(By.xpath(xpathMap.get("Lastname"))).sendKeys(xpathMap.get("Betway"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Firstname"))).sendKeys(xpathMap.get("Zensar"));
			Thread.sleep(2000);		
			webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("Passworddata"));
			
			webdriver.navigate().back();
			webdriver.findElement(By.xpath(xpathMap.get("NextButton"))).click();
			Thread.sleep(3000);
			System.out.print("RegisterButton is Present");
			Thread.sleep(3000);
//			webdriver.findElement(By.xpath(xpathMap.get("DaySelection"))).click();
//			Thread.sleep(2000);
//			webdriver.findElement(By.xpath(xpathMap.get("Day"))).click();
//			Thread.sleep(2000);
//			webdriver.findElement(By.xpath(xpathMap.get("MonthSelection"))).click();
//			Thread.sleep(2000);
//			webdriver.findElement(By.xpath(xpathMap.get("Month"))).click();
//			Thread.sleep(2000);
//			webdriver.findElement(By.xpath(xpathMap.get("YearSelection"))).click();
//			Thread.sleep(2000);
//			webdriver.findElement(By.xpath(xpathMap.get("Year"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("IDField"))).sendKeys(xpathMap.get("SAID"));
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(xpathMap.get("AgreeAll"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("AlreadyAccount"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Register"))).click();
			Thread.sleep(30000);
			webdriver.findElement(By.xpath(xpathMap.get("DepositLater"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC-41 BetwayVuvuzela SignUp", "User should  able to Register",
					"User is  able to Register", "Pass");
		} catch (Exception e) {
			System.out.println(e);
			report.detailsAppend("TC-41 BetwayVuvuzela SignUp", "User should  able to Register",
					"User is not able to Register", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-47 (SignUp) PD69988//
	// To check Signup window opens when clicked on Register now hyperlink text//
	public boolean SignupLiveRegisterNow(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuLive"))).isDisplayed());
			System.out.print("VuvuLive is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuLive"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FooterDropDown"))).isDisplayed());
			System.out.print("FooterDropDown is Present");
			webdriver.findElement(By.xpath(xpathMap.get("FooterDropDown"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("RegisterNow"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC-47 BetwayVuvuzela SignUp", "Signup Window should open When clicked On RegisterNow",
					"Signup Window is opened When clicked On RegisterNow", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("CloseInMenu"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
		} catch (Exception e) {
			report.detailsAppend("TC-47 BetwayVuvuzela SignUp", "Signup Window should open When clicked On RegisterNow",
					"Signup Window is opened When clicked On RegisterNow", "Pass");
			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-2 (Signup)AS66528
	// To Check if there is a visible "Sign Up" button on the login page.
	public boolean SignupButtonInLoginPage(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupButtonOnLoginPage"))).isDisplayed());
			System.out.print(" LoginButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupButtonOnLoginPage"))).click();
			Thread.sleep(1000);
			report.detailsAppend("TC2-SignupButtonInLogin", "SignupButton Should be Clicked", "SignupButton Clicked",
					"Pass");
			Thread.sleep(1000);
			System.out.print(" SignupButton Clicked ");
			webdriver.findElement(By.xpath(xpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(1000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC2-SignupButtonInLogin", "SignupButton Should be Clicked",
					"SignupButton Not Clicked", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-4 (SignUp) AS66528//
	// Check if the sign-up form is visible when the "Sign Up" button is clicked.//
	public boolean SignupForm(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			System.out.print("HamburgerMenu Button Clicked");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC4-SignUpForm", "Signup Form Should be Visible", "Signup Form  is Visible", "Pass");
			Thread.sleep(2000);
			System.out.print(" SignupButton Clicked ");
			webdriver.findElement(By.xpath(xpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(1000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC4-BetwayVuvuzela SignUp", "Signup form Should be Visible",
					"Signup form is Not Visible", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-6 (SignUp) AS66528//
	// Check if the "Register" button is visible on the sign-up form.
	public boolean CheckRegisterbuttonvisible(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {

				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno1"));
				Thread.sleep(2000);

			} else {

				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno"));
				Thread.sleep(2000);
			}
			webdriver.findElement(By.xpath(xpathMap.get("Lastname"))).sendKeys(xpathMap.get("LastnameData"));
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(xpathMap.get("Firstname"))).sendKeys("Akhil");
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("PasswordData"));
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(xpathMap.get("EyeIcon"))).click();
			Thread.sleep(2000);
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("Register"))).click();
				Thread.sleep(2000);
			} else {
				Thread.sleep(3000);
				webdriver.findElement(By.xpath(xpathMap.get("SignupNextButton"))).click();
				Thread.sleep(3000);
				webdriver.findElement(By.xpath(xpathMap.get("Register"))).click();
				Thread.sleep(1000);

			}
			report.detailsAppend("TC6-Check_RegisterbuttonVisible", "User Able to Check Registerbutton",
					"User Visibled Registerbutton", "Pass");
			Thread.sleep(2000);
			System.out.print(" User Visible the Registerbutton ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			System.out.print(e);
			report.detailsAppend("TC6-BetwayVuvuzela SignUp", "Element Should be Visible", "Element is not Visible",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-8 (SignUp) AS66528//
	// Check if the sign-up form is visible when the "Sign Up" button is clicked.//
	public boolean SignupMobileNoDisplayCode_27(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC8-SignUpMobileNoDisplayCode", "SignupForm MobileNoWithCodde Should be Visible",
					"SignupForm MobileNoWithCodde is Visible", "Pass");
			Thread.sleep(2000);
			System.out.print(" In SignupForm MobileNoWithCodde Visible ");
			webdriver.findElement(By.xpath(xpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(1000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("BetwayVuvuzela SignUp", "Element Should be Visible", "Element is not Visible",
					"Fail");

			webdriver.navigate().refresh();
			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-10 (SignUp) AS66528//
	// Check if the system rejects a weak password.
	public boolean VerifySystemRejectWeakPassword(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("WeakPassword"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("EyeIcon"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC10-SystemRejectWeakPassword", "WeakPassword System Should rejects",
					"WeakPassword System Is Rejects", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("BetwayVuvuzela SignUp", "Element Should be Visible", "Element is not Visible",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-12 (SignUp) AS66528//
	// Check if the system rejects a password exceeding the maximum allowed length.
	public boolean VerifyPasswordExceedingMaxLength(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("PasswordData"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("EyeIcon"))).click();
			Thread.sleep(2000);
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("Register"))).click();
				Thread.sleep(2000);
			} else {

				webdriver.findElement(By.xpath(xpathMap.get("SignupNextButton"))).click();
				Thread.sleep(2000);
			}
			report.detailsAppend("TC12-VerifyPasswordExceedingMaxLength",
					"Password exceeding the maximum allowed length", "Password Exceeding the MaxLength", "Pass");
			Thread.sleep(2000);
			System.out.print(" In SignupForm Password ExceedingMaxLength ");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("BetwayVuvuzela SignUp", "Element Should be Visible", "Element is not Visible",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-14 (SignUp) AS66528//
	// Check if the system accepts a valid first name.
	public boolean VerifyvalidFirstname(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			System.out.print("HamburgerMenu Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(xpathMap.get("Firstname"))).sendKeys("Akhil");
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("Register"))).click();
				Thread.sleep(2000);
			} else {

				webdriver.findElement(By.xpath(xpathMap.get("SignupNextButton"))).click();
				Thread.sleep(2000);
			}
			report.detailsAppend("TC14-VerifyvalidFirstname", "System Checks a valid first name",
					"System Accepts a valid first name", "Pass");
			Thread.sleep(2000);
			System.out.print(" In SignupForm Password ExceedingMaxLength ");
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			System.out.print(e);
			report.detailsAppend("BetwayVuvuzela SignUp", "Element Should be Visible", "Element is not Visible",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-16 (SignUp) AS66528//
	// Check if the system rejects a blank Last name.
	public boolean VerifyblankLastname(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Lastname"))).sendKeys("");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("Passworddata"));
			Thread.sleep(2000);
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("Register"))).click();
				Thread.sleep(2000);
			} else {

				webdriver.findElement(By.xpath(xpathMap.get("SignupNextButton"))).click();
				Thread.sleep(2000);

			}
			report.detailsAppend("TC16-VerifyblankLastname", "System Rejects a blank Last name",
					"System Rejects a blank Last name", "Pass");
			Thread.sleep(2000);
			System.out.print(" System rejects a blank Last name. ");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-16 BetwayVuvuzela SignUp", "Element Should be Visible", "Element is not Visible",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-18 (SignUp) AS66528//
	// To check user is able to Select his preferred Day from date of birth dropdown
	public boolean SelectDayfromdateofbirthdropdown(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno1"));
				Thread.sleep(2000);
			} else {

				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno"));
				Thread.sleep(2000);
			}
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Lastname"))).sendKeys(xpathMap.get("Betway"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Firstname"))).sendKeys(xpathMap.get("Zensar"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("PasswordData"));
			Thread.sleep(4000);
			webdriver.findElement(By.xpath(xpathMap.get("EyeIcon"))).click();
			Thread.sleep(2000);

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				Thread.sleep(2000);
			} else {
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SignupNextButton"))).click();
				Thread.sleep(2000);
			}
			System.out.print("NextButton is Present");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("DayField"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("DaySelected"))).click();
			Thread.sleep(1000);
			report.detailsAppend("TC18-SelectDayfromdateofbirthDD", "User able to Select Day from DOB dropdown",
					"User Select Day from DOB dropdown", "Pass");
			Thread.sleep(2000);
			System.out.print(" User Selected Day from dateofbirth dropdown ");
			Thread.sleep(1000);

			webdriver.findElement(By.xpath(xpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("BetwayVuvuzela SignUp", "Element Should be Visible", "Element is not Visible",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-20 (SignUp) AS66528//
	// To check user is able to Select his preferred Day from date of birth dropdown
	public boolean SelectMonthfromdateofbirthdropdown(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno1"));
				Thread.sleep(2000);
			} else {

				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno"));
				Thread.sleep(2000);
			}
			webdriver.findElement(By.xpath(xpathMap.get("Lastname"))).sendKeys(xpathMap.get("Betway"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Firstname"))).sendKeys(xpathMap.get("Zensar"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("PasswordData"));
			Thread.sleep(4000);
			webdriver.findElement(By.xpath(xpathMap.get("EyeIcon"))).click();
			Thread.sleep(2000);

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				Thread.sleep(2000);
			} else {
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SignupNextButton"))).click();
				Thread.sleep(2000);
			}

			System.out.print("NextButton is Present");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MonthField"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("MonthSelected"))).click();
			Thread.sleep(1000);
			report.detailsAppend("TC20-SelectMonthfromdateofbirthDD", "User able to Select Month from DOB dropdown",
					"User Select Month from DOB dropdown", "Pass");
			Thread.sleep(2000);
			System.out.print(" User Selected Month from dateofbirth dropdown ");
			Thread.sleep(1000);

			webdriver.findElement(By.xpath(xpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("BetwayVuvuzela SignUp", "Element Should be Visible", "Element is not Visible",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-22 (SignUp) AS66528//
	// To check user is able to Select his preferred Day from date of birth dropdown
	public boolean SelectYearfromdateofbirthdropdown(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno1"));
				Thread.sleep(2000);
			} else {

				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno"));
				Thread.sleep(2000);
			}
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Lastname"))).sendKeys(xpathMap.get("Betway"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Firstname"))).sendKeys(xpathMap.get("Zensar"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("PasswordData"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("EyeIcon"))).click();
			Thread.sleep(2000);

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				Thread.sleep(2000);
			} else {
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SignupNextButton"))).click();
				Thread.sleep(2000);
			}
			Thread.sleep(2000);
			System.out.print("NextButton is Present");
			webdriver.findElement(By.xpath(xpathMap.get("YearField"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("YearSelected"))).click();
			Thread.sleep(1000);
			report.detailsAppend("TC22-SelectYearfromdateofbirthDD", "User able to Select Year from DOB dropdown",
					"User Select Year from DOB dropdown", "Pass");
			Thread.sleep(2000);
			System.out.print(" User Selected Year from dateofbirth dropdown ");
			Thread.sleep(1000);

			webdriver.findElement(By.xpath(xpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("BetwayVuvuzela SignUp", "Element Should be Visible", "Element is not Visible",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-24 (SignUp) AS66528//
	// To check I have signup code field is available
	public boolean SignupCodefieldVisible(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC24-SignupCodeFieldVisible", "User able to Visible SignupCodefield",
					"User Visible SignupCodefield", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("BetwayVuvuzela SignUp", "Element Should be Visible", "Element is not Visible",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-26 (SignUp) AS66528//
	// To check checkbox are available am over 18 years of age and I accept
	// Betwayâ€™s
	// Terms And Conditions and Privacy Policy
	public boolean checkboxAvailableTermsConditionsPrivacyPolicy(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno1"));
				Thread.sleep(2000);
			} else {

				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno"));
				Thread.sleep(2000);
			}
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Lastname"))).sendKeys(xpathMap.get("Betway"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Firstname"))).sendKeys(xpathMap.get("Zensar"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("PasswordData"));
			Thread.sleep(2000);
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("Register"))).click();
				Thread.sleep(2000);
			} else {

				webdriver.findElement(By.xpath(xpathMap.get("SignupNextButton"))).click();
				Thread.sleep(2000);

			}
			report.detailsAppend("TC26-checkboxTermsForConditionsPrivacyPolicy",
					"User Visible to checkboxTerms ForConditionsPrivacyPolicy",
					"User Able checkbox TermsForConditionsPrivacyPolicy", "Pass");
			Thread.sleep(2000);
			System.out.print(" User Visible the checkboxTerms ForConditionsPrivacyPolicy ");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("BetwayVuvuzela SignUp", "Element Should be Visible", "Element is not Visible",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-28 (SignUp) AS66528//
	// To check "Already have an account?" and "Click here to login" button is
	// available on both 1st and 2nd window
	public boolean VerifyAlreadyhaveanaccountPage(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno1"));
				Thread.sleep(2000);
			} else {

				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno"));
				Thread.sleep(2000);
			}
			webdriver.findElement(By.xpath(xpathMap.get("Lastname"))).sendKeys(xpathMap.get("Betway"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Firstname"))).sendKeys(xpathMap.get("Zensar"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("PasswordData"));
			Thread.sleep(2000);
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("Register"))).click();
				Thread.sleep(2000);
			} else {

				webdriver.findElement(By.xpath(xpathMap.get("SignupNextButton"))).click();
				Thread.sleep(2000);
			}
			report.detailsAppend("TC28-VerifyTheAlreadyhaveanaccountPage", "User Verify TheAlreadyhaveanaccountPage",
					"User Verify TheAlreadyhaveanaccountPage", "Pass");
			Thread.sleep(2000);
			System.out.print(" User Visible the checkboxTerms ForConditionsPrivacyPolicy ");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("BetwayVuvuzela SignUp", "Element Should be Visible", "Element is not Visible",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-30 (SignUp) AS66528//
	// To check "Terms and conditions" and "Privacy policy" link redirects to the
	// correct page
	public boolean ClickTermsConditionsPrivacyPolicy(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno1"));
				Thread.sleep(2000);
			} else {

				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno"));
				Thread.sleep(2000);
			}
			webdriver.findElement(By.xpath(xpathMap.get("Lastname"))).sendKeys(xpathMap.get("Betway"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Firstname"))).sendKeys(xpathMap.get("Zensar"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("PasswordData"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("EyeIcon"))).click();
			Thread.sleep(2000);

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				Thread.sleep(2000);
			} else {
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SignupNextButton"))).click();
				Thread.sleep(2000);
			}
			Thread.sleep(2000);
			System.out.print("NextButton is Present");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TermsConditions"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC30-Click TermsConditionsPrivacyPolicy",
					"User Able to click the termsConditionsPrivacyPolicy", "User Clicked termsConditionsPrivacyPolicy",
					"Pass");
			Thread.sleep(2000);
			System.out.print(" User Visible the checkboxTerms ForConditionsPrivacyPolicy ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC30-Click TermsConditionsPrivacyPolicy",
					"User Able to click the termsConditionsPrivacyPolicy", "User Clicked termsConditionsPrivacyPolicy",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-32 (Signup)AS66528
	// To check Signup window opens when clicked on signup button from login window
	// in the hamburger menu
	public boolean InHumburgerMenuSignupButtonInLoginPage(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(1000);
			System.out.print(" LoginButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupButtonOnLoginPage"))).click();
			Thread.sleep(1000);
			report.detailsAppend("TC32-SignupButtonOnLogin", "SignupButton Should be Clicked", "SignupButton Clicked",
					"Pass");
			Thread.sleep(1000);
			System.out.print(" SignupButton Clicked ");
			webdriver.findElement(By.xpath(xpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(1000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC2-SignupButtonInLogin", "SignupButton Should be Clicked",
					"SignupButton Not Clicked", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-36 (Signup)AS66528
	// To Check South African ID dropdown is available

	public boolean CheckSouthAfricanIDdropdownAvailable(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup Button Clicked");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(1000);
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("ng")) {
				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno1"));
				Thread.sleep(2000);
			} else {

				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno"));
				Thread.sleep(2000);
			}

			webdriver.findElement(By.xpath(xpathMap.get("Lastname"))).sendKeys(xpathMap.get("Betway"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Firstname"))).sendKeys(xpathMap.get("Zensar"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("PasswordData"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("EyeIcon"))).click();
			Thread.sleep(2000);
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				Thread.sleep(2000);
			} else {
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SignupNextButton"))).click();
				Thread.sleep(2000);
			}
			System.out.print("NextButton is Present");
			Thread.sleep(2000);

			if ((title).contains("ng")) {
				Thread.sleep(1000);
			} else if ((title).contains("za")) {

				webdriver.findElement(By.xpath(xpathMap.get("SouthAfricanID"))).click();
				Thread.sleep(1000);
				report.detailsAppend("TC36-CheckSouthAfricanID", "SouthAfricanID Should be Available",
						"SouthAfricanID is Available", "Pass");
				Thread.sleep(1000);
				System.out.print(" SouthAfricanID fromDD Selected ");
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("SignupPageCloseButton"))).click();
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
				Thread.sleep(2000);
			} else if ((title).contains("zm")) {
				Thread.sleep(1000);
			}

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC36-SignupButtonInLogin", "SouthAfricanID Should be Available",
					"SouthAfricanID is not Available", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-38 (Signup)AS66528
	// To check language dropdown is available

	public boolean ChecklanguagedropdownAvailable(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(1000);
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("ng")) {
				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno1"));
				Thread.sleep(2000);
			} else {

				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno"));
				Thread.sleep(2000);
			}

			webdriver.findElement(By.xpath(xpathMap.get("Lastname"))).sendKeys(xpathMap.get("Betway"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Firstname"))).sendKeys(xpathMap.get("Zensar"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("PasswordData"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("EyeIcon"))).click();
			Thread.sleep(2000);
			String currentUrl = webdriver.getCurrentUrl();
			if ((title).contains("zm")) {
				Thread.sleep(2000);
			} else {
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SignupNextButton"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC38-Checklanguagedropdown", "languagedropdown Should be Available",
						"languagedropdown is Available", "Pass");
				Thread.sleep(1000);
				System.out.print(" languagedropdown fromDD Available ");
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("SignupPageCloseButton"))).click();
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
				Thread.sleep(2000);
			}
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC38-Checklanguagedropdown", "languagedropdown Should be Available",
					"languagedropdown is Available", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-40 (SignUp) AS66528//
	// To check Register button is available on step of signup window
	public boolean CheckRegisterbuttonOn2ndsignupwindow(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno1"));
				Thread.sleep(2000);
			} else {

				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno"));
				Thread.sleep(2000);
			}

			webdriver.findElement(By.xpath(xpathMap.get("Lastname"))).sendKeys(xpathMap.get("Betway"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Firstname"))).sendKeys(xpathMap.get("Zensar"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("PasswordData"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("EyeIcon"))).click();
			Thread.sleep(2000);
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("Register"))).click();
				Thread.sleep(2000);
			} else {
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SignupNextButton"))).click();
				Thread.sleep(2000);

			}
			report.detailsAppend("TC40-CheckRegisterbuttonOn signupwindow", "Check Registerbutton On Singupwindow",
					"Registerbutton Visibleon Signupwindoiw", "Pass");
			Thread.sleep(2000);
			System.out.print(" User Visible Registerbutton ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("BetwayVuvuzela SignUp", "Element Should be Visible", "Element is not Visible",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-42 (SignUp) AS66528//
	// To check email field is available
	public boolean CheckemailfieldAvailable(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno1"));
				Thread.sleep(2000);
			} else {

				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno"));
				Thread.sleep(2000);
			}
			webdriver.findElement(By.xpath(xpathMap.get("Lastname"))).sendKeys(xpathMap.get("Betway"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Firstname"))).sendKeys(xpathMap.get("Zensar"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("PasswordData"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("EyeIcon"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC42-CheckemailfieldIsAvailable", "Check Checkemailfield Available",
					"Checkemailfield Available On Signupwindoiw", "Pass");
			Thread.sleep(2000);
			System.out.print(" User Visible emailfield ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("BetwayVuvuzela SignUp", "Element Should be Visible", "Element is not Visible",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-44 (SignUp) AS66528//
	// To check sign me up for all promotional communication dropdown is available
	public boolean Checkpromotionalcommunicationdropdown(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno1"));
				Thread.sleep(2000);
			} else {

				webdriver.findElement(By.xpath(xpathMap.get("PhoneNumber"))).sendKeys(xpathMap.get("Phno"));
				Thread.sleep(2000);
			}
			webdriver.findElement(By.xpath(xpathMap.get("Lastname"))).sendKeys(xpathMap.get("Betway"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Firstname"))).sendKeys(xpathMap.get("Zensar"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordTab"))).sendKeys(xpathMap.get("PasswordData"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("EyeIcon"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC44-CheckpromotionalcommunicationIsAvailable",
					"Check promotionalcommunication Available", "promotionalcommunication Available On Signupwindoiw",
					"Pass");
			Thread.sleep(2000);
			System.out.print(" User Visible emailfield ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("BetwayVuvuzela SignUp", "Element Should be Visible", "Element is not Visible",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-46 (SignUp) AS66528//
	// To check Signup window opens when clicked on Register now hyperlink text
	public boolean Registernowhyperlinktext(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FooterDropDown"))).isDisplayed());
			System.out.print("FooterDropDown is Present");
			webdriver.findElement(By.xpath(xpathMap.get("FooterDropDown"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("RegisterNow"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC46-BetwayVuvuzela SignUp", "Signup Window should open When clicked On RegisterNow",
					"Signup Window is opened When clicked On RegisterNow", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("SignupPageCloseButton"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("BetwayVuvuzela SignUp", "Element Should be Visible", "Element is not Visible",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// Login Vuvuzela
	// TC-21(Login) PD69988
	// Check if the system accepts a strong password.
	public boolean LoginStrongPassword(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber"))).sendKeys(xpathMap.get("Phno1"));

			webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("Passworddata"));

			try {

				webdriver.findElement(By.cssSelector(xpathMap.get("MobileLoginButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			Thread.sleep(2000);
			report.detailsAppend("TC21-LoginStrongPassword",
					"System should accept a password accepts a strong password",
					"System accepts a password accepts a strong password", "Pass");

			try {

				webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC21-LoginStrongPassword",
					"System should accept a password accepts a strong password",
					"System accepts a password accepts a strong password", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// Login Vuvuzela
	// TC-22(Login) PD69988
	// Check if the system accepts a password with a combination of uppercase and
	// lowercase letters.
	public boolean LoginCombinePassword(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber"))).sendKeys(xpathMap.get("Phno1"));

			webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("Passworddata"));

			try {

				webdriver.findElement(By.cssSelector(xpathMap.get("MobileLoginButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			Thread.sleep(2000);
			report.detailsAppend("TC22-LoginCombinePassword",
					"System should accept a password accepts a password with a combination of uppercase and lowercase letters.",
					"System accepts a password accepts a password with a combination of uppercase and lowercase letters.",
					"Pass");

			try {

				webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC22-LoginCombinePassword",
					"System should accept a password accepts a password with a combination of uppercase and lowercase letters.",
					"System accepts a password accepts a password with a combination of uppercase and lowercase letters.",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// Login Vuvuzela
	// TC-23(Login) PD69988
	// Check if the system accepts a password with numeric characters.
	public boolean LoginNumericPassword(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber"))).sendKeys(xpathMap.get("Phno1"));

			webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("Phno"));

			try {

				webdriver.findElement(By.cssSelector(xpathMap.get("MobileLoginButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			Thread.sleep(2000);
			report.detailsAppend("TC23-LoginNumericPassword",
					"System should accept a password  with numeric characters.",
					"System accepts a password with numeric characters.", "Pass");

			try {

				webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC23-LoginNumericPassword",
					"System should accept a password with numeric characters.",
					"System accepts a password with numeric characters", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// Login Vuvuzela
	// TC-24(Login) PD69988
	// Check if the system accepts a password with special characters.
	public boolean LoginSpecialCharacterPassword(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber"))).sendKeys(xpathMap.get("Phno1"));

			webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("SpecialPassword"));

			try {

				webdriver.findElement(By.cssSelector(xpathMap.get("MobileLoginButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			Thread.sleep(2000);
			report.detailsAppend("TC24-LoginSpecialCharacterPassword",
					"System should accept a password with special characters",
					"system accepts a password with special characters", "Pass");

			try {

				webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC24-LoginSpecialCharacterPassword",
					"System should accept a password with special characters",
					"system accepts a password with special characters", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// Login Vuvuzela
	// TC-25(Login) PD69988
	// Check if the system accepts a password with the minimum required length.
	public boolean LoginPasswordMinimum(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber"))).sendKeys(xpathMap.get("Phno1"));

			webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("Zensar"));

			try {

				webdriver.findElement(By.cssSelector(xpathMap.get("MobileLoginButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			Thread.sleep(2000);
			report.detailsAppend("TC25-LoginPasswordMinimum",
					"System should accept a password with the minimum required length.",
					"system accepts a password with the minimum required length.", "Pass");

			try {

				webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC25-LoginPasswordMinimum",
					"System should accept a password with the minimum required length.",
					"system accepts a password with the minimum required length.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// Login Vuvuzela
	// TC-26(Login) PD69988
	// Check if the system accepts a password with the maximum allowed length.
	public boolean LoginPasswordMaximum(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber"))).sendKeys(xpathMap.get("Phno1"));

			webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("Passworddata"));

			try {

				webdriver.findElement(By.cssSelector(xpathMap.get("MobileLoginButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			Thread.sleep(2000);
			report.detailsAppend("TC26-LoginPasswordMaximum",
					"System should accept a password with the maximum allowed length",
					"System accepts a password with with the maximum allowed length", "Pass");

			try {

				webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC26-LoginPasswordMaximum",
					"System should accept a password with the maximum allowed length",
					"System accepts a password with with the maximum allowed length", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// Login Vuvuzela
	// TC-27(Login) PD69988
	// Check if the system accepts a password with all allowed characters, including
	// uppercase letters, lowercase letters, numbers, and special characters.
	public boolean LoginPasswordwithAllowedCharacters(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber"))).sendKeys(xpathMap.get("Phno1"));

			webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("Passworddata"));

			try {

				webdriver.findElement(By.cssSelector(xpathMap.get("MobileLoginButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			Thread.sleep(2000);
			report.detailsAppend("TC27-LoginPasswordwithAllowedCharacters",
					"System should accept a password with all allowed characters, including uppercase letters, lowercase letters, numbers, and special characters.",
					"System accepts a password with all allowed characters, including uppercase letters, lowercase letters, numbers, and special characters",
					"Pass");

			try {

				webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC27-LoginPasswordwithAllowedCharacters",
					"System should accept a password with all allowed characters, including uppercase letters, lowercase letters, numbers, and special characters.",
					"System accepts a password with all allowed characters, including uppercase letters, lowercase letters, numbers, and special characters",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// Login Vuvuzela
	// TC-28(Login) PD69988
	// Check if the system accepts a password containing spaces.
	public boolean LoginPasswordwithSpaces(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber"))).sendKeys(xpathMap.get("Phno1"));

			webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("SpacePassword"));

			try {

				webdriver.findElement(By.cssSelector(xpathMap.get("MobileLoginButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			Thread.sleep(2000);
			report.detailsAppend("TC28-LoginPasswordwithSpaces", "System should accept a password containing spaces.",
					"System accepts a password containing spaces.", "Pass");

			try {

				webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC28-LoginPasswordwithSpaces", "System should accept a password containing spaces.",
					"System accepts a password containing spaces.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// Login Vuvuzela
	// TC-29(Login) PD69988
	// Check if the system trims leading and trailing spaces in the entered
	// password.
	public boolean LoginTrimPassword(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber"))).sendKeys(xpathMap.get("Phno1"));

			webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("TrimPassword"));

			try {

				webdriver.findElement(By.cssSelector(xpathMap.get("MobileLoginButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			Thread.sleep(2000);
			report.detailsAppend("TC29-LoginTrimPassword",
					"System should trim leading and trailing spaces in the entered password.",
					"system trims leading and trailing spaces in the entered password.", "Pass");

			try {

				webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC29-LoginTrimPassword",
					"System should trim leading and trailing spaces in the entered password.",
					"system trims leading and trailing spaces in the entered password.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// Login Vuvuzela
	// TC-30(Login) PD69988
	// Check if the system rejects a blank password .
	public boolean LoginBlankPassword(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber"))).sendKeys(xpathMap.get("Phno1"));

			try {

				webdriver.findElement(By.cssSelector(xpathMap.get("MobileLoginButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			Thread.sleep(2000);
			report.detailsAppend("TC30-LoginBlankPassword", "Blank Password Should be Invalid",
					"Blank Password is Invalid", "Pass");

			try {

				webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC30-LoginValidNumber", "Blank Password Should be Invalid",
					"Blank Password is Invalid", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// Login Vuvuzela
	// TC-31(Login) PD69988
	// Check if the system rejects a password Exceeding the maximum allowed length.
	public boolean LoginMaximumPasswordLength(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber"))).sendKeys(xpathMap.get("Phno1"));

			webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("PasswordData1"));

			try {

				webdriver.findElement(By.cssSelector(xpathMap.get("MobileLoginButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			Thread.sleep(2000);
			report.detailsAppend("TC31-LoginMaximumPasswordLength", "Password Should be Invalid For Maximum Length",
					"Password is Invalid For Maximum Length", "Pass");

			try {

				webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC31-LoginMaximumPasswordLength", "Password Should be Invalid For Maximum Length",
					"Password is Invalid For Maximum Length", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// Login Vuvuzela
	// TC-32(Login) PD69988
	// Check if the system rejects a password succeeding the minimum allowed length.
	public boolean LoginMinimumPasswordLength(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber"))).sendKeys(xpathMap.get("Phno1"));

			webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("MinPass"));

			try {

				webdriver.findElement(By.cssSelector(xpathMap.get("MobileLoginButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			Thread.sleep(2000);
			report.detailsAppend("TC32-LoginMinimumPasswordLength", "Password Should be Invalid For Minimum Length",
					"Password is Invalid For Minimum Length", "Pass");

			try {

				webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC32-LoginMinimumPasswordLength", "Password Should be Invalid For Minimum Length",
					"Password is Invalid For Minimum Length", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-1(Login) AS66528//
	// Check if the "Login" Button is visible on the homepage.

	public boolean LoginButtonVisible(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			Thread.sleep(2000);
			report.detailsAppend("TC1-LoginButtonVisible", "LoginButton Should be visible on homepage",
					"Login Button Visible on the homepage", "Pass");

			System.out.println("Login Button Visible on the homepage\n");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC1-LoginButtonVisible", "LoginButton Should be visible on homepage",
					"Login Button Visible on the homepage", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-2(Login) AS66528//
	// Check if there is a visible "Login" button on Login window
	public boolean LoginButtonInLoginPage(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");

			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC2-LoginButtonInLoginPage", "LoginButton Should be Clicked", "LoginButton Clicked",
					"Pass");

			webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC2-LoginButtonInLoginPage", "LoginButton Should be Clicked",
					"LoginButton Not Clicked", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-3 (Login) AS66528//
	// Check if there is a visible "Login" button on the Hamburger Menu.//
	public boolean LoginInHamburgerMenu(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC-3 LoginInHamburgerMenu", "Login In HamburgerMenu Should be Visible",
					"Login in HamburgerMenu  is Visible", "Pass");

			webdriver.findElement(By.cssSelector(xpathMap.get("CloseIconOnHamburgerMenu"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-3 LoginInHamburgerMenu", "Login in HamburgerMenu Should be Visible",
					"Login in HamburgerMenu  is Visible", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-4 (Login) AS66528//
	// Check if the Login Window is visible when the "Login" button is clicked.
	public boolean LoginForm(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");

			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).isDisplayed());
			report.detailsAppend("TC4-LoginForm", "Login Form Should be Visible", "Login Form  is Visible", "Pass");

			System.out.print(" LoginButton Clicked ");
			webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC4-LoginForm", "Login form Should be Visible", "Login form is Not Visible", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-5 (Login) AS66528//
	// Check if the required Login fields (e.g., mobile number, password) are
	// visible on the Login Window.
	public boolean LoginFields(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Clicked");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC5-LoginFields", "Login Form Should be Visible", "Login form  is Visible", "Pass");

			webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC5-LoginFields", "Login form Should be Visible", "Login form is Visible", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-6 (Login) AS66528//
	// Check if the visibility of the "Login" button is consistent across different
	// pages.

	public boolean VerifyLoginButtonConsistency(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			report.detailsAppend("TC6[1]-VerifyLoginButtonConsistency", "User Able to Check LoginbuttonPage",
					"User Visibled LoginbuttonPage", "Pass");
			System.out.print("LoginButton OnHomepage  Clicked");

			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("LoginButton In Hamburgermenu Clicked");

			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).click();

			report.detailsAppend("TC6[2]-VerifyLoginButtonConsistency", "User Able to Check Loginbutton",
					"User Visibled Loginbutton", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("SignupPageCloseButton"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("LoginButton In Hamburgermenu Clicked");

			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC6[3]-VerifyLoginButtonConsistency", "User Able to Check LoginbuttonPage",
					"User Visibled LoginbuttonPage", "Pass");

			webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC6-VerifyLoginButtonConsistency", "User Not able to Check LoginbuttonPage",
					"User Not Visibled LoginbuttonPage", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-7 (Login) AS66528//
	// To check if the system accepts a valid mobile number.
	public boolean LoginValidNumber(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber"))).sendKeys(xpathMap.get("ValidMobileNum"));

			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.cssSelector(xpathMap.get("MobileLoginButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC7-LoginValidNumber", "Mobile Number Should be Valid", "Mobile Number is Valid",
					"Pass");

			webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC7-LoginValidNumber", "Mobile Number Not be Valid", "Mobile Number Not Valid",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-8 (Login) AS66528//
	// To check user click on "Login" button mobile number field should be display
	// with country code +27
	public boolean LoginMobileNoDisplayCode_27(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");

			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC8-LoginMobileNoDisplayCode", "LoginForm MobileNoWithCodde Should be Visible",
					"LoginForm MobileNoWithCodde is Visible", "Pass");

			System.out.print(" In LoginForm MobileNoWithCodde Visible ");
			webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();

		} catch (Exception e) {
			report.detailsAppend("TC8-LoginMobileNoDisplayCode", "LoginForm MobileNoWithCodde Should be Visible",
					"LoginForm MobileNoWithCodde is Visible", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-9 (Login) AS66528//
	// To check if the system accepts a valid mobile number with leading zeros.
	public boolean LoginMobileNumberWithZeros(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber"))).sendKeys(xpathMap.get("ZerosOnMobileNo"));

			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("ValidPassword"));
			System.out.print("Password is Entered");

			webdriver.findElement(By.cssSelector(xpathMap.get("MobileLoginButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC9-LoginMobileNumberWithZeros", "Strong Password Should be Valid",
					"Strong Password is Valid", "Pass");

			webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC-9 BetwayVuvuzela Login", "Strong Password Should be Valid",
					"Strong Password is Valid", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-10 (Login) AS66528//
	// To check if the system rejects a mobile number with non-numeric characters.
	public boolean NonNumericCharactersinMobileNumber(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber")))
					.sendKeys(xpathMap.get("CharactersInMobileNo"));

			System.out.print("CharactersInMobileNo is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("ValidPassword"));
			System.out.print("Password is Entered");

			webdriver.findElement(By.cssSelector(xpathMap.get("MobileLoginButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC10-NonNumericCharactersinMobileNumber",
					"system rejects a mobilenumber with non-numeric characters",
					"system rejects a mobilenumber with non-numeric characters", "Pass");

			webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC10-NonNumericCharactersinMobileNumber",
					"system rejects a mobilenumber with non-numeric characters",
					"system rejects a mobilenumber with non-numeric characters", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-11 (Login) AS66528//
	// To check if the system rejects a mobile number that is too short.
	public boolean LoginMobilenumbertooshort(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber"))).sendKeys(xpathMap.get("MobileNumShort"));

			System.out.print("MobileNumShort is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("ValidPassword"));
			System.out.print("Password is Entered");

			webdriver.findElement(By.cssSelector(xpathMap.get("MobileLoginButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC11-LoginMobilenumbertooshort", "system rejects a mobilenumber that is too short",
					"system rejects a mobilenumber that is too short", "Pass");

			webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC11-LoginMobilenumbertooshort",
					"system should rejects mobilenumber that is too short",
					"system rejects mobilenumber that is too short", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-12 (Login) AS66528//
	// To check if the system rejects a mobile number that is too long.
	public boolean LoginMobilenumberlong(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber"))).sendKeys(xpathMap.get("MobileNumLong"));

			System.out.print("MobileNumLong is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("ValidPassword"));
			System.out.print("Password is Entered");

			webdriver.findElement(By.cssSelector(xpathMap.get("MobileLoginButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC12-LoginMobilenumberlong", "system rejects a mobilenumber that is too long",
					"system rejects a mobilenumber that is too long", "Pass");

			webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC12-LoginMobilenumberlong", "system should rejects a mobilenumber that islong",
					"system rejects mobilenumber that is long", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-13 (Login) AS66528//
	// To check if the system accepts a valid mobile number with hyphens.
	public boolean LoginMobilenumberhyphens(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber")))
					.sendKeys(xpathMap.get("MobileNumhyphens"));

			System.out.print("MobileNumhyphens is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("ValidPassword"));
			System.out.print("Password is Entered");

			webdriver.findElement(By.cssSelector(xpathMap.get("MobileLoginButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC13-LoginMobilenumberhyphens", "system should accepts a mobilenumber with hyphens",
					"system accepts a mobilenumber with hyphens", "Pass");

			webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC13-LoginMobilenumberhyphens", "system should accepts a mobilenumber with hyphens",
					"system accepts mobilenumber with hyphens", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-14 (Login) AS66528//
	// To check if the system accepts a valid mobile number with parentheses.
	public boolean LoginMobilenumberparentheses(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber")))
					.sendKeys(xpathMap.get("MobileNumparentheses"));

			System.out.print("MobileNumparentheses is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("ValidPassword"));
			System.out.print("Password is Entered");

			webdriver.findElement(By.cssSelector(xpathMap.get("MobileLoginButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC14-LoginMobilenumberparentheses",
					"system should accepts a mobilenumber with parentheses",
					"system accepts a mobilenumber with parentheses", "Pass");

			webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC14-LoginMobilenumberparentheses",
					"system should accepts a mobilenumber with parentheses",
					"system accepts mobilenumber with parentheses", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-15 (Login) AS66528//
	// To check if the system accepts a valid mobile number with both spaces and
	// hyphens.
	public boolean LoginMobilenumberSpaces_Hyphens(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber")))
					.sendKeys(xpathMap.get("MobileNumSpacesHyphens"));

			System.out.print("MobileNumSpacesHyphens is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("ValidPassword"));
			System.out.print("Password is Entered");

			webdriver.findElement(By.cssSelector(xpathMap.get("MobileLoginButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC15-LoginMobilenumberSpaces_Hyphens",
					"system should accepts a mobilenumber with both spaces_hyphens",
					"system accepts a mobilenumber with both spaces_hyphens", "Pass");

			webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC14-LoginMobilenumberSpaces_Hyphens",
					"system should accepts a mobilenumber with both spaces_hyphens",
					"system accepts mobilenumber with both spaces_hyphens", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-16 (Login) AS66528//
	// To check if the system rejects a mobile number with alphabetic characters.
	public boolean LoginMobilenumberAlphabeticCharacters(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber")))
					.sendKeys(xpathMap.get("MobileNumAlphabeticCharacters"));

			System.out.print("MobileNumAlphabeticCharacters is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("ValidPassword"));
			System.out.print("Password is Entered");

			webdriver.findElement(By.cssSelector(xpathMap.get("MobileLoginButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC16-LoginMobilenumberAlphabeticCharacters",
					"system rejects a mobilenumber with alphabetic characters",
					"system rejects a mobilenumber with alphabetic characters", "Pass");

			webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC16-LoginMobilenumberAlphabeticCharacters",
					"system rejects a mobilenumber with alphabetic characters",
					"system rejects a mobilenumber with alphabetic characters", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-17 (Login) AS66528//
	// To check if the system rejects a mobile number with special characters.
	public boolean LoginMobilenumberSpecialCharacters(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber")))
					.sendKeys(xpathMap.get("MobileNumSpecialCharacters"));

			System.out.print("MobileNumSpecialCharacters is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("ValidPassword"));
			System.out.print("Password is Entered");

			webdriver.findElement(By.cssSelector(xpathMap.get("MobileLoginButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC17-LoginMobilenumberSpecialCharacters",
					"system rejects a mobilenumber with special characters",
					"system rejects a mobilenumber with special characters", "Pass");

			webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC17-LoginMobilenumberSpecialCharacters",
					"system rejects a mobilenumber with special characters",
					"system rejects a mobilenumber with special characters", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-18 (Login) AS66528//
	// To check if the system rejects a valid mobile number Starting with Hyphen.
	public boolean LoginMobilenumberStartingwithHyphen(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber")))
					.sendKeys(xpathMap.get("MobileNumStartingwithHyphens"));

			System.out.print("MobileNumStartingwithHyphens is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("ValidPassword"));
			System.out.print("Password is Entered");

			webdriver.findElement(By.cssSelector(xpathMap.get("MobileLoginButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC18-LoginMobilenumberStartingwithHyphen",
					"system should rejects a mobilenumber Startingwith Hyphen",
					"system rejects a mobilenumber Startingwith Hyphen", "Pass");

			webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC18-LoginMobilenumberStartingwithHyphen",
					"system should rejects a mobilenumber Startingwith Hyphens",
					"system rejects mobilenumber Startingwith Hyphen", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-19 (Login) AS66528//
	// To check if the system rejects a valid mobile number Ending with Hyphen.
	public boolean LoginMobilenumberEndingwithHyphen(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber")))
					.sendKeys(xpathMap.get("MobileNumEndingwithHyphens"));

			System.out.print("MobileNumEndingwithHyphens is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("ValidPassword"));
			System.out.print("Password is Entered");

			webdriver.findElement(By.cssSelector(xpathMap.get("MobileLoginButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC19-LoginMobilenumberEndingwithHyphen",
					"system should rejects a mobilenumber Endingwith Hyphen",
					"system rejects a mobilenumber Endingwith Hyphen", "Pass");

			webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC19-LoginMobilenumberEndingwithHyphen",
					"system should rejects a mobilenumber Endingwith Hyphens",
					"system rejects mobilenumber Endingwith Hyphen", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-20 (Login) AS66528//
	// To check if the system rejects a mobile number with consecutive spaces.
	public boolean LoginMobilenumberConsecutiveSpaces(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber")))
					.sendKeys(xpathMap.get("MobileNumConsecutiveSpaces"));

			System.out.print("MobileNumConsecutiveSpaces is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("ValidPassword"));
			System.out.print("Password is Entered");

			webdriver.findElement(By.cssSelector(xpathMap.get("MobileLoginButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC20-LoginMobilenumberConsecutiveSpaces",
					"system should rejects a mobilenumber ConsecutiveSpaces",
					"system rejects a mobilenumber ConsecutiveSpaces", "Pass");

			webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC20-LoginMobilenumberConsecutiveSpaces",
					"system should rejects a mobilenumber ConsecutiveSpaces",
					"system rejects mobilenumber ConsecutiveSpaces", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	///////////////////////////////// BETSLIP VUVUZELA UAT
	///////////////////////////////// /////////////////////////////////////
	/////// BETSLIP VUVUZELA ////////
	public void loginUAT() throws Exception {
		webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
		Thread.sleep(2000);
		Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
		System.out.print("HamburgerMenu Button Clicked");
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();
		Thread.sleep(2000);
		String title = webdriver.getCurrentUrl();
		if (title.contains("za")) {
			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber"))).sendKeys(xpathMap.get("SAUATPhno"));
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("SAUATPass"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
		} else if (title.contains("zm")) {
			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber"))).sendKeys(xpathMap.get("ZMUATPhno"));
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("ZMUATPass"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
		} else if (title.contains("ng")) {
			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber"))).sendKeys(xpathMap.get("NGUATPhno"));
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("NGUATPass"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
		}
		webdriver.findElement(By.cssSelector(xpathMap.get("LoginOnLoginpage"))).click();
		Thread.sleep(8000);
		webdriver.navigate().refresh();
	}

	public void oddsInBetBook() throws Exception {
		Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).isDisplayed());
		System.out.print("VuvuSportButton is Present");
		webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
		Thread.sleep(2000);
		Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("OddsInBetBook"))).isDisplayed());
		System.out.print("OddsInBetBook is Present");
		webdriver.findElement(By.xpath(xpathMap.get("OddsInBetBook"))).click();
		Thread.sleep(2000);
	}

	public void RemoveAllOdds() throws Exception {
		try {
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			System.out.print("Removeall button not visible");
		}
		webdriver.navigate().refresh();
	}

	// TC-1 (BetSlip) PD69988
	// When we add the first bet to the bet slip, it should be added to both the
	// single bet and multi-bet selection pages.
	public boolean SingleMultiBetslip(Mobile_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("BetSingle"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC1-BetSlip",
					"When we add the first bet to the bet slip, it should be added to single bet ",
					"When we add the first bet to the bet slip, it is be added to both the single bet ", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC1.1-BetSlip",
					"When we add the first bet to the bet slip, it should be added to Multi bet ",
					"When we add the first bet to the bet slip, it is be added to both the single bet ", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("BetSlipRemoveBet"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC1-BetSlip",
					"When we add the first bet to the bet slip, it should be added to both the single bet and Multi bet ",
					"When we add the first bet to the bet slip, it is be added to both the single bet ", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-2 (BetSlip) PD69988
	// When we add more than one bet, it should automatically be added to the
	// multi-bet selection..
	public boolean DefaultMultiBetslipAddition(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC2-BetSlip",
					"When we add more than one bet, it should automatically be added to the multi-bet selection.",
					"When we add more than one bet, it is automatically be added to the multi-bet selection. ", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC2-BetSlip",
					"/When we add more than one bet, it should automatically be added to the multi-bet selection.",
					"/When we add more than one bet, it is automatically be added to the multi-bet selection. ",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-3 (BetSlip) PD69988
	// When we add the first bet to the bet slip, the "Select All" switch should be
	// selected by default, and the color of the switch should be green.
	public boolean DefaultSelectAllButton(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			report.detailsAppend("TC3-BetSlip", "\"Select All\" switch should be selected by default",
					"\"Select All\" switch is selected by default ", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC3-BetSlip", "\"Select All\" switch should be selected by default",
					"\"Select All\" switch is selected by default ", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-4 (BetSlip) PD69988
	// The user should be able to deselect leg options.
	public boolean DeSelectLegsBetSlip(Mobile_HTML_Report report) {

		try {
			Thread.sleep(2000);
			try {
				oddsInBetBook();
			} catch (Exception e) {

				System.out.println("Error is" + e);
			}

			webdriver.findElement(By.xpath(xpathMap.get("VuvuCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC4-BetSlip", "The user should be able to deselect leg options.",
					"The user is able to deselect leg options.", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC4-BetSlip", "The user should be able to deselect leg options.",
					"The user is able to deselect leg options. ", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-5 (BetSlip) PD69988
	// The user should be able to select leg options after deselecting them.
	public boolean SelectDeSelectedLegsBetSlip(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("VuvuCheckBox"))).click();
			webdriver.findElement(By.xpath(xpathMap.get("VuvuCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC5-BetSlip", "The user should be able to select leg options after deselecting them.",
					"The user is able to select leg options after deselecting them.", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC5-BetSlip", "The user should be able to select leg options after deselecting them.",
					"The user is able to select leg options after deselecting them. ", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-6 (BetSlip) PD69988
	// When we switch the "Select All" switch to deselect, it should change to the
	// deselect state, and the color of the switch should convert to white.
	public boolean SelectAllWhiteBetSlip(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("VuvuCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC6-BetSlip", "The color of the switch should convert to white.",
					"The color of the switch is convert to white. ", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC6-BetSlip", "The color of the switch should convert to white.",
					"The color of the switch is convert to white. ", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-7 (BetSlip) PD69988
	// User can click inside the booking code text box..
	public boolean BookingCodeBetSlip(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("VuvuBookingCode"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC7-BetSlip", "User Should click inside the booking code text box.",
					"User can click inside the booking code text box.", "Pass");

			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC7-BetSlip", "User Should click inside the booking code text box.",
					"User can click inside the booking code text box.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-8 (BetSlip) PD69988
	// Entering a valid booking code allows submission.
	public boolean ValidBookingCodeBetSlip(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("VuvuBookingCode"))).sendKeys("UFC9D2");
			Thread.sleep(2000);
			webdriver.findElement(By.cssSelector(xpathMap.get("VuvuSearch"))).click();
			Thread.sleep(10000);
			report.detailsAppend("TC8-BetSlip", "valid booking code should allow submission.",
					"valid booking code allows submission.", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC8-BetSlip", "valid booking code should allow submission.",
					"valid booking code allows submission.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-9 (BetSlip) PD69988
	// Entering an invalid booking code should prevent submission.
	public boolean InValidBookingCodeBetSlip(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("VuvuBookingCode"))).sendKeys("U1F95C");
			Thread.sleep(2000);
			webdriver.findElement(By.cssSelector(xpathMap.get("VuvuSearch"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC9-BetSlip", "invalid booking code should prevent submission.",
					"invalid booking code prevents submission.", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC9-BetSlip", "invalid booking code should prevent submission.",
					"invalid booking code prevents submission.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-10 (BetSlip) PD69988
	// Submitting an empty field should not be allowed.
	public boolean EmptyBookingCodeBetSlip(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();

			webdriver.findElement(By.xpath(xpathMap.get("VuvuBookingCode"))).sendKeys(" ");
			Thread.sleep(2000);
			webdriver.findElement(By.cssSelector(xpathMap.get("VuvuSearch"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC10-BetSlip", "Empty booking code should prevent submission.",
					"Empty booking code prevents submission.", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC10-BetSlip", "Empty booking code should prevent submission.",
					"Empty booking code prevents submission.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-11 (BetSlip) PD69988
	// User can click inside the booking code text box..
	public boolean BookingCodeMultiBetslip(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuBookingCode"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC11-BetSlip", "User Should click inside the booking code text box.",
					"User can click inside the booking code text box.", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC11-BetSlip", "User Should click inside the booking code text box.",
					"User can click inside the booking code text box.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-12 (BetSlip) PD69988
	// User can click inside the booking code text box..
	public boolean BookingCodeSelectMultiBetslip(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("VuvuBookingCode"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Sall"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC12-BetSlip", "User Should click inside the booking code text box.",
					"User can click inside the booking code text box.", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC12-BetSlip", "User Should click inside the booking code text box.",
					"User can click inside the booking code text box.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-13 (BetSlip) PD69988
	// Entering a valid booking code allows submission.
	public boolean ValidBookingCodeMultiBetslip(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuBookingCode"))).sendKeys("U1F95C807");
			Thread.sleep(2000);
			webdriver.findElement(By.cssSelector(xpathMap.get("VuvuSearch"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC13-BetSlip", "valid booking code should allow submission.",
					"valid booking code allows submission.", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC13-BetSlip", "valid booking code should allow submission.",
					"valid booking code allows submission.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-14 (BetSlip) PD69988
	// Entering an invalid booking code should prevent submission.
	public boolean InValidBookingCodeMultiBetslip(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuBookingCode"))).sendKeys("U1F95C");
			Thread.sleep(2000);
			webdriver.findElement(By.cssSelector(xpathMap.get("VuvuSearch"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC14-BetSlip", "invalid booking code should prevent submission.",
					"invalid booking code prevents submission.", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC14-BetSlip", "invalid booking code should prevent submission.",
					"invalid booking code prevents submission.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-15 (BetSlip) PD69988
	// Submitting an empty field should not be allowed.
	public boolean EmptyBookingCodeMultiBetslip(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuBookingCode"))).sendKeys(" ");
			Thread.sleep(2000);
			webdriver.findElement(By.cssSelector(xpathMap.get("VuvuSearch"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC15-BetSlip", "Empty booking code should prevent submission.",
					"Empty booking code prevents submission.", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC15-BetSlip", "Empty booking code should prevent submission.",
					"Empty booking code prevents submission.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-16 (BetSlip) PD69988
	// Check user should able to click on Single bet slip.
	public boolean SingleBetSlipClick(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BetSingle"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC16-BetSlip", "user should able to click on  Single bet slip.",
					"user is able to click on  Single bet slip.", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC16-BetSlip", "user should able to click on  Single bet slip.",
					"user is able to click on  Single bet slip.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-17 (BetSlip) PD69988
	// User should see the same leg is added into the single betslip.
	public boolean VerifySingleBetSlipClick(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			report.detailsAppend("TC17-BetSlip", "User should see  the same leg is added into the single betslip.",
					"User is able to see  the same leg is added into the single betslip.", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC17-BetSlip", "User should see  the same leg is added into the single betslip.",
					"User is able to see  the same leg is added into the single betslip.", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-18 (BetSlip) PD69988
	// user can select/unselect Checkbox
	public boolean CheckBoxClick(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			report.detailsAppend("TC18-BetSlip", " User Should select Checkbox .", " User can select Checkbox. ",
					"Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC18-BetSlip", " User Should Unselect Checkbox .", " User can Unselect Checkbox. ",
					"Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC18-BetSlip", " user Should select/Unselect Checkbox .",
					" user can select/Unselect Checkbox. ", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-19 (BetSlip) PD69988
	// User can see that after deselecting a checkbox for a single bet then
	// bydefault deselects the Select All button.
	public boolean DefaultSelectAll(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();

			webdriver.findElement(By.xpath(xpathMap.get("VuvuCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC19-BetSlip", " user Should able to see SelectAll Deselecting .",
					" user can see selectAll Deselected ", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC19-BetSlip", " user Should able to see SelectAll Deselecting .",
					" user can see selectAll Deselected ", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-20 (BetSlip) PD69988
	// User should see the same leg is added into the Multi betslip.
	public boolean VerifyMultiBetslip(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC20-BetSlip", " User should see  the same leg is added into the Multi betslip.",
					"User is able to see  the same leg is added into the Multi betslip.", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC20-BetSlip", " user Should able to see SelectAll Deselecting .",
					" user can see selectAll Deselected ", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-21 (BetSlip) PD69988
	// Confirm the functionality of the checkbox by testing its ability to be
	// checked and unchecked for an added bet in the Multi betslip.
	public boolean MultiBetslipCheckBox(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC21-BetSlip", " user Should able to Click the CheckBox in Multi Betslip .",
					" user is able to Click the CheckBox in Multi Betslip ", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC21-BetSlip", " user Should able to Click the CheckBox in Multi Betslip .",
					" user is able to Click the CheckBox in Multi Betslip ", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-22 (BetSlip) PD69988
	// User can see that after deselecting a checkbox for a Multi bet then bydefault
	// deselects the Select All button.
	public boolean MultiBetslipSelectAll(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC22-BetSlip",
					" user Should able to Click the CheckBox in Multi Betslip then bydefault deselects the Select All button.",
					" user is able to Click the CheckBox in Multi Betslip then bydefault deselects the Select All button. ",
					"Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC22-BetSlip",
					" user Should able to Click the CheckBox in Multi Betslip then bydefault deselects the Select All button.",
					" user is able to Click the CheckBox in Multi Betslip then bydefault deselects the Select All button.",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-23 (BetSlip) PD69988
	// User can see Multi betslip opens the Winning Probability page.
	public boolean MultiBetslipStatisticsPage(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(xpathMap.get("VuvuEventStatistics"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println("Error is" + e);
			}
			report.detailsAppend("TC23-BetSlip",
					" User can see Clicking on Multi betslip opens the Winning Probability page.",
					" User is able to see Clicking on Multi betslip opens the Winning Probability page. ", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC23-BetSlip",
					" User can see Clicking on Multi betslip opens the Winning Probability page.",
					" User is able to see Clicking on Multi betslip opens the Winning Probability page. ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-25 (BetSlip) PD69988
	// To check "Booking code" pop up window getting closed on clicking "Close"
	// button
	public boolean MultiBookingCodeClose(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuBookButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("UATBookingCodeDialog")));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("UATBookingCodeCloseButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC25-BetSlip",
					" To check \"Booking code\" pop up window getting closed on clicking \"Close\" button",
					" User is able to close Booking code pop-up Window ", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC25-BetSlip",
					" To check \"Booking code\" pop up window getting closed on clicking \"Close\" button",
					" User is able to close Booking code pop-up Window ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-26 (BetSlip) PD69988
	// To check the WhatApps button in the Book pop window
	public boolean WhatsAppButton(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuBookButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("UATBookingCodeDialog")));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuWhatsApp"))).click();
			report.detailsAppend("TC26-BetSlip", " To check the WhatApps  button in the Book pop window ",
					"  WhatApps  button is Clicked in the Book pop window  ", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(xpathMap.get("UATBookingCodeCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC26-BetSlip", " To check the WhatApps  button in the Book pop window ",
					"  WhatApps  button is Clicked in the Book pop window  ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-27 (BetSlip) PD69988
	// To check the Twitter button in the Book pop window
	public boolean TwitterButton(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuBookButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("UATBookingCodeDialog")));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuTwitter"))).click();
			report.detailsAppend("TC27-BetSlip", " To check the WhatApps  button in the Book pop window ",
					"  WhatApps  button is Clicked in the Book pop window  ", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(xpathMap.get("UATBookingCodeCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC27-BetSlip", " To check the Twitter  button in the Book pop window ",
					"  Twitter  button is Clicked in the Book pop window  ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-28 (BetSlip) PD69988
	// To check the Facebook button in the Book pop window
	public boolean FacebookButton(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuBookButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("UATBookingCodeDialog")));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuFaceBook"))).click();
			report.detailsAppend("TC28-BetSlip", " To check the Facebook  button in the Book pop window ",
					"  Facebook  button is Clicked in the Book pop window  ", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(xpathMap.get("UATBookingCodeCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC28-BetSlip", " To check the Facebook  button in the Book pop window ",
					"  Facebook  button is Clicked in the Book pop window  ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-29 (BetSlip) PD69988
	// To check the Mail button in the Book pop window
	public boolean MailButton(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuBookButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("UATBookingCodeDialog")));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuMail"))).click();
			report.detailsAppend("TC29-BetSlip", " To check the Mail  button in the Book pop window ",
					"  Mail  button is Clicked in the Book pop window  ", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(xpathMap.get("UATBookingCodeCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC29-BetSlip", " To check the Mail  button in the Book pop window ",
					"  Mail  button is Clicked in the Book pop window  ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-30 (BetSlip) PD69988
	// To check the ContinueBetting button in the Book pop window
	public boolean ContinueBettingButton(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuBookButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("UATBookingCodeDialog")));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuContinueBetting"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC30-BetSlip", " To check the ContinueBetting  button in the Book pop window ",
					"  ContinueBetting  button is Clicked in the Book pop window  ", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC30-BetSlip", " To check the ContinueBetting  button in the Book pop window ",
					"  ContinueBetting  button is Clicked in the Book pop window  ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-37 (BetSlip) PD69988
	// To check functionality of "Keep bets in betslip check box" Without checking
	// the Checkbox
	public boolean SingleBetKeepBetsCheckBox(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("VuvuKeepBets"))).click();
			webdriver.findElement(By.xpath(xpathMap.get("VuvuKeepBets"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC37-BetSlip", " \"Keep bets in betslip check box\" should be visible ",
					" \"Keep bets in betslip check box\" is visible ", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC37-BetSlip", " \"Keep bets in betslip check box\" should be visible ",
					" \"Keep bets in betslip check box\" is visible ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-38 (BetSlip) PD69988
	// To check functionality of "Keep bets in betslip check box" With checking the
	// Checkbox
	public boolean SingleBetKeepBetsCheckBoxClick(Mobile_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("VuvuKeepBets"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC38-BetSlip", " \"Keep bets in betslip check box\" should be Clicked ",
					" \"Keep bets in betslip check box\" is visible ", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC38-BetSlip", " \"Keep bets in betslip check box\" should be visible ",
					" \"Keep bets in betslip check box\" is Clicked ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-39 (BetSlip) PD69988
	// To check functionality of "Keep bets in betslip check box" Without checking
	// the Checkbox
	public boolean MultiBetKeepBetsCheckBox(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuKeepBets"))).click();
			webdriver.findElement(By.xpath(xpathMap.get("VuvuKeepBets"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC39-BetSlip", " \"Keep bets in betslip check box\" should be visible ",
					" \"Keep bets in betslip check box\" is visible ", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC39-BetSlip", " \"Keep bets in betslip check box\" should be visible ",
					" \"Keep bets in betslip check box\" is visible ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-40 (BetSlip) PD69988
	// To check functionality of "Keep bets in betslip check box" With checking the
	// Checkbox
	public boolean MultiBetKeepBetsCheckBoxClick(Mobile_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuKeepBets"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC40-BetSlip", " \"Keep bets in betslip check box\" should be Clicked ",
					" \"Keep bets in betslip check box\" is visible ", "Pass");
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC40-BetSlip", " \"Keep bets in betslip check box\" should be visible ",
					" \"Keep bets in betslip check box\" is Clicked ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-41 (BetSlip) PD69988
	// To check without check the Accept all odds & line charges Check box
	public boolean SingleBetAcceptOddsCheckBox(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("VuvuAcceptOdds"))).click();
			webdriver.findElement(By.xpath(xpathMap.get("VuvuAcceptOdds"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC41-BetSlip", "Accept all odds & line charges Check box should be visible ",
					"Accept all odds & line charges Check box is visible ", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC41-BetSlip", "Accept all odds & line charges Check box should be visible ",
					"Accept all odds & line charges Check box is visible ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-42 (BetSlip) PD69988
	// To check functionality of "Keep bets in betslip check box" With checking the
	// Checkbox
	public boolean SingleBetAcceptOddsCheckBoxClick(Mobile_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("VuvuAcceptOdds"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC42-BetSlip", " \"Keep bets in betslip check box\" should be Clicked ",
					" \"Keep bets in betslip check box\" is visible ", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC42-BetSlip", "Accept all odds & line charges Check box should be visible ",
					"Accept all odds & line charges Check box is Clicked ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-43 (BetSlip) PD69988
	// To check functionality of "Keep bets in betslip check box" Without checking
	// the Checkbox
	public boolean MultiBetAcceptOddsCheckBox(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuAcceptOdds"))).click();
			webdriver.findElement(By.xpath(xpathMap.get("VuvuAcceptOdds"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC43-BetSlip", "Accept all odds & line charges Check box should be visible ",
					"Accept all odds & line charges Check box is visible ", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC43-BetSlip", "Accept all odds & line charges Check box should be visible ",
					"Accept all odds & line charges Check box is visible ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-44 (BetSlip) PD69988
	// To check functionality of "Keep bets in betslip check box" With checking the
	// Checkbox
	public boolean MultiBetAcceptOddsCheckBoxClick(Mobile_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuAcceptOdds"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC44-BetSlip", "Accept all odds & line charges Check box should be Clicked ",
					"Accept all odds & line charges Check box is visible ", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC44-BetSlip", "Accept all odds & line charges Check box should be visible ",
					"Accept all odds & line charges Check box is Clicked ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-45 (BetSlip) PD69988
	// To check Total betway return Wager calculation(Odd*Bet Wager)
	public boolean TotalBetwayReturn(Mobile_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			webdriver.findElement(By.xpath(xpathMap.get("VuvuAcceptOdds"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC45-BetSlip", "Check Total betway return Wager calculation",
					"Check Total betway return Wager calculation", "Pass");
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC45-BetSlip", "Check Total betway return Wager calculation",
					"Check Total betway return Wager calculation", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-46 (BetSlip) PD69988
	// To check on clicking Total BetWay return dropdown user able to see potential
	// return Wager
	public boolean PotentialReturn(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			webdriver.findElement(By.xpath(xpathMap.get("VuvuAcceptOdds"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC46-BetSlip",
					"Clicking on Total BetWay return dropdown user Should able to see potential return",
					"Clicking on Total BetWay return dropdown user is able to see potential return", "Pass");
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC46-BetSlip",
					"Clicking on Total BetWay return dropdown user Should able to see potential return",
					"Clicking on Total BetWay return dropdown user is able to see potential return", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-47 (BetSlip) PD69988
	// To check on clicking Total BetWay return dropdown user able to see potential
	// return Wager
	public boolean BetWager(Mobile_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(1000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("SingleBetBetWagerfieldingleBet"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("SingleBetBetWagerfieldingleBet"))).sendKeys("20.00");
				Thread.sleep(1000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(xpathMap.get("SingleBetBetWagerfieldingleBet"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("SingleBetBetWagerfieldingleBet"))).sendKeys("20.00");
				Thread.sleep(1000);

			}
			Thread.sleep(1000);
			report.detailsAppend("TC47-BetSlip", "check Whether user able to enter/add  WagerInputs to Bet Wagerfield",
					"User able to enter/add  WagerInputs to Bet Wagerfield", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC47-BetSlip", "check Whether user able to enter/add  WagerInputs to Bet Wagerfield",
					"User able to enter/add  WagerInputs to Bet Wagerfield", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	///// Akhil AS66528 /////
	// TC-48 (BetSlip) AS66528
	// To check is user able to enter/add Wager to "Bet Wager" field
	public boolean VerifyMultipleoddsFunctionality(Mobile_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Bet_Amount"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("TotalBetwayReturnBetAmount"))).click();
			Thread.sleep(1000);
			report.detailsAppend("TC48-BetSlip", "check Whether user able to enter/add Wager to Bet Wagerfield",
					"User able to enter/add Wager to Bet Wagerfield", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC48-BetSlip", "check Whether user able to enter/add Wager to Bet Wagerfield",
					"User able to enter/add Wager to Bet Wagerfield", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-49 (BetSlip) AS66528
	// To check is user not able to enter/add Invalid Wager Inputs to "Bet Wager"
	// field

	public boolean UserAddInvalidWagerInputs_BetWager(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(1000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM"))).sendKeys("@!&#");
				Thread.sleep(1000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG"))).sendKeys("@!&#");
				Thread.sleep(1000);

			}
			Thread.sleep(1000);
			report.detailsAppend("TC49-BetSlip",
					"check Whether user able to enter/add Invalid WagerInputs to Bet Wagerfield",
					"User able to enter/add Invalid WagerInputs to Bet Wagerfield", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC49-BetSlip",
					"check Whether user able to enter/add Invalid WagerInputs to Bet Wagerfield",
					"User able to enter/add Invalid WagerInputs to Bet Wagerfield", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-50 (BetSlip) AS66528
	// To check calculation of the Total odds by adding more than one odd

	public boolean TotalBetwayReturnWagercalculation(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC50-BetSlip", "check Whether user able to see Total betway return Wager calculation",
					"User able to see Total betway return Wager calculation", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC50-BetSlip",
					"check Whethrer user able to see Total betway return Wager calculation",
					"User able to see Total betway return Wager calculation", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-51 (BetSlip) AS66528
	// Tocheck all bets are getting removed from the Betslip by clicking on Remove
	// all button In MultiBetslip

	public boolean RemoveAlloddsInMultiBetslip(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();

			report.detailsAppend("TC51-BetSlip",
					"all bets should removed In MultiBetslip by clicking on Remove all button",
					"all bets are removed In MultiBetslip by clicking on Remove all button", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC51-BetSlip",
					"all bets should removed In MultiBetslip by clicking on Remove all button",
					"all bets are removed In MultiBetslip by clicking on Remove all button", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-52 (BetSlip) AS66528
	// Tocheck all bets are getting removed from the Betslip by clicking on Remove
	// all button In Singlebetslip
	public boolean RemoveAlloddsInSinglebetslip(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("BetSingle"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(1000);
			report.detailsAppend("TC52-BetSlip",
					"all bets should removed In Singlebetslip by clicking on Remove all button",
					"all bets are removed In Singlebetslip by clicking on Remove all button", "Pass");
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC52-BetSlip",
					"all bets should removed In Singlebetslip by clicking on Remove all button",
					"all bets are removed In Singlebetslip by clicking on Remove all button", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-53 (BetSlip) AS66528
	// To check"Quick Bet" is getting display with five buttons.
	public boolean Multi_VerifyQuickBetbutton(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Bet_Amount"))).click();
			Thread.sleep(1000);
			report.detailsAppend("TC53-BetSlip", "check QuickBet is getting display with five buttons",
					"QuickBet is getting display with five buttons", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC53-BetSlip", "check QuickBet is getting display with five buttons",
					"QuickBet is getting display with five buttons", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-54 (BetSlip) AS66528
	// Check Quick bet values are getting change as per Wager entered in bet Wager.

	public boolean Multi_EnterAmountInQuickBetSection(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(1000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM"))).sendKeys("10.00");
				Thread.sleep(1000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG"))).sendKeys("10.00");
				Thread.sleep(1000);

			}
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("Bet_Amount"))).click();
			Thread.sleep(1000);
			report.detailsAppend("TC54-BetSlip",
					"Check Quick bet values are getting change as per Wager entered in bet Wager.",
					"Quick bet values are getting change as per Wager entered in bet Wager.", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC54-BetSlip",
					"Check Quick bet values are getting change as per Wager entered in bet Wager.",
					"Quick bet values are getting change as per Wager entered in bet Wager.", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-55 (BetSlip) AS66528
	// To check"Quick Bet" buttons functionality put "10 R " in bet Wager.

	public boolean Multi_Verify_QuickBetbutton(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(1000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM"))).sendKeys("10.00");
				Thread.sleep(1000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG"))).sendKeys("10.00");
				Thread.sleep(1000);

			}
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("TotalBetwayReturnBetAmount"))).click();
			Thread.sleep(1000);
			report.detailsAppend("TC55-BetSlip",
					"Check Quick bet values are getting change as per Wager entered in bet Wager.",
					"Quick bet values are getting change as per Wager entered in bet Wager.", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC55-BetSlip",
					"Check Quick bet values are getting change as per Wager entered in bet Wager",
					"Quick bet values are getting change as per Wager entered in bet Wager", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-56 (BetSlip) AS66528
	// To check"Quick Bet" buttons functionality put "10 R " in bet Wager.

	public boolean Multi_QuickBetbutton(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(1000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM"))).sendKeys("10.00");
				Thread.sleep(1000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG"))).sendKeys("10.00");
				Thread.sleep(1000);

			}
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("TotalBetwayReturnBetAmount"))).click();
			Thread.sleep(1000);
			report.detailsAppend("TC56-BetSlip", "User must be able to see quick bet values",
					"User able to see quick bet values", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC56-BetSlip", "User must be able to see quick bet values",
					"User able to see quick bet values", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-57 (BetSlip) AS66528
	// To check Reset button in "Quick Bet " section

	public boolean Multi_VerifyResetbutton(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TotalBetwayReturnBetAmount"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("ResetButtonInBetslip"))).click();
			Thread.sleep(1000);
			report.detailsAppend("TC57-BetSlip", "User must check Resetbutton in QuickBet section",
					"check Reset button in Quick Bet section", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC57-BetSlip", "User must check Resetbutton in QuickBet section",
					"check Reset button in Quick Bet section", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-58 (BetSlip) AS66528
	// To check Win Boost value in Bet amount dropdown

	public boolean Multi_QuickbetCalculation(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Bet_Amount"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC58-BetSlip", "User must check Quick bet button calculation",
					"check Quick bet button calculation section", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC58-BetSlip", "User must check Quick bet button calculation",
					"check Quick bet button calculation section", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-59 (BetSlip) AS66528
	// To check Win Boost value in Bet amount dropdown

	public boolean Multi_WinBoostvalueinBetAmount(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TotalBetwayReturnBetAmount"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC59-BetSlip", "User must check WinBoostvalue in Betamount dropdown",
					"check WinBoostvalue in Betamount dropdown section", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC59-BetSlip", "User must check WinBoostvalue in Betamount dropdown",
					"check WinBoostvalue in Betamount dropdown section", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-60 (BetSlip) AS66528
	// To check Win Boost value in Bet amount calculation

	public boolean Multi_WinBoostCalculationPage(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TotalBetwayReturnBetAmount"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("WinBoostdropdown"))).click();
			Thread.sleep(1000);
			report.detailsAppend("TC60-BetSlip", "User must check WinBoostvalue in Betamount calculation",
					"check WinBoostvalue in Betamount calculation Display", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC60-BetSlip", "User must check WinBoostvalue in Betamount calculation",
					"check WinBoostvalue in Betamount calculation Display", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-61 (BetSlip) AS66528
	// To check Win Boost tool tip

	public boolean Multi_WinBoosttooltip(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TotalBetwayReturnBetAmount"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("TotalOddstextInBetSlip"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("WinBoostdropdown"))).click();
			Thread.sleep(1000);
			report.detailsAppend("TC61-BetSlip", "User must check Win Boost tool tip",
					"check Win Boost tool tip Display", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC61-BetSlip", "User must check Win Boost tool tip",
					"check Win Boost tool tip Display", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-62 (BetSlip) AS66528
	// To check Win Boost pop up window contents

	public boolean Multi_WinBoostpopupwindowcontent(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TotalBetwayReturnBetAmount"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("TotalOddstextInBetSlip"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("WinBoostdropdown"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC62-BetSlip", "User must check Win Boost pop up window contents",
					"check Win Boost pop up window contents Display", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC62-BetSlip", "User must check Win Boost pop up window contents",
					"check Win Boost pop up window contents Display", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-63 (BetSlip) AS66528
	// To check Win Boost value in Bet amount calculation

	public boolean Multi_WinBoostInBetamountCalculation(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TotalBetwayReturnBetAmount"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("TotalOddstextInBetSlip"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("WinBoostdropdown"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC63-BetSlip", "User must check Win Boost value in Bet amount calculation",
					"check Win Boost value in Bet amount calculation Display", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC63-BetSlip", "User must check Win Boost value in Bet amount calculation",
					"check Win Boost value in Bet amount calculation Display", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-64 (BetSlip) AS66528
	// To check if user don't have insufficient funds in account then "Bet
	// Confirmation" pop up window should display

	public boolean Single_BetConfirmationPopupWindow(Mobile_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("BetSingle"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(1000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("SingleBetBetWagerfieldingleBet"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("SingleBetBetWagerfieldingleBet")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(1000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(xpathMap.get("SingleBetBetWagerfieldingleBet"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("SingleBetBetWagerfieldingleBet")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(1000);
			}

			report.detailsAppend("TC64-BetSlip",
					"User must check Single- Insufficient funds error pop-up on clicking BetNow button",
					"check Single- Insufficient funds error pop-up on clicking BetNow button", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC64-BetSlip",
					"User must check Single- Insufficient funds error pop-up on clicking BetNow button",
					"check Single- Insufficient funds error pop-up on clicking BetNow button", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-65 (BetSlip) AS66528
	// To check if user don't have insufficient funds in account then "Bet
	// Confirmation" pop up window should display

	public boolean Multi_BetConfirmationPopupWindow(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(1000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(1000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(1000);
			}
			Thread.sleep(2000);

			report.detailsAppend("TC65-BetSlip",
					"User must check Multi- Insufficient funds error pop-up on clicking BetNow button",
					"check Multi- Insufficient funds error pop-up on clicking BetNow button", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC65-BetSlip",
					"User must check Multi- Insufficient funds error pop-up on clicking BetNow button",
					"check Multi- Insufficient funds error pop-up on clicking BetNow button", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-66 (BetSlip) AS66528
	// To check on clicking "My Bet" button "Account Options" pop-up window should
	// appear.

	public boolean Single_MyBetButtonAccountPopupWindow(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("BetSingle"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(1000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("SingleBetBetWagerfieldingleBet"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("SingleBetBetWagerfieldingleBet")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(1000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(xpathMap.get("SingleBetBetWagerfieldingleBet"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("SingleBetBetWagerfieldingleBet")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(1000);
			}
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC66-BetSlip",
					"User must clicking MyBet button In AccountOptions pop-up window should appear",
					"MyBet button In AccountOptions pop-up window appeared", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC66-BetSlip",
					"User must Clicking MyBet button In AccountOptions pop-up window should appear",
					"MyBet button In AccountOptions pop-up window appeared", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-67 (BetSlip) AS66528
	// To check the result(Data) of "ALL" Radio Button In Singleodd.

	public boolean VerifyMyBet_ALLRadioButtonInSingleodd(Mobile_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(1000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);
			}
			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("OpenBets"))).click();
			Thread.sleep(4000);
			webdriver.findElement(By.xpath(xpathMap.get("AllRadioButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC67-BetSlip", "User must check the result(Data) of ALL Radio Button In Singleodd",
					"check the result(Data) of ALL Radio Button In Singleodd", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC67-BetSlip", "User must check the result(Data) of ALL Radio Button In Singleodd",
					"check the result(Data) of ALL Radio Button In Singleodd", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-68 (BetSlip) AS66528
	// To check the result(Data) options in "Sports Drop-down"

	public boolean VerifyOpenBet_SportsDropdown(Mobile_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(1000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);
			}
			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(4000);
			webdriver.findElement(By.xpath(xpathMap.get("OpenBets"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC68-BetSlip", "User must Verify the result(Data) options in Sports Drop-down",
					"erify the result(Data) options in Sports Drop-down", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC68-BetSlip", "User must erify the result(Data) options in Sports Drop-down",
					"erify the result(Data) options in Sports Drop-down", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-69 (BetSlip) AS66528
	// To check content of 'Auto Cash out" pop up window.

	public boolean VerifyMyBet_AutoCashoutPopupWindow(Mobile_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(1000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);
			}
			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(4000);
			report.detailsAppend("TC69-BetSlip", "User must check content of  Auto Cash out popup window",
					"check content of  Auto Cash out popup window", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC69-BetSlip", "User must check content of  Auto Cash out popup window",
					"check content of  Auto Cash out popup window", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-70 (BetSlip) AS66528
	// To check content of 'Auto Cash out" slider.

	public boolean VerifyMyBet_AutoCashoutSlider(Mobile_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(1000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);
			}
			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CashOutButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC70-BetSlip", "User must check content of  Auto Cash out Slider",
					"check content of  Auto Cash out Slider", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC70-BetSlip", "User must check content of  Auto Cash out Slider",
					"check content of  Auto Cash out Slider", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-71 (BetSlip) AS66528
	// To check "Set" button functionality on Auto Cashout

	public boolean VerifySetbutton_inAutoCashoutsection(Mobile_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("BetSingle"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(1000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(1000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(1000);
				;
			}
			webdriver.navigate().refresh();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CashOutButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC71-BetSlip", "User must check functionality of Setbutton in AutoCashout section",
					"checked functionality of Setbutton in AutoCashout section", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC71-BetSlip", "User must check functionality of Setbutton in AutoCashout section",
					"checked functionality of Setbutton in AutoCashout section", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-72 (BetSlip) AS66528
	// To check the functionality of the "Remove" button in Auto Cashout section

	public boolean VerifyRemovebutton_inAutoCashoutsection(Mobile_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(1000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(1000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(1000);
			}
			webdriver.navigate().refresh();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CashOutButton"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC72-BetSlip", "User must check functionality of Removebutton in AutoCashout section",
					"checked functionality of Removebutton in AutoCashout section", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC72-BetSlip", "User must check functionality of Removebutton in AutoCashout section",
					"checked functionality of Removebutton in AutoCashout section", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-73 (BetSlip) AS66528
	// To check the result(Data) of "ALL" Radio Button In MultiOdd

	public boolean VerifyMyBet_ALLRadioButtonInMultiodd(Mobile_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(1000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(1000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(1000);
			}
			webdriver.navigate().refresh();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("OpenBets"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("AllRadioButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC73-BetSlip", "User must check the result(Data) of ALL Radio Button In MultiOdd",
					"check the result(Data) of ALL Radio Button In MultiOdd", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC73-BetSlip", "User must check the result(Data) of ALL Radio Button In MultiOdd",
					"check the result(Data) of ALL Radio Button In MultiOdd", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-74 (BetSlip) AS66528
	// To check the functionality of "Hide Losses" toggle button when it's on

	public boolean VerifySingleodds_HideLossestoggleOn(Mobile_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("BetSingle"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(1000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("SingleBetBetWagerfieldingleBet"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("SingleBetBetWagerfieldingleBet")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(1000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(xpathMap.get("SingleBetBetWagerfieldingleBet"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("SingleBetBetWagerfieldingleBet")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(1000);
			}
			webdriver.navigate().refresh();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SettledBets"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("HideLossesCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC74-BetSlip",
					"User must check functionality of Hide Losses  togglebutton when it's on",
					"check functionality of Hide Losses  togglebutton when it's on", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC74-BetSlip",
					"User must check functionality of Hide Losses  togglebutton when it's on",
					"check functionality of Hide Losses  togglebutton when it's on", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-75 (BetSlip) AS66528
	// To check the functionality of "Hide Losses" toggle button when it's off

	public boolean VerifySingleodds_HideLossestoggleOff(Mobile_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("BetSingle"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(1000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(1000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(1000);
			}
			webdriver.navigate().refresh();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SettledBets"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("HideLossesCheckBox"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("HideLossesCheckBox"))).click();
			report.detailsAppend("TC75-BetSlip",
					"User must check functionality of Hide Losses  togglebutton when it's off",
					"check functionality of Hide Losses  togglebutton when it's off", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC75-BetSlip",
					"User must check functionality of Hide Losses  togglebutton when it's off",
					"check functionality of Hide Losses  togglebutton when it's off", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-76 (BetSlip) AS66528
	// To check the functionality of "Hide Losses" toggle button when it's on

	public boolean VerifyMultiodds_HideLossestoggleOn(Mobile_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(1000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(1000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(1000);
			}
			webdriver.navigate().refresh();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SettledBets"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("HideLossesCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC76-BetSlip",
					"User must check functionality of Hide Losses  togglebutton when it's on",
					"check functionality of Hide Losses  togglebutton when it's on", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC76-BetSlip",
					"User must check functionality of Hide Losses  togglebutton when it's on",
					"check functionality of Hide Losses  togglebutton when it's on", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-77 (BetSlip) AS66528
	// To check the functionality of "Hide Losses" toggle button when it's off

	public boolean VerifyMultiodds_HideLossestoggleOff(Mobile_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(1000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(1000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(1000);
			}
			webdriver.navigate().refresh();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SettledBets"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("HideLossesCheckBox"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("HideLossesCheckBox"))).click();
			report.detailsAppend("TC77-BetSlip",
					"User must check functionality of Hide Losses  togglebutton when it's off",
					"check functionality of Hide Losses  togglebutton when it's off", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC77-BetSlip",
					"User must check functionality of Hide Losses  togglebutton when it's off",
					"check functionality of Hide Losses  togglebutton when it's off", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-78 (BetSlip) AS66528
	// To check on clicking the partial button tool tip is showing

	public boolean VerifyMultiodds_OpenbetsPopup(Mobile_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(1000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(1000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(1000);
			}
			webdriver.navigate().refresh();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("OpenBets"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC78-BetSlip", "User must check on clicking the partial button tool tip is showing",
					"check on clicking the partial button tool tip is showing", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC78-BetSlip", "User must check on clicking the partial button tool tip is showing",
					"check on clicking the partial button tool tip is showing", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-79 (BetSlip) AS66528
	// To check after partial cashout done then "Partial" button get enabled

	public boolean VerifyMultiodds_cashoutPopUpWindow(Mobile_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(xpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(1000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldZM")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(1000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(xpathMap.get("BetWagerfieldNG")))
						.sendKeys(xpathMap.get("AmountForInSufficient"));
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("BetNowButton"))).click();
				Thread.sleep(1000);
			}
			webdriver.navigate().refresh();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("OpenBets"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CashOutButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC79-BetSlip",
					"User must check after partial cashout done then Partial button get enabled",
					"check after partial cashout done then Partial button get enabled", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC79-BetSlip",
					"User must check after partial cashout done then Partial button get enabled",
					"check after partial cashout done then Partial button get enabled", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

/////////////////////////////////////////////////Vuvu BuildABet////////////////////////////////////////////////	
	public void loginSA() throws Exception {
		webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
		Thread.sleep(2000);
		Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaSignup"))).isDisplayed());
		System.out.print("HamburgerMenu Button Clicked");
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber"))).sendKeys(xpathMap.get("SAPhone"));
		Thread.sleep(2000);
		System.out.print("MobileNumber is Entered");
		webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("SAPass"));
		System.out.print("Password is Entered");
		Thread.sleep(2000);
		webdriver.findElement(By.cssSelector(xpathMap.get("MobileLoginButton"))).click();
		Thread.sleep(8000);
		webdriver.navigate().refresh();
	}

	public void BuildABetClick() throws Exception {
		Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).isDisplayed());
		System.out.println("VuvuSport Button is Present");
		webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
		Thread.sleep(2000);
		Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("EventClick"))).isDisplayed());
		System.out.println("EventClick Button is Present");
		webdriver.findElement(By.xpath(xpathMap.get("EventClick"))).click();
		Thread.sleep(2000);
		Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BuildABet"))).isDisplayed());
		System.out.println("BuildABet Button is Present");
		webdriver.findElement(By.xpath(xpathMap.get("BuildABet"))).click();
		Thread.sleep(2000);
	}

	// TC-1 (BuildABet) PD69988
	// To check user able to navigate to Sport section
	public boolean SportsPage(Mobile_HTML_Report report) {

		try {
			loginSA();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).isDisplayed());
			System.out.println("VuvuSport Button is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC1-BuildABet", "check whether user is able to navigate to Sport section",
					"user is able to navigate to Sport section", "Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC1-BuildABet", "check whether user is able to navigate to Sport section",
					"user is able to navigate to Sport section", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-2 (BuildABet) PD69988
	// To check user able to nevigate to Soccer sport from sport section
	public boolean SportsToSoccer(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).isDisplayed());
			System.out.println("VuvuSport Button is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC2-BuildABet", "check whether user is able to navigate to Soccer From Sport section",
					"user is able to navigate to Soccer From Sport section", "Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC2-BuildABet", "check whether user is able to navigate to Soccer From Sport section",
					"user is able to navigate to Soccer From Sport section", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-3 (BuildABet) PD69988
	// Verify user able to see betbook under the Live, Highlights, Upcoming,
	// Outrights tab
	public boolean BetBook(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).isDisplayed());
			System.out.println("VuvuSport Button is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("EventClick")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			report.detailsAppend("TC3-BuildABet",
					"check whether user is able to see betbook under the Live, Highlights, Upcoming, Outrights tab",
					"user is able to see betbook under the Live, Highlights, Upcoming, Outrights tab", "Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC3-BuildABet",
					"check whether user is able to see betbook under the Live, Highlights, Upcoming, Outrights tab",
					"user is able to see betbook under the Live, Highlights, Upcoming, Outrights tab", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-4 (BuildABet) PD69988
	// To check user able to navigate to Statistic page from betbook section
	public boolean StatisticsPage(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).isDisplayed());
			System.out.println("VuvuSport Button is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuStatistics"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC4-BuildABet",
					"check whether user is able to navigate to Statistic page from betbook section",
					"user is able to navigate to Statistic page from betbook section", "Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC4-BuildABet",
					"check whether user is able to navigate to Statistic page from betbook section",
					"user is able to navigate to Statistic page from betbook section", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-5 (BuildABet) PD69988
	// To check user able see Build A Bet tab on Statistic page
	public boolean BuildABet(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).isDisplayed());
			System.out.println("VuvuSport Button is Present");
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("EventClick"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC5-BuildABet", "check whether user is able to see Build A Bet tab on Statistic page",
					"user is able to see Build A Bet tab on Statistic page", "Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC5-BuildABet", "check whether user is able to see Build A Bet tab on Statistic page",
					"user is able to see Build A Bet tab on Statistic page", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-6 (BuildABet) PD69988
	// Verify user able click on Build A Bet tab on Statistic page
	public boolean BuildABetClick(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			report.detailsAppend("TC6-BuildABet",
					"check whether user is able to click on Build A Bet tab on Statistic page",
					"user is able to click on Build A Bet tab on Statistic page", "Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC6-BuildABet",
					"check whether user is able to click on Build A Bet tab on Statistic page",
					"user is able to click on Build A Bet tab on Statistic page", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-7 (BuildABet) PD69988
	// To check when user able click on Build A Bet tab on Statistic page its
	// highlighted in green colour.
	public boolean BuildABetGreen(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			report.detailsAppend("TC7-BuildABet",
					"check whether user is able to click on Build A Bet tab on Statistic page its highlighted in green colour. ",
					"user is able to click on Build A Bet tab on Statistic page its highlighted in green colour.",
					"Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC7-BuildABet",
					"check whether user is able to click on Build A Bet tab on Statistic page its highlighted in green colour. ",
					"user is able to click on Build A Bet tab on Statistic page its highlighted in green colour.",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-8 (BuildABet) PD69988
	// To check user able to see Market dropdowns for example Match Result(1x2),
	// Both Teams to score etc
	public boolean BuildABetMarkets(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			report.detailsAppend("TC8-BuildABet",
					"check whether user is able to see Market dropdowns for example Match Result(1x2), Both Teams to score etc",
					"user is able to see Market dropdowns for example Match Result(1x2), Both Teams to score etc",
					"Pass");

			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC8-BuildABet",
					"check whether user is able to see Market dropdowns for example Match Result(1x2), Both Teams to score etc",
					"user is able to see Market dropdowns for example Match Result(1x2), Both Teams to score etc",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-9 (BuildABet) PD69988
	// To check user able to Click on Market dropdowns
	public boolean BuildABetMarketClick(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketDD"))).isDisplayed());
			System.out.println("BuildABetMarketDD  is Present");
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketDD"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC9-BuildABet", "check whether user is able to Click on Market dropdowns",
					"user is able to Click on Market dropdowns", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketDD"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC9-BuildABet", "check whether user is able to Click on Market dropdowns",
					"user is able to Click on Market dropdowns", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-10 (BuildABet) PD69988
	// To check after click on Market dropdown user able to see Odds
	public boolean BuildABetMarketOdds(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketDD"))).isDisplayed());
			System.out.println("BuildABetMarketDD  is Present");
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketDD"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC10-BuildABet",
					"check whether user is able to check after click on Market dropdown user able to see Odds",
					"user is able to check after click on Market dropdown user able to see Odds", "Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC10-BuildABet",
					"check whether user is able to check after click on Market dropdown user able to see Odds",
					"user is able to check after click on Market dropdown user able to see Odds", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-11 (BuildABet) PD69988
	// To check user able to select odds from market dropdown
	public boolean BuildABetOddsClick(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC11-BuildABet", "check whether user is able to select odds from market dropdown",
					"user is able to select odds from market dropdown", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC11-BuildABet", "check whether user is able to select odds from market dropdown",
					"user is able to select odds from market dropdown", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-12 (BuildABet) PD69988
	// To check selected Odds colour should show in green colour.
	public boolean BuildABetGreenOdds(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC12-BuildABet",
					"check whether user is able to check selected Odds colour should show in green colour.",
					"user is able to check selected Odds colour should show in green colour.", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC12-BuildABet",
					"check whether user is able to check selected Odds colour should show in green colour.",
					"user is able to check selected Odds colour should show in green colour.", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-13 (BuildABet) PD69988
	// To check user able to deselect odds from market dropdown
	public boolean BuildABetDeselectOdds(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC13-BuildABet", "check whether user is able to deselect odds from market dropdown",
					"user is able to deselect odds from market dropdown", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC13-BuildABet", "check whether user is able to deselect odds from market dropdown",
					"user is able to deselect odds from market dropdown", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-14 (BuildABet) PD69988
	// To check user able to select only one Odds from each market dropdown
	public boolean BuildABetOnlyOneOdds(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick2"))).click();
			report.detailsAppend("TC14-BuildABet",
					"check whether user is able to select only one Odds from each market dropdown",
					"user is able to select only one Odds from each market dropdown", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC14-BuildABet",
					"check whether user is able to select only one Odds from each market dropdown",
					"user is able to select only one Odds from each market dropdown", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-15 (BuildABet) PD69988
	// To check when user try to select more than one Odds from each market dropdown
	// it should display error pop "Invalid selection : more than outcome per
	// outcome"
	public boolean BuildABetOddsError(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick2"))).click();
			report.detailsAppend("TC15-BuildABet",
					"check whether user is able to select more than one Odds from each market dropdown it should display error pop \"Invalid selection : more than outcome per outcome\"n",
					"user is able to select more than one Odds from each market dropdown it should display error pop \"Invalid selection : more than outcome per outcome\"",
					"Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC15-BuildABet",
					"check whether user is able to select more than one Odds from each market dropdown it should display error pop \"Invalid selection : more than outcome per outcome\"n",
					"user is able to select more than one Odds from each market dropdown it should display error pop \"Invalid selection : more than outcome per outcome\"",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-16 (BuildABet) PD69988
	// To check user able to see 0 Selections dropdown tab
	public boolean BuildABetZeroSelections(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			report.detailsAppend("TC16-BuildABet", "check whether user is able to see 0 Selections dropdown tab",
					"user is able to see 0 Selections dropdown tab", "Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC16-BuildABet", "check whether user is able to see 0 Selections dropdown tab",
					"user is able to see 0 Selections dropdown tab", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-17 (BuildABet) PD69988
	// To check after selecting Odds from market dropdown its should display under
	// selection tab
	public boolean BuildABetSelectionsTab(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC17-BuildABet",
					"check whether user is able to see selecting Odds in Selections dropdown tab",
					"user is able to see selecting Odds in Selections dropdown tab", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC17-BuildABet",
					"check whether user is able to see selecting Odds in Selections dropdown tab",
					"user is able to see selecting Odds in Selections dropdown tab", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-18 (BuildABet) PD69988
	// To check after selecting number of Odds from market dropdown its should
	// display count on selection tab
	public boolean BuildABetSelectionsCount(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC18-BuildABet", "check whether user is able to see Count in Selections dropdown tab",
					"user is able to see Count in Selections dropdown tab", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC18-BuildABet", "check whether user is able to see Count in Selections dropdown tab",
					"user is able to see Count in Selections dropdown tab", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-19 (BuildABet) PD69988
	// To check user able to see Total Odds in round bracket on selection tab
	public boolean BuildABetTotalOdds(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC19-BuildABet",
					"check whether user is able to see Total Odds in round bracket on selection tabb",
					"user is able to see Total Odds in round bracket on selection tab", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC19-BuildABet",
					"check whether user is able to see Total Odds in round bracket on selection tabb",
					"user is able to see Total Odds in round bracket on selection tab", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-20 (BuildABet) PD69988
	// To check after selecting odds from market dropdown its should display under
	// the Total odds on selection tab
	public boolean BuildABetSelections(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC20-BuildABet",
					"check whether user is able to see Total odds on selection tab after selecting from Market Dropdown",
					"user is able to see Total odds on selection tab after selecting from Market Dropdown", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC20-BuildABet",
					"check whether user is able to see Total odds on selection tab after selecting from Market Dropdown",
					"user is able to see Total odds on selection tab after selecting from Market Dropdown", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-21 (BuildABet) PD69988
	// To check after selecting odds from market dropdown its should display Total
	// odds on selection tab
	public boolean BuildABetSelectionsTotalOdds(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC21-BuildABet",
					"check whether user is able to see odds in selection tab after selecting from Market Dropdown",
					"user is able to see  odds in selection tab after selecting from Market Dropdown", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC21-BuildABet",
					"check whether user is able to see odds in selection tab after selecting from Market Dropdown",
					"user is able to see  odds in selection tab after selecting from Market Dropdown", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-22 (BuildABet) PD69988
	// To check selected Odds should be display under the selection tab with cross
	// button
	public boolean BuildABetCrossButton(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC22-BuildABet",
					"check whether user is able to check selected Odds should be display under the selection tab with cross button",
					"user is able to check selected Odds should be display under the selection tab with cross button",
					"Pass");
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC22-BuildABet",
					"check whether user is able to check selected Odds should be display under the selection tab with cross button",
					"user is able to check selected Odds should be display under the selection tab with cross button",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-23 (BuildABet) PD69988
	// To check after click on cross button the Odds should be remove from Selection
	// tab
	public boolean BuildABetCrossButtonClick(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("RemoveButton"))).isDisplayed());
			System.out.println("RemoveButton  is Present");
			webdriver.findElement(By.xpath(xpathMap.get("RemoveButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC23-BuildABet",
					"check whether user is able to remove Odds from Dropdown when click on Cross button",
					"user is able to remove Odds from Dropdown when click on Cross button", "Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC23-BuildABet",
					"check whether user is able to remove Odds from Dropdown when click on Cross button",
					"user is able to remove Odds from Dropdown when click on Cross button", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-24 (BuildABet) PD69988
	// To check after click on dropup button on Selecting tab then tab should be
	// closed
	public boolean BuildABetSelectionsDDClick(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SelectionOddsDD"))).isDisplayed());
			System.out.println("SelectionOdds Dropdown  is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SelectionOddsDD"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC24-BuildABet",
					"check whether user is able to close Dropdown when clicked on dropup button",
					"user is able to close Dropdown when clicked on dropup button", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("SelectionOddsDD"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC24-BuildABet",
					"check whether user is able to close Dropdown when clicked on dropup button",
					"user is able to close Dropdown when clicked on dropup button", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-25 (BuildABet) PD69988
	// To check user able to see "Add to Betslip" button below the selection tab
	public boolean BuildABetAddToBetSlip(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC25-BuildABet",
					"check whether user is able to see Add to Betslip button below the selection tab",
					"user is able to see Add to Betslip button below the selection tab", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC25-BuildABet",
					"check whether user is able to see Add to Betslip button below the selection tab",
					"user is able to see Add to Betslip button below the selection tab", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-26 (BuildABet) PD69988
	// To check user able to click on "Add to Betslip" button below the selection
	// tab
	public boolean BuildABetAddToBetSlipClick(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			Robot robot = new Robot();
			System.out.println("About to zoom in");
			for (int i = 0; i < 3; i++) {
				robot.keyPress(KeyEvent.VK_CONTROL);
				robot.keyPress(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_CONTROL);
			}
			try {
				webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketDD2"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetmarketclick3"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AddToBetSlip"))).isDisplayed());
			System.out.println("AddToBetSlip Button  is Present");
			webdriver.findElement(By.xpath(xpathMap.get("AddToBetSlip"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC26-BuildABet",
					"check whether user is able to click on Add to Betslip button below the selection tab",
					"user is able to click on Add to Betslip button below the selection tab", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("RemoveBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC26-BuildABet",
					"check whether user is able to click on Add to Betslip button below the selection tab",
					"user is able to click on Add to Betslip button below the selection tab", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-27 (BuildABet) PD69988
	// To check when user select Odds and click on "Add to Betslip" button the odds
	// should be added to betslip
	public boolean BuildABetAddToBetSlipAdd(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketDD2"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetmarketclick3"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AddToBetSlip"))).isDisplayed());
			System.out.println("AddToBetSlip Button  is Present");
			webdriver.findElement(By.xpath(xpathMap.get("AddToBetSlip"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC27-BuildABet",
					"check whether user is able to see Odds added to the BetSlip when click on Add to Betslip button",
					"user is able to see Odds added to the BetSlip when click on Add to Betslip button", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("RemoveBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC27-BuildABet",
					"check whether user is able to see Odds added to the BetSlip when click on Add to Betslip button",
					"user is able to see Odds added to the BetSlip when click on Add to Betslip button", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-28 (BuildABet) PD69988
	// To check when user select Odds then "Remove All" button should be display
	public boolean BuildABetRemoveAll(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketDD2"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetmarketclick3"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC28-BuildABet", "check whether user is able to see RemoveAll Button",
					"user is able to see RemoveAll Button", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC28-BuildABet", "check whether user is able to see RemoveAll Button",
					"user is able to see RemoveAll Button", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-29 (BuildABet) PD69988
	// To check user able to click on "Remove All" button
	public boolean BuildABetRemoveAllClick(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketDD2"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetmarketclick3"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("RemoveAllButton"))).isDisplayed());
			System.out.println("RemoveAll Button  is Present");
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC29-BuildABet", "check whether user is able to Click RemoveAll Button",
					"user is able to Click RemoveAll Button", "Pass");

			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC29-BuildABet", "check whether user is able to Click RemoveAll Button",
					"user is able to Click RemoveAll Button", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-30 (BuildABet) PD69988
	// To check after click on "Remove All" button the selected odds should be
	// removed from the selection tab
	public boolean BuildABetRemoveAllOdds(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetMarketDD2"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BuildABetmarketclick3"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("RemoveAllButton"))).isDisplayed());
			System.out.println("RemoveAll Button  is Present");
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC30-BuildABet",
					"check whether user is able to remove all odds from Selections Tab whenClick RemoveAll Button",
					"user is able to remove all odds from Selections Tab whenClick RemoveAll Button", "Pass");

			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC30-BuildABet",
					"check whether user is able to remove all odds from Selections Tab whenClick RemoveAll Button",
					"user is able to remove all odds from Selections Tab whenClick RemoveAll Button", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-31 (BuildABet) PD69988
	// To check if there is lock icon on odds box then user should not able to
	// select that odds
	public boolean BuildABetLockedOdds(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			Robot robot = new Robot();
			System.out.println("About to zoom in");
			for (int i = 0; i < 2; i++) {
				robot.keyPress(KeyEvent.VK_CONTROL);
				robot.keyPress(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_CONTROL);
			}
			webdriver.findElement(By.xpath(xpathMap.get("AnytimeGoalScorer"))).click();
			Thread.sleep(2000);
//				webdriver.findElement(By.xpath(xpathMap.get("NoGoals"))).click();
//				Thread.sleep(2000);
			report.detailsAppend("TC31-BuildABet", "check whether user is not able to select Locked icon Odds ",
					"user is not able to select Locked icon Odds", "Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC31-BuildABet", "check whether user is not able to select Locked icon Odds ",
					"user is not able to select Locked icon Odds", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-32 (BuildABet) PD69988
	// To check if there is lock icon on odds box then Odds box colour should be
	// grey.
	public boolean BuildABetGreyLockedOdds(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("CorrectScore")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("AnytimeGoalScorer"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("NoGoals"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC32-BuildABet", "check whether user is able to see Grey colour for Locked Odds ",
					"user is not able to see Grey colour for Locked Odds", "Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC32-BuildABet", "check whether user is able to see Grey colour for Locked Odds ",
					"user is not able to see Grey colour for Locked Odds", "Pass");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-34 (BuildABet) PD69988
	// To check the 'i' tool tip icon should be present on Market tab
	public boolean BuildABetToolTip(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			Robot robot = new Robot();
			System.out.println("About to zoom in");
			for (int i = 0; i < 5; i++) {
				robot.keyPress(KeyEvent.VK_CONTROL);
				robot.keyPress(KeyEvent.VK_ADD);
				robot.keyRelease(KeyEvent.VK_ADD);
				robot.keyRelease(KeyEvent.VK_CONTROL);
			}
			report.detailsAppend("TC34-BuildABet", "check whether user is able to see Tool Tip Icon ",
					"user is able to see Tool Tip Icon", "Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC34-BuildABet", "check whether user is able to see Tool Tip Icon ",
					"user is able to see Tool Tip Icon", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-35 (BuildABet) PD69988
	// To check when user navigate to 'i' tool tip icon then it should display pop
	// text for that particular market
	public boolean BuildABetToolTipMessage(Mobile_HTML_Report report) {

		try {
			BuildABetClick();
			webdriver.findElement(By.xpath(xpathMap.get("ToolTip"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC35-BuildABet", "check whether user is able to see pop text of Tool Tip Icon ",
					"user is able to see pop text of Tool Tip Icon ", "Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC35-BuildABet", "check whether user is able to see pop text of Tool Tip Icon ",
					"user is able to see pop text of Tool Tip Icon ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-36 (BuildABet) PD69988
	// To check when Odds not selected then on selection tab it should display 0
	// selections (Total Odds:0.00)
	public boolean BuildABetZeroSelectionsTotalOddsZero(Mobile_HTML_Report report) {

		try {
			BuildABetClick();

			report.detailsAppend("TC36-BuildABet",
					"check whether user is able to see 0 selections (Total Odds:0.00) when Odds are not selected ",
					"user is able to see 0 selections (Total Odds:0.00) when Odds are not selected", "Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC36-BuildABet",
					"check whether user is able to see 0 selections (Total Odds:0.00) when Odds are not selected ",
					"user is able to see 0 selections (Total Odds:0.00) when Odds are not selected", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

////////////////////////////////////////////Vuvu Footer/////////////////////////////////////////////////////////////////

/////////////////////////////////////   Betway FooterSection Vuvuzela  Production    ////////////////////////////

	public void FooterClick() throws Exception {

		webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
		WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("BetwayFooterPage")));
		Actions action = new Actions(webdriver);
		action.moveToElement(odds).perform();
		Thread.sleep(3000);
	}

	
	
	public void FooterBtnInSamsung() throws Exception {

		webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
		WebElement FooterPage = webdriver.findElement(By.xpath(xpathMap.get("FooterPageZA")));
//Actions action = new Actions(webdriver);
//action.moveToElement(FooterPage).perform();
		JavascriptExecutor je = (JavascriptExecutor) webdriver;
		je.executeScript("window.scrollBy(0,250)");
		Thread.sleep(2000);
	}

//TC-1 (FS) AS66528//S
//To check that the Footer options are present on betWay site
	public boolean FooterOptionCheck(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC1-Footer_Section", "User check that the Footer options are present on betWay site",
					"checked the Footer options are present on betWay site", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC1-Footer_Section", "User check that the Footer options are present on betWay site",
					"checked the Footer options are present on betWay site", "Fail");

			return false;
		}

		return true;

	}

//TC-2 (FS) AS66528//
//To check the available Hyperlinks on footer section
	public boolean HyperLinkOnFooter(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			report.detailsAppend("TC2-Footer_Section", "User check available Hyperlinks on footer section",
					"checked available Hyperlinks on footer section", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC2-Footer_Section", "User check available Hyperlinks on footer section",
					"checked available Hyperlinks on footer section", "Fail");

			return false;
		}

		return true;

	}

//TC-3 (FS) AS66528//
//To check that user able to See the "betWay" logo in footer
	public boolean BetwayLogoinFooter(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			report.detailsAppend("TC3-Footer_Section", "user able to See the \"betWay\" logo in footer",
					"user checked to See the \"betWay\" logo in footer", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC3-Footer_Section", "User check available Hyperlinks on footer section",
					"checked available Hyperlinks on footer section", "Fail");

			webdriver.navigate().refresh();
			return false;
		}

		return true;

	}

//TC-4 (FS) AS66528//
//To Check by clicking on the "Sponsorships" in the footer
	public boolean SponsorshipsClickInFooter(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			FooterClick();
			webdriver.findElement(By.xpath(xpathMap.get("SponsorshipButton"))).click();
			Thread.sleep(5000);
			report.detailsAppend("TC4-Footer_Section", "user able to clicking on  \"Sponsorships\"  in the footer",
					"User Clicked the \"Sponsorships\"  in the footer", "Pass");

			log.debug("Switch to default tab");
			webdriver.navigate().back();

		} catch (Exception e) {
			report.detailsAppend("TC4-Footer_Section", "user able to clicking on  \"Sponsorships\"  in the footer",
					"User Clicked the \"Sponsorships\"  in the footer", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-5 (FS) AS66528//
//Verify by clicking on the "Privacy PolicyPrivacy Policy" option
	public boolean Privacy_PolicyOptionInFooter(Mobile_HTML_Report report) throws InterruptedException {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			webdriver.findElement(By.xpath(xpathMap.get("PrivacyPolicyButton"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC5-Footer_Section", "user able to clicking on  \"Privacy_Policy\"  in the footer",
					"User Clicked the \"Privacy_Policy\"  in the footer", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC5-Footer_Section", "user able to clicking on  \"Privacy_Policy\"  in the footer",
					"User Clicked the \"Privacy_Policy\"  in the footer", "Fail");
			webdriver.navigate().refresh();
			return false;
		}

		return true;

	}

//TC-6 (FS) AS66528//
//To Check the availability of hyperlinks within the privacy policy information
//page.

	public boolean HyperlinksWithinPrivacy_Policy(Mobile_HTML_Report report) throws InterruptedException {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("Pavans")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("HyperlinkInPrivacyPolicy"))).click();

			Thread.sleep(5000);
			report.detailsAppend("TC6-Footer_Section",
					"user check availability of hyperlinks within privacy policy page",
					"Checked availability of hyperlinks within privacy policy page", "Pass");

			log.debug("Switch to default tab");
			webdriver.navigate().back();

		} catch (Exception e) {
			report.detailsAppend("TC6-Footer_Section", "user able to clicking on  \"Privacy_Policy\"  in the footer",
					"User Clicked the \"Privacy_Policy\"  in the footer", "Fail");
			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

//TC-7 (FS) AS66528//
//To Check the Back button available on privacy policy information page.

	public boolean BackbuttonOnPrivacy_PolicyPage(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Thread.sleep(2000);
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FooterPage"))).isDisplayed());
//System.out.print(" FooterPage Button Visible ");
//
//webdriver.findElement(By.xpath(xpathMap.get("FooterPage"))).click();
//
//Thread.sleep(2000);
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PrivacyPolicyButton"))).isDisplayed());
//System.out.print(" PrivacyPolicyButton Button Visible ");
//
//webdriver.findElement(By.xpath(xpathMap.get("PrivacyPolicyButton"))).click();
			JavascriptExecutor je1 = (JavascriptExecutor) webdriver;
			je1.executeScript("window.scrollTo(document.body.scrollHeight,0)");
			Thread.sleep(5000);
			webdriver.findElement(By.xpath(xpathMap.get("BackIconInPage"))).click();

			Thread.sleep(5000);
			report.detailsAppend("TC7-Footer_Section", "user check Backbutton available on privacy policy page",
					"Checked Backbutton available on privacy policy page", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC7-Footer_Section", "user check Backbutton available on privacy policy page",
					"Checked Backbutton available on privacy policy page", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;

	}

//TC-8 (FS) AS66528//
//To check by clicking on the "Contact Us" button.

	public boolean ClickContactUsOption(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			FooterClick();
			Thread.sleep(5000);
			webdriver.findElement(By.xpath(xpathMap.get("ContactusButton"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC8-Footer_Section", "user check clicking on the Contact Us button page",
					"Checked clicking on the Contact Us button page", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC8-Footer_Section", "user check clicking on the Contact Us button page",
					"Checked clicking on the Contact Us button page", "Fail");
			return false;
		}

		return true;
	}

//TC-9 (FS) AS66528//
//To check the Contact details information after clicking on Contact Us
//hyperlink

	public boolean ContactUsInformationPage(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			report.detailsAppend("TC9-Footer_Section",
					"user check Contact details information  after clicking on ContactUs hyperlink",
					"Checked Contact details information  after clicking on ContactUs hyperlink", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC9-Footer_Section",
					"user check Contact details information  after clicking on ContactUs hyperlink",
					"Checked Contact details information  after clicking on ContactUs hyperlink", "Fail");
			return false;
		}
		return true;
	}

//TC-10 (FS) AS66528//
//To check the chat to live support option on contact us page

	public boolean LiveSupportButtonInContactus(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LiveSupportInContactus"))).isDisplayed());
			System.out.print(" LiveSupportInContactus Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("LiveSupportInContactus"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC10-Footer_Section",
					"user check Contact details information  after clicking on ContactUs hyperlink",
					"Checked Contact details information  after clicking on ContactUs hyperlink", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC10-Footer_Section",
					"user check Contact details information  after clicking on ContactUs hyperlink",
					"Checked Contact details information  after clicking on ContactUs hyperlink", "Fail");
			return false;
		}

		return true;
	}

//TC-11 (FS) AS66528//
//To check by clicking on the mail under contact us page

	public boolean MailButtonInContactusPage(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			webdriver.navigate().to("https://www.betway.co.zm/");

			webdriver.findElement(By.xpath(xpathMap.get("ZMFooterPage"))).click();

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("ZMContactusButton"))).isDisplayed());
			System.out.print(" ContactusButton Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("ZMContactusButton"))).click();

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("EMAILbutton"))).isDisplayed());
			System.out.print(" EMAIL button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("EMAILbutton"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC11-Footer_Section", "user check by clicking on the mail under ContactUs",
					"Checked by clicking on the mail under ContactUs", "Pass");

			log.debug("Switch to default tab");

			webdriver.findElement(By.xpath(xpathMap.get("BackIconInPage"))).click();

		} catch (Exception e) {
			report.detailsAppend("TC11-Footer_Section", "user check by clicking on the mail under ContactUs",
					"Checked by clicking on the mail under ContactUs", "Fail");
			return false;
		}
		webdriver.navigate().to("https://www.betway.co.za/");
		return true;
	}

//TC-12 (FS) AS66528//
//To check by clicking on the responsible gaming link on the Contact Us page

	public boolean ContactusPagegaminglink(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Thread.sleep(2000);
			FooterClick();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("ContactusButton"))).isDisplayed());
			System.out.print(" ContactusButton Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("ContactusButton"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC12-Footer_Section",
					"user clicking on the responsible gaming  link on the Contact Us page",
					"clicking on the responsible gaming  link on the Contact Us page", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC12-Footer_Section",
					"user clicking on the responsible gaming  link on the Contact Us page",
					"clicking on the responsible gaming  link on the Contact Us page", "Fail");
			return false;
		}

		return true;
	}

//TC-13 (FS) AS66528//
//To check the Facebook option on the Contact Us page

	public boolean FacebookOptionInContactus(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FacebookIcon"))).isDisplayed());
			System.out.print(" FacebookIcon Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("FacebookIcon"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC13-Footer_Section", "user check the Facebook option on the Contact Us page",
					"checked the Facebook option on the Contact Us page", "Pass");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC13-Footer_Section", "user check the Facebook option on the Contact Us page",
					"checked the Facebook option on the Contact Us page", "Fail");
			return false;
		}

		return true;
	}

//TC-14 (FS) AS66528//
//To check by clicking on the Standard Rate Call:

	public boolean StandardRateCall(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			webdriver.findElement(By.xpath(xpathMap.get("StandardRateCall"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC14-Footer_Section",
					"user clicking on the Standard Rate Call on the Contact Us page",
					"clicking on the Standard Rate Call on the Contact Us page", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC14-Footer_Section",
					"user clicking on the Standard Rate Call on the Contact Us page",
					"clicking on the Standard Rate Call on the Contact Us page", "Fail");
			return false;
		}

		return true;
	}

//TC-15 (FS) AS66528//
//To check by clicking on the mail under contact us page

	public boolean EmailAfterContactus(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			webdriver.navigate().to("https://www.betway.co.zm/");

			webdriver.findElement(By.xpath(xpathMap.get("ZMFooterPage"))).click();

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("ZMContactusButton"))).isDisplayed());
			System.out.print(" ContactusButton Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("ZMContactusButton"))).click();

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("EMAILbutton"))).isDisplayed());
			System.out.print(" EMAIL button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("EMAILbutton"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC15-Footer_Section", "user check by clicking on the mail under ContactUs",
					"Checked by clicking on the mail under ContactUs", "Pass");

			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC15-Footer_Section", "user check by clicking on the mail under ContactUs",
					"Checked by clicking on the mail under ContactUs", "Fail");
			return false;
		}
		webdriver.navigate().to("https://www.betway.co.za/");
		return true;
	}

//TC-16 (FS) AS66528//
//To check click on the Twitter App on a contact US page
	public boolean TwitterAppOnContactUS(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TwitterIcon"))).isDisplayed());
			System.out.print(" TwitterIcon button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("TwitterIcon"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC16-Footer_Section", "user check by clicking on the TwitterIcon under ContactUs",
					"Checked by clicking on the TwitterIcon under ContactUs", "Pass");

			log.debug("Switch to default tab");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BackIconInPage"))).isDisplayed());
			System.out.print(" BackIconInPage button Visible ");
			webdriver.navigate().back();

		} catch (Exception e) {
			System.out.println(e);
			report.detailsAppend("TC16-Footer_Section", "user check by clicking on the TwitterIcon under ContactUs",
					"Checked by clicking on the TwitterIcon under ContactUs", "Fail");
			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

//TC-17 (FS) AS66528//
//To check Visible on the WtsApp on a contact US page
	public boolean WtsAppOnContactUS(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			FooterClick();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("ContactusButton"))).isDisplayed());
			System.out.print(" ContactusButton Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("ContactusButton"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC17-Footer_Section", "user check by Visible on the WtsAppIcon under ContactUs",
					"Checked by Visible on the WtsAppIcon under ContactUs", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC17-Footer_Section", "user check by Visible on the WtsAppIcon under ContactUs",
					"Checked by Visible on the WtsAppIcon under ContactUs", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

//TC-18 (FS) AS66528//
//To check the Query type dropdown on contact form
	public boolean QueryDropDownOnContactForm(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			webdriver.navigate().to("https://www.betway.co.zm/");

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("ZMFooterPage"))).click();

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("ZMContactusButton"))).isDisplayed());
			System.out.print(" ContactusButton Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("ZMContactusButton"))).click();

			webdriver.findElement(By.xpath(xpathMap.get("QueryDropDown"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC18-Footer_Section", "user check the Query type dropdown on contact form",
					"Checked the Query type dropdown on contact form", "Pass");

			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC18-Footer_Section", "user check the Query type dropdown on contact form",
					"Checked the Query type dropdown on contact form", "Fail");
			return false;
		}

		webdriver.navigate().to("https://www.betway.co.za/");
		return true;
	}

//TC-19 (FS) AS66528//
//To check by by clicking on the Sponsorships hyperlink
	public boolean SponsorshipsHyperlink(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Thread.sleep(2000);
			FooterClick();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SponsorshipButton"))).isDisplayed());
			System.out.print(" Sponsorship Button  Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SponsorshipButton"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC19-Footer_Section", "user check by clicking on the Sponsorships hyperlink",
					"Checked by clicking on the Sponsorships hyperlink", "Pass");

			log.debug("Switch to default tab");
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BackIconInPage"))).isDisplayed());
			System.out.print(" BackIconInPage button Visible ");
			webdriver.navigate().back();

		} catch (Exception e) {
			report.detailsAppend("TC19-Footer_Section", "user check by clicking on the Sponsorships hyperlinks",
					"Checked by clicking on the Sponsorships hyperlink", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

//TC-20 (FS) AS66528//
//To check by by clicking on FAQ's on the Footer section
	public boolean FAQOnFooterSection(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Thread.sleep(2000);
			FooterClick();

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FAQButton"))).isDisplayed());
			System.out.print(" FAQ Button  Visible ");
			webdriver.findElement(By.xpath(xpathMap.get("FAQButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC20-Footer_Section", "user check by clicking on FAQs on the Footer section",
					"Checked by clicking on FAQs on the Footer section", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC20-Footer_Section", "user check by clicking on FAQ's on the Footer sections",
					"Checked by clicking on FAQ's on the Footer section", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

//TC-21 (FS) AS66528//
//To check that User able to see the FAQs list
	public boolean FAQlistOnFooterSection(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Thread.sleep(2000);
			report.detailsAppend("TC21-Footer_Section", "user check that User able to see the FAQs list",
					"Checked that User able to see the FAQs list", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC21-Footer_Section", "user check that User able to see the FAQs list",
					"Checked that User able to see the FAQs list", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

//TC-22 (FS) AS66528//
//To check that Verify by clicking on the FAQs list query
	public boolean FAQSelectAnylistOnFooterSection(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FAQ1stListDD"))).isDisplayed());
			System.out.print(" FAQ1stListDD Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("FAQ1stListDD"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC22-Footer_Section", "user check that Verify by clicking on the  FAQs list query",
					"Checked that Verify by clicking on the  FAQs list query", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC22-Footer_Section", "user check that Verify by clicking on the  FAQs list query",
					"Checked that Verify by clicking on the  FAQs list query", "Fail");
			return false;
		}

		return true;
	}

//TC-23 (FS) AS66528//
//To check that User able to click on Back button on FAQ's page
	public boolean BackbuttonOnFAQPage(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BackIconInPage"))).isDisplayed());
			System.out.print(" BackIconInPage button Visible ");
			webdriver.findElement(By.xpath(xpathMap.get("BackIconInPage"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC23-Footer_Section",
					"user check that User able to click on Back button on FAQs page",
					"Checked that User able to click on Back button on FAQs list query", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC23-Footer_Section",
					"user check that User able to click on Back button on FAQs page",
					"Checked that User able to click on Back button on FAQs list query", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

//TC-24 (FS) AS66528//
//To check by by clicking on Responsible Gaming on the Footer section
	public boolean ResponsibleGamingOnFooterSection(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Thread.sleep(2000);
			FooterClick();

			Thread.sleep(5000);

			webdriver.findElement(By.xpath(xpathMap.get("ResponsibleGamingButton"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC24-Footer_Section",
					"user check by clicking on Responsible Gaming on the Footer section",
					"Checked by clicking on Responsible Gaming on the Footer section", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC24-Footer_Section",
					"user check by clicking on Responsible Gaming on the Footer sections",
					"Checked by clicking on Responsible Gaming on the Footer section", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

//TC-25 (FS) AS66528//
//To check that User able to click on Back button on Responsible Gaming page
	public boolean BackbuttonOnResponsibleGamingPage(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BackIconInPage"))).isDisplayed());
			System.out.print(" BackIconInPage button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BackIconInPage"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC25-Footer_Section",
					"user check that User able to click on Back button on Responsible Gaming page",
					"Checked that User able to click on Back button on Responsible Gaming page", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC25-Footer_Section",
					"user check that User able to click on Back button on Responsible Gaming page",
					"Checked that User able to click on Back button on Responsible Gaming page", "Fail");
			return false;
		}

		return true;
	}

//TC-26 (FS) AS66528//
//To check by by clicking on Terms & Conditions on the Footer section
	public boolean TermsConditionsOnFooterSection(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("BetwayFooterPage")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TermsNConditionsButton"))).isDisplayed());
			System.out.print(" TermsConditions Button  Visible ");
			webdriver.navigate().to("https://www.betway.co.za/terms-and-conditions");
			Thread.sleep(2000);
			report.detailsAppend("TC26-Footer_Section",
					"user check by clicking on Terms & Conditions on the Footer section",
					"Checked by clicking on Terms & Conditions on the Footer section", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			System.out.println(e);
			report.detailsAppend("TC26-Footer_Section",
					"user check by clicking on Terms & Conditions on the Footer sections",
					"Checked by clicking on Terms & Conditions on the Footer section", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

//TC-27 (FS) AS66528//
//To check that User able to see the options available on Terms & Conditions
//page
	public boolean TermsConditionslistAvailable(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Thread.sleep(2000);

			report.detailsAppend("TC27-Footer_Section", "user check that User able to see the TermsConditions list",
					"Checked that User able to see the TermsConditions list", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC27-Footer_Section", "user check that User able to see the TermsConditions list",
					"Checked that User able to see the TermsConditions list", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

//TC-28 (FS) AS66528//
//To check that Verify by clicking Any Option Available on TermsConditions list
//query
	public boolean SelectAnylistOnTermsConditions(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TermsCondition1stListDD"))).isDisplayed());
			System.out.print(" TermsCondition1stListDD Button  Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("TermsCondition1stListDD"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC28-Footer_Section",
					"user check that Verify by clicking on the  TermsConditions list query",
					"Checked that Verify by clicking on the  TermsConditions list query", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC28-Footer_Section",
					"user check that Verify by clicking on the  TermsConditions list query",
					"Checked that Verify by clicking on the  TermsConditions list query", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

//TC-29 (FS) AS66528//
//To check that User able to click on Back button on TermsConditions page
	public boolean BackbuttonOnTermsConditionsPage(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BackIconInPage"))).isDisplayed());
			System.out.print(" BackIconInPage button Visible ");
			webdriver.findElement(By.xpath(xpathMap.get("BackIconInPage"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC29-Footer_Section",
					"user check that User able to click on Back button on TermsConditions page",
					"Checked that User able to click on Back button on TermsConditions page", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC29-Footer_Section",
					"user check that User able to click on Back button on TermsConditions page",
					"Checked that User able to click on Back button on TermsConditions page", "Fail");
			return false;
		}

		return true;
	}

//TC-56 (FS) AS66528//
//To check that User is able to click on Affiliates from the Footer section
	public boolean AffiliatesOnFooter(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Thread.sleep(2000);
			FooterClick();

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AffiliatesButton"))).isDisplayed());
			System.out.print(" Affiliates Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("AffiliatesButton"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC56-Footer_Section", "User is able to click on Affiliates from the Footer",
					"User click on Affiliates from the Footer", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackIconInPage"))).click();

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC56-Footer_Section", "User is able to click on Affiliates from the Footer",
					"User click on Affiliates from the Footer", "Pass");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

//TC-57 (FS) AS66528//
//TVerify that User should able to see the Legal information about betWay on footer section
	public boolean LegalinformationOnFooter(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Thread.sleep(2000);
			FooterClick();

			Thread.sleep(2000);
			report.detailsAppend("TC57-Footer_Section",
					"User should able to see the Legal information about betWay on footer section",
					"User able to see the Legalinformation about betWay on footer", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC57-Footer_Section", "User check available Hyperlinks on footer section",
					"User able to see the Legalinformation about betWay on footer", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;

	}

//TC-58 (FS) AS66528//
//To Verify that User is able to see the Local time on footer section
	public boolean LocaltimeOnFooter(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Thread.sleep(2000);
			FooterClick();

			Thread.sleep(2000);
			report.detailsAppend("TC58-Footer_Section", "User is able to see the Local time on footer section",
					"User is able to see the Local time on footer section", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC58-Footer_Section", "User is able to see the Local time on footer section",
					"User is able to see the Local time on footer section", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;

	}

//TC-59 (FS) AS66528//
//TVerify that User should able to see the betWay App QR code on footer section
	public boolean betWayAppQRcodeOnFooter(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Thread.sleep(2000);
			FooterClick();

			Thread.sleep(2000);
			report.detailsAppend("TC59-Footer_Section",
					"User should able to see the betWay App QR code on footer section",
					"User able to see the betWay App QR code on footer", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC59-Footer_Section",
					"User should able to see the betWay App QR code on footer section",
					"User able to see the betWay App QR code on footer", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

//TC-60 (FS) AS66528//
//To check that User is able to click on App store icons on Footer section
	public boolean AppstoreiconsOnFooter(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Thread.sleep(2000);
			FooterClick();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AppStoreIcon"))).isDisplayed());
			System.out.print(" Affiliates Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("AppStoreIcon"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC60-Footer_Section", "User is able to click on App store icons on Footer",
					"User click on App store icons on Footer", "Pass");

			webdriver.navigate().back();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC60-Footer_Section", "User is able to click on App store icons on Footer",
					"User click on App store icons on Footer", "Pass");

			return false;
		}
		return true;
	}

//TC-61 (FS) AS66528//
//To check that User is able to click on the social media icons from the footer section
	public boolean socialmediaIconsOnFooter(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Thread.sleep(2000);
			JavascriptExecutor js = (JavascriptExecutor) webdriver;
			js.executeScript("window.scrollBy(0,document.body.scrollHeight)");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FbappIcon"))).isDisplayed());
			System.out.print(" Affiliates Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("FbappIcon"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC61-Footer_Section", "User is able to click on social media icons on Footer",
					"User click on social media icons on Footer", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC61-Footer_Section", "User is able to click on social media icons on Footer",
					"User click on social media icons on Footer", "Fail");
			webdriver.navigate().refresh();
			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

//TC-62 (FS) AS66528//
//To check that User is able to click on 18Plus Logo on Footer section
	public boolean EighteenPlusLogoOnFooter(Mobile_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Thread.sleep(2000);
			FooterClick();

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("18PlusLogo"))).isDisplayed());
			System.out.print(" Affiliates Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("18PlusLogo"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC62-Footer_Section", "User is able to click on 18Plus Logo on Footer",
					"User click on 18Plus Logo on Footer", "Pass");
			webdriver.navigate().back();

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC62-Footer_Section", "User is able to click on 18Plus Logo on Footer",
					"User click on 18Plus Logo on Footer", "Pass");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}
//////////////////////////////////Pavan Footer Section///////////////////////////////////////////

//TC-108 (FS) PD69988//
//To check that the Footer options are present on betWay site
	public boolean FooterOptionCheckForLive(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuLive"))).isDisplayed());
			System.out.print(" VuvuLive Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("VuvuLive"))).click();

			Thread.sleep(2000);
			FooterClick();
			Thread.sleep(2000);
			report.detailsAppend("TC108-Footer_Section",
					"User check that the Footer options are present on Live Tab of betWay site",
					"User able to see Footer options on Live Tab of betWay site", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC108-Footer_Section",
					"User check that the Footer options are present on Live Tab of betWay site",
					"User able to see Footer options on Live Tab of betWay site", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;

	}

//TC-109 (FS) PD69988//
//To check the options available on footer section
	public boolean FooterOptionsCheckForLive(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VuvuLive"))).isDisplayed());
			System.out.print(" VuvuLive Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("VuvuLive"))).click();

			Thread.sleep(2000);
			FooterClick();

			Thread.sleep(2000);
			report.detailsAppend("TC109-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Live Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on Live Tab of betWay site",
					"Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC109-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Live Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on Live Tab of betWay site",
					"Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;

	}

//TC-110 (FS) PD69988//
//To check that the Footer options are present on betWay site
	public boolean FooterOptionCheckForCasinoGames(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CasinoGames"))).isDisplayed());
			System.out.print(" CasinoGames Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("CasinoGames"))).click();

			Thread.sleep(2000);
			FooterClick();

			Thread.sleep(2000);
			report.detailsAppend("TC110-Footer_Section",
					"User check that the Footer options are present on Casino Games Tab of betWay site",
					"User able to see Footer options on Casino Games Tab of betWay site", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC110-Footer_Section",
					"User check that the Footer options are present on Casino Games Tab of betWay site",
					"User able to see Footer options on Casino Games Tab of betWay site", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;

	}

//TC-111 (FS) PD69988//
//To check the options available on footer section
	public boolean FooterOptionsCheckForCasinoGames(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CasinoGames"))).isDisplayed());
			System.out.print(" CasinoGames Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("CasinoGames"))).click();

			Thread.sleep(2000);
			FooterClick();

			Thread.sleep(2000);
			report.detailsAppend("TC111-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Casino Games Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on Casino Games Tab of betWay site",
					"Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC111-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Casino Games Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info )on Casino Games Tab of betWay site",
					"Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;

	}

//TC-112 (FS) PD69988//
//To check the options available on footer section
	public boolean FooterOptionCheckForAviator(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("Aviator"))).isDisplayed());
			System.out.print(" Aviator Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("Aviator"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).isDisplayed());
			System.out.print(" LoginClose Button Visible ");

			webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();
			Thread.sleep(2000);
			FooterClick();

			Thread.sleep(2000);
			report.detailsAppend("TC112-Footer_Section",
					"User check that the Footer options are present on Aviator Tab of betWay site",
					"User able to see Footer options on Aviator Tab of betWay site", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC112-Footer_Section",
					"User check that the Footer options are present on Aviator Tab of betWay site",
					"User able to see Footer options on Aviator Tab of betWay site", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;

	}

//TC-113 (FS) PD69988//
//To check the options available on footer section
	public boolean FooterOptionsCheckForAviator(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("Aviator"))).isDisplayed());
			System.out.print(" Aviator Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("Aviator"))).click();

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).isDisplayed());
			System.out.print(" LoginClose Button Visible ");

			webdriver.findElement(By.cssSelector(xpathMap.get("LoginCloseButton"))).click();

			Thread.sleep(2000);
			FooterClick();

			Thread.sleep(2000);
			report.detailsAppend("TC113-Footer_Section",
					"User check that the Footer options( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) are present on Aviator Tab of betWay site",
					"User able to see Footer options( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Aviator Tab of betWay site",
					"Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC113-Footer_Section",
					"User check that the Footer options( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) are present on Aviator Tab of betWay site",
					"User able to see Footer options( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Aviator Tab of betWay site",
					"Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;

	}

//TC-114 (FS) PD69988//
//To check that the Footer options are present on betWay site
	public boolean FooterOptionCheckForLiveCasino(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.navigate().to("https://www.betway.co.zm/");
			try {
				webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaCookies"))).click();
			} catch (Exception e) {
				System.out.print("Cookies button not visible");
			}

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("Livecasino"))).isDisplayed());
			System.out.print(" LiveCasino Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("Livecasino"))).click();

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("ZMFooterPage"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC114-Footer_Section",
					"User check that the Footer options are present on Live Casino Tab of betWay site",
					"User able to see Footer options on Live Casino Tab of betWay site", "Pass");

			webdriver.navigate().to("https://www.betway.co.za/");
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC114-Footer_Section",
					"User check that the Footer options are present on Live Casino Tab of betWay site",
					"User able to see Footer options on Live Casino Tab of betWay site", "Fail");
			return false;
		}
		webdriver.navigate().to("https://www.betway.co.za/");
		webdriver.navigate().refresh();
		return true;

	}

//TC-115 (FS) PD69988//
//To check the options available on footer section
	public boolean FooterOptionsCheckForLiveCasino(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.navigate().to("https://www.betway.co.zm/");
			try {
				webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaCookies"))).click();
			} catch (Exception e) {
				System.out.print("Cookies button not visible");
			}
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("Livecasino"))).isDisplayed());
			System.out.print(" LiveCasino Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("Livecasino"))).click();

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("ZMFooterPage"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC115-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Live Casino Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on Live Casino Tab of betWay site",
					"Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC115-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Live Casino Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info )on Live Casino Tab of betWay site",
					"Fail");
			webdriver.navigate().to("https://www.betway.co.za/");
			return false;
		}
		webdriver.navigate().to("https://www.betway.co.za/");
		webdriver.navigate().refresh();
		return true;

	}

//TC-116 (FS) PD69988//
//To check that the Footer options are present on betWay site
	public boolean FooterOptionCheckForBWJackpot(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("BetwayJackpot"))).click();

			Thread.sleep(2000);
			FooterClick();

			Thread.sleep(2000);
			report.detailsAppend("TC116-Footer_Section",
					"User check that the Footer options are present on BetWay Jackpot Tab of betWay site",
					"User able to see Footer options on BetWay Jackpot Tab of betWay site", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC116-Footer_Section",
					"User check that the Footer options are present on BetWay Jackpot Tab of betWay site",
					"User able to see Footer options on BetWay Jackpot Tab of betWay site", "Pass");
			return false;
		}
		webdriver.navigate().refresh();
		return true;

	}

//TC-117 (FS) PD69988//
//To check the options available on footer section
	public boolean FooterOptionsCheckForBWJackpot(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BetwayJackpot"))).isDisplayed());
			System.out.print(" BetwayJackpot Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("BetwayJackpot"))).click();

			Thread.sleep(2000);
			FooterClick();

			Thread.sleep(2000);
			report.detailsAppend("TC117-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on BetWay Jackpot Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on BetWay Jackpot Tab of betWay site",
					"Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC117-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on BetWay Jackpot Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on BetWay Jackpot Tab of betWay site",
					"Pass");
			return false;
		}
		webdriver.navigate().refresh();
		return true;

	}

//TC-118 (FS) PD69988//
//To check that the Footer options are present on betWay site
	public boolean FooterOptionCheckForBetGames(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BetGames"))).isDisplayed());
			System.out.print(" BetGames Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("BetGames"))).click();

			Thread.sleep(2000);
			FooterClick();

			Thread.sleep(2000);
			report.detailsAppend("TC118-Footer_Section",
					"User check that the Footer options are present on BetGames Tab of betWay site",
					"User able to see Footer options on BetGames Tab of betWay site", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC118-Footer_Section",
					"User check that the Footer options are present on BetGames Tab of betWay site",
					"User able to see Footer options on BetGames Tab of betWay site", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;

	}

//TC-119 (FS) PD69988//
//To check the options available on footer section
	public boolean FooterOptionsCheckForBetGames(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BetGames"))).isDisplayed());
			System.out.print(" BetGames Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("BetGames"))).click();

			Thread.sleep(2000);
			FooterClick();

			Thread.sleep(2000);
			report.detailsAppend("TC119-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on BetGames Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on BetGames Tab of betWay site",
					"Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC119-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on BetGames Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on BetGames Tab of betWay site",
					"Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

//TC-120 (FS) PD69988//
//To check that the Footer options are present on betWay site
	public boolean FooterOptionCheckForESports(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("Esports"))).isDisplayed());
			System.out.print(" Esports Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("Esports"))).click();

			Thread.sleep(2000);
			FooterClick();

			Thread.sleep(2000);
			report.detailsAppend("TC120-Footer_Section",
					"User check that the Footer options are present on ESports Tab of betWay site",
					"User able to see Footer options on ESports Tab of betWay site", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC120-Footer_Section",
					"User check that the Footer options are present on Esports Tab of betWay site",
					"User able to see Footer options on ESports Tab of betWay site", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;

	}

//TC-121 (FS) PD69988//
//To check the options available on footer section
	public boolean FooterOptionsCheckForESports(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("Esports"))).isDisplayed());
			System.out.print(" Esports Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("Esports"))).click();

			Thread.sleep(2000);
			FooterClick();

			Thread.sleep(2000);
			report.detailsAppend("TC121-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Esports Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on Esports Tab of betWay site",
					"Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC121-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Esports Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on Esports Tab of betWay site",
					"Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

//TC-122 (FS) PD69988//
//To check that the Footer options are present on betWay site
	public boolean FooterOptionCheckForVirtuals(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("Virtual"))).isDisplayed());
			System.out.print(" Virtuals Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("Virtual"))).click();

			Thread.sleep(2000);
			FooterClick();

			Thread.sleep(2000);
			report.detailsAppend("TC122-Footer_Section",
					"User check that the Footer options are present on Virtuals Tab of betWay site",
					"User able to see Footer options on Virtuals Tab of betWay site", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC122-Footer_Section",
					"User check that the Footer options are present on Virtuals Tab of betWay site",
					"User able to see Footer options on Virtuals Tab of betWay site", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;

	}

//TC-123 (FS) PD69988//
//To check the options available on footer section
	public boolean FooterOptionsCheckForVirtuals(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("Virtual"))).isDisplayed());
			System.out.print(" Virtuals Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("Virtual"))).click();

			Thread.sleep(2000);
			FooterClick();

			Thread.sleep(2000);
			report.detailsAppend("TC123-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Virtuals Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on Virtuals Tab of betWay site",
					"Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC123-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Virtuals Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on Virtuals Tab of betWay site",
					"Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;

	}

//TC-124 (FS) PD69988//
//To check that the Footer options are present on betWay site
	public boolean FooterOptionCheckForPromotions(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("Promotion"))).isDisplayed());
			System.out.print(" Promotion Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("Promotion"))).click();

			Thread.sleep(2000);
			FooterClick();
			Thread.sleep(2000);
			report.detailsAppend("TC124-Footer_Section",
					"User check that the Footer options are present on Promotions Tab of betWay site",
					"User able to see Footer options on Promotions Tab of betWay site", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC124-Footer_Section",
					"User check that the Footer options are present on Promotions Tab of betWay site",
					"User able to see Footer options on Promotions Tab of betWay site", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;

	}

//TC-125 (FS) PD69988//
//To check the options available on footer section
	public boolean FooterOptionsCheckForPromotions(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("Promotion"))).isDisplayed());
			System.out.print(" Promotion Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("Promotion"))).click();

			Thread.sleep(2000);
			FooterClick();

			Thread.sleep(2000);
			report.detailsAppend("TC125-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Promotions Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on Promotions Tab of betWay site",
					"Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC125-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Promotions Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on Promotions Tab of betWay site",
					"Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

//TC-126 (FS) PD69988//
//To check that the Footer options are present on betWay site
	public boolean FooterOptionCheckForLuckyNumbers(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LuckyNumbers"))).isDisplayed());
			System.out.print(" LuckyNumbers Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("LuckyNumbers"))).click();

			Thread.sleep(2000);
			FooterClick();

			Thread.sleep(2000);
			report.detailsAppend("TC126-Footer_Section",
					"User check that the Footer options are present on LuckyNumbers Tab of betWay site",
					"User able to see Footer options on LuckyNumbers Tab of betWay site", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC126-Footer_Section",
					"User check that the Footer options are present on LuckyNumbers Tab of betWay site",
					"User able to see Footer options on LuckyNumbers Tab of betWay site", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;

	}

//TC-127 (FS) PD69988//
//To check the options available on footer section
	public boolean FooterOptionsCheckForLuckyNumbers(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LuckyNumbers"))).isDisplayed());
			System.out.print(" LuckyNumbers Button Visible ");

			webdriver.findElement(By.xpath(xpathMap.get("LuckyNumbers"))).click();

			Thread.sleep(2000);
			FooterClick();

			Thread.sleep(2000);
			report.detailsAppend("TC127-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on LuckyNumbers Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on LuckyNumbers Tab of betWay site",
					"Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC127-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on LuckyNumbers Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on LuckyNumbers Tab of betWay site",
					"Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

//////////////////////////////////////////////////////////////        VUVU FOOTER NG TESTCASES           /////////////////////////////////////	

	public void BetPopUpClose() throws Exception {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("NG1stOptionInHowToPage"))).isDisplayed());
			System.out.print(" Option InHowTo BetPage  Visible ");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("BetButton"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {
			System.out.print(e);
			return;
		}
	}

	
	public void LuckynumbersDrag() throws Exception {

		webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LuckyNumbersButton")));
		Actions action = new Actions(webdriver);
		action.moveToElement(odds).perform();
		JavascriptExecutor je = (JavascriptExecutor) webdriver;
		je.executeScript("window.scrollBy(0,300)");
		Thread.sleep(2000);

	}

//TC-30 (FS) AS66528//
//To check that User is able to click on Lotteries Board from the Footer
//section
	public boolean LotteriesBoardOnFooterSection(Mobile_HTML_Report report) {
		try {

			FooterClick();
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("NGLotteriesButton"))).isDisplayed());
			System.out.print("Lotteries Button is Present");
			webdriver.findElement(By.xpath(xpathMap.get("NGLotteriesButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC30-Footer_Section",
					"User is able to click on Lotteries Board from the Footer section",
					"Checked User is able to click on Lotteries Board from the Footer section", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC30-Footer_Section",
					"User is able to click on Lotteries Board from the Footer section",
					"Checked User is able to click on Lotteries Board from the Footer section", "Fail");
			return false;
		}

		return true;
	}

//TC-31 (FS) AS66528//
//To check that User is able to click on How To from the Footer section
	public boolean HowTbuttonOnFooterSection(Mobile_HTML_Report report) {
		try {

			FooterClick();
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HowToButton"))).isDisplayed());
			System.out.print("Howto Button is Present");
			webdriver.findElement(By.xpath(xpathMap.get("HowToButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC31-Footer_Section", "User is able to click on How To from the Footer section",
					"Checked User is able to click on How To from the Footer section", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC31-Footer_Section", "User is able to click on How To from the Footer section",
					"Checked User is able to click on How To from the Footer section", "Fail");
			return false;
		}

		return true;
	}

//TC-32 (FS) AS66528//
//To check that User able to see the options available on How To page
	public boolean HowToOptionsAvailable(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
//			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("DepositButton"))).isDisplayed());
			Thread.sleep(2000);
			report.detailsAppend("TC32-Footer_Section",
					"User able to see the options available on How To page from the Footer section",
					"Checked User able to see the options available on How To page from the Footer section", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC32-Footer_Section",
					"User able to see the options available on How To page from the Footer section",
					"Checked User able to see the options available on How To page from the Footer section", "Fail");
			return false;
		}

		return true;
	}

//TC-33 (FS) AS66528//
//To check that User able to click on How To Reset Password
	public boolean HowToResetPasswordePage(Mobile_HTML_Report report) throws InterruptedException {

		try {

			FooterClick();
			webdriver.manage().timeouts().implicitlyWait(6, TimeUnit.SECONDS);
//			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HowToButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("HowToButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("ResetPasswordInHowTo"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC33-Footer_Section", "User able to click on How To Reset Password",
					"Checked User able toclick on How To Reset Password", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC33-Footer_Section", "User Not able to click on How To Reset Password",
					"Checked User Not able to click on How To Reset Password", "Fail");
			return false;
		}
		return true;
	}

//TC-34 (FS) AS66528//
//User is able to click on any option available on "How to Reset Password"
//section
	public boolean ClickAnyOptionInResetPassowrdTab(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
//			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("NG1stOptionInHowToPage"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("NG1stOptionInHowToPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC34-Footer_Section",
					"User able to see the options available on How to ResetPassword Section",
					"Checked User able to see the options available on How To page", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC34-Footer_Section", "User able to see the options available on How To page",
					"Checked User able to see the options available on How To page", "Fail");
			return false;
		}

		return true;
	}

//TC-35 (FS) AS66528//
//User is able to click on "How to Deposit" on the How To page
	public boolean HowtoDepositPage(Mobile_HTML_Report report) {
		try {

			FooterClick();
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
//			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			webdriver.findElement(By.xpath(xpathMap.get("HowToButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("DepositButton"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC35-Footer_Section",
					"User is able to click on \"How to Deposit\" on the How To page",
					"Checked User is able to click on \"How to Deposit\" on the How To page", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC35-Footer_Section",
					"User is able to click on \"How to Deposit\" on the How To page",
					"Checked User is able to click on \"How to Deposit\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

//TC-36 (FS) AS66528//
//User is able to click on any option available on "How to Deposit" section
	public boolean ClickAnyOptionInDeposit(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

//			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("NG1stOptionInHowToPage"))).isDisplayed());		
			webdriver.findElement(By.xpath(xpathMap.get("NG1stOptionInHowToPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC36-Footer_Section",
					"User is able to click on any option available on \"How to Deposit\" Section",
					"Checked User clicked any option available on \"How to Deposit\" Section", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC36-Footer_Section",
					"User is able to click on any option available on \"How to Deposit\" Section",
					"Checked User clicked any option available on \"How to Deposit\" Section", "Fail");
			return false;
		}

		return true;
	}

//TC-37 (FS) AS66528//
//User is able to click on "How to Bet" on the How To page
	public boolean HowtoBetPage(Mobile_HTML_Report report) {
		try {

			FooterClick();
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
//			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			webdriver.findElement(By.xpath(xpathMap.get("HowToButton"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BetButton"))).isDisplayed());
				Thread.sleep(2000);
			} catch (Exception e) {
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("BetButton"))).click();
				return false;
			}

			Thread.sleep(2000);
			report.detailsAppend("TC37-Footer_Section", "User is able to click on \"How to Bet\" on the How To page",
					"Checked User is able to click on \"How to Bet\" on the How To page", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC37-Footer_Section", "User is able to click on \"How to Bet\" on the How To page",
					"Checked User is able to click on \"How to Bet\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

//TC-38 (FS) AS66528//
//User is able to click on any option available on "How to Bet" section
	public boolean ClickAnyOptionInBet(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(12, TimeUnit.SECONDS);
//			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HowToButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("NG1stOptionInHowToPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC38-Footer_Section",
					"User is able to click on any option available on \"How to Bet\" Section",
					"Checked User clicked any option available on \"How to Bet\" Section", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC38-Footer_Section",
					"User is able to click on any option available on \"How to Bet\" Section",
					"Checked User clicked any option available on \"How to Bet\" Section", "Fail");
			return false;
		}

		return true;
	}

//TC-39 (FS) AS66528//
//User is able to click on "How to Betgames" on the How To page
	public boolean HowtoBetgamesPage(Mobile_HTML_Report report) {
		try {

			FooterClick();
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			webdriver.findElement(By.xpath(xpathMap.get("HowToButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BetgamesButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC39-Footer_Section",
					"User is able to click on \"How to Betgames\" on the How To page",
					"Checked User is able to click on \"How to Betgames\" on the How To page", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC39-Footer_Section", "User is able to click on \"How to Bet\" on the How To page",
					"Checked User is able to click on \"How to Bet\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

//TC-40 (FS) AS66528//
//User is able to click on any option available on "How to Betgames" section
	public boolean ClickAnyOptionInBetgames(Mobile_HTML_Report report) {
		try {

//			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("NG1stOptionInHowToPage"))).isDisplayed());			
			webdriver.findElement(By.xpath(xpathMap.get("NG1stOptionInHowToPage"))).click();
			System.out.print(" 1stOption InHowToPage  Clicked ");
			Thread.sleep(3000);
			
			report.detailsAppend("TC40-Footer_Section",
					"User is able to click on any option available on \"How to Betgames\" Section",
					"Checked User clicked any option available on \"How to Betgames\" Section", "Pass");

			Thread.sleep(2000);
			
			webdriver.findElement(By.xpath(xpathMap.get("NG1stOptionInHowToPage"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("NG1stOptionInHowToPage")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			je.executeScript("window.scrollBy(0,200)");
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC40-Footer_Section",
					"User is able to click on any option available on \"How to Betgames\" Section",
					"Checked User clicked any option available on \"How to Betgames\" Section", "Fail");
			return false;
		}

		return true;
	}

//TC-42 (FS) AS66528//
//User is able to click on "How to Casino" on the How To page
	public boolean HowtoCasinoPage(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CasinoButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CasinoButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC42-Footer_Section", "User is able to click on \"How to Casino\" on the How To page",
					"Checked User is able to click on \"How to Casino\" on the How To page", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC42-Footer_Section", "User is able to click on \"How to Casino\" on the How To page",
					"Checked User is able to click on \"How to Casino\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

//TC-43 (FS) AS66528//
//User is able to click on any option available on "How to Casino" section
	public boolean ClickAnyOptionInCasino(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
//			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("NG1stOptionInHowToPage"))).isDisplayed());
			System.out.print(" 1stOption InHowToPage  Visible ");
			webdriver.findElement(By.xpath(xpathMap.get("NG1stOptionInHowToPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC43-Footer_Section",
					"User is able to click on any option available on \"How to Casino\" Section",
					"Checked User clicked any option available on \"How to Casino\" Section", "Pass");
			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC43-Footer_Section",
					"User is able to click on any option available on \"How to Casino\" Section",
					"Checked User clicked any option available on \"How to Casino\" Section", "Fail");
			return false;
		}

		return true;
	}

//TC-44 (FS) AS66528//
//User is able to click on "How to Virtual" on the How To page
	public boolean HowtoVirtualPage(Mobile_HTML_Report report) {
		try {

			FooterClick();
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			webdriver.findElement(By.xpath(xpathMap.get("HowToButton"))).click();
			Thread.sleep(2000);
			BetPopUpClose();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VirtualButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC44-Footer_Section",
					"User is able to click on \"How to Virtual\" on the How To page",
					"Checked User is able to click on \"How to Virtual\" on the How To page", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC44-Footer_Section",
					"User is able to click on \"How to Virtual\" on the How To page",
					"Checked User is able to click on \"How to Virtual\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

//TC-45 (FS) AS66528//
//User is able to click on any option available on "How to Virtual" section
	public boolean ClickAnyOptionInVirtual(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
//			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("NG1stOptionInHowToPage"))).isDisplayed());
			System.out.print(" 1stOption InHowToPage  Visible ");
			webdriver.findElement(By.xpath(xpathMap.get("NG1stOptionInHowToPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC45-Footer_Section",
					"User is able to click on any option available on \"How to Virtual\" Section",
					"Checked User clicked any option available on \"How to Virtual\" Section", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC45-Footer_Section",
					"User is able to click on any option available on \"How to Virtual\" Section",
					"Checked User clicked any option available on \"How to Virtual\" Section", "Fail");
			return false;
		}

		return true;
	}

//TC-46 (FS) AS66528//
//User is able to click on "How to Lucky Numbers" on the How To page
	public boolean HowtoLuckyNumbersPage(Mobile_HTML_Report report) {
		try {

			FooterClick();
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			webdriver.findElement(By.xpath(xpathMap.get("HowToButton"))).click();
			Thread.sleep(2000);
			BetPopUpClose();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("LuckyNumbersButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC46-Footer_Section",
					"User is able to click on \"How to LuckyNumbers\" on the How To page",
					"Checked User is able to click on \"How to LuckyNumbers\" on the How To page", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC46-Footer_Section",
					"User is able to click on \"How to LuckyNumbers\" on the How To page",
					"Checked User is able to click on \"How to LuckyNumbers\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

//TC-47 (FS) AS66528//
//User is able to click on any option available on "How to Lucky Numbers" section
	public boolean ClickAnyOptionInLuckyNumbers(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("VirtualButton")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			je.executeScript("window.scrollBy(0,300)");
			System.out.print(" 1stOption InHowToPage  Visible ");
			webdriver.findElement(By.xpath(xpathMap.get("NG1stOptionInHowToPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC47-Footer_Section",
					"User is able to click on any option available on \"How to LuckyNumbers\" Section",
					"Checked User clicked any option available on \"How to LuckyNumbers\" Section", "Pass");

			Thread.sleep(1000);
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(xpathMap.get("NG1stOptionInHowToPage"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC47-Footer_Section",
					"User is able to click on any option available on \"How to LuckyNumbers\" Section",
					"Checked User clicked any option available on \"How to LuckyNumbers\" Section", "Fail");
			return false;
		}

		return true;
	}

//TC-48 (FS) AS66528//
//User is able to click on "How to Withdraw" on the How To page
	public boolean HowtoWithdrawPage(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
//			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("WithdrawButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			webdriver.findElement(By.xpath(xpathMap.get("WithdrawButton"))).click();
			report.detailsAppend("TC48-Footer_Section",
					"User is able to click on \"How to Withdraw\" on the How To page",
					"Checked User is able to click on \"How to Withdraw\" on the How To page", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC48-Footer_Section",
					"User is able to click on \"How to Withdraw\" on the How To page",
					"Checked User is able to click on \"How to Withdraw\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

//TC-49 (FS) AS66528//
//User is able to click on any option available on "How to Withdraw" section
	public boolean ClickAnyOptionInWithdraw(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			LuckynumbersDrag();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("NG1stOptionInHowToPage"))).isDisplayed());
			System.out.print(" 1stOption InHowToPage  Visible ");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("NG1stOptionInHowToPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC49-Footer_Section",
					"User is able to click on any option available on \"How to Withdraw\" Section",
					"Checked User clicked any option available on \"How to Withdraw\" Section", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC49-Footer_Section",
					"User is able to click on any option available on \"How to Withdraw\" Section",
					"Checked User clicked any option available on \"How to Withdraw\" Section", "Fail");
			return false;
		}

		return true;
	}

//TC-50 (FS) AS66528//
//User is able to click on "How to Jackpots" on the How To page
	public boolean HowtoJackpotsPage(Mobile_HTML_Report report) {
		try {

			FooterClick();
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			webdriver.findElement(By.xpath(xpathMap.get("HowToButton"))).click();
			Thread.sleep(2000);
			BetPopUpClose();
			Thread.sleep(2000);
			LuckynumbersDrag();
			Thread.sleep(2000);
//			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("JackpotsButton"))).isDisplayed());
			System.out.print(" Jackpots Button Visible ");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("JackpotsButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC50-Footer_Section",
					"User is able to click on \"How to Jackpots\" on the How To page",
					"Checked User is able to click on \"How to Jackpots\" on the How To page", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC50-Footer_Section",
					"User is able to click on \"How to Jackpots\" on the How To page",
					"Checked User is able to click on \"How to Jackpots\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

//TC-51 (FS) AS66528//
//User is able to click on any option available on "How to Jackpots" section
	public boolean ClickAnyOptionInJackpots(Mobile_HTML_Report report) {
		try {

			LuckynumbersDrag();
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("NG1stOptionInHowToPage"))).isDisplayed());
			System.out.print(" 1stOption InHowToPage  Visible ");
			webdriver.findElement(By.xpath(xpathMap.get("NG1stOptionInHowToPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC51-Footer_Section",
					"User is able to click on any option available on \"How to Jackpots\" Section",
					"Checked User clicked any option available on \"How to Jackpots\" Section", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC51-Footer_Section",
					"User is able to click on any option available on \"How to Jackpots\" Section",
					"Checked User clicked any option available on \"How to Jackpots\" Section", "Fail");
			return false;
		}

		return true;
	}

//TC-54 (FS) AS66528//
//User is able to click on "How to LiveCasino" on the How To page
	public boolean HowtoLiveCasinoPage(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LiveCasinoButton"))).isDisplayed());
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("LiveCasinoButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC54-Footer_Section",
					"User is able to click on \"How to LiveCasino\" on the How To page",
					"Checked User is able to click on \"How to LiveCasino\" on the How To page", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC54-Footer_Section",
					"User is able to click on \"How to LiveCasino\" on the How To page",
					"Checked User is able to click on \"How to LiveCasino\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

//TC-55 (FS) AS66528//
//User is able to click on any option available on "How to LiveCasino" section
	public boolean ClickAnyOptionInLiveCasino(Mobile_HTML_Report report) {

		try {

			LuckynumbersDrag();
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("NG1stOptionInHowToPage"))).isDisplayed());
			System.out.print(" 1stOption InHowToPage  Visible ");
			webdriver.findElement(By.xpath(xpathMap.get("NG1stOptionInHowToPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC55-Footer_Section",
					"User is able to click on any option available on \"How to LiveCasino\" Section",
					"Checked User clicked any option available on \"How to LiveCasino\" Section", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC55-Footer_Section",
					"User is able to click on any option available on \"How to LiveCasino\" Section",
					"Checked User clicked any option available on \"How to LiveCasino\" Section", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-41 (FS) AS66528//
	// User is able to click on "How to SMS" on the How To page
	public boolean HowtoSMSPage(Mobile_HTML_Report report) {
		try {

			FooterClick();
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			webdriver.findElement(By.xpath(xpathMap.get("HowToButton"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SMSButton"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("SMSButton"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC41-Footer_Section",
						"User is able to click on \"How to SMS\" on the How To page",
						"Checked User is able to click on \"How to SMS\" on the How To page", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC41-Footer_Section",
						"User is able to click on \"How to SMS\" on the How To page",
						"Checked User is able to click on \"How to SMS\" on the How To page", "Fail");
				return false;
			}
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("NG404BackBtn"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC41-Footer_Section", "User is able to click on \"How to SMS\" on the How To page",
					"Checked User is able to click on \"How to SMS\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

	// TC-52 (FS) AS66528//
	// User is able to click on "How to Sign-Up" on the How To page
	public boolean HowtoSign_UpPage(Mobile_HTML_Report report) {
		try {

			FooterClick();
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			webdriver.findElement(By.xpath(xpathMap.get("HowToButton"))).click();
			Thread.sleep(2000);
			Thread.sleep(2000);
			BetPopUpClose();
			Thread.sleep(2000);
			LuckynumbersDrag();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("Sign_UpButton"))).isDisplayed());
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Sign_UpButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC52-Footer_Section",
					"User is able to click on \"How to Sign_Up\" on the How To page",
					"Checked User is able to click on \"How to Sign_Up\" on the How To page", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC52-Footer_Section",
					"User is able to click on \"How to Sign_Up\" on the How To page",
					"Checked User is able to click on \"How to Sign_Up\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

	// TC-53 (FS) AS66528//
	// User is able to click on any option available on "How to Sign_Up" section
	public boolean ClickAnyOptionInSign_Up(Mobile_HTML_Report report) {
		try {

			FooterClick();
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("HowToButton"))).click();
			Thread.sleep(2000);
			BetPopUpClose();
			Thread.sleep(2000);
			LuckynumbersDrag();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("Sign_UpButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("Sign_UpButton"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("NG1stOptionInHowToPage"))).isDisplayed());
			System.out.print(" 1stOption InHowToPage  Visible ");
			webdriver.findElement(By.xpath(xpathMap.get("NG1stOptionInHowToPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC53-Footer_Section",
					"User is able to click on any option available on \"How to Sign_Up\" Section",
					"Checked User clicked any option available on \"How to Jackpots\" Section", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC53-Footer_Section",
					"User is able to click on any option available on \"How to Sign_Up\" Section",
					"Checked User clicked any option available on \"How to Sign_Up\" Section", "Fail");
			return false;
		}

		return true;
	}

//TC-63 (FS) AS66528//
//To check that User is able to click on Help and Info from the Footer section
	public boolean HelpandInfoOnFooter(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			webdriver.navigate().to("https://www.betway.co.zm/");
			Thread.sleep(2000);

			webdriver.navigate().refresh();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HelpandInfoButton"))).isDisplayed());
			System.out.print(" HelpandInfo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("HelpandInfoButton"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC63-Footer_Section",
					"User is able to click on HelpandInfoButton from the Footer section",
					"Checked User is able to click on HelpandInfoButton from the Footer section", "Pass");

			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BackIconInPage"))).click();
			Thread.sleep(1000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC63-Footer_Section",
					"User is able to click on HelpandInfoButton from the Footer section",
					"Checked User is able to click on HelpandInfoButton from the Footer section", "Fail");
			return false;
		}

		return true;
	}

//TC-64 (FS) AS66528//
//To check that User is able to click on Back button available on Help and Info Page
	public boolean BackbuttonOnHelp_InfoPage(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HelpandInfoButton"))).isDisplayed());
			System.out.print(" HelpandInfo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("HelpandInfoButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BackIconInPage"))).click();
			Thread.sleep(1000);
			report.detailsAppend("TC64-Footer_Section",
					"User is able to click on  Back button available on HelpandInfo page",
					"User click on  Back button available on HelpandInfo page", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC64-Footer_Section",
					"User is able to click on  Back button available on HelpandInfo page",
					"User click on  Back button available on HelpandInfo page", "Fail");
			return false;
		}

		webdriver.navigate().to("https://www.betway.co.za/");
		return true;
	}

/////////////////////////////////////////////////////////////Synapse Ghana Betslip/////////////////////////////////////////////

	public void BetSlipLogin() throws InterruptedException {

		webdriver.findElement(By.xpath(xpathMap.get("SynapseSportButton"))).click();
		Thread.sleep(4000);
		Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SoccerButton"))).isDisplayed());
		System.out.print("Sport Button is Clicked");

		webdriver.findElement(By.xpath(xpathMap.get("SoccerButton"))).click();
		Thread.sleep(4000);
		Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("UpComingButton"))).isDisplayed());
		System.out.print("Soccer Button is Clicked");

		webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber"))).sendKeys(xpathMap.get("SynapsePhno"));
		Thread.sleep(2000);
		System.out.print("MobileNumber is Entered");

		webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword"))).sendKeys(xpathMap.get("SynapsePwd"));
		System.out.print("Password is Entered");
		Thread.sleep(2000);

		Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).isDisplayed());
		System.out.print("SynapseLogin is Present");
		webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).click();
		Thread.sleep(5000);

//								webdriver.findElement(By.xpath(xpathMap.get("MoreBetsSyanspe"))).click();
//								Thread.sleep(2000);
//								Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BetsInMoreBets"))).isDisplayed());
//								System.out.print("More Bets is Entered");
//								
//								webdriver.findElement(By.xpath(xpathMap.get("BetsInMoreBets"))).click();
//								Thread.sleep(2000);

	}

	public void GHLogout() throws Exception {
		webdriver.findElement(By.xpath(xpathMap.get("SynapseTestaccounts"))).click();
		Thread.sleep(2000);
		webdriver.findElement(By.cssSelector(xpathMap.get("LogoutinProfile31"))).click();
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("SynapseProceed"))).click();
		Thread.sleep(2000);
	}

	public void BetslipsLogout() throws Exception {

//								webdriver.findElement(By.xpath(xpathMap.get("BetsInMoreBets"))).click();
//								Thread.sleep(2000);

		webdriver.findElement(By.xpath(xpathMap.get("ProfileOpen"))).click();
		Thread.sleep(2000);
		Assert.assertTrue(webdriver.findElement(By.cssSelector(xpathMap.get("LogoutinProfile31"))).isDisplayed());
		System.out.print("ProfileOpen is Clicked");

		webdriver.findElement(By.cssSelector(xpathMap.get("LogoutinProfile31"))).click();
		Thread.sleep(2000);
		Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("ProceedButton"))).isDisplayed());
		System.out.print("LogoutinProfile is Clicked");

		webdriver.findElement(By.xpath(xpathMap.get("ProceedButton"))).click();
		Thread.sleep(2000);
		Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSportButton"))).isDisplayed());
		System.out.print("ProceedButton is Clicked");
	}

	public void switchToNewTab() {
		// Get current window handle
		String currentWindowHandle = webdriver.getWindowHandle();

		// Get all window handles
		Set<String> windowHandles = webdriver.getWindowHandles();

		// Switch to new tab
		for (String windowHandle : windowHandles) {
			if (!windowHandle.equals(currentWindowHandle)) {
				webdriver.switchTo().window(windowHandle);
				break;
			}
		}
	}

	public void switchToParentTab() {
		// Switch back to the parent window
		String parentWindow = webdriver.getWindowHandles().iterator().next();
		webdriver.switchTo().window(parentWindow);
	}

	// TC01(Synapse Betslip) PJ65867
	// Verify the contents of Betslip without selecting any odd
	public boolean Betslip(Mobile_HTML_Report report) {

		try {

//										webdriver.findElement(By.xpath(xpathMap.get("MoreBetsSyanspe"))).click();
//										Thread.sleep(2000);
//										Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BetsInMoreBets"))).isDisplayed());
//										System.out.print("More Bets is Entered");

			webdriver.findElement(By.xpath(xpathMap.get("BetSlipForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("More Bets is Entered");

			report.detailsAppend("TC01-SynapseBetslip", "Verify the contents of Betslip without selecting any odd ",
					"Contents of Betslip without selecting any odd ", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC01-SynapseBetslip", "Verify the contents of Betslip without selecting any odd ",
					"Contents of Betslip without selecting any odd ", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC02(Synapse Betslip) PJ65867
	// Verify and check if selected odds are getting displayed on "Betslip"
	public boolean OddBetslip(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Single Bet is clicked");

			report.detailsAppend("TC02-SynapseBetslip",
					"Verify and check if selected odds are getting displayed on [Single Betslip] \"Betslip\"",
					"Selected odds are getting displayed on [Single Betslip] \"Betslip\"", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Multi Bet is clicked");

			report.detailsAppend("TC02-SynapseBetslip",
					"Verify and check if selected odds are getting displayed on [Multi Betslip] \"Betslip\"",
					"Selected odds are getting displayed on [Multi Betslip] \"Betslip\"", "Pass");

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC02-SynapseBetslip",
					"Verify and check if selected odds are getting displayed on \"Betslip\"",
					"Selected odds are getting displayed on \"Betslip\"", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC03(Synapse Betslip) PJ65867
	// To check checkbox is enabled by default
	public boolean BetslipCheckbox(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Single Bet is clicked");

			report.detailsAppend("TC03-SynapseBetslip", "To check checkbox is enabled by default [Single Betslip]",
					"Checkbox is enabled by default [Single Betslip]", "Pass");

			Robot robot = new Robot();
			System.out.println("About to zoom in");
			for (int i = 0; i < 4; i++) {
				robot.keyPress(KeyEvent.VK_CONTROL);
				robot.keyPress(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_CONTROL);
			}

			webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Multi Bet is clicked");

			report.detailsAppend("TC03-SynapseBetslip", "To check checkbox is enabled by default [Multi Betslip]",
					"Checkbox is enabled by default [Multi Betslip]", "Pass");

			for (int i = 0; i < 4; i++) {
				robot.keyPress(KeyEvent.VK_CONTROL);
				robot.keyPress(KeyEvent.VK_ADD);
				robot.keyRelease(KeyEvent.VK_ADD);
				robot.keyRelease(KeyEvent.VK_CONTROL);
			}

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC03-SynapseBetslip", "To check checkbox is enabled by default",
					"Checkbox is enabled by default", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC04(Synapse Betslip) PJ65867
	// Verify deselect functionality of the checkbox
	public boolean BetslipCheckboxClicked(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Single Bet is clicked");

			WebElement odds1 = webdriver.findElement(By.xpath(xpathMap.get("FirstCheckBoxBetslipSynapse")));
			Actions action1 = new Actions(webdriver);
			action1.moveToElement(odds1).perform();
			Thread.sleep(4000);

			odds1.click();

			report.detailsAppend("TC04-SynapseBetslip",
					"Verify deselect functionality of the checkbox [Single Betslip]",
					"Deselect functionality of the checkbox [Single Betslip]", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Multi Bet is clicked");

			Robot robot = new Robot();
			System.out.println("About to zoom in");
			for (int i = 0; i < 4; i++) {
				robot.keyPress(KeyEvent.VK_CONTROL);
				robot.keyPress(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_CONTROL);
			}

			report.detailsAppend("TC04-SynapseBetslip", "Verify deselect functionality of the checkbox [Multi Betslip]",
					"Deselect functionality of the checkbox [Multi Betslip]", "Pass");

			for (int i = 0; i < 4; i++) {
				robot.keyPress(KeyEvent.VK_CONTROL);
				robot.keyPress(KeyEvent.VK_ADD);
				robot.keyRelease(KeyEvent.VK_ADD);
				robot.keyRelease(KeyEvent.VK_CONTROL);
			}

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC04-SynapseBetslip", "Verify deselect functionality of the checkbox",
					"Deselect functionality of the checkbox", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC05(Synapse Betslip) PJ65867
	// To check "Select all" toggle button functionality when user add the first bet
	// to the betslip
	public boolean SelectAllBetSlip(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Single Bet is clicked");

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("SelectAllToggleSynapse")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(4000);

			report.detailsAppend("TC05-SynapseBetslip",
					"To check \"Select all\" toggle button functionality when user add the first bet to the betslip [Single Betslip]",
					"Functionality of the Select All [Single Betslip]", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Multi Bet is clicked");

			WebElement odds1 = webdriver.findElement(By.xpath(xpathMap.get("SelectAllToggleSynapse")));
			Actions action1 = new Actions(webdriver);
			action1.moveToElement(odds1).perform();
			Thread.sleep(4000);

			report.detailsAppend("TC05-SynapseBetslip",
					"To check \"Select all\" toggle button functionality when user add the first bet to the betslip [Multi Betslip]",
					"Functionality of the Select All [Multi Betslip]", "Pass");

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC05-SynapseBetslip",
					"To check \"Select all\" toggle button functionality when user add the first bet to the betslip",
					"Functionality of the Select All", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC06(Synapse Betslip) PJ65867
	// To check The user should be able to deselect leg from betslip.
	public boolean SelectAllBetSlipClicked(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Single Bet is clicked");

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("SelectAllToggleSynapse")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(4000);

			odds.click();
			Thread.sleep(2000);

			report.detailsAppend("TC06-SynapseBetslip",
					"To check The user should be able to deselect leg from betslip.[Single Betslip]",
					"User should be able to deselect leg from betslip. [Single Betslip]", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Multi Bet is clicked");

			WebElement odds1 = webdriver.findElement(By.xpath(xpathMap.get("SelectAllToggleSynapse")));
			Actions action1 = new Actions(webdriver);
			action1.moveToElement(odds1).perform();
			Thread.sleep(4000);

			odds.click();
			Thread.sleep(2000);

			odds.click();
			Thread.sleep(2000);

			report.detailsAppend("TC06-SynapseBetslip",
					"To check The user should be able to deselect leg from betslip.[Multi Betslip]",
					"User should be able to deselect leg from betslip. [Multi Betslip]", "Pass");

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC06-SynapseBetslip",
					"To check The user should be able to deselect leg from betslip.[Multi Betslip]",
					"User should be able to deselect leg from betslip. [Multi Betslip]", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC07(Synapse Betslip) PJ65867
	// The user should be able to select leg options after deselecting them.
	public boolean ReSelectAllBetSlipClicked(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Single Bet is clicked");

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("SelectAllToggleSynapse")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(4000);

			odds.click();
			Thread.sleep(2000);

			report.detailsAppend("TC07-SynapseBetslip",
					"The user should be able to select leg options after deselecting them.[Single Betslip]",
					"The user is able to select leg options after deselecting them.[Single Betslip]", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Multi Bet is clicked");

			WebElement odds1 = webdriver.findElement(By.xpath(xpathMap.get("SelectAllToggleSynapse")));
			Actions action1 = new Actions(webdriver);
			action1.moveToElement(odds1).perform();
			Thread.sleep(4000);

			odds.click();
			Thread.sleep(2000);

			odds.click();
			Thread.sleep(2000);

			report.detailsAppend("TC07-SynapseBetslip",
					"The user should be able to select leg options after deselecting them.[Multi Betslip]",
					"The user is able to select leg options after deselecting them.[Multi Betslip]", "Pass");

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC07-SynapseBetslip",
					"The user should be able to select leg options after deselecting them.",
					"The user is able to select leg options after deselecting them.", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC08(Synapse Betslip) PJ65867
	// User can click inside the booking code text box.
	public boolean BookingCode(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Single Bet is clicked");

			WebElement odds1 = webdriver.findElement(By.xpath(xpathMap.get("BookingCodeSynapse")));
			Actions action1 = new Actions(webdriver);
			action1.moveToElement(odds1).perform();
			Thread.sleep(4000);

			odds1.click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("BookingCodeSynapse"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC08-SynapseBetslip",
					"User can click inside the booking code text box.[Single Betslip]",
					"User is click inside the booking code text box.[Single Betslip]", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Multi Bet is clicked");

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("BookingCodeSynapse")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(4000);

			odds1.click();
			Thread.sleep(2000);

			report.detailsAppend("TC08-SynapseBetslip",
					"User can click inside the booking code text box.[Multi Betslip]",
					"User is click inside the booking code text box.[Multi Betslip]", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Single Bet is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CopyCode"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("ContinueBettingSynapse31"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Copy Code is clicked");

			WebElement odds2 = webdriver.findElement(By.xpath(xpathMap.get("BookingCodeSynapse")));
			Actions action2 = new Actions(webdriver);
			action2.moveToElement(odds2).perform();
			Thread.sleep(4000);

			webdriver.findElement(By.xpath(xpathMap.get("SearchIconSynapse"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC09-SynapseBetslip",
					"To check a valid booking code allows submission.[Single Betslip]",
					"Valid booking code allows submission.[Single Betslip]", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Multi Bet is clicked");

			WebElement odds3 = webdriver.findElement(By.xpath(xpathMap.get("BookingCodeSynapse")));
			Actions action3 = new Actions(webdriver);
			action3.moveToElement(odds3).perform();
			Thread.sleep(4000);

			webdriver.findElement(By.xpath(xpathMap.get("SearchIconSynapse"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC09-SynapseBetslip",
					"To check a valid booking code allows submission.[Multi Betslip]",
					"Valid booking code allows submission.[Multi Betslip]", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Single Bet is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BookingCodeInputBox")))
					.sendKeys(xpathMap.get("BookingCodeInvalidInput"));
			Thread.sleep(2000);

			WebElement odds4 = webdriver.findElement(By.xpath(xpathMap.get("BookingCodeSynapse")));
			Actions action4 = new Actions(webdriver);
			action4.moveToElement(odds4).perform();
			Thread.sleep(4000);

			webdriver.findElement(By.xpath(xpathMap.get("SearchIconSynapse"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC10-SynapseBetslip",
					"To check display error message  by entering invalid booking code in booking code text box [Single Betslip]",
					"Error Message is getting displayed [Single Betslip]", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Multi Bet is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SearchIconSynapse"))).click();
			Thread.sleep(2000);
//										Assert.assertTrue(webdriver.findElement(By.cssSelector(xpathMap.get("ContinueBettingSynapse"))).isDisplayed());
//										System.out.print("Betnow is clicked");

			report.detailsAppend("TC10-SynapseBetslip",
					"To check display error message  by entering invalid booking code in booking code text box [Multi Betslip]",
					"Error Message is getting displayed [Multi Betslip]", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Single Bet is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BookingCodeInputBox")))
					.sendKeys(xpathMap.get("BookingCodeInvalidInput"));
			Thread.sleep(2000);

			WebElement odds5 = webdriver.findElement(By.xpath(xpathMap.get("BookingCodeSynapse")));
			Actions action5 = new Actions(webdriver);
			action5.moveToElement(odds5).perform();
			Thread.sleep(4000);

			webdriver.findElement(By.xpath(xpathMap.get("SearchIconSynapse"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC11-SynapseBetslip",
					"To check Search icon functionality inside booking code search box by clicking on it [Single Betslip]",
					"Functionality of SearchIcon is working fine. [Single Betslip]", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Multi Bet is clicked");

			WebElement odds6 = webdriver.findElement(By.xpath(xpathMap.get("BookingCodeSynapse")));
			Actions action6 = new Actions(webdriver);
			action6.moveToElement(odds6).perform();
			Thread.sleep(4000);

			webdriver.findElement(By.xpath(xpathMap.get("SearchIconSynapse"))).click();
			Thread.sleep(2000);
//										Assert.assertTrue(webdriver.findElement(By.cssSelector(xpathMap.get("ContinueBettingSynapse"))).isDisplayed());
//										System.out.print("Betnow is clicked");

			report.detailsAppend("TC11-SynapseBetslip",
					"To check Search icon functionality inside booking code search box by clicking on it [Multi Betslip]",
					"Functionality of SearchIcon is working fine. [Multi Betslip]", "Pass");

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC08-SynapseBetslip", "User can click inside the booking code text box.",
					"User is click inside the booking code text box.", "Fail");

			report.detailsAppend("TC09-SynapseBetslip", "To check a valid booking code allows submission.",
					"Valid booking code allows submission.", "Fail");

			report.detailsAppend("TC10-SynapseBetslip",
					"To check display error message  by entering invalid booking code in booking code text box",
					"Error Message is getting displayed", "Fail");

			report.detailsAppend("TC11-SynapseBetslip",
					"To check Search icon functionality inside booking code search box by clicking on it [Multi Betslip]",
					"Functionality of SearchIcon is working fine. [Multi Betslip]", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC09(Synapse Betslip) PJ65867
	// To check a valid booking code allows submission.
	public boolean BookingCodeNumber(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Single Bet is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CopyCode"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("ContinueBettingSynapse31"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Copy Code is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SearchIconSynapse"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC09-SynapseBetslip",
					"To check a valid booking code allows submission.[Single Betslip]",
					"Valid booking code allows submission.[Single Betslip]", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Multi Bet is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SearchIconSynapse"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC09-SynapseBetslip",
					"To check a valid booking code allows submission.[Multi Betslip]",
					"Valid booking code allows submission.[Multi Betslip]", "Pass");

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC09-SynapseBetslip", "To check a valid booking code allows submission.",
					"Valid booking code allows submission.", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC10(Synapse Betslip) PJ65867
	// To check display error message by entering invalid booking code in booking
	// code text box
	public boolean BookingCodeInvalidNumber(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Single Bet is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BookingCodeInputBox")))
					.sendKeys(xpathMap.get("BookingCodeInvalidInput"));
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("SearchIconSynapse"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC10-SynapseBetslip",
					"To check display error message  by entering invalid booking code in booking code text box [Single Betslip]",
					"Error Message is getting displayed [Single Betslip]", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Multi Bet is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SearchIconSynapse"))).click();
			Thread.sleep(2000);
//										Assert.assertTrue(webdriver.findElement(By.cssSelector(xpathMap.get("ContinueBettingSynapse"))).isDisplayed());
//										System.out.print("Betnow is clicked");

			report.detailsAppend("TC10-SynapseBetslip",
					"To check display error message  by entering invalid booking code in booking code text box [Multi Betslip]",
					"Error Message is getting displayed [Multi Betslip]", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Single Bet is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BookingCodeInputBox")))
					.sendKeys(xpathMap.get("BookingCodeInvalidInput"));
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("SearchIconSynapse"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC11-SynapseBetslip",
					"To check Search icon functionality inside booking code search box by clicking on it [Single Betslip]",
					"Functionality of SearchIcon is working fine. [Single Betslip]", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Multi Bet is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SearchIconSynapse"))).click();
			Thread.sleep(2000);
//										Assert.assertTrue(webdriver.findElement(By.cssSelector(xpathMap.get("ContinueBettingSynapse"))).isDisplayed());
//										System.out.print("Betnow is clicked");

			report.detailsAppend("TC11-SynapseBetslip",
					"To check Search icon functionality inside booking code search box by clicking on it [Multi Betslip]",
					"Functionality of SearchIcon is working fine. [Multi Betslip]", "Pass");

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC10-SynapseBetslip",
					"To check display error message  by entering invalid booking code in booking code text box",
					"Error Message is getting displayed", "Fail");

			report.detailsAppend("TC11-SynapseBetslip",
					"To check Search icon functionality inside booking code search box by clicking on it [Multi Betslip]",
					"Functionality of SearchIcon is working fine. [Multi Betslip]", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC12(Synapse Betslip) PJ65867
	// To Check user should able to click on Single betslip
	public boolean SingleBetslip(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Single Bet is clicked");

			report.detailsAppend("TC12-SynapseBetslip", "To Check user should able to click on Single betslip",
					"User is able to click on Single betslip", "Pass");

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC12-SynapseBetslip", "To Check user should able to click on  ingle betslip",
					"User is able to click on Single betslip", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC13(Synapse Betslip) PJ65867
	// To Check user should able to click on Multi betslip
	public boolean MultiBetslip(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Multi Bet is clicked");

			report.detailsAppend("TC13-SynapseBetslip", "To Check user should able to click on Multi betslip",
					"User is able to click on Multi betslip", "Pass");

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC12-SynapseBetslip", "To Check user should able to click on Multi betslip",
					"User is able to click on Multi betslip", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC14(Synapse Betslip) PJ65867
	// To check Contents of the single section of the betslip
	public boolean SingleBetslipContent(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Single Bet is clicked");

			report.detailsAppend("TC14-SynapseBetslip", "To check Contents of the single section of the betslip",
					"Contents of the single section of the betslip", "Pass");

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC14-SynapseBetslip", "To check Contents of the single section of the betslip",
					"Contents of the single section of the betslip", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC15(Synapse Betslip) PJ65867
	// To check Contents of the Multi section of the betslip
	public boolean MultiBetslipContent(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Multi Bet is clicked");

			report.detailsAppend("TC15-SynapseBetslip", "To check Contents of the multi section of the betslip",
					"Contents of the multi section of the betslip", "Pass");

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC15-SynapseBetslip", "To check Contents of the multi section of the betslip",
					"Contents of the multi section of the betslip", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC16(Synapse Betslip) PJ65867
	// To check on clicking Edit button it should navigate to statistic page in
	// single and multisection
	public boolean EditButton(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Single Bet is clicked");

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("BookingCodeSynapse")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(4000);

			webdriver.findElement(By.xpath(xpathMap.get("SquareBox"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PencilOpt31"))).isDisplayed());
			System.out.print("Square Box Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("PencilOpt31"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TopButton"))).isDisplayed());
			System.out.print("Edit Button is clicked");

			report.detailsAppend("TC16-SynapseBetslip",
					"To check on clicking Edit button it should navigate to statistic page in single and multisection [Single Betslip]",
					"Clicking Edit button it is navigate to statistic page in single and multisection [Single Betslip]",
					"Pass");

			webdriver.findElement(By.xpath(xpathMap.get("PencilOpt31"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Multi Bet is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("PencilOpt31"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TopButton"))).isDisplayed());
			System.out.print("Edit Button is clicked");

			report.detailsAppend("TC16-SynapseBetslip",
					"To check on clicking Edit button it should navigate to statistic page in single and multisection [Multi Betslip]",
					"Clicking Edit button it is navigate to statistic page in single and multisection [Multi Betslip]",
					"Pass");

			webdriver.findElement(By.xpath(xpathMap.get("RightClickInEdit"))).click();
			Thread.sleep(2000);

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC16-SynapseBetslip",
					"To check on clicking Edit button it should navigate to statistic page in single and multisection ",
					"Clicking Edit button it is navigate to statistic page in single and multisection ", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC17(Synapse Betslip) PJ65867
	// To check functionality of "Close" button on Betslip inside single and
	// multisection by clicking on close button
	public boolean CloseButtonInEdit(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Single Bet is clicked");

			WebElement odds1 = webdriver.findElement(By.xpath(xpathMap.get("SquareBox")));
			Actions action1 = new Actions(webdriver);
			action1.moveToElement(odds1).perform();
			Thread.sleep(4000);

			odds1.click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseButtonInEdit"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC17-SynapseBetslip",
					"To check functionality of \"Close\" button on Betslip inside single and multisection by clicking on close button [Single Betslip]",
					"Functionality of \"Close\" button on Betslip inside single and multisection by clicking on close button is fine [Single Betslip]",
					"Pass");

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Multi Bet is clicked");

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("SquareBox")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(4000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseButtonInEdit"))).click();
			Thread.sleep(2000);

			odds.click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC17-SynapseBetslip",
					"To check functionality of \"Close\" button on Betslip inside single and multisection by clicking on close button [Multi Betslip]",
					"Functionality of \"Close\" button on Betslip inside single and multisection by clicking on close button is fine [Multi Betslip]",
					"Pass");

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC17-SynapseBetslip",
					"To check functionality of \"Close\" button on Betslip inside single and multisection by clicking on close button",
					"Functionality of \"Close\" button on Betslip inside single and multisection by clicking on close button is fine",
					"Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC18(Synapse Betslip) PJ65867
	// To check is user able to enter/add wager to "Bet wager" field inside single
	// and multi section of the betslip
	public boolean BetWagerr(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Single Bet is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("WagerBox"))).sendKeys(xpathMap.get("WagerBoxData"));
			Thread.sleep(2000);

			report.detailsAppend("TC18-SynapseBetslip",
					"To check is user able to enter/add wager to \"Bet wager\" field inside single and multi section of the betslip",
					"User able to enter/add wager to \"Bet wager\" field inside single and multi section of the betslip",
					"Pass");

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC18-SynapseBetslip",
					"To check is user able to enter/add wager to \"Bet wager\" field inside single and multi section of the betslip ",
					"User able to enter/add wager to \"Bet wager\" field inside single and multi section of the betslip ",
					"Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC19(Synapse Betslip) PJ65867
	// To check presence of Cashout icon if cashout is available for the odd
	public boolean CashOutOdds(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Multi Bet is clicked");

			WebElement odds1 = webdriver.findElement(By.xpath(xpathMap.get("SquareBox")));
			Actions action1 = new Actions(webdriver);
			action1.moveToElement(odds1).perform();
			Thread.sleep(4000);

			odds1.click();
			Thread.sleep(2000);

			report.detailsAppend("TC19-SynapseBetslip",
					"To check presence of Cashout icon if cashout is available for the odd [Single Betslip]",
					"Cashout icon is available for the odd [Single Betslip]", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Multi Bet is clicked");

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("BookingCodeSynapse")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(4000);

			report.detailsAppend("TC19-SynapseBetslip",
					"To check presence of Cashout icon if cashout is available for the odd [Multi Betslip]",
					"Cashout icon is available for the odd [Multi Betslip]", "Pass");

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC19-SynapseBetslip",
					"To check presence of Cashout icon if cashout is available for the odd",
					"Cashout icon is available for the odd", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC20(Synapse Betslip) PJ65867
	// To check Cashout icon should not display if cashout is not available for
	// selected odds
	public boolean WithoutCashOutOdds(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("MatchForStatsticsOdds"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TopButton"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("TopButton"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("RightArrowInMarket"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("RightArrowInMarket"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("Others"))).isDisplayed());
			System.out.print("Right Arrow is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("Others"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("OddsInstatastics"))).isDisplayed());
			System.out.print("Others Market is clicked");

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("OddsInstatastics")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);

			odds.click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Multi Bet is clicked");

			WebElement odds1 = webdriver.findElement(By.xpath(xpathMap.get("SquareBox")));
			Actions action1 = new Actions(webdriver);
			action1.moveToElement(odds1).perform();
			Thread.sleep(4000);

			odds1.click();
			Thread.sleep(2000);

			report.detailsAppend("TC20-SynapseBetslip",
					"To check Cashout icon should not display if cashout is not  available for selected odds [Single Betslip]",
					"Cashout icon is not getting displayed [Single Betslip]", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Multi Bet is clicked");

			WebElement odds2 = webdriver.findElement(By.xpath(xpathMap.get("BookingCodeSynapse")));
			Actions action2 = new Actions(webdriver);
			action1.moveToElement(odds2).perform();
			Thread.sleep(4000);

			report.detailsAppend("TC20-SynapseBetslip",
					"To check Cashout icon should not display if cashout is not  available for selected odds [Multi Betslip]",
					"Cashout icon is not getting displayed [Multi Betslip]", "Pass");

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC20-SynapseBetslip",
					"To check Cashout icon should not display if cashout is not  available for selected odds",
					"Cashout icon is not getting displayed", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC21(Synapse Betslip) PJ65867
	// User should see the same leg is added into the Multi betslip.
	public boolean SelectAllGreenColor(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

//										webdriver.findElement(By.xpath(xpathMap.get("TopButton"))).click();
//										Thread.sleep(2000);

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("BookingCodeSynapse")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(4000);

			webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Multi Bet is clicked");

			report.detailsAppend("TC21-SynapseBetslip", "User should see the same leg is added into the Multi betslip.",
					"User is able to see the same leg is added into the Multi betslip.", "Pass");

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC21-SynapseBetslip", "User should see the same leg is added into the Multi betslip.",
					"User is able to see the same leg is added into the Multi betslip.", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC22(Synapse Betslip) PJ65867
	// To check Total betway return Wager calculation(Odd*Bet Wager).
	public boolean BetWagerCalculation(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

//										webdriver.findElement(By.xpath(xpathMap.get("TopButton"))).click();
//										Thread.sleep(2000);

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("BookingCodeSynapse")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(4000);

			webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Multi Bet is clicked");

			report.detailsAppend("TC22-SynapseBetslip",
					"To check Total betway return Wager calculation(Odd*Bet Wager).",
					"Total betway return Wager is as per the calculation(Odd*Bet Wager).", "Pass");

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC22-SynapseBetslip",
					"To check Total betway return Wager calculation(Odd*Bet Wager).",
					"Total betway return Wager is as per the calculation(Odd*Bet Wager).", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC23(Synapse Betslip) PJ65867
	// To check on clicking Total BetWay return dropdown user able to see potential
	// return Wager(Ex-Potential Return: R 100.00)
	public boolean PotentialReturnn(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

//										webdriver.findElement(By.xpath(xpathMap.get("TopButton"))).click();
//										Thread.sleep(2000);

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("BookingCodeSynapse")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(4000);

			webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Multi Bet is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("TotalBetDD"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC23-SynapseBetslip",
					"To check on clicking Total BetWay return dropdown user able to see potential return Wager(Ex-Potential Return: R 100.00)",
					"User is able to see potential return Wager(Ex-Potential Return: R 100.00)", "Pass");

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC23-SynapseBetslip",
					"To check on clicking Total BetWay return dropdown user able to see potential return Wager(Ex-Potential Return: R 100.00)",
					"User is able to see potential return Wager(Ex-Potential Return: R 100.00)", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC24(Synapse Betslip) PJ65867
	// To check is user able to enter/add Wager to "Bet Wager" field
	public boolean BetWagerField(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Single Bet is clicked");

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("BookingCodeSynapse")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(4000);

			webdriver.findElement(By.xpath(xpathMap.get("WagerBox31"))).sendKeys(xpathMap.get("WagerBoxData31"));
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("TotalBetDD"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC24-SynapseBetslip",
					"To check is user able to enter/add Wager to \"Bet Wager\" field",
					"User is able to enter/add Wager to \"Bet Wager\" field", "Pass");

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC24-SynapseBetslip",
					"To check is user able to enter/add Wager to \"Bet Wager\" field",
					"User is able to enter/add Wager to \"Bet Wager\" field", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC25(Synapse Betslip) PJ65867
	// To check is user not able to enter/add Invalid Wager Inputs to "Bet Wager"
	// fieldd
	public boolean BetWagerFieldWrongInput(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Single Bet is clicked");

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("BookingCodeSynapse")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(4000);

			webdriver.findElement(By.xpath(xpathMap.get("WagerBox31"))).sendKeys(xpathMap.get("WagerBoxWrongData31"));
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("TotalBetDD"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC25-SynapseBetslip",
					"To check is user not able to enter/add Invalid Wager Inputs  to \"Bet Wager\" field",
					"User is not able to enter/add Invalid Wager Inputs  to \"Bet Wager\" field", "Pass");

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC25-SynapseBetslip",
					"To check is user not able to enter/add Invalid Wager Inputs  to \"Bet Wager\" field",
					"User is not able to enter/add Invalid Wager Inputs  to \"Bet Wager\" field", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC26(Synapse Betslip) PJ65867
	// To check calculation of the Total odds by adding more than one odd
	public boolean TotalOdds(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Single Bet is clicked");

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("BookingCodeSynapse")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(4000);

			webdriver.findElement(By.xpath(xpathMap.get("WagerBox31"))).sendKeys(xpathMap.get("WagerBoxData31"));
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("TotalBetDD"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC26-SynapseBetslip",
					"To check calculation of the Total odds by adding more than one odd",
					"Calculation of the Total odds by adding more than one odd is correct", "Pass");

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC26-SynapseBetslip",
					"To check calculation of the Total odds by adding more than one odd",
					"Calculation of the Total odds by adding more than one odd is correct", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC27(Synapse Betslip) PJ65867
	// To check all bets are getting removed from the Betslip by clicking on Remove
	// all button
	public boolean RemoveAll(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Single Bet is clicked");

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBetSlip")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(4000);

			odds.click();
			Thread.sleep(4000);

			report.detailsAppend("TC27-SynapseBetslip",
					"To check all bets are getting removed from the Betslip by clicking on Remove all button",
					"All bets are getting removed from the Betslip by clicking on Remove all button", "Pass");

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC27-SynapseBetslip",
					"To check all bets are getting removed from the Betslip by clicking on Remove all button",
					"All bets are getting removed from the Betslip by clicking on Remove all button", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC28(Synapse Betslip) PJ65867
	// To check "Quick Bet" is getting display with five buttons.
	public boolean QuickBets(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Single Bet is clicked");

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("10QuickBet")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(4000);

			report.detailsAppend("TC28-SynapseBetslip", "To check \"Quick Bet\" is getting display with five buttons.",
					"Quick Bet is getting display with five buttons.", "Pass");

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC28-SynapseBetslip", "To check \"Quick Bet\" is getting display with five buttons.",
					"Quick Bet is getting display with five buttons.", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC29(Synapse Betslip) PJ65867
	// To check "Quick Bet" buttons functionality put "10 grands" in bet wager.
	public boolean QuickBetsOption(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Single Bet is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("10QuickBet"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC29-SynapseBetslip",
					"To check \"Quick Bet\" buttons functionality put \"10 grands\" in bet wager.",
					"Quick Bet buttons functionality put \"10 grands\" in bet wager.", "Pass");

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC29-SynapseBetslip",
					"To check \"Quick Bet\" buttons functionality put \"10 grands\" in bet wager.",
					"Quick Bet buttons functionality put \"10 grands\" in bet wager.", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC30(Synapse Betslip) PJ65867
	// To check "Quick Bet" buttons functionality put "50 grands" in bet wager.
	public boolean QuickBetsOptions(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Single Bet is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("50QuickBet"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC30-SynapseBetslip",
					"To check \"Quick Bet\" buttons functionality put \"50 grands\" in bet wager.",
					"Quick Bet buttons functionality put \"50 grands\" in bet wager.", "Pass");

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC29-SynapseBetslip",
					"To check \"Quick Bet\" buttons functionality put \"50 grands\" in bet wager.",
					"Quick Bet buttons functionality put \"50 grands\" in bet wager.", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC31(Synapse Betslip) PJ65867
	// To check Reset button in "Quick Bet " section
	public boolean QuickBetsOptionsReset(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Single Bet is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("50QuickBet"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("ResetButton"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC31-SynapseBetslip", "To check Reset button in \"Quick Bet \" section",
					"Reset button in \"Quick Bet \" section", "Pass");

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC31-SynapseBetslip", "To check Reset button in \"Quick Bet \" section",
					"Reset button in \"Quick Bet \" section", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC32(Synapse Betslip) PJ65867
	// To check Quick bet button calculation
	public boolean QuickBetsCalculation(Mobile_HTML_Report report) {

		try {

			BetSlipLogin();

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SingleBetSlipSynapse"))).isDisplayed());
			System.out.print("Single Bet is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("50QuickBet"))).click();
			Thread.sleep(2000);

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBS")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(4000);
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllBS"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC32-SynapseBetslip", "To check Quick bet button calculation",
					"Quick bet button calculation is fine", "Pass");

			BetslipsLogout();

		} catch (Exception e) {

			report.detailsAppend("TC32-SynapseBetslip", "To check Quick bet button calculation",
					"Quick bet button calculation is fine", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	public void GHLogin2() throws Exception {
		Thread.sleep(2000);
		try {
			webdriver.findElement(By.xpath(xpathMap.get("PavanLogin"))).sendKeys(xpathMap.get("BSNumber"));
			Thread.sleep(2000);
		} catch (Exception e) {
			System.out.println(e);
		}
		System.out.print("MobileNumber is Entered");
		try {
			webdriver.findElement(By.xpath(xpathMap.get("PavanPass"))).sendKeys(xpathMap.get("BSPass"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
		} catch (Exception e) {
			System.out.println(e);
		}
		Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).isDisplayed());
		System.out.print("SynapseLogin is Present");
		webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).click();
		Thread.sleep(2000);
	}

	// TC-33(Synapse_BS) PD69988//
	// To check Win Boost value in Bet amount dropdown
	public boolean BetSlipCalculationSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			GHLogin();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).isDisplayed());
			System.out.println("BSMarketClick is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick2"))).isDisplayed());
			System.out.println("BSMarketClick2 is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick2"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMulti")));
			Thread.sleep(2000);
//									String searchText = "Continue betting";
//									String xpath = "//*[contains(normalize-space(text()), '" + searchText + "')]";
//									webdriver.findElement(By.xpath(xpath)).click();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSBetAmount"))).isDisplayed());
			System.out.println("BSBetAmount is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSBetAmount"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC33-Synapse_BS",
					"User Should be able to see Win Boost  value in Bet amount dropdown",
					"User is able to see Win Boost  value in Bet amount dropdown", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick2"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC33-Synapse_BS",
					"User Should be able to see Win Boost  value in Bet amount dropdown",
					"User is able to see Win Boost  value in Bet amount dropdown", "Fail");
			webdriver.navigate().refresh();

			return false;
		}
		webdriver.navigate().refresh();

		return true;
	}

	// TC-34(Synapse_BS) PD69988//
	// To check Win Boost value in Bet amount calculation
	public boolean BetSlipWinBoostSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).isDisplayed());
			System.out.println("BSMarketClick is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick2"))).isDisplayed());
			System.out.println("BSMarketClick2 is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick2"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMulti")));
			Thread.sleep(2000);
//									String searchText = "Continue betting";
//									String xpath = "//*[contains(normalize-space(text()), '" + searchText + "')]";
//									webdriver.findElement(By.xpath(xpath)).click();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSBetAmount"))).isDisplayed());
			System.out.println("BSBetAmount is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSBetAmount"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC34-Synapse_BS", "User Should be able to see Win Boost in Bet amount dropdown",
					"User is able to see Win Boost in Bet amount dropdown", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick2"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC34-Synapse_BS", "User Should be able to see Win Boost in Bet amount dropdown",
					"User is able to see Win Boost in Bet amount dropdown", "Fail");
			webdriver.navigate().refresh();

			return false;
		}
		webdriver.navigate().refresh();

		return true;
	}

	// TC-35(Synapse_BS) PD69988//
	// To check Win Boost tool tip
	public boolean BetSlipToolTipSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).isDisplayed());
			System.out.println("BSMarketClick is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick2"))).isDisplayed());
			System.out.println("BSMarketClick2 is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick2"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMulti")));
			Thread.sleep(2000);
//									String searchText = "Continue betting";
//									String xpath = "//*[contains(normalize-space(text()), '" + searchText + "')]";
//									webdriver.findElement(By.xpath(xpath)).click();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSBetAmount"))).isDisplayed());
			System.out.println("BSBetAmount is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSBetAmount"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSToolTip"))).isDisplayed());
			System.out.println("BSToolTip is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSToolTip"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC35-Synapse_BS", "User Should be able to see GetWayMore Pop up",
					"User is able to see GetWayMore Pop up", "Pass");
			webdriver.navigate().refresh();

		} catch (Exception e) {
			report.detailsAppend("TC35-Synapse_BS", "User Should be able to see GetWayMore Pop up",
					"User is able to see GetWayMore Pop up", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();

		return true;
	}

	// TC-36(Synapse_BS) PD69988//
	// To check Win Boost pop up window contents
	public boolean BetSlipToolTipContentsSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMulti")));
			Thread.sleep(2000);
//									String searchText = "Continue betting";
//									String xpath = "//*[contains(normalize-space(text()), '" + searchText + "')]";
//									webdriver.findElement(By.xpath(xpath)).click();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSToolTip"))).isDisplayed());
			System.out.println("BSToolTip is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSToolTip"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC36-Synapse_BS", "User Should be able to see GetWayMore Pop up Contents",
					"User is able to see GetWayMore Pop up Contents", "Pass");
			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick2"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC36-Synapse_BS", "User Should be able to see GetWayMore Pop up Contents",
					"User is able to see GetWayMore Pop up Contents", "Fail");
			webdriver.navigate().refresh();

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-37(Synapse_BS) PD69988//
	// To check Win Boost value in Bet amount calculation
	public boolean BetSlipWinBoostPercentageSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).isDisplayed());
			System.out.println("BSMarketClick is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick2"))).isDisplayed());
			System.out.println("BSMarketClick2 is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick2"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMulti")));
			Thread.sleep(2000);
//									String searchText = "Continue betting";
//									String xpath = "//*[contains(normalize-space(text()), '" + searchText + "')]";
//									webdriver.findElement(By.xpath(xpath)).click();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSBetAmount"))).isDisplayed());
			System.out.println("BSBetAmount is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSBetAmount"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC37-Synapse_BS",
					"User Should be able to see Win Boost Percentage  in Bet amount dropdown",
					"User is able to see Win Boost Percentage in Bet amount dropdown", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick2"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC37-Synapse_BS",
					"User Should be able to see Win Boost Percentage in Bet amount dropdown",
					"User is able to see Win Boost Percentage in Bet amount dropdown", "Fail");
			webdriver.navigate().refresh();
			GHLogout();
			return false;
		}
		webdriver.navigate().refresh();
		GHLogout();
		return true;
	}

	// TC-38(Synapse_BS) PD69988//
	// On clicking "Bet Now" button Login page pop-up should display.
	public boolean BetSlipBetNowSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).isDisplayed());
			System.out.println("BSMarketClick is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick2"))).isDisplayed());
			System.out.println("BSMarketClick2 is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick2"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMulti"))).click();
			;
			Thread.sleep(2000);
			String searchText = "Bet Now";
			String xpath = "//*[contains(normalize-space(text()), '" + searchText + "')]";
			webdriver.findElement(By.xpath(xpath)).click();
			Thread.sleep(2000);
			report.detailsAppend("TC38-Synapse_BS",
					"User Should be able to see Login popup window when clicked on Betnow button",
					"User is able to see Login popup window when clicked on Betnow button", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick2"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC38-Synapse_BS",
					"User Should be able to see Login popup window when clicked on Betnow button",
					"User is able to see Login popup window when clicked on Betnow button", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-39(Synapse_BS) PD69988//
	// To check if user don't have insufficient funds in account then "Bet
	// Confirmation" pop up window should display
	public boolean BetSlipInsufficientFundsSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
//									GHLogout();
			GHLogin2();
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).isDisplayed());
			System.out.println("BSMarketClick is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick2"))).isDisplayed());
			System.out.println("BSMarketClick2 is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick2"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSSingle"))).click();
			Thread.sleep(2000);
			String searchText = "Bet Now";
			String xpath = "//*[contains(normalize-space(text()), '" + searchText + "')]";
			webdriver.findElement(By.xpath(xpath)).click();
			Thread.sleep(2000);
			report.detailsAppend("TC39-Synapse_BS",
					"User Should be able to see Failed bets popup window when clicked on Betnow button",
					"User is able to see Failed bets popup window when clicked on Betnow button", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("BSFailedDialog")));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSCloseInFailed"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC39-Synapse_BS",
					"User Should be able to see Failed bets popup window when clicked on Betnow button",
					"User is able to see Failed bets popup window when clicked on Betnow button", "Fail");
			webdriver.navigate().refresh();

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-40(Synapse_BS) PD69988//
	// To check if user don't have insufficient funds in account then "Bet
	// Confirmation" pop up window should display
	public boolean BetSlipInsufficientFundsMultiSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMulti"))).click();
			Thread.sleep(2000);
			String searchText = "Bet Now";
			String xpath = "//*[contains(normalize-space(text()), '" + searchText + "')]";
			webdriver.findElement(By.xpath(xpath)).click();
			Thread.sleep(2000);
			report.detailsAppend("TC40-Synapse_BS",
					"User Should be able to see Failed bets popup window when clicked on MultiBetslip Betnow button",
					"User is able to see Failed bets popup window when clicked on MultiBetslip Betnow button", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BSFailedDialog")));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSCloseInFailed"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick2"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC40-Synapse_BS",
					"User Should be able to see Failed bets popup window when clicked on MultiBetslip Betnow button",
					"User is able to see Failed bets popup window when clicked on MultiBetslip Betnow button", "Fail");
			webdriver.navigate().refresh();
			GHLogout2();
			return false;
		}
		webdriver.navigate().refresh();
		GHLogout2();
		return true;
	}

	// TC-41(Synapse_BS) PD69988//
	// To check functionality of share button by clicking on it
	public boolean BetSlipShareMultiSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			GHLogin();
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).isDisplayed());
			System.out.println("BSMarketClick is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSShare"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC41-Synapse_BS", "User Should be able to click share button",
					"User is able to click share button", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("BSClose"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC41-Synapse_BS", "User Should be able to click share button",
					"User is able to click share button", "Fail");
			webdriver.navigate().refresh();

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-42(Synapse_BS) PD69988//
	// To check contents of the "Booking code" pop-up window by clicking on "Share"
	// button.
	public boolean BetSlipShareContentsSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSShare"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC42-Synapse_BS", "User Should be able to see Booking code contents",
					"User is able to see Booking code contents", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("BSClose"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC42-Synapse_BS", "User Should be able to see Booking code contents",
					"User is able to see Booking code contents", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-43(Synapse_BS) PD69988//
	// To check on clicking Copy button of the booking code ,Generated code is
	// getting copy and display message as "Copied to clipboard"
	public boolean BetSlipShareCopySynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSShare"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSCopy"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC43-Synapse_BS", "User Should be able to see Booking code Copied",
					"User is able to see Booking code Copied", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("BSClose"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();

			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC43-Synapse_BS", "User Should be able to see Booking code Copied",
					"User is able to see Booking code Copied", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-44(Synapse_BS) PD69988//
	// To check on clicking Copy button of the booking code ,Generated code is
	// getting copy and display message as "Copied to clipboard"
	public boolean BetSlipShareCloseSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSShare"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSClose"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC44-Synapse_BS", "User Should be able to Close Booking code Window",
					"User is able to Close Booking code Window", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC44-Synapse_BS", "User Should be able to Close Booking code Window",
					"User is able to Close Booking code Window", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-45(Synapse_BS) PD69988//
	// To check on clicking zoom button of the "Share your bet" section "Betway"
	// pop-up window should get open.
	public boolean BetSlipShareZoomSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSShare"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSZoom"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC45-Synapse_BS", "User Should be able to see Booking code Zoomed",
					"User is able to see Booking code Zoomed", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("BSZoomClose"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSClose"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();

			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC45-Synapse_BS", "User Should be able to see Booking code Zoomed",
					"User is able to see Booking code Zoomed", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-46(Synapse_BS) PD69988//
	// To check QR code scanner functionality
	public boolean BetSlipShareQRSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSShare"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSZoom"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC46-Synapse_BS", "User Should be able to see QR code", "User is able to see QR code",
					"Pass");
			webdriver.findElement(By.xpath(xpathMap.get("BSZoomClose"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSClose"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC46-Synapse_BS", "User Should be able to see QR code", "User is able to see QR code",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-47(Synapse_BS) PD69988//
	// To check functionality of Social media button by clicking on it
	public boolean BetSlipShareWhatsappSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSShare"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSWhatsapp"))).click();
			Thread.sleep(2000);
			switchToNewTab();
			report.detailsAppend("TC47-Synapse_BS", "User Should be able to Click social media Button",
					"User is able to Click social media Button", "Pass");
			switchToParentTab();
			webdriver.findElement(By.xpath(xpathMap.get("BSClose"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC47-Synapse_BS", "User Should be able to Click social media Button",
					"User is able to Click social media Button", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-48(Synapse_BS) PD69988//
	// To check the Continue Betting button in the share pop window
	public boolean BetSlipContinueBettingSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSShare"))).click();
			Thread.sleep(2000);
			String searchText = "Continue betting";
			String xpath = "//*[contains(normalize-space(text()), '" + searchText + "')]";
			webdriver.findElement(By.xpath(xpath)).click();
			report.detailsAppend("TC48-Synapse_BS", "User Should be able to Click Continue Betting Button",
					"User is able to Click Continue Betting Button", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC48-Synapse_BS", "User Should be able to Click Continue Betting Button",
					"User is able to Click Continue Betting Button", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-49(Synapse_BS) PD69988//
	// To check functionality of "Keep bets in betslip check box" Without checking
	// the Checkbox
	public boolean BetSlipKeepBetsSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SettingsButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC49[1]-Synapse_BS",
					"User Should be able to see Keep bets in betslip checkbox in Single Betslip",
					"User is able to see Keep bets in betslip Checkbox in Single Betslip", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("SettingsClose"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMulti"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SettingsButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC49[2]-Synapse_BS",
					"User Should be able to see Keep bets in betslip checkbox in Multi Betslip",
					"User is able to see Keep bets in betslip Checkbox in Multi Betslip", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC49-Synapse_BS", "User Should be able to see Keep bets in betslip checkbox",
					"User is able to see Keep bets in betslip checkbox", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-50(Synapse_BS) PD69988//
	// To check functionality of "Keep bets in betslip check box" with checking the
	// Checkbox
	public boolean BetSlipKeepBetsClickSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SettingsButton"))).click();
			Thread.sleep(2000);
			String searchText2 = "Keep bets in betslip";
			String xpath2 = "//*[contains(normalize-space(text()), '" + searchText2 + "')]";
			webdriver.findElement(By.xpath(xpath2)).click();
			report.detailsAppend("TC50[1]-Synapse_BS",
					"User Should be able to Click Keep bets in betslip checkbox in Single Betslip",
					"User is able to Click Keep bets in betslip Checkbox in Single Betslip", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("SettingsClose"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMulti"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SettingsButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC50[2]-Synapse_BS",
					"User Should be able to Click Keep bets in betslip checkbox in Multi Betslip",
					"User is able to Click Keep bets in betslip Checkbox in Multi Betslip", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC50-Synapse_BS", "User Should be able to Click Keep bets in betslip Checkbox",
					"User is able to Click Keep bets in betslip Checkbox", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-51(Synapse_BS) PD69988//
	// To check functionality of "Accept all odds & line charges Check box" Without
	// checking the Checkbox
	public boolean BetSlipAcceptOddsSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SettingsButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC51[1]-Synapse_BS",
					"User Should be able to see Accept all odds & line charges  Check box in Single Betslip",
					"User is able to see Accept all odds & line charges  Check box in Single Betslip", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("SettingsClose"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMulti"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SettingsButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC51[2]-Synapse_BS",
					"User Should be able to see Accept all odds & line charges  Check box in Multi Betslip ",
					"User is able to see Keep bets in betslip Checkbox in Multi Betslip", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC51-Synapse_BS",
					"User Should be able to see Accept all odds & line charges  Check box",
					"User is able to see Accept all odds & line charges  Check box", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-52(Synapse_BS) PD69988//
	// To check functionality of "Accept all odds & line charges Check box" with
	// checking the Checkbox
	public boolean BetSlipAcceptOddsClickSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SettingsButton"))).click();
			Thread.sleep(2000);
			String searchText = "Accept all odds & line changes";
			String xpath2 = "//*[contains(normalize-space(text()), '" + searchText + "')]";
			webdriver.findElement(By.xpath(xpath2)).click();
			report.detailsAppend("TC52[1]-Synapse_BS",
					"User Should be able to Click Accept all odds & line changes in Single Betslip",
					"User is able to Click Keep bets in betslip Checkbox in Single Betslip", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("SettingsClose"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMulti"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SettingsButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC52[2]-Synapse_BS",
					"User Should be able to Click Keep bets in betslip checkbox in Multi Betslip",
					"User is able to Click Keep bets in betslip Checkbox in Multi Betslip", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC52-Synapse_BS", "User Should be able to Click Keep bets in betslip Checkbox",
					"User is able to Click Keep bets in betslip Checkbox", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-53(Synapse_BS) PD69988//
	// Check and Verify Use Cash Balance Check box
	public boolean BetSlipCashBalanceSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC53[1]-Synapse_BS",
					"User Should be able to see Use CashBalance checkbox is Selected in Single Betslip",
					"User is able to see Use CashBalance checkbox is Selected in Single Betslip", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("BSMulti"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC53[2]-Synapse_BS",
					"User Should be able to see Use CashBalance checkbox is Selected in Multi Betslip",
					"User is able to see Use CashBalance checkbox is Selected in Multi Betslip", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC53-Synapse_BS", "User Should be able to see Use CashBalance checkbox is Selected",
					"User is able to see Use CashBalance checkbox is Selected", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-54(Synapse_BS) PD69988//
	// Check and Verify Use Free bet Balance Check box
	public boolean BetSlipFreeBetSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			String searchText = "Use Free Bet";
			String xpath = "//*[contains(normalize-space(text()), '" + searchText + "')]";
			webdriver.findElement(By.xpath(xpath)).click();
			Thread.sleep(1000);
			report.detailsAppend("TC54[1]-Synapse_BS",
					"User Should be able to click use FreeBet checkbox is Selected in Single Betslip",
					"User is able to click use FreeBet checkbox is Selected in Single Betslip", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("BSMulti"))).click();
			Thread.sleep(2000);
			WebElement odds2 = webdriver.findElement(By.xpath(xpath));
			Actions action2 = new Actions(webdriver);
			action2.moveToElement(odds2).perform();
			Thread.sleep(6000);
			report.detailsAppend("TC54[2]-Synapse_BS",
					"User Should be able to click use FreeBet checkbox is Selected in Multi Betslip",
					"User is able to see click use FreeBet checkbox is Selected in Multi Betslip", "Pass");
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC54-Synapse_BS", "User Should be able to click use FreeBet checkbox is Selected",
					"User is able to click use FreeBet checkbox is Selected", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-55(Synapse_BS) PD69988//
	// To check after placing free bet amount field is editable and functioning in
	// single section after placing free bet
	public boolean BetSlipEditBetSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick2"))).isDisplayed());
			System.out.println("BSMarketClick2 is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick2"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(xpathMap.get("BSAmountField"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC55-Synapse_BS", "User Should be able to edit in the Betslip",
					"User is able to edit in the Betslip", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC55-Synapse_BS", "User Should be able to edit in the Betslip",
					"User is able to edit in the Betslip", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-56 (Synapse_BetSlip) AS66528
	// To check user able to place a bet after successfully completion of free bet
	public boolean CheckFreeBetCompletion(Mobile_HTML_Report report) throws Exception {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSSports"))).isDisplayed());
			System.out.print("Sport Button Visible");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSSports"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseUpcomingButton"))).isDisplayed());
			System.out.print("Upcoming Button Visible");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseUpcomingButton"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).isDisplayed());
			System.out.print("Odds selelcted");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("UseFreeBetCheckbox"))).isDisplayed());
				System.out.print(" Button Visible");
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("UseFreeBetCheckbox"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC56-Synapse_BetSlip",
						"To check user able to place a bet after successfully completion of free bet",
						"user able to place a bet after successfully completion of free bet", "Pass");

				SynapseRemoveAllOdds();

			} catch (Exception e) {
				report.detailsAppend("TC56-Synapse_BetSlip",
						"To check user able to place a bet after successfully completion of free bet",
						"user able to place a bet after successfully completion of free bet", "Fail");
				System.out.print(" UseFreeBet CheckBoc not Available ");
				return false;
			}

			Thread.sleep(2000);

			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC56-Synapse_BetSlip",
					"To check user able to place a bet after successfully completion of free bet",
					"user able to place a bet after successfully completion of free bet", "Fail");

			return false;
		}

		return true;
	}

	// TC-57 (Synapse_BetSlip) AS66528
	// Verify presence of "My bets" button on betslip when user is not logged in
	public boolean VerifyMyBetsOnBelsip(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSSports"))).isDisplayed());
			System.out.print("Sport Button Visible");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSSports"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBetSlip"))).isDisplayed());
			System.out.print("BetSlip Button Visible");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBetSlip"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC57-Synapse_BetSlip",
					"Verify presence of My bets button on betslip when user not logged in",
					"User verify My bets button on betslip when user not logged in", "Pass");
			Thread.sleep(2000);

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC57-Synapse_BetSlip",
					"Verify presence of My bets button on betslip when user not logged in",
					"User verify My bets button on betslip when user not logged in", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-62 (Synapse_BetSlip) AS66528
	// To check presence of Edit button on My bets page
	public boolean CheckEditbuttonOnMyBetpage(Mobile_HTML_Report report) throws Exception {

		try {
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSSports"))).isDisplayed());
			System.out.print("Sport Button Visible");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSSports"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMyBets143"))).isDisplayed());
			System.out.print("Mybet Button Visible");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMyBets143"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC62-Synapse_BetSlip", "To check presence of Edit button on My bets page",
					"check presence of Edit button on My bets page", "Pass");
			Thread.sleep(2000);

			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC62-Synapse_BetSlip", "To check presence of Edit button on My bets page",
					"check presence of Edit button on My bets page", "Fail");
			return false;
		}

		return true;
	}

	// TC-63 (Synapse_BetSlip) AS66528
	// To check user can get cashout amount once amount reaches to settled cashout
	// amount
	public boolean UserClickedOnCashOutButton(Mobile_HTML_Report report) throws Exception {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSSports"))).isDisplayed());
			System.out.print("Sport Button Visible");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSSports"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBetNowButton"))).isDisplayed());
			System.out.print("Betnow Button Visible");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBetNowButton"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMyBets143"))).isDisplayed());
			System.out.print("Mybet Button Visible");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMyBets143"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseCashOutButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseCashOutButton"))).click();
			Thread.sleep(2000);
			String searchText = "Continue";
			String xpath = "//*[contains(normalize-space(text()), '" + searchText + "')]";
			webdriver.findElement(By.xpath(xpath)).click();

			report.detailsAppend("TC63-Synapse_BetSlip", "To check presence of Edit button on My bets page",
					"check presence of Edit button on My bets page", "Pass");
			Thread.sleep(2000);

			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC63-Synapse_BetSlip", "To check presence of Edit button on My bets page",
					"check presence of Edit button on My bets page", "Fail");
			return false;
		}

		return true;
	}

	// TC-64 (Synapse_BetSlip) AS66528
	// To check winboost showing for booking code that should be display same on
	// betslip
	public boolean CheckWinboost_BookingCodeOnBetslip(Mobile_HTML_Report report) throws Exception {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSSports"))).isDisplayed());
			System.out.print("Sport Button Visible");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSSports"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBookingCode"))).isDisplayed());
			System.out.print("Booking Code Selected");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBookingCode"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseAddToBetslip143"))).isDisplayed());
			System.out.print("Mybet Button Visible");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseAddToBetslip143"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSMulti"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("BSMulti"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC64-Synapse_BetSlip",
					"To check winboost showing for booking code that should be display same on betslip",
					"check winboost showing for booking code that should be display same on betslip", "Pass");
			Thread.sleep(2000);
			SynapseRemoveAllOdds();
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC64-Synapse_BetSlip",
					"To check winboost showing for booking code that should be display same on betslip",
					"check winboost showing for booking code that should be display same on betslip", "Fail");
			return false;
		}

		return true;
	}

	// TC-65 (Synapse_BetSlip) AS66528
	// To check functionality of the bet from Bet Now to Settled bet functionality
	// of the bet
	public boolean CheckBetNowFunctionalityToSettleBets(Mobile_HTML_Report report) throws Exception {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSSports"))).isDisplayed());
			System.out.print("Sport Button Visible");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BSSports"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseTennis"))).isDisplayed());
			System.out.print("Tennis Event Selected");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseTennis"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SelectedOddsInTennis"))).isDisplayed());
			System.out.print("Odds Selected ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SelectedOddsInTennis"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBetNowButton"))).isDisplayed());
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBetNowButton"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMyBets143"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseTransactionHistory"))).isDisplayed());
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseTransactionHistory"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MybetsInBetPage"))).isDisplayed());
			System.out.print(" Mybets Clicked on BetPage ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MybetsInBetPage"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SettlebetInMyBetPage"))).isDisplayed());
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SettlebetInMyBetPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC65-Synapse_BetSlip",
					"To check functionality of the bet from Bet Now to Settled bet functionality of the bet",
					"check functionality of the bet from Bet Now to Settled bet functionality of the bet", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC65-Synapse_BetSlip",
					"To check functionality of the bet from Bet Now to Settled bet functionality of the bet",
					"check functionality of the bet from Bet Now to Settled bet functionality of the bet", "Fail");
			return false;
		}

		return true;
	}

////////////////////////////////////////////Ghana TransactionHistory/////////////////////////////////////////////////////
	// TC-1(Synapse_TH) PD69988//
	// To check the functionality of "Transaction History" button
	public boolean TransactionHistorySynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			GHLogin();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TransactionHistory"))).isDisplayed());
			System.out.println("TransactionHistory is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TransactionHistory"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC1-Synapse_TH",
					"User Should be able to Click TransactionHistory button in Hamburger Menu",
					"User is able to Click TransactionHistory button in Hamburger Menu", "Pass");
			webdriver.navigate().refresh();
			Thread.sleep(1000);

			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC1-Synapse_TH",
					"User Should be able to Click TransactionHistory button in Hamburger Menu",
					"User is able to Click TransactionHistory button in Hamburger Menu", "Fail");
			webdriver.navigate().refresh();

			return false;
		}
		webdriver.navigate().refresh();

		return true;
	}

	// TC-2(Synapse_TH) PD69988//
	// To check the " Date and Type, Amount, Transaction ID " fields of the
	// "Transaction History" button
	public boolean TransactionHistoryContentsSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TransactionHistory"))).isDisplayed());
			System.out.println("TransactionHistory is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TransactionHistory"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC2-Synapse_TH", "User Should be able to see TransactionHistory content",
					"User is able to see TransactionHistory content", "Pass");
			webdriver.navigate().refresh();

			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC2-Synapse_TH", "User Should be able to see TransactionHistory content",
					"User is able to see TransactionHistory content", "Fail");
			webdriver.navigate().refresh();

			return false;
		}

		return true;
	}

	// TC-3(Synapse_TH) PD69988//
	// To check on clicking Dropdown of the Transaction history list of category is
	// displaying
	public boolean TransactionHistoryDropdownSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TransactionHistory"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(xpathMap.get("THDropdown"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("THBetwayJackpots"))).isDisplayed());
			System.out.println("THBetwayJackpots is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("THBetwayJackpots"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC3-Synapse_TH", "User Should be able to see TransactionHistory dropdown",
					"User is able to see TransactionHistory dropdown", "Pass");
			webdriver.navigate().refresh();

			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC3-Synapse_TH", "User Should be able to see TransactionHistory dropdown",
					"User is able to see TransactionHistory dropdown", "Fail");
			webdriver.navigate().refresh();

			return false;
		}

		return true;
	}

	// TC-4(Synapse_TH) PD69988//
	// To check on clicking Date picker of the Transaction history calendar is
	// displaying
	public boolean TransactionHistoryCalenderSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TransactionHistory"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(xpathMap.get("THDate"))).click();
				Thread.sleep(2000);

			} catch (Exception e) {
				System.out.println(e);
			}
			webdriver.findElement(By.xpath(xpathMap.get("THDateDialog")));
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(xpathMap.get("THDaySelection"))).click();
				Thread.sleep(2000);

			} catch (Exception e) {
				System.out.println(e);
			}
			try {
				webdriver.findElement(By.xpath(xpathMap.get("THDatePickerOK"))).click();
				Thread.sleep(2000);

			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC4-Synapse_TH", "User Should be able to select TransactionHistory Calender dates",
					"User is able to select TransactionHistory Calender dates", "Pass");
			webdriver.navigate().refresh();

			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC4-Synapse_TH", "User Should be able to select TransactionHistory Calender dates",
					"User is able to select TransactionHistory Calender dates", "Fail");
			webdriver.navigate().refresh();

			return false;
		}

		return true;
	}

	// TC-5(Synapse_TH) PD69988//
	// To check on clicking "Search "Button result is getting display
	public boolean TransactionHistorySearchSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TransactionHistory"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(xpathMap.get("THSearchField"))).click();
				Thread.sleep(2000);

			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC5-Synapse_TH",
					"User Should be able to select Search button and result is getting display ",
					"User is able to select Search button and result is getting display ", "Pass");
			webdriver.navigate().refresh();

			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC5-Synapse_TH",
					"User Should be able to select Search button and result is getting display ",
					"User is able to select Search button and result is getting display ", "Fail");
			webdriver.navigate().refresh();

			return false;
		}

		return true;
	}

	// TC-6(Synapse_TH) PD69988//
	// To check on clicking "Export "Button result is getting export in .csv file
	public boolean TransactionHistoryExportSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("TransactionHistory"))).click();
			Thread.sleep(2000);
			String searchText = "export";
			String xpath = "//*[contains(normalize-space(text()), '" + searchText + "')]";
			webdriver.findElement(By.xpath(xpath)).click();
			report.detailsAppend("TC6-Synapse_TH", "User Should be able to click Export button",
					"User is able to click Export button ", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC6-Synapse_TH", "User Should be able to click Export button",
					"User is able to click Export button ", "Fail");
			webdriver.navigate().refresh();

			return false;
		}

		return true;
	}

	// TC-7(Synapse_TH) PD69988//
	// To check user able to see transaction summary on previous and next page
	public boolean TransactionHistoryNavigationSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TransactionHistory"))).click();
			Thread.sleep(2000);
			webdriver.navigate().back();
			webdriver.navigate().forward();
			report.detailsAppend("TC7-Synapse_TH", "User Should be able to Navigate front Page and BackPage",
					"User is able to Navigate front Page and BackPage", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC7-Synapse_TH", "User Should be able to Navigate front Page and BackPage",
					"User is able to Navigate front Page and BackPage", "Fail");
			webdriver.navigate().refresh();

			return false;
		}

		return true;
	}

	// TC-8(Synapse_TH) PD69988//
	// To check functionality of betid information by clicking on Transaction ID
	// link inside "Transaction History" window
	public boolean TransactionHistoryTransactionIDSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TransactionHistory"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("THTransactionID"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC8-Synapse_TH", "User Should be able to see popup when clicked on TransactionId",
					"User is able to see popup when clicked on TransactionId", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC8-Synapse_TH", "User Should be able to see popup when clicked on TransactionId",
					"User is able to see popup when clicked on TransactionId", "Fail");
			webdriver.navigate().refresh();

			return false;
		}

		return true;
	}

	// TC-9(Synapse_TH) PD69988//
	// To check contents of Betslip information on clicking Betid inside Transaction
	// History
	public boolean TransactionHistoryTransactionIDContentsSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TransactionHistory"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("THTransactionID"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC9-Synapse_TH",
					"User Should be able to see Betslip Information when clicked on TransactionId",
					"User is able to see Betslip Information when clicked on TransactionId", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC9-Synapse_TH",
					"User Should be able to see Betslip Information when clicked on TransactionId",
					"User is able to see Betslip Information when clicked on TransactionId", "Fail");
			webdriver.navigate().refresh();

			return false;
		}

		return true;
	}

	// TC-10(Synapse_TH) PD69988//
	// To check contents of Betslip information on clicking Betid inside Transaction
	// History
	public boolean TransactionHistoryDetailViewSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("TransactionHistory"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("THTransactionID"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("THDialog")));
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(xpathMap.get("THDetailView"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC10-Synapse_TH", "User Should be able to click Detailview",
					"User is able to click Detailview", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC10-Synapse_TH", "User Should be able to click Detailview",
					"User is able to click Detailview", "Fail");
			webdriver.navigate().refresh();

			return false;
		}

		return true;
	}

	// TC-11(Synapse_TH) PD69988//
	// To check functionality of "Detail view" inside "Transaction History" window
	public boolean TransactionHistoryDetailviewCloseSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("TransactionHistory"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("THTransactionID"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("THDialog")));
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(xpathMap.get("THCloseBetslip"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC11-Synapse_TH", "User Should be able to close Detailview",
					"User is able to close Detailview", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC11-Synapse_TH", "User Should be able to close Detailview",
					"User is able to close Detailview", "Fail");
			webdriver.navigate().refresh();

			return false;
		}

		return true;
	}

	// TC-12(Synapse_TH) PD69988//
	// To check functionality of "Close button" On "Betslip information" pop up
	// window
	public boolean TransactionHistoryCloseSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("TransactionHistory"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(xpathMap.get("THCloseTransaction"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC12-Synapse_TH", "User Should be able to close Transaction History",
					"User is able to close Transaction History", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC12-Synapse_TH", "User Should be able to close Transaction History",
					"User is able to close Transaction History", "Fail");
			webdriver.navigate().refresh();

			return false;
		}

		return true;
	}

	// TC-13(Synapse_TH) PD69988//
	// To check From Bet Now to Transaction History functionality of Bet
	public boolean TransactionHistoryBetnowSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("THMarketClick"))).isDisplayed());
			System.out.println("THMarketClick is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("THMarketClick"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("THBetnow"))).isDisplayed());
			System.out.println("THBetnow is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("THBetnow"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("THBSDialog")));
			Thread.sleep(2000);
			String searchText = "Continue betting";
			String xpath = "//*[contains(normalize-space(text()), '" + searchText + "')]";
			webdriver.findElement(By.xpath(xpath)).click();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TransactionHistory"))).isDisplayed());
			System.out.println("TransactionHistory is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TransactionHistory"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC13-Synapse_TH", "User Should be able to see placed Bets in Transaction History",
					"User is able to see placed Bets in Transaction History", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC13-Synapse_TH", "User Should be able to see placed Bets in Transaction History",
					"User is able to see placed Bets in Transaction History", "Fail");
			webdriver.navigate().refresh();

			return false;
		}

		return true;
	}

	public void SynapseGHLogout() throws Exception {

		webdriver.findElement(By.xpath(xpathMap.get("SynapseTestaccounts"))).click();
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("SynapseLogout"))).click();
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("SynapseProceed"))).click();
		Thread.sleep(2000);

	}

	public void SynapseRemoveAllOdds() throws Exception {
		try {
			webdriver.findElement(By.xpath(xpathMap.get("RemoveAllButton"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			System.out.print("Removeall button not visible");
		}
		webdriver.navigate().refresh();
	}

	public void GHMarket() throws Exception {
		webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).click();
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick2"))).click();
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick3"))).click();
		Thread.sleep(2000);
		String searchText1 = "Bet Now";
		String xpath2 = "//*[contains(normalize-space(text()), '" + searchText1 + "')]";
		webdriver.findElement(By.xpath(xpath2)).click();
		webdriver.navigate().refresh();
//		SynapseRemoveAllOdds();

	}

	public void GHMarketRemove() throws Exception {
		webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).click();
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick2"))).click();
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick3"))).click();
		Thread.sleep(2000);
	}

	// TC-1 (Synapse_MyBet) AS66528
	// To check "My Bet" button should not display without login

	public boolean MyBetFunctionWithoutLogin(Mobile_HTML_Report report) {

		try {
			report.detailsAppend("TC1-Synapse_BetSlip", "To check \"My Bet\" button should not display without login",
					"To check \"My Bet\" button should not display without login", "Pass");
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC1-Synapse_BetSlip", "To check \"My Bet\" button should not display without login",
					"To check \"My Bet\" button should not display without login", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-2 (Synapse_MyBet) AS66528
	// To check contents of My bets page

	public boolean ContentOfMyBetPage(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print(" HamburgerMenu Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).isDisplayed());
			System.out.print(" MyBet button is Selected ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC2-Synapse_BetSlip", "To check contents of My bets page",
					"check contents of My bets page", "Pass");
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC2-Synapse_BetSlip", "To check contents of My bets page",
					"To check contents of My bets page", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-3 (Synapse_MyBet) AS66528
	// To check open bets tab clickable functionality inside My bets option

	public boolean OpenBetClickInsideMyBetPage(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print(" HamburgerMenu Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).isDisplayed());
			System.out.print(" MyBet button is Selected ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC3-Synapse_BetSlip",
					"To check open bets tab clickable functionality inside My bets option",
					"check open bets tab clickable functionality inside My bets option", "Pass");
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC3-Synapse_BetSlip",
					"To check open bets tab clickable functionality inside My bets option",
					"check open bets tab clickable functionality inside My bets option", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-4 (Synapse_MyBet) AS66528
	// To check contents of open bets when there is no data available

	public boolean OpenBetContentNoDataAvailabe(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print(" HamburgerMenu Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).isDisplayed());
			System.out.print(" MyBet button is Selected ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).click();
			Thread.sleep(2000);

			Thread.sleep(2000);

			report.detailsAppend("TC4-Synapse_BetSlip",
					"To check contents of open bets when there is no data available",
					"check contents of open bets when there is no data available", "Pass");
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC4-Synapse_BetSlip",
					"To check contents of open bets when there is no data available",
					"check contents of open bets when there is no data available", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-5 (Synapse_MyBet) AS66528
	// To check options and functionality of sport dropdown in open bets

	public boolean SportDropdownOptionInOpenBet(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print(" HamburgerMenu Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).isDisplayed());
			System.out.print(" MyBet button is Selected ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).click();
			Thread.sleep(2000);

			System.out.print(" OpenBet button is Selected ");
			Thread.sleep(1000);

//			Thread.sleep(2000);
//			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("OpenBetCategoryDropdown"))).isDisplayed());
//			System.out.print(" OpenBet button is Selected ");
//			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("OpenBetCategoryDropdown"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC5-Synapse_BetSlip",
					"To check options and functionality of sport dropdown in open bets",
					"check options and functionality of sport dropdown in open bets", "Pass");
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC5-Synapse_BetSlip",
					"To check options and functionality of sport dropdown in open bets",
					"check options and functionality of sport dropdown in open bets", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-6 (Synapse_MyBet) AS66528
	// To check the result(Data) options in "All Drop-down"

	public boolean ALLDropdownOptionInOpenBet(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print(" HamburgerMenu Button Visible ");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).isDisplayed());
			System.out.print(" MyBet button is Selected ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).click();
			Thread.sleep(2000);

			System.out.print(" OpenBet button is Selected ");
			Thread.sleep(1000);

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("OpenBetAllDropdown"))).isDisplayed());
			System.out.print(" OpenBet button is Selected ");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("OpenBetAllDropdown"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("ALLTab"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("ALLTab"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC6-Synapse_BetSlip", "To check the result(Data) options in All Drop-down",
					"check the result(Data) options in All Drop-down", "Pass");
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC6-Synapse_BetSlip", "To check the result(Data) options in All Drop-down",
					"check the result(Data) options in All Drop-down", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-7 (Synapse_MyBet) AS66528
	// To check search text box functionality by entring the bet id

	public boolean SearchboxFunctionalityInOpenBet(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print(" HamburgerMenu Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).isDisplayed());
			System.out.print(" MyBet button is Selected ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).click();
			Thread.sleep(2000);

			System.out.print(" OpenBet button is Selected ");
			Thread.sleep(2000);

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SearchBetText"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SearchBetText"))).sendKeys(xpathMap.get("BetIDNo"));
			Thread.sleep(2000);
			System.out.print("BetID is Entered");

			report.detailsAppend("TC7-Synapse_BetSlip", "To check search text box functionality by entring the bet id",
					"check search text box functionality by entring the bet id", "Pass");
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC7-Synapse_BetSlip", "To check search text box functionality by entring the bet id",
					"check search text box functionality by entring the bet id", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-8 (Synapse_MyBet) AS66528
	// To check refresh button functionality by clicking on it

	public boolean RefreshButtonFunctionalityInOpenBet(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print(" HamburgerMenu Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).isDisplayed());
			System.out.print(" MyBet button is Selected ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).click();
			Thread.sleep(2000);

			System.out.print(" OpenBet button is Selected ");
			Thread.sleep(2000);

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SearchBetText"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SearchBetText"))).sendKeys(xpathMap.get("BetIDNo"));
			Thread.sleep(2000);
			System.out.print("BetID is Entered");
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("RefreshbuttonInOpenbet"))).isDisplayed());
			System.out.print(" OpenBet button is Selected ");
			webdriver.findElement(By.xpath(xpathMap.get("RefreshbuttonInOpenbet"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC8-Synapse_BetSlip", "To check refresh button functionality by clicking on it",
					"check refresh button functionality by clicking on it", "Pass");
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC8-Synapse_BetSlip", "To check refresh button functionality by clicking on it",
					"check refresh button functionality by clicking on it", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-9 (Synapse_MyBet) AS66528
	// To check Search button functionality

	public boolean SearchButtonFunctionalityInOpenBet(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print(" HamburgerMenu Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).isDisplayed());
			System.out.print(" MyBet button is Selected ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).click();
			Thread.sleep(2000);

			System.out.print(" OpenBet button is Selected ");
			Thread.sleep(2000);

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SearchBetText"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SearchBetText"))).sendKeys(xpathMap.get("BetIDNo"));
			Thread.sleep(2000);
			System.out.print("BetID is Entered");
			String Text1 = "Search";
			String xpath1 = "//*[contains(normalize-space(text()), '" + Text1 + "')]";
			webdriver.findElement(By.xpath(xpath1)).click();
			Thread.sleep(4000);
			report.detailsAppend("TC9-Synapse_BetSlip", "To check Search button functionality",
					"check Search button functionality", "Pass");
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC9-Synapse_BetSlip", "To check Search button functionality",
					"check Search button functionality", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-10 (Synapse_MyBet) AS66528
	// To check bet information inside open bets pop up window

	public boolean BetInformatioInOpenBetPopup(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print(" HamburgerMenu Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).isDisplayed());
			System.out.print(" MyBet button is Selected ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).click();
			Thread.sleep(2000);

			System.out.print(" OpenBet button is Selected ");
			Thread.sleep(1000);

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("OpenBetCategoryDropdown"))).isDisplayed());
			System.out.print(" OpenBet button is Selected ");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("OpenBetCategoryDropdown"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SportDDInOpenbet"))).isDisplayed());
			System.out.print(" OpenBet button is Selected ");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("SportDDInOpenbet"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC10-Synapse_BetSlip", "To check bet information inside open bets pop  up window",
					"check bet information inside open bets pop  up window", "Pass");
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC10-Synapse_BetSlip", "To check bet information inside open bets pop  up window",
					"check bet information inside open bets pop  up window", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-11 (Synapse_MyBet) AS66528
	// To check Share button functionality in Open bets

	public boolean ShareButtonFunctionalityInOpenBet(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).isDisplayed());
			System.out.print("market Odds Selected");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBetNowButton"))).isDisplayed());
			System.out.print("Betnow Button Visible");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBetNowButton"))).click();
			Thread.sleep(1000);
			webdriver.navigate().refresh();

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print(" HamburgerMenu Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).isDisplayed());
			System.out.print(" MyBet button is Selected ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).click();
			Thread.sleep(2000);

			System.out.print(" OpenBet button is Selected ");
			Thread.sleep(2000);

			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("ShareIconInOpenbet"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("ShareIconInOpenbet"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC11-Synapse_BetSlip", "To check Share button functionality in Open bets",
					"check Share button functionality in Open bets", "Pass");
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC11-Synapse_BetSlip", "To check Share button functionality in Open bets",
					"check Share button functionality in Open bets", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-12 (Synapse_MyBet) AS66528
	// To check contents of Booking code pop up window

	public boolean ContentOfBookingCodePopup(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print(" HamburgerMenu Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).isDisplayed());
			System.out.print(" MyBet button is Selected ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).click();
			Thread.sleep(2000);

			System.out.print(" OpenBet button is Selected ");
			Thread.sleep(2000);

			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("ShareIconInOpenbet"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("ShareIconInOpenbet"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC12-Synapse_BetSlip", "To check contents of  Booking code pop up window",
					"check contents of  Booking code pop up window", "Pass");
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC12-Synapse_BetSlip", "To check contents of  Booking code pop up window",
					"check contents of  Booking code pop up window", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-13 (Synapse_MyBet) AS66528
	// To check functionality of copy booking code

	public boolean CopyButtonOfBookingCode(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print(" HamburgerMenu Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).isDisplayed());
			System.out.print(" MyBet button is Selected ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).click();
			Thread.sleep(2000);

			System.out.print(" OpenBet button is Selected ");
			Thread.sleep(2000);

			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("ShareIconInOpenbet"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("ShareIconInOpenbet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BookingcodeCopyTab"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("BookingcodeCopyTab"))).click();
			Thread.sleep(1000);
			report.detailsAppend("TC13-Synapse_BetSlip", "To check functionality of copy booking code",
					"check functionality of copy booking code", "Pass");
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC13-Synapse_BetSlip", "To check functionality of copy booking code",
					"check functionality of copy booking code", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-14 (Synapse_MyBet) AS66528
	// To check functionality of scanner and zoom out booking code

	public boolean CheckScannerZoomoutOnBookingcode(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print(" HamburgerMenu Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).isDisplayed());
			System.out.print(" MyBet button is Selected ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).click();
			Thread.sleep(2000);

			System.out.print(" OpenBet button is Selected ");
			Thread.sleep(2000);

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("ShareIconInOpenbet"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("ShareIconInOpenbet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("ScancodeZoom"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("ScancodeZoom"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC14-Synapse_BetSlip", "To check functionality of scanner and zoom out booking code",
					"check functionality of scanner and zoom out booking code", "Pass");
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC14-Synapse_BetSlip", "To check functionality of scanner and zoom out booking code",
					"check functionality of scanner and zoom out booking code", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-15 (Synapse_MyBet) AS66528
	// To check contents of betway pop up window

	public boolean ContentBetwayPopupWindow(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print(" HamburgerMenu Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).isDisplayed());
			System.out.print(" MyBet button is Selected ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).click();
			Thread.sleep(2000);

			System.out.print(" OpenBet button is Selected ");
			Thread.sleep(2000);

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("ShareIconInOpenbet"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("ShareIconInOpenbet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("ScancodeZoom"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("ScancodeZoom"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC15-Synapse_BetSlip", "To check contents of betway pop up window",
					"check contents of betway pop up window", "Pass");
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC15-Synapse_BetSlip", "To check contents of betway pop up window",
					"check contents of betway pop up window", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-16 (Synapse_MyBet) AS66528
	// To check share bet via social media functionality

	public boolean SharebetViaSocialMediaFunction(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print(" HamburgerMenu Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).isDisplayed());
			System.out.print(" MyBet button is Selected ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).click();
			Thread.sleep(2000);

			System.out.print(" OpenBet button is Selected ");
			Thread.sleep(2000);

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("ShareIconInOpenbet"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("ShareIconInOpenbet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SocialWtsAppIconInOpenbet"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SocialWtsAppIconInOpenbet"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC16-Synapse_BetSlip", "To check share bet via social media functionality",
					"check share bet via social media functionality", "Pass");
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC16-Synapse_BetSlip", "To check share bet via social media functionality",
					"check share bet via social media functionality", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-17 (Synapse_MyBet) AS66528
	// To check Detail view button functionality

	public boolean DetailViewButtonFunction(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print(" HamburgerMenu Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).isDisplayed());
			System.out.print(" MyBet button is Selected ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).click();
			Thread.sleep(2000);

			System.out.print(" OpenBet button is Selected ");
			Thread.sleep(2000);

			Thread.sleep(2000);
			String Text1 = "Detail View";
			String xpath1 = "//*[contains(normalize-space(text()), '" + Text1 + "')]";
			webdriver.findElement(By.xpath(xpath1)).click();
			Thread.sleep(2000);
			report.detailsAppend("TC17-Synapse_BetSlip", "To check Detail view button functionality",
					"check Detail view button functionality", "Pass");
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC17-Synapse_BetSlip", "To check Detail view button functionality",
					"check Detail view button functionality", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-18 (Synapse_MyBet) AS66528
	// To check back button functionality on details view pop up window

	public boolean BackButtonFunctionOnDetailView(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print(" HamburgerMenu Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).isDisplayed());
			System.out.print(" MyBet button is Selected ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).click();
			Thread.sleep(2000);

			System.out.print(" OpenBet button is Selected ");
			Thread.sleep(2000);

			Thread.sleep(2000);
			String Text1 = "Detail View";
			String xpath1 = "//*[contains(normalize-space(text()), '" + Text1 + "')]";
			webdriver.findElement(By.xpath(xpath1)).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BackIconInDetailPageOfBet"))).isDisplayed());
			System.out.print(" BackIcon button is Selected ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BackIconInDetailPageOfBet"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC18-Synapse_BetSlip",
					"To check back button functionality on details view pop up window",
					"check back button functionality on details view pop up window", "Pass");
			Thread.sleep(2000);
			log.debug("Switch to default tab");

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseCashOutButton"))).isDisplayed());
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseCashOutButton"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(
					webdriver.findElement(By.cssSelector(xpathMap.get("CashoutContinueButton"))).isDisplayed());
			webdriver.findElement(By.cssSelector(xpathMap.get("CashoutContinueButton"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC18-Synapse_BetSlip",
					"To check back button functionality on details view pop up window",
					"check back button functionality on details view pop up window", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-19 (Synapse_MyBet) AS66528
	// To check the edit button and checkobx on edit pop up window

	public boolean EditButtonCheckboxOnEditBetPopup(Mobile_HTML_Report report) {

		try {

			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick2"))).isDisplayed());
			System.out.print("market Odds Selected");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick2"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).isDisplayed());
			System.out.print("market Odds Selected");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("BSMarketClick"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBetNowButton"))).isDisplayed());
			System.out.print("Betnow Button Visible");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBetNowButton"))).click();
			Thread.sleep(1000);
			webdriver.navigate().refresh();

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print(" HamburgerMenu Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).isDisplayed());
			System.out.print(" MyBet button is Selected ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetInHamburgermenu"))).click();
			Thread.sleep(2000);

			System.out.print(" OpenBet button is Selected ");
			Thread.sleep(2000);

			Thread.sleep(2000);
			String Text1 = "Edit";
			String xpath1 = "//*[contains(normalize-space(text()), '" + Text1 + "')]";
			webdriver.findElement(By.xpath(xpath1)).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBCheckBox"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("MBCheckBox"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC19-Synapse_BetSlip", "To check the edit button and checkobx on edit pop up window",
					"check the edit button and checkobx on edit pop up window", "Pass");
			Thread.sleep(2000);
			log.debug("Switch to default tab");

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBClose"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("MBClose"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseCashOutButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseCashOutButton"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(
					webdriver.findElement(By.cssSelector(xpathMap.get("CashoutContinueButton"))).isDisplayed());
			webdriver.findElement(By.cssSelector(xpathMap.get("CashoutContinueButton"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC19-Synapse_BetSlip", "To check the edit button and checkobx on edit pop up window",
					"check the edit button and checkobx on edit pop up window", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-20(Synapse_MB) PD69988//
	// To check functionality of Continue button on edit pop up window
	public boolean MyBetContinueSynapse(Mobile_HTML_Report report) throws Exception {
		try {
			GHMarket();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			String searchText = "My Bets";
			String xpath = "//*[contains(normalize-space(text()), '" + searchText + "')]";
			webdriver.findElement(By.xpath(xpath)).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBEdit"))).isDisplayed());
			System.out.println("MBEdit is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBEdit"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBEditDialog"))).isDisplayed());
			System.out.println("MBEditDialog is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBEditDialog")));
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBCheckBox"))).isDisplayed());
			System.out.println("MBCheckBox is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBCheckBox"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBContinue"))).isDisplayed());
			System.out.println("MBContinue is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBContinue"))).click();
			Thread.sleep(5000);
			report.detailsAppend("TC20-Synapse_MyBets",
					"User Should be able to Click Continue in Edit Bet Pop up window",
					"User is able to Click Continue in Edit Bet Pop up window", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC20-Synapse_MyBets",
					"User Should be able to Click Continue in Edit Bet Pop up window",
					"User is able to Click Continue in Edit Bet Pop up window", "Fail");
			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

	// TC-21(Synapse_MB) PD69988//
	// To check functionality of Cancel button on edit pop up window
	public boolean MyBetCancelSynapse(Mobile_HTML_Report report) throws Exception {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			String searchText = "My Bets";
			String xpath = "//*[contains(normalize-space(text()), '" + searchText + "')]";
			webdriver.findElement(By.xpath(xpath)).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBEdit"))).isDisplayed());
			System.out.println("MBEdit is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBEdit"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBEditDialog"))).isDisplayed());
			System.out.println("MBEditDialog is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBEditDialog")));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZCancelInEdit"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC21-Synapse_MyBets", "User Should be able to Click Cancel in Edit Bet Pop up window",
					"User is able to Click Cancel in Edit Bet Pop up window", "Pass");

			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC21-Synapse_MyBets", "User Should be able to Click Cancel in Edit Bet Pop up window",
					"User is able to Click Cancel in Edit Bet Pop up window", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		GHMarketRemove();
		return true;
	}

	// TC-22(Synapse_MB) PD69988//
	// To check functionality of Close button on edit pop up window
	public boolean MyBetCloseSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			GHMarket();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			String searchText = "My Bets";
			String xpath = "//*[contains(normalize-space(text()), '" + searchText + "')]";
			webdriver.findElement(By.xpath(xpath)).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBEdit"))).isDisplayed());
			System.out.println("MBEdit is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBEdit"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBEditDialog"))).isDisplayed());
			System.out.println("MBEditDialog is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBEditDialog")));
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBClose"))).isDisplayed());
			System.out.println("MBClose is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBClose"))).click();
			Thread.sleep(5000);
			report.detailsAppend("TC22-Synapse_MyBets", "User Should be able to Click Close in Edit Bet Pop up window",
					"User is able to Click Close in Edit Bet Pop up window", "Pass");
			webdriver.navigate().refresh();

			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC22-Synapse_MyBets", "User Should be able to Click Close in Edit Bet Pop up window",
					"User is able to Click Close in Edit Bet Pop up window", "Fail");
			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

	// TC-23(Synapse_MB) PD69988//
	// To check contents of "Cashout" pop up window inside confirm cashout
	public boolean MyBetCashoutSynapse(Mobile_HTML_Report report) throws Exception {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			String searchText = "My Bets";
			String xpath = "//*[contains(normalize-space(text()), '" + searchText + "')]";
			webdriver.findElement(By.xpath(xpath)).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBCashout"))).isDisplayed());
			System.out.println("MBCashout is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBCashout"))).click();
			Thread.sleep(5000);
			report.detailsAppend("TC23-Synapse_MyBets", "User Should be able to Click Cashout button ",
					"User is able to Click Cashout button", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC23-Synapse_MyBets", "User Should be able to Click Cashout button ",
					"User is able to Click Cashout button", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-24(Synapse_MB) PD69988//
	// To check functionality of "Confirm button" on "Cashout" pop up window inside
	// confirm cashout
	public boolean MyBetCashoutConfirmSynapse(Mobile_HTML_Report report) throws Exception {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			String searchText = "My Bets";
			String xpath = "//*[contains(normalize-space(text()), '" + searchText + "')]";
			webdriver.findElement(By.xpath(xpath)).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBCashout"))).isDisplayed());
			System.out.println("MBCashout is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBCashout"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBCashoutDialog"))).isDisplayed());
			System.out.println("MBCashoutDialog is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBCashoutDialog")));
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBCashoutContinue"))).isDisplayed());
			System.out.println("MBCashoutContinue is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBCashoutContinue"))).click();
			Thread.sleep(5000);
			report.detailsAppend("TC24-Synapse_MyBets",
					"User Should be able to click Continue button in Confirm Cashout and Able to see Success pop up window ",
					"User is able to click Continue button in Confirm Cashout and Able to see Success pop up window",
					"Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC24-Synapse_MyBets",
					"User Should be able to click Continue button in Confirm Cashout and Able to see Success pop up window ",
					"User is able to click Continue button in Confirm Cashout and Able to see Success pop up window",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-25(Synapse_MB) PD69988//
	// To check success pop up window contents inside confirm cashout for cashout
	// 100
	public boolean MyBetCashoutContinueSynapse(Mobile_HTML_Report report) throws Exception {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			String searchText = "My Bets";
			String xpath = "//*[contains(normalize-space(text()), '" + searchText + "')]";
			webdriver.findElement(By.xpath(xpath)).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBCashout"))).isDisplayed());
			System.out.println("MBCashout is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBCashout"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBCashoutDialog"))).isDisplayed());
			System.out.println("MBCashoutDialog is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBCashoutDialog")));
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBCashoutContinue"))).isDisplayed());
			System.out.println("MBCashoutContinue is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBCashoutContinue"))).click();
			Thread.sleep(5000);
			report.detailsAppend("TC25-Synapse_MyBets", "User Should be able to see Success pop up window ",
					"User is able to see Success pop up window", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC25-Synapse_MyBets", "User Should be able to see Success pop up window ",
					"User is able to see Success pop up window", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-26(Synapse_MB) PD69988//
	// To check content of 'Auto Cash out" pop up window inside open bets
	public boolean MyBetAutoCashoutSynapse(Mobile_HTML_Report report) throws Exception {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			String searchText = "My Bets";
			String xpath = "//*[contains(normalize-space(text()), '" + searchText + "')]";
			webdriver.findElement(By.xpath(xpath)).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBAuto"))).isDisplayed());
			System.out.println("MBAuto is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBAuto"))).click();
			Thread.sleep(5000);

			report.detailsAppend("TC26-Synapse_MyBets", "User Should be able to see Auto Cashout pop up window ",
					"User is able to see Auto Cashout pop up window", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC26-Synapse_MyBets", "User Should be able to see Auto Cashout pop up window ",
					"User is able to see Auto Cashout pop up window", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		GHMarketRemove();
		return true;
	}

	// TC-27(Synapse_MB) PD69988//
	// To check cashout functionality when potential return is low
	public boolean MyBetCashoutLowSynapse(Mobile_HTML_Report report) throws Exception {
		try {
			try {
				String searchText = "1.";
				String xpath = "//*[contains(normalize-space(text()), '" + searchText + "')]";
				webdriver.findElement(By.xpath(xpath)).click();
			} catch (Exception e) {
				String searchText2 = "1.2";
				String xpath2 = "//*[contains(normalize-space(text()), '" + searchText2 + "')]";
				webdriver.findElement(By.xpath(xpath2)).click();
			}
			String searchText1 = "Bet Now";
			String xpath2 = "//*[contains(normalize-space(text()), '" + searchText1 + "')]";
			webdriver.findElement(By.xpath(xpath2)).click();
			webdriver.navigate().refresh();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			String searchText2 = "My Bets";
			String xpath1 = "//*[contains(normalize-space(text()), '" + searchText2 + "')]";
			webdriver.findElement(By.xpath(xpath1)).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBAuto"))).isDisplayed());
			System.out.println("MBAuto is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBAuto"))).click();
			Thread.sleep(5000);

			report.detailsAppend("TC27-Synapse_MyBets",
					"User Should be able to see Auto Cashout pop up window with warning Potential Return is Low ",
					"User is able to see Auto Cashout pop up window with warning Potential Return is Low", "Pass");
			webdriver.navigate().refresh();

			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC27-Synapse_MyBets",
					"User Should be able to see Auto Cashout pop up window with warning Potential Return is Low ",
					"User is able to see Auto Cashout pop up window with warning Potential Return is Low", "Fail");
			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

	// TC-28(Synapse_MB) PD69988//
	// To check functionality of slider in Auto Cash outslider.
	public boolean MyBetCashoutSliderSynapse(Mobile_HTML_Report report) throws Exception {
		try {
			GHMarket();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			String searchText2 = "My Bets";
			String xpath1 = "//*[contains(normalize-space(text()), '" + searchText2 + "')]";
			webdriver.findElement(By.xpath(xpath1)).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBAuto"))).isDisplayed());
			System.out.println("MBAuto is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBAuto"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("MBAutoSlider")));
			Actions action = new Actions(webdriver);
			action.dragAndDropBy(odds, -300, 0).build().perform();
			Thread.sleep(2000);
			report.detailsAppend("TC28-Synapse_MyBets",
					"User Should be able to see Auto Cashout pop up window with Slider Functionality",
					"User is able to see Auto Cashout pop up window with Slider Functionality", "Pass");
			webdriver.navigate().refresh();

			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC28-Synapse_MyBets",
					"User Should be able to see Auto Cashout pop up window with Slider Functionality",
					"User is able to see Auto Cashout pop up window with Slider Functionality", "Fail");
			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

	// TC-29(Synapse_MB) PD69988//
	// To check "Set" button functionality on Auto Cashout inside open bets.
	public boolean MyBetAutoCashoutSetSynapse(Mobile_HTML_Report report) throws Exception {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			String searchText2 = "My Bets";
			String xpath1 = "//*[contains(normalize-space(text()), '" + searchText2 + "')]";
			webdriver.findElement(By.xpath(xpath1)).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBAuto"))).isDisplayed());
			System.out.println("MBAuto is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBAuto"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("MBAutoSlider")));
			Actions action = new Actions(webdriver);
			action.dragAndDropBy(odds, -300, 0).build().perform();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBAutoSet"))).isDisplayed());
			System.out.println("MBAutoSet is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBAutoSet"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC29-Synapse_MyBets",
					"User Should be able to see Auto Cashout pop up window and Click Set Button ",
					"User is able to see Auto Cashout pop up window and Click Set Button", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC29-Synapse_MyBets",
					"User Should be able to see Auto Cashout pop up window and Click Set Button",
					"User is able to see Auto Cashout pop up window and Click Set Button", "Pass");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-30(Synapse_MB) PD69988//
	// To check the functionality of the "Remove" button in Auto Cashout section
	public boolean MyBetAutoCashoutRemoveSynapse(Mobile_HTML_Report report) throws Exception {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			String searchText2 = "My Bets";
			String xpath1 = "//*[contains(normalize-space(text()), '" + searchText2 + "')]";
			webdriver.findElement(By.xpath(xpath1)).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBAuto"))).isDisplayed());
			System.out.println("MBAuto is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBAuto"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBAutoRemove"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC30-Synapse_MyBets",
					"User Should be able to see Auto Cashout pop up window and Click Remove Button ",
					"User is able to see Auto Cashout pop up window and Click Remove Button", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC30-Synapse_MyBets",
					"User Should be able to see Auto Cashout pop up window and Click Remove Button",
					"User is able to see Auto Cashout pop up window and Click Remove Button", "Pass");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-31(Synapse_MB) PD69988//
	// To check navigation from Open Bets and Settled Bets
	public boolean MyBetNavigationSynapse(Mobile_HTML_Report report) throws Exception {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			String searchText2 = "My Bets";
			String xpath1 = "//*[contains(normalize-space(text()), '" + searchText2 + "')]";
			webdriver.findElement(By.xpath(xpath1)).click();
			Thread.sleep(2000);
			String searchText3 = "Settled Bets";
			String xpath3 = "//*[contains(normalize-space(text()), '" + searchText3 + "')]";
			webdriver.findElement(By.xpath(xpath3)).click();
			Thread.sleep(2000);
			report.detailsAppend("TC31[1]-Synapse_MyBets", "User Should be able to navigate to Settled Bets",
					"User is able to navigate to Settled Bets", "Pass");
			String searchText4 = "Open Bets";
			String xpath4 = "//*[contains(normalize-space(text()), '" + searchText4 + "')]";
			webdriver.findElement(By.xpath(xpath4)).click();
			Thread.sleep(2000);
			report.detailsAppend("TC31[2]-Synapse_MyBets", "User Should be able to navigate to Open Bets",
					"User is able to navigate to Open Bets", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC31-Synapse_MyBets", "User Should be able to navigate to settled bets and Open Bets",
					"User is able to navigate to settled bets and Open Bets", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-32(Synapse_MB) PD69988//
	// To check functionality of close button and close icon on confirm cashout pop
	// up window
	public boolean MyBetCloseCashoutSynapse(Mobile_HTML_Report report) throws Exception {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			String searchText2 = "My Bets";
			String xpath1 = "//*[contains(normalize-space(text()), '" + searchText2 + "')]";
			webdriver.findElement(By.xpath(xpath1)).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBCashout"))).isDisplayed());
			System.out.println("MBCashout is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBCashout"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBClose"))).isDisplayed());
			System.out.println("MBClose is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBClose"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC32-Synapse_MyBets", "User Should be able to close cashout Pop up Window ",
					"User is able to close cashout Pop up Window ", "Pass");

			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC32-Synapse_MyBets",
					"User Should be able to navigate to close cashout Pop up Window ",
					"User is able to navigate to close cashout Pop up Window ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		GHMarketRemove();
		return true;
	}

	// TC-33(Synapse_MB) PD69988//
	// To check on clicking the partial button tool tip is showing
	public boolean MyBetPartialSynapse(Mobile_HTML_Report report) throws Exception {
		try {

			GHMarket();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			String searchText2 = "My Bets";
			String xpath1 = "//*[contains(normalize-space(text()), '" + searchText2 + "')]";
			webdriver.findElement(By.xpath(xpath1)).click();
			Thread.sleep(2000);
			String searchText3 = "Partial";
			String xpath3 = "//*[contains(normalize-space(text()), '" + searchText3 + "')]";
			webdriver.findElement(By.xpath(xpath3)).click();
			Thread.sleep(1000);
			report.detailsAppend("TC33-Synapse_MyBets", "User Should be able to see ToolTip for Partial Button",
					"User is able to see ToolTip for Partial Button", "Pass");

			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC33-Synapse_MyBets", "User Should be able to see ToolTip for Partial Button",
					"User is able to see ToolTip for Partial Button ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		GHMarketRemove();
		return true;
	}

	// TC-34(Synapse_MB) PD69988//
	// To check after partial cashout done then "Partial" button get enabled
	public boolean MyBetPartialEnableSynapse(Mobile_HTML_Report report) throws Exception {
		try {
			GHMarket();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			String searchText2 = "My Bets";
			String xpath1 = "//*[contains(normalize-space(text()), '" + searchText2 + "')]";
			webdriver.findElement(By.xpath(xpath1)).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBCashout"))).isDisplayed());
			System.out.println("MBCashout is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBCashout"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("MBAutoSlider")));
			Actions action = new Actions(webdriver);
			action.dragAndDropBy(odds, -300, 0).build().perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBCashoutContinue"))).click();
			Thread.sleep(5000);
			webdriver.findElement(By.xpath(xpathMap.get("MBSuccessDialog")));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBSuccessClose"))).click();
			Thread.sleep(2000);
			String searchText3 = "Partial";
			String xpath3 = "//*[contains(normalize-space(text()), '" + searchText3 + "')]";
			webdriver.findElement(By.xpath(xpath3)).click();
			Thread.sleep(1000);
			report.detailsAppend("TC34-Synapse_MyBets", "User Should be able to see Partial Cashout Pop up window",
					"User is able to see see Partial Cashout Pop up window", "Pass");

			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC34-Synapse_MyBets", "User Should be able to see Partial Cashout Pop up window",
					"User is able to see Partial Cashout Pop up window ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		GHMarketRemove();
		return true;
	}

	// TC-35(Synapse_MB) PD69988//
	// To check functionality of partial cashout by partially setting value
	public boolean MyBetPartialEnabledSynapse(Mobile_HTML_Report report) throws Exception {
		try {
			GHMarket();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			String searchText2 = "My Bets";
			String xpath1 = "//*[contains(normalize-space(text()), '" + searchText2 + "')]";
			webdriver.findElement(By.xpath(xpath1)).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBCashout"))).isDisplayed());
			System.out.println("MBCashout is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBCashout"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("MBAutoSlider")));
			Actions action = new Actions(webdriver);
			action.dragAndDropBy(odds, -170, 0).build().perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBCashoutContinue"))).click();
			Thread.sleep(5000);
			webdriver.findElement(By.xpath(xpathMap.get("MBSuccessDialog")));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBSuccessClose"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC35-Synapse_MyBets", "User Should be able to see Partial Cashout Enabled",
					"User is able to see see Partial Cashout Enabled", "Pass");

			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC35-Synapse_MyBets", "User Should be able to see Partial Cashout Enabled",
					"User is able to see Partial Cashout Enabled ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		GHMarketRemove();
		return true;
	}

	// TC-36(Synapse_MB) PD69988//
	// To check the Cashout offer amount after partial cashout is successfully done
	public boolean MyBetPartialAmountSynapse(Mobile_HTML_Report report) throws Exception {
		try {
			GHMarket();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			String searchText2 = "My Bets";
			String xpath1 = "//*[contains(normalize-space(text()), '" + searchText2 + "')]";
			webdriver.findElement(By.xpath(xpath1)).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBCashout"))).isDisplayed());
			System.out.println("MBCashout is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBCashout"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("MBAutoSlider")));
			Actions action = new Actions(webdriver);
			action.dragAndDropBy(odds, -175, 0).build().perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBCashoutContinue"))).click();
			Thread.sleep(5000);
			webdriver.findElement(By.xpath(xpathMap.get("MBSuccessDialog")));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBSuccessClose"))).click();
			Thread.sleep(2000);
			String searchText3 = "Partial";
			String xpath3 = "//*[contains(normalize-space(text()), '" + searchText3 + "')]";
			webdriver.findElement(By.xpath(xpath3)).click();
			Thread.sleep(1000);
			report.detailsAppend("TC36-Synapse_MyBets", "User Should be able to see Partial Cashout Amount",
					"User is able to see see Partial Cashout Amount", "Pass");

			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC36-Synapse_MyBets", "User Should be able to see Partial Cashout Amount",
					"User is able to see Partial Cashout Amount ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-37(Synapse_MB) PD69988//
	// To check "New potential return amount" calculation
	public boolean MyBetPartialPotentialReturnSynapse(Mobile_HTML_Report report) throws Exception {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			String searchText2 = "My Bets";
			String xpath1 = "//*[contains(normalize-space(text()), '" + searchText2 + "')]";
			webdriver.findElement(By.xpath(xpath1)).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBCashout"))).isDisplayed());
			System.out.println("MBCashout is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBCashout"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("MBAutoSlider")));
			Actions action = new Actions(webdriver);
			action.dragAndDropBy(odds, -175, 0).build().perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBCashoutContinue"))).click();
			Thread.sleep(5000);
			webdriver.findElement(By.xpath(xpathMap.get("MBSuccessDialog")));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBSuccessClose"))).click();
			Thread.sleep(2000);
			String searchText3 = "Partial";
			String xpath3 = "//*[contains(normalize-space(text()), '" + searchText3 + "')]";
			webdriver.findElement(By.xpath(xpath3)).click();
			Thread.sleep(2000);
			String searchText4 = "Total Partial Cashout Amount";
			String xpath4 = "//*[contains(normalize-space(text()), '" + searchText4 + "')]";
			webdriver.findElement(By.xpath(xpath4)).click();
			Thread.sleep(2000);
			report.detailsAppend("TC37-Synapse_MyBets", "User Should be able to see Total Partial Cashout Amount",
					"User is able to see see Total Partial Cashout Amount", "Pass");

			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC37-Synapse_MyBets", "User Should be able to see Total Partial Cashout Amount",
					"User is able to see Total Partial Cashout Amount ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-38(Synapse_MB) PD69988//
	// To check the Cashout offer amount after partial cashout is successfully done
	public boolean MyBetPartialRightIconSynapse(Mobile_HTML_Report report) throws Exception {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			String searchText2 = "My Bets";
			String xpath1 = "//*[contains(normalize-space(text()), '" + searchText2 + "')]";
			webdriver.findElement(By.xpath(xpath1)).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MBCashout"))).isDisplayed());
			System.out.println("MBCashout is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBCashout"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("MBAutoSlider")));
			Actions action = new Actions(webdriver);
			action.dragAndDropBy(odds, -175, 0).build().perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBCashoutContinue"))).click();
			Thread.sleep(5000);
			webdriver.findElement(By.xpath(xpathMap.get("MBSuccessDialog")));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MBSuccessClose"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC38-Synapse_MyBets", "User Should be able to see Partial Button with Right Icon",
					"User is able to see see Partial Button with Right Icon", "Pass");

			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC38-Synapse_MyBets", "User Should be able to see Partial Button with Right Icon",
					"User is able to see Partial Button with Right Icon", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	////// PRATIK MY BET////////

	public void HamburgerMenu() throws InterruptedException {

		webdriver.findElement(By.xpath(xpathMap.get("HamburgerMenuMyBet"))).click();
		Thread.sleep(4000);
		Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginButtonMyBet"))).isDisplayed());
		System.out.print("Sport Button is Clicked");

		webdriver.findElement(By.xpath(xpathMap.get("LoginButtonMyBet"))).click();
		Thread.sleep(4000);
		Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MobileNumberMyBet"))).isDisplayed());
		System.out.print("Soccer Button is Clicked");

		webdriver.findElement(By.xpath(xpathMap.get("MobileNumberMyBet"))).sendKeys(xpathMap.get("PhoneNumberMyBet"));
		Thread.sleep(2000);
		System.out.print("MobileNumber is Entered");

		webdriver.findElement(By.xpath(xpathMap.get("PasswordFieldMyBet"))).sendKeys(xpathMap.get("PasswordMyBet"));
		System.out.print("Password is Entered");
		Thread.sleep(2000);

		Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginMyBet"))).isDisplayed());
		System.out.print("SynapseLogin is Present");
		webdriver.findElement(By.xpath(xpathMap.get("LoginMyBet"))).click();
		Thread.sleep(5000);

//												

	}

	// TC39(Synapse Betslip) PJ65867
	// To check the content of the "partial" Cashout pop-up window
	public boolean PartialCashOutPopUp(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BetNowMyBet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetOpt"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MyBetOpt"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("OpenBet2ndDD"))).isDisplayed());
			System.out.print("My Bet is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("OpenBet2ndDD"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CashoutMyBet"))).isDisplayed());
			System.out.print("DD is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CashoutMyBet"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CashOutInMyBet"))).click();
			Thread.sleep(2000);

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("SliderInCashout")));
			Actions action = new Actions(webdriver);
			action.dragAndDropBy(odds, -300, 0).build().perform();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("ContinueInCashout"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseBInMyBet"))).isDisplayed());
			System.out.print("DD is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseBInMyBet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PartialButton"))).isDisplayed());
			System.out.print("DD is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("PartialButton"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInPartialCashOut"))).isDisplayed());
			System.out.print("Partial Cashout is clicked");

			report.detailsAppend("TC39-SynapseMyBet", "To check the content of the \"partial\" Cashout pop-up window ",
					"Content of the \"partial\" Cashout pop-up window ", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInPartialCashOut"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.cssSelector(xpathMap.get("LogoutinProfile31"))).isDisplayed());
			System.out.print("Close is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC39-SynapseMyBet", "To check the content of the \"partial\" Cashout pop-up window ",
					"Content of the \"partial\" Cashout pop-up window ", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC40(Synapse Betslip) PJ65867
	// To check the Close button for "partial" Cashout pop-up window
	public boolean PartialCashOutPopUpCloseButton(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BetNowMyBet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetOpt"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MyBetOpt"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("OpenBet2ndDD"))).isDisplayed());
			System.out.print("My Bet is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("OpenBet2ndDD"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CashoutMyBet"))).isDisplayed());
			System.out.print("DD is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CashoutMyBet"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CashOutInMyBet"))).click();
			Thread.sleep(2000);

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("SliderInCashout")));
			Actions action = new Actions(webdriver);
			action.dragAndDropBy(odds, -300, 0).build().perform();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("ContinueInCashout"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseBInMyBet"))).isDisplayed());
			System.out.print("DD is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseBInMyBet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PartialButton"))).isDisplayed());
			System.out.print("DD is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("PartialButton"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInPartialCashOut"))).isDisplayed());
			System.out.print("Partial Cashout is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInPartialCashOut"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.cssSelector(xpathMap.get("LogoutinProfile31"))).isDisplayed());
			System.out.print("Close is clicked");

			report.detailsAppend("TC40-SynapseMyBet",
					"To check the Close button for \"partial\" Cashout pop-up window ",
					"Close button for \"partial\" Cashout pop-up window ", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC40-SynapseMyBet",
					"To check the Close button for \"partial\" Cashout pop-up window ",
					"Close button for \"partial\" Cashout pop-up window ", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC41(Synapse Betslip) PJ65867
	// To check pagination is working inside settled bets
	public boolean Pagination(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("HamburgerMenuMyBet"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInColoumn"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MyBetInColoumn"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("2ndPaging"))).isDisplayed());
			System.out.print("Settled is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("2ndPaging"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).isDisplayed());
			System.out.print("Pageing is clicked");

			report.detailsAppend("TC41-SynapseMyBet", "To check pagination is working inside settled bets",
					"Pagination is working inside settled bets", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC41-SynapseMyBet", "To check pagination is working inside settled bets",
					"Pagination is working inside settled bets", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC42(Synapse Betslip) PJ65867
	// To check functionality of Settled Bets section
	public boolean SettledBet(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("HamburgerMenuMyBet"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInColoumn"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MyBetInColoumn"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("2ndPaging"))).isDisplayed());
			System.out.print("Settled is clicked");

			report.detailsAppend("TC42-SynapseMyBet", "To check functionality of Settled Bets section",
					"Functionality of Settled Bets section", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC42-SynapseMyBet", "To check functionality of Settled Bets section",
					"Functionality of Settled Bets section", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC43(Synapse Betslip) PJ65867
	// To check options and functionality of sport dropdown in open bets
	public boolean SportDDFunctionality(Mobile_HTML_Report report) {

		try {

			Thread.sleep(4000);
			webdriver.findElement(By.xpath(xpathMap.get("HamburgerMenuMyBet"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInColoumn"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MyBetInColoumn"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("2ndPaging"))).isDisplayed());
			System.out.print("Settled is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SettledBet1stDD"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC43-SynapseMyBet",
					"To check options and functionality of sport dropdown in open bets",
					"Options and functionality of sport dropdown in open bets", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC43-SynapseMyBet",
					"To check options and functionality of sport dropdown in open bets",
					"Options and functionality of sport dropdown in open bets", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC44(Synapse Betslip) PJ65867
	// To check the result(Data) options in "All Drop-down"
	public boolean AllDDFunctionality(Mobile_HTML_Report report) {

		try {

			Thread.sleep(4000);
			webdriver.findElement(By.xpath(xpathMap.get("HamburgerMenuMyBet"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInColoumn"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MyBetInColoumn"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("2ndPaging"))).isDisplayed());
			System.out.print("Settled is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("OpenBet2ndDD"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC44-SynapseMyBet", "To check the result(Data) options in \"All Drop-down\"",
					"Result(Data) options in \"All Drop-down\"", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC44-SynapseMyBet", "To check the result(Data) options in \"All Drop-down\"",
					"Result(Data) options in \"All Drop-down\"", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC45(Synapse Betslip) PJ65867
	// To check search text box functionality by entring the bet id
	public boolean SearchBox(Mobile_HTML_Report report) {

		try {

			Thread.sleep(4000);
			webdriver.findElement(By.xpath(xpathMap.get("HamburgerMenuMyBet"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInColoumn"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MyBetInColoumn"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("2ndPaging"))).isDisplayed());
			System.out.print("Settled is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SearchBetText"))).sendKeys(xpathMap.get("SearchBoxBet"));
			Thread.sleep(2000);
			System.out.print("BetID is Entered");
			String Text1 = "Search";
			String xpath1 = "//*[contains(normalize-space(text()), '" + Text1 + "')]";
			webdriver.findElement(By.xpath(xpath1)).click();
			Thread.sleep(4000);

			report.detailsAppend("TC45-SynapseMyBet", "To check search text box functionality by entring the bet id ",
					"Search text box functionality by entring the bet id ", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC45-SynapseMyBet", "To check search text box functionality by entring the bet id ",
					"Search text box functionality by entring the bet id ", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC46(Synapse Betslip) PJ65867
	// To check refresh button functionality by clicking on it
	public boolean RefreshButton(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("HamburgerMenuMyBet"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInColoumn"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MyBetInColoumn"))).click();
			Thread.sleep(6000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("2ndPaging"))).isDisplayed());
			System.out.print("Settled is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SearchBetText"))).sendKeys(xpathMap.get("SearchBoxBet"));
			Thread.sleep(2000);
			System.out.print("BetID is Entered");
			String Text1 = "Search";
			String xpath1 = "//*[contains(normalize-space(text()), '" + Text1 + "')]";
			webdriver.findElement(By.xpath(xpath1)).click();
			Thread.sleep(4000);

			webdriver.findElement(By.cssSelector(xpathMap.get("RefreshButtonMyBet"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC46-SynapseMyBet", " To check refresh button functionality  by clicking on it",
					" Refresh button functionality  by clicking on it", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC46-SynapseMyBet", " To check refresh button functionality  by clicking on it",
					" Refresh button functionality  by clicking on it", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC47(Synapse Betslip) PJ65867
	// To check Search button functionality
	public boolean SearchButton(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("HamburgerMenuMyBet"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInColoumn"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MyBetInColoumn"))).click();
			Thread.sleep(6000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("2ndPaging"))).isDisplayed());
			System.out.print("Settled is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SearchBetText"))).sendKeys(xpathMap.get("SearchBoxBet"));
			Thread.sleep(2000);
			System.out.print("BetID is Entered");
			String Text1 = "Search";
			String xpath1 = "//*[contains(normalize-space(text()), '" + Text1 + "')]";
			webdriver.findElement(By.xpath(xpath1)).click();
			Thread.sleep(4000);

			webdriver.findElement(By.xpath(xpathMap.get("SearchBoxMyBet"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC47-SynapseMyBet", "To check Search button functionality",
					"Search button functionality is fine", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC47-SynapseMyBet", "To check Search button functionality",
					"Search button functionality is fine", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC48(Synapse Betslip) PJ65867
	// To check bet information inside open bets pop up window
	public boolean OpenBetContent(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BetNowMyBet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetOpt"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MyBetOpt"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SettledBet1stDD"))).isDisplayed());
			System.out.print("My Bet is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SettledBet1stDD"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("1stOptInFirstDD"))).isDisplayed());
			System.out.print("DD is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("1stOptInFirstDD"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC48-SynapseMyBet", "To check bet information inside open bets pop up window",
					"Bet information inside open bets pop up window", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC48-SynapseMyBet", "To check bet information inside open bets pop up window",
					"Bet information inside open bets pop up window", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC49(Synapse Betslip) PJ65867
	// To check Verify the functionality of "Hide Losses" toggle (OFF) button
	public boolean ToggleHideLoss(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("HamburgerMenuMyBet"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInColoumn"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MyBetInColoumn"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("2ndPaging"))).isDisplayed());
			System.out.print("Settled is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("ToggleHideLoss"))).click();
			Thread.sleep(4000);

			report.detailsAppend("TC49-SynapseMyBet",
					"To check Verify the functionality of \"Hide Losses\"  toggle (OFF) button",
					"Functionality of \"Hide Losses\"  toggle (OFF) button", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC49-SynapseMyBet",
					"To check Verify the functionality of \"Hide Losses\"  toggle (OFF) button",
					"Functionality of \"Hide Losses\"  toggle (OFF) button", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC50(Synapse Betslip) PJ65867
	// To check bet information inside Settled bets pop up window
	public boolean SettledBetContent(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("HamburgerMenuMyBet"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInColoumn"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MyBetInColoumn"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("2ndPaging"))).isDisplayed());
			System.out.print("Settled is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SettledBet1stDD"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("1stOptInFirstDD"))).isDisplayed());
			System.out.print("DD is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("1stOptInFirstDD"))).click();
			Thread.sleep(4000);

			report.detailsAppend("TC50-SynapseMyBet", "To check bet information inside Settled  bets pop  up window",
					"Bet information inside Settled  bets pop  up window", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC50-SynapseMyBet", "To check bet information inside Settled  bets pop  up window",
					"Bet information inside Settled  bets pop  up window", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC51(Synapse Betslip) PJ65867
	// To check Detail view button functionality
	public boolean DetailView(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("HamburgerMenuMyBet"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInColoumn"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MyBetInColoumn"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("2ndPaging"))).isDisplayed());
			System.out.print("Settled is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("DetailViewMyBet"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TotalOddsInMyBet"))).isDisplayed());
			System.out.print("Detail View is clicked");

			report.detailsAppend("TC51-SynapseMyBet", "To check Detail view button functionality",
					"Detail view button functionality", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC51-SynapseMyBet", "To check Detail view button functionality",
					"Detail view button functionality", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC52(Synapse Betslip) PJ65867
	// To check Detail view button functionality
	public boolean BackButtonFunctionality(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("HamburgerMenuMyBet"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInColoumn"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MyBetInColoumn"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("2ndPaging"))).isDisplayed());
			System.out.print("Settled is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("DetailViewMyBet"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TotalOddsInMyBet"))).isDisplayed());
			System.out.print("Detail View is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BAckButtonInsideViewMybet"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).isDisplayed());
			System.out.print("Detail View is clicked");

			report.detailsAppend("TC52-SynapseMyBet",
					"To check back button functionality on details view pop up window",
					"Back button functionality on details view pop up window", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC52-SynapseMyBet",
					"To check back button functionality on details view pop up window",
					"Back button functionality on details view pop up window", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC53(Synapse Betslip) PJ65867
	// To check pagination is working inside settled bets
	public boolean Paginations(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("HamburgerMenuMyBet"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInColoumn"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MyBetInColoumn"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("2ndPaging"))).isDisplayed());
			System.out.print("Settled is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("2ndPaging"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).isDisplayed());
			System.out.print("Pageing is clicked");

			report.detailsAppend("TC53-SynapseMyBet", "To check pagination is working inside settled bets",
					"Pagination is working inside settled bets", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC53-SynapseMyBet", "To check pagination is working inside settled bets",
					"Pagination is working inside settled bets", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC54(Synapse Betslip) PJ65867
	// To check Bet Now to settled bet functionality for Bet
	public boolean RebetButton(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("OddForBetslipSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MultiBetSlipSynapse"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BetNowMyBet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetOpt"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MyBetOpt"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("OpenBet2ndDD"))).isDisplayed());
			System.out.print("My Bet is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CashOutInMyBet"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("ContinueInCashout"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseBInMyBet"))).isDisplayed());
			System.out.print("DD is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseBInMyBet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).isDisplayed());
			System.out.print("DD is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("2ndPaging"))).isDisplayed());
			System.out.print("Settled is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("RebetButton"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC54-SynapseMyBet", "To check Bet Now to settled bet functionality for Bet",
					"Bet Now to settled bet functionality for Bet", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC54-SynapseMyBet", "To check Bet Now to settled bet functionality for Bet",
					"Bet Now to settled bet functionality for Bet", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC55(Synapse Betslip) PJ65867
	// To check when the user click on Rebet button it should navigate to Betslip
	// page
	public boolean RebetButtonNavigstion(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("BetNowMyBet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetOpt"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MyBetOpt"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("OpenBet2ndDD"))).isDisplayed());
			System.out.print("My Bet is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("OpenBet2ndDD"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CashoutMyBet"))).isDisplayed());
			System.out.print("DD is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CashoutMyBet"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CashOutInMyBet"))).click();
			Thread.sleep(2000);

//															WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("SliderInCashout")));
//															Actions action = new Actions(webdriver);
//															action.dragAndDropBy(odds, -300, 0).build().perform();
//															Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("ContinueInCashout"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseBInMyBet"))).isDisplayed());
			System.out.print("DD is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseBInMyBet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).isDisplayed());
			System.out.print("DD is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("2ndPaging"))).isDisplayed());
			System.out.print("Settled is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("RebetButton"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC55-SynapseMyBet",
					"To check  when the user click on Rebet button it should navigate to Betslip page",
					"When the user click on Rebet button it should navigate to Betslip page", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC55-SynapseMyBet",
					"To check  when the user click on Rebet button it should navigate to Betslip page",
					"When the user click on Rebet button it should navigate to Betslip page", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC56(Synapse Betslip) PJ65867
	// To check functionality of close button of Account option pop up window
	public boolean AccountPopUpCloseButton(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("HamburgerMenuMyBet"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MyBetInColoumn"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MyBetInColoumn"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SettledBetMyBet"))).isDisplayed());
			System.out.print("Odd is clicked");

			webdriver.findElement(By.cssSelector(xpathMap.get("CloseButtonOfAccountPopup"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HamburgerMenuMyBet"))).isDisplayed());
			System.out.print("Close is clicked");

			report.detailsAppend("TC56-SynapseMyBet",
					"To check functionality of close button of Account option pop up window",
					"Functionality of close button of Account option pop up window", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC56-SynapseMyBet",
					"To check functionality of close button of Account option pop up window",
					"Functionality of close button of Account option pop up window", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	/////// TCES FOR BETWAY LOGIN SECTION FOR SYNAPSE//////////

	// TC-1(Login) PD69988//
	// Check if the "Login" Button is visible on the homepage.

	public boolean LoginButtonSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			report.detailsAppend("TC1-Login", "LoginButton Should be visible on homepage",
					"Login Button Visible on the homepage", "Pass");
			Thread.sleep(1000);
			System.out.println("Login Button Visible on the homepage\n");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC1-Login", "LoginButton Should be visible on homepage",
					"Login Button Visible on the homepage", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-2(Login) PD69988//
	// Verify that user should able to click on "Login" button
	public boolean LoginButtonInHomePage(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).isDisplayed());
			System.out.print("SynapseLogin Button Present");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).click();
			Thread.sleep(1000);
			report.detailsAppend("TC2-Login", "LoginButton Should be Clicked", "LoginButton Clicked", "Pass");
			Thread.sleep(1000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC2-Login", "LoginButton Should be Clicked", "LoginButton Not Clicked", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-3 (Login) PD69988//
	// Check if there is a visible "Login" button on the Hamburger Menu.//
	public boolean SynapseLoginInHamburgerMenu(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print("SynapseHamburger is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC-3 Login", "Login In HamburgerMenu Should be Visible",
					"Login in HamburgerMenu  is Visible", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseOnHamburgerMenu"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-3 Login", "Login in HamburgerMenu Should be Visible",
					"Login in HamburgerMenu  is Visible", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-4 (Login) PD69988//
	// Check if the Login Window is visible when the "Login" button is clicked.
	public boolean SynapseLoginInHamburger(Mobile_HTML_Report report) {

		try {
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).isDisplayed());
			System.out.print("LoginOnHamburger Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			System.out.print(" LoginButton Clicked ");
			report.detailsAppend("TC4-Login", "Login Form Should be Visible", "Login Form  is Visible", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(1000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC4-Login", "Login form Should be Visible", "Login form is Not Visible", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}// TC-5 (Login) PD69988//
		// Check if the required Login fields (e.g., mobile number, password) are
		// visible on the Login Window.

	public boolean SynapseLoginInSignup(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			System.out.print("SynapseSignup Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			System.out.print(" LoginButton Clicked ");
			report.detailsAppend("TC5-Login", "Login in Signup should be Visible", "Login in Signup is Visible",
					"Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC5-Login", "Login in Signup should be Visible", "Login in Signup is Visible",
					"Pass");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-6 (Login) PD69988//
	// Check if the required Login fields (e.g., mobile number, password) are
	// visible on the Login Window.
	public boolean SynapseLoginInSignupHamburger(Mobile_HTML_Report report) {
		try {
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).isDisplayed());
			System.out.print("LoginOnHamburger Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			System.out.print(" LoginButton Clicked ");
			report.detailsAppend("TC6-Login", "Login in Signup should be Visible", "Login in Signup is Visible",
					"Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC6-Login", "Login in Signup should be Visible", "Login in Signup is Visible",
					"Pass");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-7 (Login) PD69988//
	// To check if the system accepts a valid mobile number.
	public boolean AviatorLogin(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).isDisplayed());
			System.out.print("SynapseAviator is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			System.out.print("CloseInLogin is Present");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC7-Login", "Login Should be available in Aviator", "Login is available in Aviator",
					"Pass");
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC7-Login", "Login Should be available in Aviator", "Login is available in Aviator",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-8 (Login) PD69988//
	// To check user is able see login button on signup popup window on aviator page
	public boolean AviatorSignupLogin(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).isDisplayed());
			System.out.print("SynapseAviator is Present");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			System.out.print("SynapseSignup Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			System.out.print(" LoginButton Clicked ");
			report.detailsAppend("TC8-Login", "Login Should be available in Aviator Signup",
					"Login Should be available in Aviator Signup", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC8-Login", "Login Should be available in Aviator Signup",
					"Login Should be available in Aviator Signup", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-9 (Login) PD69988//
	// To check if the system Login with valid mobile number.
	public boolean SynapseLogin(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.print("SynapseSports is Present");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber"))).sendKeys(xpathMap.get("SynapsePhno"));
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword"))).sendKeys(xpathMap.get("SynapsePwd"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).isDisplayed());
			System.out.print("SynapseLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC9-Login", "Strong Password Should be Valid", "Strong Password is Valid", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseTestaccounts"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLogout"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseProceed"))).click();
			Thread.sleep(2000);
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC-9 Login", "Strong Password Should be Valid", "Strong Password is Valid", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-10 (Login) PD69988//
	// To check if the system Login with valid mobile number from Hamburger Menu.
	public boolean SynapseLoginFromHamburger(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print("SynapseHamburger is Present");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).isDisplayed());
			System.out.print("LoginOnHamburger is Present");
			webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber2"))).sendKeys(xpathMap.get("SynapsePhno"));
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword2"))).sendKeys(xpathMap.get("SynapsePwd"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).isDisplayed());
			System.out.print("SynapseLoginInLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC10-Login", "User should be able to Login from Hamburger",
					"User is able to Login from Hamburger", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseTestaccounts"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLogout"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseProceed"))).click();
			Thread.sleep(2000);
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC10-Login", "User should be able to Login from Hamburger",
					"User is able to Login from Hamburger", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-11 (Login) PD69988//
	// To check user is able to login from login button available on signup popup
	// window
	public boolean SynapseLoginFromSignup(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			System.out.print("SynapseSignup Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).isDisplayed());
			System.out.print(" LoginButton Clicked ");
			webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).click();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber2"))).sendKeys(xpathMap.get("SynapsePhno"));
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword2"))).sendKeys(xpathMap.get("SynapsePwd"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).isDisplayed());
			System.out.print("SynapseLoginInLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC11-Login", "User is able to Login From Signup", "User is able to Login From Signup",
					"Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseTestaccounts"))).click();
			Thread.sleep(4000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLogout"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseProceed"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC11-Login", "User is able to Login From Signup", "User is able to Login From Signup",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-12 (Login) PD69988//
	// To check user is able to login from login button available on signup popup
	// window through hamburger menu
	public boolean SynapseLoginFromSignupHamburger(Mobile_HTML_Report report) {
		try {
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).isDisplayed());
			System.out.print("LoginOnHamburger Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(4000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).isDisplayed());
			System.out.print(" LoginButton Clicked ");
			webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).click();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber2"))).sendKeys(xpathMap.get("SynapsePhno"));
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword2"))).sendKeys(xpathMap.get("SynapsePwd"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).isDisplayed());
			System.out.print("SynapseLoginInLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC12-Login", "User is able to Login From Signup Hamburger",
					"User is able to Login From Signup Hamburger", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseTestaccounts"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLogout"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseProceed"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC12-Login", "User is able to Login From Signup Hamburger",
					"User is able to Login From Signup Hamburger", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-13 (Login) PD69988//
	// To check user is able see login from signup popup window from aviator page
	public boolean SynapseLoginFromAviator(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).isDisplayed());
			System.out.print("SynapseAviator Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber2"))).sendKeys(xpathMap.get("SynapsePhno"));
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword2"))).sendKeys(xpathMap.get("SynapsePwd"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).isDisplayed());
			System.out.print("SynapseLoginInLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC13-Login", "User is able to Login From Aviator",
					"User is able to Login From Aviator", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseTestaccounts"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLogout2"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseProceed"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC13-Login", "User is able to Login From Aviator",
					"User is able to Login From Aviator", "Pass");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-14 (Login) PD69988//
	// To check user is not able to login if mobile number field is empty
	public boolean SynapseLoginwithEmptyMobileNumber(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.print("SynapseSports is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber"))).sendKeys(" ");
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword"))).sendKeys(xpathMap.get("SynapsePwd"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).isDisplayed());
			System.out.print("SynapseLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC14-Login", "User should not able to login with Empty Number",
					"User not able to login with Empty Number", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC14-Login", "User should not able to login with Empty Number",
					"User not able to login with Empty Number", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-15 (Login) PD69988//
	// To check user is not able to login if mobile number field has less than
	// numeric 9 characters
	public boolean SynapseLoginwithLessMobileNumber(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.print("SynapseSports is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber"))).sendKeys("86734215");
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword"))).sendKeys(xpathMap.get("SynapsePwd"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).isDisplayed());
			System.out.print("SynapseLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC15-Login",
					"User should not able to login if mobile number field has less than 9 numeric characters",
					"User not able to login if mobile number field has less than 9 numeric characters", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC15-Login",
					"User should not able to login if mobile number field has less than 9 numeric characters",
					"User not able to login if mobile number field has less than 9 numeric characters", "Pass");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-16 (Login) PD69988//
	// To check user is not able to login if mobile number field has more than
	// numeric 9 characters
	public boolean SynapseLoginwithMoreMobileNumber(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.print("SynapseSports is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber"))).sendKeys("8673421590");
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword"))).sendKeys(xpathMap.get("SynapsePwd"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).isDisplayed());
			System.out.print("SynapseLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC16-Login",
					"User should not able to login if mobile number field has More than 9 numeric characters",
					"User not able to login if mobile number field has More than 9 numeric characters", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC16-Login",
					"User should not able to login if mobile number field has More than 9 numeric characters",
					"User not able to login if mobile number field has More than 9 numeric characters", "Pass");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-17 (Login) PD69988//
	// To check user is not able to login if mobile number field has alphanumeric
	// characters
	public boolean SynapseLoginwithAlphaNumeric(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.print("SynapseSports is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber"))).sendKeys(xpathMap.get("Poll"));
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword"))).sendKeys(xpathMap.get("SynapsePwd"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).isDisplayed());
			System.out.print("SynapseLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC17-Login",
					"User should not able to login if mobile number field has alphanumeric characters",
					"User not able to login if mobile number field has alphanumeric characters", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC17-Login",
					"User should not able to login if mobile number field has alphanumeric characters",
					"User not able to login if mobile number field has alphanumeric characters", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-18 (Login) PD69988//
	// To check user is not able to enter special character in mobile number field
	public boolean SynapseLoginwithCharacters(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.print("SynapseSports is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber"))).sendKeys("Poll");
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword"))).sendKeys(xpathMap.get("SynapsePwd"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).isDisplayed());
			System.out.print("SynapseLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC18-Login",
					"User should not able to login if mobile number field has special characters",
					"User not able to login if mobile number field has special characters", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC18-Login",
					"User should not able to login if mobile number field has special characters",
					"User not able to login if mobile number field has special characters", "Pass");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-19 (Login) PD69988//
	// To check user is not able to login if password field is empty
	public boolean SynapseLoginwithEmptyPassword(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.print("SynapseSports is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber"))).sendKeys(xpathMap.get("SynapsePhno"));
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword"))).sendKeys(" ");
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).isDisplayed());
			System.out.print("SynapseLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC19-Login", "User should not able to login if Password is Empty",
					"User not able to login if Password is Empty", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC19-Login", "User should not able to login if Password is Empty",
					"User not able to login if Password is Empty", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-20 (Login) PD69988//
	// To check user is not able to login if password field has less than 5
	// character
	public boolean SynapseLoginwithLessPassword(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.print("SynapseSports is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber"))).sendKeys(xpathMap.get("SynapsePhno"));
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword"))).sendKeys("we34");
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).isDisplayed());
			System.out.print("SynapseLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC20-Login",
					"User should not able to login if Password field has less than 5 characters",
					"User not able to login ifPassword field has less than 5 characters", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC20-Login",
					"User should not able to login if Password field has less than 5 characters",
					"User not able to login ifPassword field has less than 5 characters", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-21 (Login) PD69988//
	// To check user is not able to login if password field has more than 20
	// characters
	public boolean SynapseLoginwithMorePassword(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.print("SynapseSports is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber"))).sendKeys(xpathMap.get("SynapsePhno"));
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword")))
					.sendKeys("we34hjuiogrdrwfesgfrkjkhugsfjgjkdg");
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).isDisplayed());
			System.out.print("SynapseLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC21-Login",
					"User should not able to login if Password field has more than 20 characters",
					"User not able to login ifPassword field has more than 20 characters", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC21-Login",
					"User should not able to login if Password field has more than 20 characters",
					"User not able to login ifPassword field has more than 20 characters", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-22 (Login) PD69988//
	// To check user is not able to login when mobile number field is empty when
	// navigated from signup popup window from aviator page
	public boolean SynapseLoginFromAviatorLogin(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).isDisplayed());
			System.out.print("SynapseAviator is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			System.out.print("SynapseSignup Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber2"))).sendKeys(" ");
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword2"))).sendKeys(" ");
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).isDisplayed());
			System.out.print("SynapseLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC22-Login",
					"User should not able to login if mobile number field is empty when navigated from signup popup window from aviator page",
					"User not able to login if mobile number field is empty when navigated from signup popup window from aviator page",
					"Pass");
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC22-Login",
					"User should not able to login if mobile number field is empty when navigated from signup popup window from aviator page",
					"User not able to login if mobile number field is empty when navigated from signup popup window from aviator page",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-23 (Login) PD69988//
	// To check user is not able to login if mobile number field has less than
	// numeric 9 characters when navigated from signup popup window from aviator
	// page
	public boolean SynapseLoginFromAviatorLessMobileNumber(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).isDisplayed());
			System.out.print("SynapseAviator is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			System.out.print("SynapseSignup Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber2"))).sendKeys("89765432");
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword2"))).sendKeys("12345");
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).isDisplayed());
			System.out.print("SynapseLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC23-Login",
					"User should not able to login if mobile number field has less than 9 numeric characters when navigated from signup popup window from aviator page",
					"User not able to login if mobile number field has less than 9 numeric characters when navigated from signup popup window from aviator page",
					"Pass");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC23-Login",
					"User should not able to login if mobile number field has less than 9 numeric characters when navigated from signup popup window from aviator page",
					"User not able to login if mobile number field has less than 9 numeric characters when navigated from signup popup window from aviator page",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-24 (Login) PD69988//
	// To check user is not able to login if mobile number field has More than
	// numeric 9 characters when navigated from signup popup window from aviator
	// page
	public boolean SynapseLoginFromAviatorMoreMobileNumber(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).isDisplayed());
			System.out.print("SynapseAviator is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			System.out.print("SynapseSignup Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber2"))).sendKeys("8976543201");
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword2"))).sendKeys("12345");
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).isDisplayed());
			System.out.print("SynapseLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC24-Login",
					"User should not able to login if mobile number field has More than 9 numeric characters when navigated from signup popup window from aviator page",
					"User not able to login if mobile number field has More than 9 numeric characters when navigated from signup popup window from aviator page",
					"Pass");
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC24-Login",
					"User should not able to login if mobile number field has More than 9 numeric characters when navigated from signup popup window from aviator page",
					"User not able to login if mobile number field has More than 9 numeric characters when navigated from signup popup window from aviator page",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-25 (Login) PD69988//
	// To check user is not able to login if mobile number field has alphanumeric
	// characters from aviator page
	public boolean SynapseLoginFromAviatorAlphaNumeric(Mobile_HTML_Report report) {

		try {
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).isDisplayed());
			System.out.print("SynapseAviator is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			System.out.print("SynapseSignup Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber2"))).sendKeys("-+e8976543201");
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword2"))).sendKeys("12345");
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).isDisplayed());
			System.out.print("SynapseLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC25-Login",
					"User should not able to login if mobile number field has alphanumeric characters from  aviator page",
					"User not able to login if mobile number field has alphanumeric characters from  aviator page",
					"Pass");
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC25-Login",
					"User should not able to login if mobile number field has alphanumeric characters from  aviator page",
					"User not able to login if mobile number field has alphanumeric characters from  aviator page",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-26 (Login) PD69988//
	// To check user is not able to enter special character in mobile number field
	// when navigated from signup popup window from aviator page
	public boolean SynapseLoginFromAviatorSpecialCharacters(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).isDisplayed());
			System.out.print("SynapseAviator is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			System.out.print("SynapseSignup Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber2"))).sendKeys("-+e897654%&8");
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword2"))).sendKeys("12345");
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).isDisplayed());
			System.out.print("SynapseLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC26-Login",
					"User should not able to enter special character in mobile number field when navigated from signup popup window  from  aviator page",
					"User not able to enter special character in mobile number field when navigated from signup popup window  from  aviator page",
					"Pass");
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC26-Login",
					"User should not able to enter special character in mobile number field when navigated from signup popup window  from  aviator page",
					"User not able to enter special character in mobile number field when navigated from signup popup window  from  aviator page",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-27 (Login) PD69988//
	// To check user is not able to login if password field is empty when navigated
	// from signup popup window from aviator page
	public boolean SynapseLoginFromAviatorEmptyPassword(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).isDisplayed());
			System.out.print("SynapseAviator is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			System.out.print("SynapseSignup Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber2"))).sendKeys("845678999");
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword2"))).sendKeys(" ");
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).isDisplayed());
			System.out.print("SynapseLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC27-Login", "User should not able to login if password field is empty",
					"User not able to login if password field is empty", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC27-Login", "User should not able to login if password field is empty",
					"User not able to login if password field is empty", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-28 (Login) PD69988//
	// To check user is not able to login if password field has less than 5
	// character when navigated from signup popup window from aviator page
	public boolean SynapseLoginFromAviatorLessPassword(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).isDisplayed());
			System.out.print("SynapseAviator is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			System.out.print("SynapseSignup Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber2"))).sendKeys("845678999");
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword2"))).sendKeys("1234");
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).isDisplayed());
			System.out.print("SynapseLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC28-Login",
					"User should not able to login if password field has less than 5 character",
					"User not able to login if password field has less than 5 character", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC28-Login",
					"User should not able to login if password field has less than 5 character",
					"User not able to login if password field has less than 5 character", "Pass");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-29 (Login) PD69988//
	// To check user is not able to login if password field has more than 20
	// characters when navigated from signup popup window from aviator page
	public boolean SynapseLoginFromAviatorMorePassword(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).isDisplayed());
			System.out.print("SynapseAviator is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			System.out.print("SynapseSignup Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber2"))).sendKeys("845678999");
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword2"))).sendKeys("1234567890987654321234");
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).isDisplayed());
			System.out.print("SynapseLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC29-Login",
					"User should not able to login if password field has more than 20 characters",
					"User not able to login if password field has more than 20 characters", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC29-Login",
					"User should not able to login if password field has more than 20 characters",
					"User not able to login if password field has more than 20 characters", "Pass");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-58 (Login) PD69988//
	// To check user is able to see the "Login" window when clicked on "Heart icon"
	// button on game banner while on "Live casino" page
	public boolean SynapseLoginFromLiveCasinoHeartIcon(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLiveCasino"))).isDisplayed());
			System.out.print("SynapseLiveCasino is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLiveCasino"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			System.out.print("SynapseFavourite Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC58-Login",
					"User should able to see the Login popup window when clicked on Favourite button in Live Casino",
					"User able to see the Login popup window when clicked on Favourite button in Live Casino", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC58-Login",
					"User should able to see the Login popup window when clicked on Favourite button in Live Casino",
					"User able to see the Login popup window when clicked on Favourite button in Live Casino", "Pass");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-59 (Login) PD69988//
	// To check user is able to see the "Login" popup window from signup popup
	// window when clicked "Heart icon" button on game banner while on "Live casino"
	// page
	public boolean SynapseSignupLoginFromLiveCasinoHeartIcon(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLiveCasino"))).isDisplayed());
			System.out.print("SynapseLiveCasino is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLiveCasino"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			System.out.print("SynapseFavourite Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).isDisplayed());
			System.out.print("SignupInLogin Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC59-Login",
					"User should able to see the Login popup window from signup popup window when clicked Heart icon button on game banner while on Live casino page",
					"User able to see the Login popup window from signup popup window when clicked Heart icon button on game banner while on Live casino page",
					"Pass");
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC59-Login",
					"User should able to see the Login popup window from signup popup window when clicked Heart icon button on game banner while on Live casino page",
					"User able to see the Login popup window from signup popup window when clicked Heart icon button on game banner while on Live casino page",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-62 (Login) PD69988//
	// To check user is able to see the "Login" window when clicked on "Heart icon"
	// button on game banner while on "casino" page
	public boolean SynapseLoginFromCasinoHeartIcon(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseCasino"))).isDisplayed());
			System.out.print("SynapseCasino is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseCasino"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			System.out.print("SynapseFavourite Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC62-Login",
					"User should able to see the Login popup window when clicked on Favourite button in Casino",
					"User able to see the Login popup window when clicked on Favourite button in Casino", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC62-Login",
					"User should able to see the Login popup window when clicked on Favourite button in Casino",
					"User able to see the Login popup window when clicked on Favourite button in Casino", "Pass");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-63 (Login) PD69988//
	// To check user is able to see the "Login" popup window from signup popup
	// window when clicked "Heart icon" button on game banner while on "casino" page
	public boolean SynapseSignupLoginFromCasinoHeartIcon(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseCasino"))).isDisplayed());
			System.out.print("SynapseCasino is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseCasino"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			System.out.print("SynapseFavourite Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).isDisplayed());
			System.out.print("SignupInLogin Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC63-Login",
					"User should able to see the Login popup window from signup popup window when clicked Heart icon button on game banner while on casino page",
					"User able to see the Login popup window from signup popup window when clicked Heart icon button on game banner while on casino page",
					"Pass");
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC63-Login",
					"User should able to see the Login popup window from signup popup window when clicked Heart icon button on game banner while on casino page",
					"User able to see the Login popup window from signup popup window when clicked Heart icon button on game banner while on casino page",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-66 (Login) PD69988//
	// To check user is able to see the "Login" window when clicked on "Heart icon"
	// button on game banner while on "Virtuals" page
	public boolean SynapseLoginFromVirtualsHeartIcon(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseVirtuals"))).isDisplayed());
			System.out.print("SynapseVirtuals is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseVirtuals"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			System.out.print("SynapseFavourite Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC66-Login",
					"User should able to see the Login popup window when clicked on Favourite button in Virtuals",
					"User able to see the Login popup window when clicked on Favourite button in Virtuals", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC66-Login",
					"User should able to see the Login popup window when clicked on Favourite button in Virtuals",
					"User able to see the Login popup window when clicked on Favourite button in Virtuals", "Pass");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-67 (Login) PD69988//
	// To check user is able to see the "Login" popup window from signup popup
	// window when clicked "Heart icon" button on game banner while on "casino" page
	public boolean SynapseSignupLoginFromVirtualsHeartIcon(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseVirtuals"))).isDisplayed());
			System.out.print("SynapseVirtuals is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseVirtuals"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			System.out.print("SynapseFavourite Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).isDisplayed());
			System.out.print("SignupInLogin Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC67-Login",
					"User should able to see the Login popup window from signup popup window when clicked Heart icon button on game banner while on Virtuals page",
					"User able to see the Login popup window from signup popup window when clicked Heart icon button on game banner while on Virtuals page",
					"Pass");
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC67-Login",
					"User should able to see the Login popup window from signup popup window when clicked Heart icon button on game banner while on Virtuals page",
					"User able to see the Login popup window from signup popup window when clicked Heart icon button on game banner while on Virtuals page",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-38 (Synapse Login) PJ-65867
	// To check user is able to see the \"Login\" window when clicked on \"Play\"
	// button on game banner while on \"casino\" page
	public boolean LoginWindowForSynapse(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseCasino"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).isDisplayed());
			System.out.print("Promotion is clicked");

//				webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton"))).isDisplayed());

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			report.detailsAppend("TC38-Synapse Login",
					"To check user is able to see the \"Login\" window when clicked on \"Play\" button on game banner while on \"casino\" page",
					"User is able to see the \"Login\" window when clicked on \"Play\" button on game banner while on \"casino\" page",
					"Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC38-Synapse Login",
					"To check user is able to see the \"Login\" window when clicked on \"Play\" button on game banner while on \"casino\" page",
					"User is able to see the \"Login\" window when clicked on \"Play\" button on game banner while on \"casino\" page",
					"Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-39(Synapse Login) PJ-65867
	// To check user is able to see the "Login" popup window from signup popup
	// window when clicked "Play" button on game banner while on "casino" page

	public boolean LoginForSynapseForSignup(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseCasino"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).isDisplayed());
			System.out.print("Promotion is clicked");

//				webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton"))).isDisplayed());

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			report.detailsAppend("TC39-Synapse Login",
					"To check user is able to see the \"Login\" popup window from signup popup window when clicked \"Play\" button on game banner while on \"casino\" page",
					"User is able to see the \"Login\" popup window from signup popup window when clicked \"Play\" button on game banner while on \"casino\" page",
					"Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC39-Synapse Login",
					"To check user is able to see the \"Login\" popup window from signup popup window when clicked \"Play\" button on game banner while on \"casino\" page",
					"User is able to see the \"Login\" popup window from signup popup window when clicked \"Play\" button on game banner while on \"casino\" page",
					"Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-40(Synapse Login) PJ-65867
	// To check user is able to click the "Login" on popup window when clicked on
	// "Play" button on game banner while on "casino" page

	public boolean LoginForSynapse(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseCasino"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).isDisplayed());
			System.out.print("Promotion is clicked");

//				webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton"))).isDisplayed());

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo1"))).sendKeys(xpathMap.get("SynPhoneNo"));
			Thread.sleep(4000);
			System.out.print("MobileNumber is Entered");

			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword1"))).sendKeys(xpathMap.get("SynPsd"));
			Thread.sleep(4000);
			System.out.print("MobileNumber is Entered");

			webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC40-Synapse Login",
					"To check user is able to click the \"Login\" on popup window when clicked on  \"Play\" button on game banner while on \"casino\" page",
					"User is able to click the \"Login\" on popup window when clicked on  \"Play\" button on game banner while on \"casino\" page",
					"Pass");

			webdriver.findElement(By.xpath(xpathMap.get("LogOutsButton"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LogOutStrip"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("LogOutStrip"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LogoutButton31"))).isDisplayed());

			webdriver.findElement(By.xpath(xpathMap.get("LogoutButton31"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC40-Synapse Login",
					"To check user is able to click the \"Login\" on popup window when clicked on  \"Play\" button on game banner while on \"casino\" page",
					"User is able to click the \"Login\" on popup window when clicked on  \"Play\" button on game banner while on \"casino\" page",
					"Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-41 (Synapse Login) PJ-65867
	// To check user is able to see the \"Login\" window when clicked on \"Play\"
	// button on game banner while on \"virtual\" page
	public boolean LoginWindowForSynapseForVirtual(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseVirtual"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//				webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//				Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			report.detailsAppend("TC41-Synapse Login",
					"To check user is able to see the \"Login\" window when clicked on \"Play\" button on game banner while on \"virtual\" page",
					"User is able to see the \"Login\" window when clicked on \"Play\" button on game banner while on \"virtual\" page",
					"Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC41-Synapse Login",
					"To check user is able to see the \"Login\" window when clicked on \"Play\" button on game banner while on \"virtual\" page",
					"User is able to see the \"Login\" window when clicked on \"Play\" button on game banner while on \"virtual\" page",
					"Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-42(Synapse Login) PJ-65867
	// To check user is able to see the "Login" popup window from signup popup
	// window when clicked "Play" button on game banner while on "virtual" page

	public boolean LoginForSynapseForSignupForVirtual(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseVirtual"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner1"))).isDisplayed());
			System.out.print("Promotion is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("GameBanner1"))).click();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton2"))).isDisplayed());
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton2"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			report.detailsAppend("TC42-Synapse Login",
					"To check user is able to see the \"Login\" popup window from signup popup window when clicked \"Play\" button on game banner while on \"virtual\" page",
					"User is able to see the \"Login\" popup window from signup popup window when clicked \"Play\" button on game banner while on \"virtual\" page",
					"Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC42-Synapse Login",
					"To check user is able to see the \"Login\" popup window from signup popup window when clicked \"Play\" button on game banner while on \"virtual\" page",
					"User is able to see the \"Login\" popup window from signup popup window when clicked \"Play\" button on game banner while on \"virtual\" page",
					"Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-43(Synapse Login) PJ-65867
	// To check user is able to click the "Login" on popup window when clicked on
	// "Play" button on game banner while on "virtual" page

	public boolean LoginForSynapseForVirtual(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseVirtual"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner2"))).isDisplayed());
			System.out.print("Promotion is clicked");

//				webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton5"))).isDisplayed());
//				Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton5"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo1"))).sendKeys(xpathMap.get("SynPhoneNo"));
			Thread.sleep(4000);
			System.out.print("MobileNumber is Entered");

			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword1"))).sendKeys(xpathMap.get("SynPsd"));
			Thread.sleep(4000);
			System.out.print("MobileNumber is Entered");

			webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC43-Synapse Login",
					"To check user is able to click the \"Login\" on popup window when clicked on  \"Play\" button on game banner while on \"virtual\" pages",
					"User is able to click the \"Login\" on popup window when clicked on  \"Play\" button on game banner while on \"virtual\" pages",
					"Pass");

			webdriver.findElement(By.xpath(xpathMap.get("LogOutsButton"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LogOutStrip"))).isDisplayed());
			;
			webdriver.findElement(By.xpath(xpathMap.get("LogOutStrip"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LogoutButton31"))).isDisplayed());

			webdriver.findElement(By.xpath(xpathMap.get("LogoutButton31"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC43-Synapse Login",
					"To check user is able to click the \"Login\" on popup window when clicked on  \"Play\" button on game banner while on \"virtual\" pages",
					"User is able to click the \"Login\" on popup window when clicked on  \"Play\" button on game banner while on \"virtual\" pages",
					"Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-45 (Synapse Login) PJ-65867
	// To check user is able to see the \"Login\" window when clicked on \"Play\"
	// button on game banner while on \"Promotion\" page
	public boolean LoginWindowForSynapseForPromotion(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapsePromotion"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignUpForPromotion"))).isDisplayed());
			System.out.print("Promotion is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SignUpForPromotion"))).click();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginForPromotion"))).isDisplayed());
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("LoginForPromotion"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			report.detailsAppend("TC45-Synapse Login",
					"To check user is able to see the \"Login\" window when clicked on \"Play\" button on game banner while on \"Promotion\" page",
					"User is able to see the \"Login\" window when clicked on \"Play\" button on game banner while on \"Promotion\" page",
					"Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC45-Synapse Login",
					"To check user is able to see the \"Login\" window when clicked on \"Play\" button on game banner while on \"Promotion\" page",
					"User is able to see the \"Login\" window when clicked on \"Play\" button on game banner while on \"Promotion\" page",
					"Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-47(Synapse Login) PJ-65867
	// To check user is able to hide or show password when clicked on eye hide
	// button when on homepage

	public boolean PasswordVisibilityForPromotion(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseVirtual"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner2"))).isDisplayed());
			System.out.print("Promotion is clicked");

//				webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton5"))).isDisplayed());
//				Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton5"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo1"))).sendKeys(xpathMap.get("SynPhoneNo"));
			Thread.sleep(4000);
			System.out.print("MobileNumber is Entered");

			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword1"))).sendKeys(xpathMap.get("SynPsd"));
			Thread.sleep(4000);
			System.out.print("MobileNumber is Entered");

			webdriver.findElement(By.xpath(xpathMap.get("EyeFieldForLogin"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC47-Synapse Login",
					"To check user is able to hide or show password when clicked on eye hide button when on homepage",
					"User is able to hide or show password when clicked on eye hide button when on homepage", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("EyeFieldForLogin"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC47-Synapse Login",
					"To check user is able to hide or show password when clicked on eye hide button when on homepage",
					"User is able to hide or show password when clicked on eye hide button when on homepage", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-46(Synapse Login) PJ-65867
	// To check user is able to hide or show password when clicked on eye hide
	// button when on homepage

	public boolean EyeFieldForPromotion(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseVirtual"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner2"))).isDisplayed());
			System.out.print("Promotion is clicked");

//				webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton5"))).isDisplayed());
//				Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton5"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo1"))).sendKeys(xpathMap.get("SynPhoneNo"));
			Thread.sleep(4000);
			System.out.print("MobileNumber is Entered");

			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword1"))).sendKeys(xpathMap.get("SynPsd"));
			Thread.sleep(4000);
			System.out.print("MobileNumber is Entered");

			webdriver.findElement(By.xpath(xpathMap.get("EyeFieldForLogin"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("EyeFieldForLogin"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC46-Synapse Login",
					"To check user is able to hide or show password when clicked on eye hide button when on homepage",
					"User is able to hide or show password when clicked on eye hide button when on homepage", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC46-Synapse Login",
					"To check user is able to hide or show password when clicked on eye hide button when on homepage",
					"User is able to hide or show password when clicked on eye hide button when on homepage", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-48 (Synapse Login) PJ-65867
	// To check user is able to see the \"Login\" window when clicked on \"Play\"
	// button on game banner while on \"BetGames\" page
	public boolean LoginWindowForSynapseForBetGames(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseBetGames"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//				webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//				Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			report.detailsAppend("TC48-Synapse Login",
					"To check user is able to see the \"Login\" window when clicked on \"Play\" button on game banner while on \"BetGames\" page",
					"User is able to see the \"Login\" window when clicked on \"Play\" button on game banner while on \"BetGames\" page",
					"Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC48-Synapse Login",
					"To check user is able to see the \"Login\" window when clicked on \"Play\" button on game banner while on \"BetGames\" page",
					"User is able to see the \"Login\" window when clicked on \"Play\" button on game banner while on \"BetGames\" page",
					"Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-49(Synapse Login) PJ-65867
	// To check user is able to see the "Login" popup window from signup popup
	// window when clicked "Play" button on game banner while on "BetGames" page

	public boolean LoginForSynapseForSignupForBetGames(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseBetGames"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//				webdriver.findElement(By.xpath(xpathMap.get("GameBanner1"))).click();
//				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton2"))).isDisplayed());
//				Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton2"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			report.detailsAppend("TC49-Synapse Login",
					"To check user is able to see the \"Login\" popup window from signup popup window when clicked \"Play\" button on game banner while on \"BetGames\" page",
					"User is able to see the \"Login\" popup window from signup popup window when clicked \"Play\" button on game banner while on \"BetGames\" page",
					"Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC49-Synapse Login",
					"To check user is able to see the \"Login\" popup window from signup popup window when clicked \"Play\" button on game banner while on \"BetGames\" page",
					"User is able to see the \"Login\" popup window from signup popup window when clicked \"Play\" button on game banner while on \"BetGames\" page",
					"Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-50(Synapse Login) PJ-65867
	// To check user is able to click the "Login" on popup window when clicked on
	// "Play" button on game banner while on "BetGames" page

	public boolean LoginForSynapseForBetGames(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseBetGames"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//				webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton5"))).isDisplayed());
//				Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton5"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo1"))).sendKeys(xpathMap.get("SynPhoneNo"));
			Thread.sleep(4000);
			System.out.print("MobileNumber is Entered");

			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword1"))).sendKeys(xpathMap.get("SynPsd"));
			Thread.sleep(4000);
			System.out.print("MobileNumber is Entered");

			webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC50-Synapse Login",
					"To check user is able to click the \"Login\" on popup window when clicked on  \"Play\" button on game banner while on \"BetGames\" pages",
					"User is able to click the \"Login\" on popup window when clicked on  \"Play\" button on game banner while on \"BetGames\" pages",
					"Pass");

			webdriver.findElement(By.xpath(xpathMap.get("LogOutsButton"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LogOutStrip"))).isDisplayed());
			;
			webdriver.findElement(By.xpath(xpathMap.get("LogOutStrip"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LogoutButton31"))).isDisplayed());

			webdriver.findElement(By.xpath(xpathMap.get("LogoutButton31"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC50-Synapse Login",
					"To check user is able to click the \"Login\" on popup window when clicked on  \"Play\" button on game banner while on \"BetGames\" pages",
					"User is able to click the \"Login\" on popup window when clicked on  \"Play\" button on game banner while on \"BetGames\" pages",
					"Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-51 (Login) AS66528//
	// To check user is able to see the "Login" popup window
	public boolean LoginPopupWindow(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.print("SynapseSports is Present");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMarket1stOdd"))).isDisplayed());
			Thread.sleep(2000);
			System.out.print("SynapseMarket1stOdd is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMarket1stOdd"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBetNowButton"))).isDisplayed());
			System.out.print("Synapse BetNow Button is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBetNowButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC51-Login", "check user is able to see the \"Login\" popup window",
					"check user is able to see the \"Login\" popup window", "Pass");
			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseRemoveAll"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC-51 Login", "check user is able to see the \"Login\" popup window",
					"check user is able to see the \"Login\" popup window", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-52 (Login) AS66528//
	// To check user is able to see the "Login" popup window
	public boolean LoginPopupWindowInMultiBet(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.print("SynapseSports is Present");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMarket1stOdd"))).isDisplayed());
			Thread.sleep(2000);
			System.out.print("SynapseMarket1stOdd is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMarket1stOdd"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMutliBet"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBetNowButton"))).isDisplayed());
			System.out.print("Synapse BetNow Button is Present");

			webdriver.findElement(By.xpath(xpathMap.get("SynapseBetNowButton"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC52-Login", "check user is able to see the \"Login\" popup InMultiBet",
					"check user is able to see the \"Login\" popup InMultiBet", "Pass");
			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseRemoveAll"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC-52 Login", "check user is able to see the \"Login\" popup InMultiBet",
					"check user is able to see the \"Login\" popup InMultiBet", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-53 (Login) AS66528//
	// To check user is able to see the "Login" popup window when navigated through
	// signup popup window
	public boolean LoginPopupthroughSignupPopup(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.print("SynapseSports is Present");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMarket1stOdd"))).isDisplayed());
			Thread.sleep(2000);
			System.out.print("SynapseMarket1stOdd is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMarket1stOdd"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBetNowButton"))).isDisplayed());
			System.out.print("Synapse BetNow Button is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBetNowButton"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignupButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignupButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).isDisplayed();
			Thread.sleep(2000);
			report.detailsAppend("TC53-Login",
					"check user is able to see \"Login\" popupwindow navigated TO signuppopup window",
					"user checked able to see \"Login\" popupwindow navigated TO signuppopup window", "Pass");

			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseRemoveAll"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC53-Login",
					"check user is able to see \"Login\" popupwindow navigated TO signuppopup window",
					"user checked able to see \"Login\" popupwindow navigated TO signuppopup window", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-54 (Login) AS66528//
	// To check user is able to see the "Login" window when clicked on "Heart icon"
	// button on game banner while on "Aviator" page
	public boolean LoginPopupinAviatorGamePage(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).isDisplayed());
			System.out.print("AviatorGame is Present");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInSignup"))).isDisplayed());
			Thread.sleep(2000);
			System.out.print("CloseIn Signup is Visible");
			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignup"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).isDisplayed());
			System.out.print("HeatIcon InAviator is Present");
			webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC54-Login",
					"check user is able to see \"Login\" popup when clicked on Hearticon button on Aviatorgame page",
					"user checked able to see \"Login\" opup when clicked on Hearticon button on Aviatorgame page",
					"Pass");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignup"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC54-Login",
					"check user is able to see \"Login\" popup when clicked on Hearticon button on Aviatorgame page",
					"user checked able to see \"Login\" opup when clicked on Hearticon button on Aviatorgame page",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-55(Login) AS66528//
	// To check user is able to see the "Login" window from signup popup window when
	// clicked on "Heart icon" button on game banner while on "Aviator" page
	public boolean LoginPopupfromSignupInAviatorPage(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).isDisplayed());
			System.out.print("AviatorGame is Present");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInSignup"))).isDisplayed());
			Thread.sleep(2000);
			System.out.print("CloseIn Signup is Visible");
			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignup"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).isDisplayed());
			System.out.print("HeatIcon InAviator is Present");
			webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignupButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignupButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).isDisplayed();
			Thread.sleep(2000);
			report.detailsAppend("TC55-Login",
					"check user is able to see \"Login\" popup from signup popup window when clicked on Hearticon button on Aviatorgame page",
					"user checked able to see \"Login\" popup from signup popup window when clicked on Hearticon button on Aviatorgame page",
					"Pass");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignup"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC55-Login",
					"check user is able to see \"Login\" popup from signup popup window when clicked on Hearticon button on Aviatorgame page",
					"user checked able to see \"Login\" popup from signup popup window when clickedd on Hearticon button on Aviatorgame page",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// SYNAPSE SIGNUP//

	// TC-1 (Synapse_SignUp) AS66528//
	// Check if the "Sign Up" Button is visible on the homepage.//
	public boolean SignupButtonVisible(Mobile_HTML_Report report) {

		try {

			System.out.print("Signup Button is Visible on homepage");
			report.detailsAppend("TC-1 Synapse_SignUp", "Signup Button in Home page Should be Visible",
					"Signup Button in Home page is Visible", "Pass");
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();

		} catch (Exception e) {
			report.detailsAppend("TC-1 Synapse_SignUp", "Signup Button in Home page Should be Visible",
					"Signup Button in Home page is Visible", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

	// TC-2 (Synapse_SignUp)AS66528
	// To Check if there is a visible "Sign Up" button on the login page.
	public boolean SignupButtonOnLoginPage(Mobile_HTML_Report report) {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).click();
			Thread.sleep(2000);
			System.out.print("Signup Button is Visible on loginpage");
			report.detailsAppend("TC2-Synapse_SignUp", "Check if there is a visible \"Sign Up\" button on login page",
					"Checked the visible \"Sign Up\" button on login page", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC2-Synapse_SignUp", "Check if there is a visible \"Sign Up\" button on login page",
					"Checked the visible \"Sign Up\" button on login page", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-3 (Synapse_SignUp) AS66528//
	// Check if the sign-up form is visible when the "Sign Up" button is clicked.//
	public boolean SignupFormVisibility(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			Thread.sleep(2000);
			System.out.print(" SignupButton Clicked ");
			report.detailsAppend("TC3-Synapse_SignUp", "Signup Form Should be Visible", "Signup Form  is Visible",
					"Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC3-Synapse_SignUp", "Signup Form Should be Visible", "Signup Form  is Visible",
					"Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-4 (Synapse_SignUp) AS66528//
	// Check if the required sign-up fields (e.g., mobile number, password) are
	// visible on the sign-up form.
	public boolean SignupFieldsVisibleOnForm(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			Thread.sleep(2000);
			System.out.print(" SignupButton Clicked ");
			report.detailsAppend("TC4-Synapse_SignUp", "Check if required fields on Signup Form Should be Visible",
					"Checked the required fields on Signup Form Should be Visible", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC4-Synapse_SignUp", "Check if required fields on Signup Form Should be Visible",
					"Checked the required fields on Signup Form Should be Visible", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-5 (Synapse_SignUp) AS66528//
	// Check if the "Register" button is visible on the sign-up form.
	public boolean RegisterButtonVisibleOnSignupForm(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			Thread.sleep(2000);
			System.out.print(" SignupButton Clicked ");
			webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).isDisplayed();
			Thread.sleep(2000);
			report.detailsAppend("TC5-Synapse_SignUp", "Check if required fields on Signup Form Should be Visible",
					"Checked the required fields on Signup Form Should be Visible", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC5-Synapse_SignUp", "Check if required fields on Signup Form Should be Visible",
					"Checked the required fields on Signup Form Should be Visible", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-6 (Synapse_SignUp) AS66528//
	// Check if the user is able to Register.
	public boolean RegisterButtonClickOnSignupForm(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			Thread.sleep(2000);

			long min = 807060501; // Minimum 9-digit number
			long max = 999999999; // Maximum 9-digit number
			// Create an instance of Random class
			Random random = new Random();
			// Generate random number within the specified range
			long randomNumber = random.nextLong() % (max - min + 1) + min;
			// Ensure the generated number is positive
			randomNumber = Math.abs(randomNumber);
			String randomString = Long.toString(randomNumber);
			System.out.println(randomString);

			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).sendKeys(randomString);
			System.out.print("MobileNumber is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordSignup"))).sendKeys(xpathMap.get("PasswordMyBet"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFirstName"))).sendKeys(xpathMap.get("FirstNamedata"));
			System.out.print("FirstName is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSurName"))).sendKeys(xpathMap.get("SurNamedata"));
			System.out.print("LastName is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SelectIDType"))).click();
			System.out.print("SelectedID DropDown is Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswportTabUnderID"))).click();
			System.out.print("SelectedID DropDown is Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("IDNumberTab"))).sendKeys(xpathMap.get("IDNumberData"));
			System.out.print("IDNumber is Entered");
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(xpathMap.get("DayDD"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("DaySelected"))).click();
				System.out.print("Date is Selected");
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("Date DropDown not selected" + e);
				;
			}
			try {
				webdriver.findElement(By.xpath(xpathMap.get("MonthDD"))).click();
				webdriver.findElement(By.xpath(xpathMap.get("MonthSelected"))).click();
				System.out.print("Month is Selected");
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("Month DropDown not selected" + e);
			}
			try {
				webdriver.findElement(By.xpath(xpathMap.get("YearDD"))).click();
				webdriver.findElement(By.xpath(xpathMap.get("YearSelected"))).click();
				System.out.print("Year is Selected");
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("Year DropDown not selected" + e);
			}
			webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
			System.out.print("AgreeAll Checkbox is Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseRegisterButton"))).click();
			System.out.print("Register Button is Entered");
			Thread.sleep(2000);

			report.detailsAppend("TC6-Synapse_SignUp", "Check if the user is able to Register.",
					"user abled to Register.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("RegisterPageClosePopup"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("ProfileOpen"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("LogoutinProfile"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("ProceedButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC6-Synapse_SignUp", "Check if the user is able to Register.",
					"user not able to Register.", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-7 (Synapse_SignUp) AS66528//
	// To check if the system accepts a valid Ghanaian mobile number.
	public boolean ValidGhanaMobileNo(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).sendKeys(xpathMap.get("ValidMobiledata"));
			System.out.print("MobileNumber is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordSignup"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC7-Synapse_SignUp", "Check if system accepts a valid Ghanaian mobile number.",
					"Checked if system accepts a valid Ghanaian mobile number.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC7-Synapse_SignUp", "Check if system accepts a valid Ghanaian mobile number.",
					"Checked if system accepts a valid Ghanaian mobile number.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-8 (Synapse_SignUp) AS66528//
	// To check user click on "Sign Up" button mobile number field should be display
	// with country code +233
	public boolean MobileNumberDisplycountrycode(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			Thread.sleep(2000);
			System.out.print(" SignupButton Clicked ");
			report.detailsAppend("TC8-Synapse_SignUp",
					"check user click on \"Sign Up\" button mobile number field should be display with country code +233",
					"user click on \"Sign Up\" button mobile number field should be display with country code +233",
					"Pass");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC8-Synapse_SignUp",
					"check user click on \"Sign Up\" button mobile number field should be display with country code +233",
					"user click on \"Sign Up\" button mobile number field should be display with country code +233",
					"Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-9 (Synapse_SignUp) AS66528//
	// To check if the system accepts a valid mobile number with leading zeros.
	public boolean ValidMobileNoWithleadingZeros(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo")))
					.sendKeys(xpathMap.get("MobileNoleadingZero"));
			System.out.print("MobileNumber is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordSignup"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC9-Synapse_SignUp",
					"Check if system accepts a valid mobile number with leading zeros.",
					"Checked if system accepts a valid mobile number with leading zeros.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC9-Synapse_SignUp",
					"Check if system accepts a valid mobile number with leading zeros.",
					"Checked if system accepts a valid mobile number with leading zeros.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-10 (Synapse_SignUp) AS66528//
	// To check if the system rejects a mobile number that is too short.
	public boolean SystemrejectsMobileNo_tooShort(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).sendKeys(xpathMap.get("MobileNoShort"));
			System.out.print("MobileNumber is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordSignup"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC10-Synapse_SignUp", "Check if system rejects a mobile number that is too short..",
					"Checked if system rejects a mobile number that is too short.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC10-Synapse_SignUp", "Check if system rejects a mobile number that is too short..",
					"Checked if system rejects a mobile number that is too short.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-11 (Synapse_SignUp) AS66528//
	// To check if the system rejects a mobile number that is too Long.
	public boolean SystemrejectsMobileNo_tooLong(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).sendKeys(xpathMap.get("MobileNoLong"));
			System.out.print("MobileNumber is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordSignup"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC11-Synapse_SignUp", "Check if system rejects a mobile number that is too Long..",
					"Checked if system rejects a mobile number that is too Long.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC11-Synapse_SignUp", "Check if system rejects a mobile number that is too Long..",
					"Checked if system rejects a mobile number that is too Long.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-12 (Synapse_SignUp) AS66528//
	// To check if the system rejects a mobile number with alphabetic characters.
	public boolean SystemrejectsMobileNo_AlphabeticChar(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo")))
					.sendKeys(xpathMap.get("MobileNoAlphabeticChar"));
			System.out.print("MobileNumber is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordSignup"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC12-Synapse_SignUp",
					"Check if system rejects a mobile number with alphabetic characters..",
					"Checked if system rejects a mobile number with alphabetic characters.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC12-Synapse_SignUp",
					"Check if system rejects a mobile number with alphabetic characters..",
					"Checked if system rejects a mobile number with alphabetic characters.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-13 (Synapse_SignUp) AS66528//
	// To check if the system rejects a mobile number with special characters.
	public boolean SystemrejectsMobileNo_specialChar(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo")))
					.sendKeys(xpathMap.get("MobileNoSpecialChar"));
			System.out.print("MobileNumber is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordSignup"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC13-Synapse_SignUp",
					"Check if system rejects a mobile number with special characters..",
					"Checked if system rejects a mobile number with special characters.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC13-Synapse_SignUp",
					"Check if system rejects a mobile number with special characters..",
					"Checked if system rejects a mobile number with special characters.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-14 (Synapse_SignUp) AS66528//
	// To check if the system rejects a mobile number with consecutive spaces.
	public boolean SystemrejectsMobileNo_Spaces(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo")))
					.sendKeys(xpathMap.get("MobileNoSpecialChar"));
			System.out.print("MobileNumber is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordSignup"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC14-Synapse_SignUp",
					"Check if system rejects a mobile number with consecutive spaces..",
					"Checked if system rejects a mobile number with consecutive spaces.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC14-Synapse_SignUp",
					"Check if system rejects a mobile number with consecutive spaces..",
					"Checked if system rejects a mobile number with consecutive spaces.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-15 (Synapse_SignUp) AS66528//
	// Check if the system accepts a strong password.
	public boolean Systemaccept_StrongPassword(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordSignup"))).sendKeys(xpathMap.get("PasswordValidData"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordEyeIcon"))).click();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFirstName"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC15-Synapse_SignUp", "Check if system accepts a strong password.",
					"Checked if system accepts a strong password.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC15-Synapse_SignUp", "Check if system accepts a strong password.",
					"Checked if system accepts a strong password.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-16 (Synapse_SignUp) AS66528//
	// Check if the system accepts with combination of uppercase and lowercase
	// letters.
	public boolean Systemaccept_UpperLowerCasePassword(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordSignup"))).sendKeys(xpathMap.get("PasswordCasedata"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordEyeIcon"))).click();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFirstName"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC16-Synapse_SignUp",
					"Check if system accepts with combination of uppercase and lowercase letters.",
					"Checked if system accepts with combination of uppercase and lowercase letters.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC16-Synapse_SignUp",
					"Check if system accepts with combination of uppercase and lowercase letters.",
					"Checked if system accepts with combination of uppercase and lowercase letters.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-17 (Synapse_SignUp) AS66528//
	// Check if the system accepts a password with numeric characters
	public boolean Systemaccept_PasswordwithNumeric(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordSignup"))).sendKeys(xpathMap.get("PasswordValidData"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordEyeIcon"))).click();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFirstName"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC17-Synapse_SignUp", "Check if system accepts password with numeric characters",
					"Checked if system accepts password with numeric characters", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC17-Synapse_SignUp", "Check if system accepts password with numeric characters",
					"Checked if system accepts password with numeric characters", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-18 (Synapse_SignUp) AS66528//
	// Check if the system accepts a password with special characters
	public boolean Systemaccept_PasswordwithSpecialChar(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordSignup")))
					.sendKeys(xpathMap.get("PasswordSpecialChar"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordEyeIcon"))).click();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFirstName"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC18-Synapse_SignUp", "Check if system accepts password with special characters",
					"Checked if system accepts password with special characters", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC18-Synapse_SignUp", "Check if system accepts password with special characters",
					"Checked if system accepts password with special characters", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-19 (Synapse_SignUp) AS66528//
	// Check if the system accepts a password with minimum required length.
	public boolean Systemaccept_PasswordwithMinLength(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordSignup"))).sendKeys(xpathMap.get("PasswordMinlength"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordEyeIcon"))).click();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFirstName"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC19-Synapse_SignUp",
					"Check if system accepts password with minimum required length.",
					"Checked if system accepts password with minimum required length.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC19-Synapse_SignUp",
					"Check if system accepts password with minimum required length.",
					"Checked if system accepts password with minimum required length.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-20 (Synapse_SignUp) AS66528//
	// Check if the system accepts a password with maximum required length.
	public boolean Systemaccept_PasswordwithMaxLength(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordSignup"))).sendKeys(xpathMap.get("PasswordMaxlength"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordEyeIcon"))).click();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFirstName"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC20-Synapse_SignUp",
					"Check if system accepts password with maximum required length.",
					"Checked if system accepts password with maximum required length.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC20-Synapse_SignUp",
					"Check if system accepts password with maximum required length.",
					"Checked if system accepts password with maximum required length.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-21 (Synapse_SignUp) AS66528//
	// Check if the system accepts a password with all allowed characters, including
	// uppercase letters, lowercase letters, numbers, and special characters.
	public boolean Systemaccept_PasswordwithAllAllowedChar(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordSignup"))).sendKeys(xpathMap.get("PaswordAllChar"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordEyeIcon"))).click();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFirstName"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC21-Synapse_SignUp",
					"Check if system accepts password with all allowed characters, including uppercase letters, lowercase letters, numbers, and special characters.",
					"Checked if system accepts password with all allowed characters, including uppercase letters, lowercase letters, numbers, and special characters.",
					"Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC21-Synapse_SignUp",
					"Check if system accepts password with all allowed characters, including uppercase letters, lowercase letters, numbers, and special characters.",
					"Checked if system accepts password with all allowed characters, including uppercase letters, lowercase letters, numbers, and special characters.",
					"Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-22 (Synapse_SignUp) AS66528//
	// Check if the system accepts a password with containing spaces.
	public boolean Systemaccept_PasswordwithContainsSpaces(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordSignup"))).sendKeys(xpathMap.get("PasswordwithSpace"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordEyeIcon"))).click();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFirstName"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC22-Synapse_SignUp", "Check if system accepts password with containing spaces.",
					"Checked if system accepts password with containing spaces.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC22-Synapse_SignUp", "Check if system accepts password with containing spaces.",
					"Checked if system accepts password with containing spaces.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-23 (Synapse_SignUp) AS66528//
	// Check if the system rejects a weak password.
	public boolean Systemrejects_weakpassword(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordSignup"))).sendKeys(xpathMap.get("PasswordMinlength"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordEyeIcon"))).click();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFirstName"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC23-Synapse_SignUp", "Check if system rejects a weak password.",
					"Checked if system rejects a weak password.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC23-Synapse_SignUp", "Check if system rejects a weak password.",
					"Checked if system rejects a weak password.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-24 (Synapse_SignUp) AS66528//
	// Check if the system rejects a blank password.
	public boolean Systemrejects_blankpassword(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordSignup"))).sendKeys(xpathMap.get("BlankPassword"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordEyeIcon"))).click();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFirstName"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC24-Synapse_SignUp", "Check if system rejects a blank password.",
					"Checked if system rejects a blank password.", "Pass");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC24-Synapse_SignUp", "Check if system rejects a blank password.",
					"Checked if system rejects a blank password.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-25 (Synapse_SignUp) AS66528//
	// Check if the system rejects exceeding the maximum allowed length.
	public boolean Systemrejects_PasswordMaxLength(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordSignup")))
					.sendKeys(xpathMap.get("PasswordExceedMaxlength"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordEyeIcon"))).click();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFirstName"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC25-Synapse_SignUp", "Check if system rejects exceeding the maximum allowed length.",
					"Checked if system rejects exceeding the maximum allowed length.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC25-Synapse_SignUp", "Check if system rejects exceeding the maximum allowed length.",
					"Checked if system rejects exceeding the maximum allowed length.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-26 (Synapse_SignUp) AS66528//
	// Verify Password succeeding Minimum Length
	public boolean Systemaccept_PasswordMinLength(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordSignup"))).sendKeys(xpathMap.get("PasswordMinlength"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordEyeIcon"))).click();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFirstName"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC26-Synapse_SignUp", "Verify Password succeeding Minimum Length",
					"Verify Password succeeding Minimum Length", "Pass");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC26-Synapse_SignUp", "Verify Password succeeding Minimum Length",
					"Verify Password succeeding Minimum Length", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-27 (Synapse_SignUp) AS66528//
	// Check if the system accepts a valid first name.
	public boolean Systemaceepts_validFirstName(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFirstName"))).sendKeys(xpathMap.get("FirstNamedata"));
			System.out.print("FirstName is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordSignup"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC27-Synapse_SignUp", "Check if the system accepts a valid first name.",
					"Checked the system accepts a valid first name.", "Pass");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC27-Synapse_SignUp", "Check if the system accepts a valid first name.",
					"Checked the system accepts a valid first name.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-28 (Synapse_SignUp) AS66528//
	// Check if the system accepts a first name containing spaces.
	public boolean Systemaceepts_FirstNameContainsSpaces(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFirstName"))).sendKeys(xpathMap.get("NameWithSpaces"));
			System.out.print("FirstName is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordSignup"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC28-Synapse_SignUp", "Check if the system accepts a first name containing spaces.",
					"Checked the system accepts a first name containing spaces.", "Pass");

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC28-Synapse_SignUp", "Check if the system accepts a first name containing spaces.",
					"Checked the system accepts a first name containing spaces.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-29 (Synapse_SignUp) AS66528//
	// Check if the system accepts first name with Hyphen.
	public boolean Systemaceepts_FirstNamewithHyphen(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFirstName"))).sendKeys(xpathMap.get("NameWithHyphen"));
			System.out.print("FirstName is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordSignup"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC27-Synapse_SignUp", "Check if the system accepts first name with Hyphen",
					"Checked the system accepts first name with Hyphen", "Pass");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC27-Synapse_SignUp", "Check if the system accepts first name with Hyphen",
					"Checked the system accepts first name with Hyphen", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-30 (Synapse_SignUp) AS66528//
	// Check if the system rejects a blank first name.
	public boolean Systemrejects_FirstNameBlank(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFirstName"))).sendKeys(xpathMap.get("FirstNameBlank"));
			System.out.print("FirstName is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordSignup"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC30-Synapse_SignUp", "Check if the system rejects a blank first name.",
					"Checked the system rejects a blank first name.", "Pass");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC30-Synapse_SignUp", "Check if the system rejects a blank first name.",
					"Checked the system rejects a blank first name.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	////////////////// Pavan PD69988 Regression BuildABet Synapse UAT Ghana
	////////////////// ///////////////////

	// TC-61(Synapse_SignUp) PD69988//
	// Check if the sign-up form is visible when the "Sign Up" button is clicked.
	public boolean SignupHamburgerSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("Synapse Hamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC61-Synapse_SignUp",
					"User Should be able to see Signup Form when clicked on Signup on Hamburger Menu",
					"User is able to see Signup Form when clicked on Signup on Hamburger Menu", "Pass");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC61-Synapse_SignUp",
					"User Should be able to see Signup Form when clicked on Signup on Hamburger Menu",
					"User is able to see Signup Form when clicked on Signup on Hamburger Menu", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-70(Synapse_SignUp) PD69988//
	// Check if the system allows the user to check the "Agree to All" checkbox.
	public boolean SignupAgreeToAllSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("Synapse Hamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			try {

				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC70-Synapse_SignUp", "User Should be able to select Agree All CheckBox",
					"User is able to select Agree All CheckBox", "Pass");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC70-Synapse_SignUp", "User Should be able to select Agree All CheckBox",
					"User is able to select Agree All CheckBox", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-71(Synapse_SignUp) PD69988//
	// Check if the system allows the user to uncheck the "Agree to All" checkbox
	// after checking.
	public boolean SignupAgreeToAllUncheckSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("Synapse Hamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			try {

				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC71-Synapse_SignUp", "User Should be able to Deselect Agree All CheckBox",
					"User is able to Deselect Agree All CheckBox", "Pass");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC71-Synapse_SignUp", "User Should be able to Deselect Agree All CheckBox",
					"User is able to Deselect Agree All CheckBox", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-72(Synapse_SignUp) PD69988//
	// Check if the system prevents the user from proceeding without checking the
	// "Agree to All" checkbox.
	public boolean SignupAgreeToAllProceedSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("Synapse Hamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			try {

				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC72-Synapse_SignUp",
					"User Should not be able to proceed if Deselect Agree All CheckBox",
					"User is not be able to proceed if Deselect Agree All CheckBox", "Pass");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC72-Synapse_SignUp",
					"User Should not be able to proceed if Deselect Agree All CheckBox",
					"User is not be able to proceed if Deselect Agree All CheckBox", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-74(Synapse_SignUp) PD69988//
	// Check if unchecking the "Agree to All" checkbox disables other related
	// checkboxes or options.
	public boolean SignupAgreeToAllDisableSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("Synapse Hamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			try {

				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC74-Synapse_SignUp",
					"User Should be able to see related checkboxes disables if Deselect Agree All CheckBox",
					"User is  able to see related checkboxes disables if Deselect Agree All CheckBox", "Pass");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC74-Synapse_SignUp",
					"User Should be able to see related checkboxes disables if Deselect Agree All CheckBox",
					"User is  able to see related checkboxes disables if Deselect Agree All CheckBox", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-75(Synapse_SignUp) PD69988//
	// Check we are getting 3 check boxes
	public boolean SignupAgreeToAllCheckBoxDisableSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("Synapse Hamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			try {

				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC75-Synapse_SignUp",
					"User Should be able to see 3 checkboxes disables if Deselect Agree All CheckBox",
					"User is  able to see 3 checkboxes disables if Deselect Agree All CheckBox", "Pass");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC75-Synapse_SignUp",
					"User Should be able to see 3 checkboxes disables if Deselect Agree All CheckBox",
					"User is  able to see 3 checkboxes disables if Deselect Agree All CheckBox", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-76(Synapse_SignUp) PD69988//
	// Check if we are clicking on agree to all it should select the two checkboxes
	// and all three checkboxes must be green in colour
	public boolean SignupAgreeToAllCheckBoxGreenSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("Synapse Hamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			try {

				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC76-Synapse_SignUp", "User Should be able to see all checkboxes in Green",
					"User is able to see all checkboxes in Green", "Pass");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC76-Synapse_SignUp", "User Should be able to see all checkboxes in Green",
					"User is able to see all checkboxes in Green", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-77(Synapse_SignUp) PD69988//
	// check if we are clicking on the "sign me up to receive free bets, exclusive
	// promos & more" check box it should show an error message to check " I am over
	// 18 years of age & I accept Betway's Terms & Conditions & Privacy Policy.
	public boolean SignupErrorOnTermsConditionsSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("Synapse Hamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			try {

				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}

			report.detailsAppend("TC77-Synapse_SignUp",
					"User Should be able to see error message under Terms and Conditions",
					"User is able to see error message under Terms and Conditions", "Pass");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC77-Synapse_SignUp",
					"User Should be able to see error message under Terms and Conditions",
					"User is able to see error message under Terms and Conditions", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-78(Synapse_SignUp) PD69988//
	// Verify if we are clicking on the " I am over 18 years of age & I accept
	// Betway's Terms & Conditions & Privacy Policy." check box without checking the
	// signup checkbox it shouldn't show an error and allow user to register
	public boolean SignupNoErrorOnTermsConditionsSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("Synapse Hamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			try {

				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			webdriver.findElement(By.xpath(xpathMap.get("ConfirmAge"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC78-Synapse_SignUp",
					"User Should not be able to see error message under Terms and Conditions after selecting Terms and Conditions",
					"User is not able to see error message under Terms and Conditions after selecting Terms and Conditions",
					"Pass");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC78-Synapse_SignUp",
					"User Should not be able to see error message under Terms and Conditions after selecting Terms and Conditions",
					"User is not able to see error message under Terms and Conditions after selecting Terms and Conditions",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-79(Synapse_SignUp) PD69988//
	// Check if we are selecting the checkbox it should show a green tick
	public boolean SignupCheckboxGreenSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("Synapse Hamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			try {

				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			webdriver.findElement(By.xpath(xpathMap.get("ConfirmAge"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC79-Synapse_SignUp", "User Should be able to see Green Colour for CheckBox",
					"User is able to see Green Colour for CheckBox", "Pass");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC79-Synapse_SignUp", "User Should be able to see Green Colour for CheckBox",
					"User is able to see Green Colour for CheckBox", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-80(Synapse_SignUp) PD69988//
	// Check if there is a visible "Sign Up" button on the Hamburger Menu.
	public boolean SignupVisibleOnHamburgerLoginSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("Synapse Hamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).isDisplayed());
			System.out.println("LoginOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).click();
			Thread.sleep(2000);
			try {

				webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC80-Synapse_SignUp",
					"User Should be able to Navigate to Signup Page from Hamburger Login ",
					"User is able to Navigate to Signup Page from Hamburger Login", "Pass");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC80-Synapse_SignUp",
					"User Should be able to Navigate to Signup Page from Hamburger Login ",
					"User is able to Navigate to Signup Page from Hamburger Login", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-81(Synapse_SignUp) PD69988//
	// Check if the "Sign Up" Button is visible on the login Modal popup window
	public boolean SignupVisibleOnLoginSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).isDisplayed());
			System.out.println("SynapseAviator is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).isDisplayed());
			System.out.println("SignupInLogin is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC81-Synapse_SignUp",
					"User Should be able to Navigate to Signup Page from Login in Aviator ",
					"User is able to Navigate to Signup Page from Login in Aviator", "Pass");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC81-Synapse_SignUp",
					"User Should be able to Navigate to Signup Page from Login in Aviator ",
					"User is able to Navigate to Signup Page from Login in Aviator", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-82(Synapse_SignUp) PD69988//
	// Check if the "Sign Up" Button is visible on the login Modal popup window
	public boolean SignupVisibleOnAviatorSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).isDisplayed());
			System.out.println("SynapseAviator is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseAviator"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			System.out.println("CloseInLogin is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			System.out.println("SynapseSignup is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC82-Synapse_SignUp",
					"User Should be able to Navigate to Signup Page from Aviator SignUp Button",
					"User is able to Navigate to Signup Page  from Aviator SignUp Button", "Pass");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC82-Synapse_SignUp",
					"User Should be able to Navigate to Signup Page from Aviator SignUp Button ",
					"User is able to Navigate to Signup Page from Aviator SignUp Button", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-83(Synapse_SignUp) PD69988//
	// Check if the "Sign Up" Button is visible on the login Modal popup window
	public boolean SignupLiveCasinoSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLiveCasino"))).isDisplayed());
			System.out.println("SynapseLiveCasino is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLiveCasino"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			System.out.println("SynapseFavourite is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC83-Synapse_SignUp",
					"User Should be able to see Signup in Login Window in LiveCasino when clicked on Favourite",
					"User is able to Navigate to see Signup in Login Window in LiveCasino when clicked on Favourite",
					"Pass");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC83-Synapse_SignUp",
					"User Should be able to Navigate to see Signup in Login Window in LiveCasino when clicked on Favourite ",
					"User is able to Navigate to see Signup in Login Window in LiveCasino when clicked on Favourite",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-84(Synapse_SignUp) PD69988//
	// Check if the "Sign Up" Button is visible on the login Modal popup window
	public boolean SignupLiveCasinoFavouriteSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLiveCasino"))).isDisplayed());
			System.out.println("SynapseLiveCasino is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLiveCasino"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			System.out.println("SynapseFavourite is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).isDisplayed());
			System.out.println("SignupInLogin is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC84-Synapse_SignUp",
					"User Should be able to Navigate to Signup Page from Login Window in LiveCasino when clicked on Favourite",
					"User is able to Navigate to Signup Page from Login Window in LiveCasino when clicked on Favourite",
					"Pass");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC84-Synapse_SignUp",
					"User Should be able to Navigate to Signup Page from Login Window in LiveCasino when clicked on Favourite ",
					"User is able to Navigate to Signup Page from Login Window in LiveCasino when clicked on Favourite",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-85(Synapse_SignUp) PD69988//
	// Check if the "Sign Up" Button is visible on the login Modal popup window
	public boolean SignupCasinoSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseCasino"))).isDisplayed());
			System.out.println("SynapseCasino is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseCasino"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			System.out.println("SynapseFavourite is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC85-Synapse_SignUp",
					"User Should be able to see Signup in Login Window in Casino when clicked on Favourite",
					"User is able to Navigate to see Signup in Login Window in Casino when clicked on Favourite",
					"Pass");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC85-Synapse_SignUp",
					"User Should be able to Navigate to see Signup in Login Window in Casino when clicked on Favourite ",
					"User is able to Navigate to see Signup in Login Window in Casino when clicked on Favourite",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-86(Synapse_SignUp) PD69988//
	// Check if the "Sign Up" Button is visible on the login Modal popup window
	public boolean SignupCasinoFavouriteSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseCasino"))).isDisplayed());
			System.out.println("SynapseCasino is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseCasino"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			System.out.println("SynapseFavourite is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).isDisplayed());
			System.out.println("SignupInLogin is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC86-Synapse_SignUp",
					"User Should be able to Navigate to Signup Page from Login Window in Casino when clicked on Favourite",
					"User is able to Navigate to Signup Page from Login Window in Casino when clicked on Favourite",
					"Pass");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC86-Synapse_SignUp",
					"User Should be able to Navigate to Signup Page from Login Window in Casino when clicked on Favourite ",
					"User is able to Navigate to Signup Page from Login Window in Casino when clicked on Favourite",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-87(Synapse_SignUp) PD69988//
	// Check if the "Sign Up" Button is visible on the login Modal popup window
	public boolean SignupVirtualsSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseVirtuals"))).isDisplayed());
			System.out.println("SynapseVirtuals is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseVirtuals"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			System.out.println("SynapseFavourite is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC87-Synapse_SignUp",
					"User Should be able to see Signup in Login Window in Virtuals when clicked on Favourite",
					"User is able to Navigate to see Signup in Login Window in Virtuals when clicked on Favourite",
					"Pass");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC87-Synapse_SignUp",
					"User Should be able to Navigate to see Signup in Login Window in Virtuals when clicked on Favourite ",
					"User is able to Navigate to see Signup in Login Window in Virtuals when clicked on Favourite",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-88(Synapse_SignUp) PD69988//
	// Check if the "Sign Up" Button is visible on the login Modal popup window
	public boolean SignupVirtualsFavouriteSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseVirtuals"))).isDisplayed());
			System.out.println("SynapseVirtuals is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseVirtuals"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			System.out.println("SynapseFavourite is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC88-Synapse_SignUp",
					"User Should be able to Navigate to Signup Page from Login Window in Virtuals when clicked on Favourite",
					"User is able to Navigate to Signup Page from Login Window in Virtuals when clicked on Favourite",
					"Pass");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC88-Synapse_SignUp",
					"User Should be able to Navigate to Signup Page from Login Window in Virtuals when clicked on Favourite ",
					"User is able to Navigate to Signup Page from Login Window in Virtuals when clicked on Favourite",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-89(Synapse_SignUp) PD69988//
	// Check if the "Sign Up" Button is visible on the login Modal popup window
	public boolean SignupPromotionsSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapsePromotions"))).isDisplayed());
			System.out.println("SynapsePromotions is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePromotions"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC89-Synapse_SignUp",
					"User Should be able to see Signup in Login Window in Promotions when clicked on Favourite",
					"User is able to Navigate to see Signup in Login Window in Promotions when clicked on Favourite",
					"Pass");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC89-Synapse_SignUp",
					"User Should be able to Navigate to see Signup in Login Window in Promotions when clicked on Favourite ",
					"User is able to Navigate to see Signup in Login Window in Promotions when clicked on Favourite",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-90(Synapse_SignUp) PD69988//
	// Check if the "Sign Up" Button is visible on the login Modal popup window
	public boolean SignupPromotionsFavouriteSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapsePromotions"))).isDisplayed());
			System.out.println("SynapsePromotions is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePromotions"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			System.out.println("SynapseSignup is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC90-Synapse_SignUp",
					"User Should be able to Navigate to Signup Page from Login Window in Promotions when clicked on Favourite",
					"User is able to Navigate to Signup Page from Login Window in Promotions when clicked on Favourite",
					"Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC90-Synapse_SignUp",
					"User Should be able to Navigate to Signup Page from Login Window in Promotions when clicked on Favourite ",
					"User is able to Navigate to Signup Page from Login Window in Promotions when clicked on Favourite",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-62(Synapse_SignUp) PD69988//
	// Check if the system accepts a valid sign-up code.
	public boolean SignupSignupCodeSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VoucherCodeDD"))).isDisplayed());
			System.out.println("VoucherCodeDD is Present\n");
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VoucherCodeDD"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseVoucherCode"))).sendKeys("QWERT");
			Thread.sleep(2000);

			report.detailsAppend("TC62-Synapse_SignUp", "User Should be able to see Valid Signup code accepted",
					"User is able to see Valid Signup code accepted", "Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC62-Synapse_SignUp", "User Should be able to see Valid Signup code accepted",
					"User is able to see Valid Signup code accepted", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-63(Synapse_SignUp) PD69988//
	// Check if the system accepts a sign-up code in a case-insensitive manner
	public boolean SignupSignupCodeCaseSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VoucherCodeDD"))).isDisplayed());
			System.out.println("VoucherCodeDD is Present\n");
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VoucherCodeDD"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseVoucherCode"))).sendKeys("QwertgD");
			Thread.sleep(2000);

			report.detailsAppend("TC63-Synapse_SignUp",
					"User Should be able to see Valid Signup code with Case insensitive characters accepted",
					"User is able to see Valid Signup code with Case insensitive characters accepted", "Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC63-Synapse_SignUp",
					"User Should be able to see Valid Signup code with Case insensitive characters accepted",
					"User is able to see Valid Signup code with Case insensitive characters accepted", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-64(Synapse_SignUp) PD69988//
	// Check if the system accepts a sign-up code containing numeric characters.
	public boolean SignupSignupCodeNumbersSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VoucherCodeDD"))).isDisplayed());
			System.out.println("VoucherCodeDD is Present\n");
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VoucherCodeDD"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseVoucherCode"))).sendKeys("1234567");
			Thread.sleep(2000);

			report.detailsAppend("TC64-Synapse_SignUp",
					"User Should be able to see Valid Signup code with numeric characters accepted",
					"User is able to see Valid Signup code with numeric characters accepted", "Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC64-Synapse_SignUp",
					"User Should be able to see Valid Signup code with Case insensitive characters accepted",
					"User is able to see Valid Signup code with Case insensitive characters accepted", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-65(Synapse_SignUp) PD69988//
	// Check if the system accepts a sign-up code containing special characters.
	public boolean SignupSignupCodeSpecialSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VoucherCodeDD"))).isDisplayed());
			System.out.println("VoucherCodeDD is Present\n");
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VoucherCodeDD"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseVoucherCode"))).sendKeys("@#$%Yu");
			Thread.sleep(2000);

			report.detailsAppend("TC65-Synapse_SignUp",
					"User Should be able to see Valid Signup code with Special characters accepted",
					"User is able to see Valid Signup code with Special characters accepted", "Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC65-Synapse_SignUp",
					"User Should be able to see Valid Signup code with Special characters accepted",
					"User is able to see Valid Signup code with Special characters accepted", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-66(Synapse_SignUp) PD69988//
	// Check if the system accepts a valid sign-up code.
	public boolean SignupReferalCodeSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VoucherCodeDD"))).isDisplayed());
			System.out.println("VoucherCodeDD is Present\n");
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("ReferalCode"))).sendKeys("QWERT");
			Thread.sleep(2000);

			report.detailsAppend("TC66-Synapse_SignUp", "User Should be able to see Valid Referal code accepted",
					"User is able to see Valid Referal code accepted", "Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC66-Synapse_SignUp", "User Should be able to see Valid Referal code accepted",
					"User is able to see Valid Referal code accepted", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-67(Synapse_SignUp) PD69988//
	// Check if the system accepts a sign-up code in a case-insensitive manner
	public boolean SignupReferalCodeCaseSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VoucherCodeDD"))).isDisplayed());
			System.out.println("VoucherCodeDD is Present\n");
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("ReferalCode"))).sendKeys("QwertgD");
			Thread.sleep(2000);

			report.detailsAppend("TC67-Synapse_SignUp",
					"User Should be able to see Valid Referal code with Case insensitive characters accepted",
					"User is able to see Valid Referal code with Case insensitive characters accepted", "Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC67-Synapse_SignUp",
					"User Should be able to see Valid Referal code with Case insensitive characters accepted",
					"User is able to see Valid Referal code with Case insensitive characters accepted", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-68(Synapse_SignUp) PD69988//
	// Check if the system accepts a sign-up code containing numeric characters.
	public boolean SignupReferalCodeNumbersSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VoucherCodeDD"))).isDisplayed());
			System.out.println("VoucherCodeDD is Present\n");
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("ReferalCode"))).sendKeys("1234567");
			Thread.sleep(2000);

			report.detailsAppend("TC68-Synapse_SignUp",
					"User Should be able to see Valid Referal code with numeric characters accepted",
					"User is able to see Valid Referal code with numeric characters accepted", "Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC68-Synapse_SignUp",
					"User Should be able to see Valid Referal code with Case insensitive characters accepted",
					"User is able to see Valid Referal code with Case insensitive characters accepted", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-69(Synapse_SignUp) PD69988//
	// Check if the system accepts a sign-up code containing special characters.
	public boolean SignupReferalCodeSpecialSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VoucherCodeDD"))).isDisplayed());
			System.out.println("VoucherCodeDD is Present\n");
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("ReferalCode"))).sendKeys("@#$%Yu");
			Thread.sleep(2000);

			report.detailsAppend("TC69-Synapse_SignUp",
					"User Should be able to see Valid Referal code with Special characters accepted",
					"User is able to see Valid Referal code with Special characters accepted", "Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC69-Synapse_SignUp",
					"User Should be able to see Valid Referal code with Special characters accepted",
					"User is able to see Valid Referal code with Special characters accepted", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-31(Synapse SignUp) AS66528//
	// Check if the system rejects a first name containing numeric characters.
	public boolean FirstName(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup1"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).isDisplayed());
			System.out.print("SynapseSignup is Visible");

			webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).sendKeys(xpathMap.get("FirstN"));
			Thread.sleep(4000);
			System.out.print("Name is Entered");

			webdriver.findElement(By.xpath(xpathMap.get("LastNameForSignUp"))).click();
			Thread.sleep(5000);

			report.detailsAppend("TC31-SynapseSign",
					"Check if the system rejects a first name containing numeric characters.	",
					"System rejects a first name containing numeric characters", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC31-SynapseSign",
					"Check if the system rejects a first name containing numeric characters.	",
					"System rejects a first name containing numeric characters", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-32(Synapse SignUp) AS66528//
	// Check if the system rejects a first name containing special characters.
	public boolean FirstNameSC(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup1"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).isDisplayed());
			System.out.print("SynapseSignup is Visible");

			webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).sendKeys(xpathMap.get("SpecialChar"));
			Thread.sleep(4000);
			System.out.print("Name is Entered");

			webdriver.findElement(By.xpath(xpathMap.get("LastNameForSignUp"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC32-SynapseSign",
					"Check if the system rejects a first name containing speacial characters.	",
					"System rejects a first name containing special characters", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC32-SynapseSign",
					"Check if the system rejects a first name containing speacial characters.	",
					"System rejects a first name containing special characters", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-33(Synapse SignUp) AS66528//
	// Check if the system accepts a valid Surname.
	public boolean ValidLastName(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup1"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).isDisplayed());
			System.out.print("SynapseSignup is Visible");

			webdriver.findElement(By.xpath(xpathMap.get("LastNameForSignUp"))).sendKeys(xpathMap.get("LastN"));
			Thread.sleep(4000);
			System.out.print("Name is Entered");

			webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC33-SynapseSign", "Check if the system accepts a valid Surname.",
					"System accepts a valid Surname.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC33-SynapseSign", "Check if the system accepts a valid Surname.",
					"System accepts a valid Surname.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-34(Synapse SignUp) AS66528//
	// Check if the system accepts a Surname containing spaces.
	public boolean LastNameWithSpaces(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup1"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).isDisplayed());
			System.out.print("SynapseSignup is Visible");

			webdriver.findElement(By.xpath(xpathMap.get("LastNameForSignUp")))
					.sendKeys(xpathMap.get("LastNWithSpaces"));
			Thread.sleep(4000);
			System.out.print("Name is Entered");

			webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC34-SynapseSign", "Check if the system accepts a Surname containing spaces.",
					"System accepts a Surname containing spaces.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC34-SynapseSign", "Check if the system accepts a Surname containing spaces.",
					"System accepts a Surname containing spaces.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-35(Synapse SignUp) AS66528//
	// Check if the system accepts a Surname containing spaces.
	public boolean LastNameWithHyphen(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup1"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).isDisplayed());
			System.out.print("SynapseSignup is Visible");

			webdriver.findElement(By.xpath(xpathMap.get("LastNameForSignUp"))).sendKeys(xpathMap.get("HyphenSirname"));
			Thread.sleep(4000);
			System.out.print("Name is Entered");

			webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC35-SynapseSign",
					"Check if the system accepts a Surname containing a hyphen (e.g., Smith-Jones).",
					"System accepts a Surname containing a hyphen (e.g., Smith-Jones).", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC35-SynapseSign",
					"Check if the system accepts a Surname containing a hyphen (e.g., Smith-Jones).",
					"System accepts a Surname containing a hyphen (e.g., Smith-Jones).", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-36(Synapse SignUp) AS66528//
	// Check if the system reject a blank Surname..
	public boolean BlankLastName(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup1"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).isDisplayed());
			System.out.print("SynapseSignup is Visible");

			webdriver.findElement(By.xpath(xpathMap.get("LastNameForSignUp"))).sendKeys(xpathMap.get("BlankSirName"));
			Thread.sleep(4000);
			System.out.print("Name is Entered");

			webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC36-SynapseSign", "Check if the system reject a blank Surname.",
					"System reject a blank Surname.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC36-SynapseSign", "Check if the system reject a blank Surname.",
					"System reject a blank Surname.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-37(Synapse SignUp) AS66528//
	// Check if the system reject a Surname with Numeric Character
	public boolean LastNameWithNumericChar(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup1"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).isDisplayed());
			System.out.print("SynapseSignup is Visible");

			webdriver.findElement(By.xpath(xpathMap.get("LastNameForSignUp")))
					.sendKeys(xpathMap.get("SirNameWithNumeric"));
			Thread.sleep(4000);
			System.out.print("Name is Entered");

			webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC37-SynapseSign", "Check if the system reject a Surname with Numeric Character",
					"System reject a Surname with Numeric Character", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC37-SynapseSign", "Check if the system reject a Surname with Numeric Character",
					"System reject a Surname with Numeric Character", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-38(Synapse SignUp) AS66528//
	// To check user is able to Choose his preferred ID document from dropdown
	public boolean ValidDocsFromDD(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup1"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).isDisplayed());
			System.out.print("SynapseSignup is Visible");

			webdriver.findElement(By.xpath(xpathMap.get("DropDownSignUp"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("NewVotersID"))).isDisplayed());
			System.out.print("DD is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("NewVotersID"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC38-SynapseSign",
					"To check user is able to Choose his preferred ID document from dropdown",
					"User is able to Choose his preferred ID document from dropdown", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC38-SynapseSign",
					"To check user is able to Choose his preferred ID document from dropdown",
					"User is able to Choose his preferred ID document from dropdown", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-39(Synapse SignUp) AS66528//
	// To check user is able to signup if the document number entered is according
	// to the policy of the chosen ID type
	public boolean ValidIDNumber(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup1"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).isDisplayed());
			System.out.print("SynapseSignup is Visible");

			webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).sendKeys(xpathMap.get("FirstN1"));
			;
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LastNameForSignUp"))).isDisplayed());
			System.out.print("FirstName is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LastNameForSignUp"))).sendKeys(xpathMap.get("LastN"));
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobNo31"))).isDisplayed());
			System.out.print("LastName is clicked");

			long min = 807060501; // Minimum 9-digit number
			long max = 999999999; // Maximum 9-digit number
			// Create an instance of Random class
			Random random = new Random();
			// Generate random number within the specified range
			long randomNumber = random.nextLong() % (max - min + 1) + min;
			// Ensure the generated number is positive
			randomNumber = Math.abs(randomNumber);
			String randomString = Long.toString(randomNumber);
			System.out.println(randomString);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobNo31"))).sendKeys(randomString);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword31"))).isDisplayed());
			System.out.print("Mobile No is entered");

			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword31"))).sendKeys(xpathMap.get("Psd31"));
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("SelectIDType"))).click();
			System.out.print("SelectedID DropDown is Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswportTabUnderID"))).click();
			System.out.print("SelectedID DropDown is Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("IDNumberTab"))).sendKeys(xpathMap.get("IDNumberData"));
			System.out.print("IDNumber is Entered");
			Thread.sleep(2000);

			try {
				webdriver.findElement(By.xpath(xpathMap.get("DayDD"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SelectedDD"))).click();
				System.out.print("Date is Selected");
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("Date DropDown not selected" + e);
			}
			try {
				webdriver.findElement(By.xpath(xpathMap.get("MonthDD"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SelectedDD"))).click();
				System.out.print("Month is Selected");
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("Month DropDown not selected" + e);
			}
			try {
				webdriver.findElement(By.xpath(xpathMap.get("YearDD"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SelectedDD"))).click();
				System.out.print("Year is Selected");
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("Year DropDown not selected" + e);
			}

			webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
			System.out.print("AgreeAll Checkbox is Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseRegisterButton"))).click();
			System.out.print("Register Button is Entered");
			Thread.sleep(6000);

			report.detailsAppend("TC39-SynapseSign",
					"To check user is able to signup if the document number entered is according to the policy of the chosen ID type",
					"User is able to signup if the document number entered is according to the policy of the chosen ID type",
					"Pass");
			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(xpathMap.get("ProfileOpen"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("LogoutinProfile"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("ProceedButton"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC39-SynapseSign",
					"To check user is able to signup if the document number entered is according to the policy of the chosen ID type",
					"User is able to signup if the document number entered is according to the policy of the chosen ID type",
					"Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-52(Synapse SignUp) AS66528//
	// To check user is able to Signup if entered "Passport "number is as per policy
	public boolean PassportNumber(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup1"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).isDisplayed());
			System.out.print("SynapseSignup is Visible");

			webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).sendKeys(xpathMap.get("FirstN1"));
			;
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LastNameForSignUp"))).isDisplayed());
			System.out.print("FirstName is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LastNameForSignUp"))).sendKeys(xpathMap.get("LastN"));
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobNo31"))).isDisplayed());
			System.out.print("LastName is clicked");

			long min = 807060501; // Minimum 9-digit number
			long max = 999999999; // Maximum 9-digit number
			// Create an instance of Random class
			Random random = new Random();
			// Generate random number within the specified range
			long randomNumber = random.nextLong() % (max - min + 1) + min;
			// Ensure the generated number is positive
			randomNumber = Math.abs(randomNumber);
			String randomString = Long.toString(randomNumber);
			System.out.println(randomString);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobNo31"))).sendKeys(randomString);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword31"))).isDisplayed());
			System.out.print("Mobile No is entered");

			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword31"))).sendKeys(xpathMap.get("Psd31"));
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("SelectIDType"))).click();
			System.out.print("SelectedID DropDown is Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswportTabUnderID"))).click();
			System.out.print("SelectedID DropDown is Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("IDNumberTab"))).sendKeys(xpathMap.get("IDNumberData"));
			System.out.print("IDNumber is Entered");
			Thread.sleep(2000);

			try {
				webdriver.findElement(By.xpath(xpathMap.get("DayDD"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SelectedDD"))).click();
				System.out.print("Date is Selected");
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("Date DropDown not selected" + e);
			}
			try {
				webdriver.findElement(By.xpath(xpathMap.get("MonthDD"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SelectedDD"))).click();
				System.out.print("Month is Selected");
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("Month DropDown not selected" + e);
			}
			try {
				webdriver.findElement(By.xpath(xpathMap.get("YearDD"))).click();
				webdriver.findElement(By.xpath(xpathMap.get("SelectedDD"))).click();
				System.out.print("Year is Selected");
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("Year DropDown not selected" + e);
			}

			webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
			System.out.print("AgreeAll Checkbox is Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseRegisterButton"))).click();
			System.out.print("Register Button is Entered");
			Thread.sleep(6000);

			report.detailsAppend("TC52-SynapseSign",
					"To check user is able to Signup if entered \"Passport \"number is as per policy",
					"User is able to Signup if entered \"Passport \"number is as per policy", "Pass");

			webdriver.navigate().refresh();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("ProfileOpen"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("LogoutinProfile"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("ProceedButton"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC52-SynapseSign",
					"To check user is able to Signup if entered \"Passport \"number is as per policy",
					"User is able to Signup if entered \"Passport \"number is as per policy", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-53(Synapse SignUp) AS66528//
	// To check user is not able to Signup if entered "Passport "number is not as
	// per policy
	public boolean WrongPassportNumber(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup1"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).isDisplayed());
			System.out.print("SynapseSignup is Visible");

			webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).sendKeys(xpathMap.get("FirstN1"));
			;
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LastNameForSignUp"))).isDisplayed());
			System.out.print("FirstName is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LastNameForSignUp"))).sendKeys(xpathMap.get("LastN"));
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobNo31"))).isDisplayed());
			System.out.print("LastName is clicked");

			long min = 807060501; // Minimum 9-digit number
			long max = 999999999; // Maximum 9-digit number
			// Create an instance of Random class
			Random random = new Random();
			// Generate random number within the specified range
			long randomNumber = random.nextLong() % (max - min + 1) + min;
			// Ensure the generated number is positive
			randomNumber = Math.abs(randomNumber);
			String randomString = Long.toString(randomNumber);
			System.out.println(randomString);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobNo31"))).sendKeys(randomString);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword31"))).isDisplayed());
			System.out.print("Mobile No is entered");

			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword31"))).sendKeys(xpathMap.get("Psd31"));
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("SelectIDType"))).click();
			System.out.print("SelectedID DropDown is Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswportTabUnderID"))).click();
			System.out.print("SelectedID DropDown is Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("IDNumberTab"))).sendKeys(xpathMap.get("IdNumberWrongData"));
			System.out.print("IDNumber is Entered");
			Thread.sleep(2000);

			try {
				webdriver.findElement(By.xpath(xpathMap.get("DayDD"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SelectedDD"))).click();
				System.out.print("Date is Selected");
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("Date DropDown not selected" + e);
			}
			try {
				webdriver.findElement(By.xpath(xpathMap.get("MonthDD"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SelectedDD"))).click();
				System.out.print("Month is Selected");
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("Month DropDown not selected" + e);
			}
			try {
				webdriver.findElement(By.xpath(xpathMap.get("YearDD"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SelectedDD"))).click();
				System.out.print("Year is Selected");
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("Year DropDown not selected" + e);
			}

			webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
			System.out.print("AgreeAll Checkbox is Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseRegisterButton"))).click();
			System.out.print("Register Button is Entered");
			Thread.sleep(6000);

			report.detailsAppend("TC53-SynapseSign",
					"To check user is not able to Signup if entered \"Passport \"number is not as per policy",
					"User is not able to Signup if entered \"Passport \"number is not as per policy", "Pass");

			webdriver.navigate().refresh();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("ProfileOpen"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("LogoutinProfile"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("ProceedButton"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {

			report.detailsAppend("TC53-SynapseSign",
					"To check user is not able to Signup if entered \"Passport \"number is not as per policy",
					"User is not able to Signup if entered \"Passport \"number is not as per policy", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-54(Synapse SignUp) AS66528//
	// To check user is able to Select his preferred Day from date of birth dropdown
	public boolean DaySelect(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup1"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).isDisplayed());
			System.out.print("SynapseSignup is Visible");

			webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).sendKeys(xpathMap.get("FirstN1"));
			;
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LastNameForSignUp"))).isDisplayed());
			System.out.print("FirstName is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LastNameForSignUp"))).sendKeys(xpathMap.get("LastN"));
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobNo31"))).isDisplayed());
			System.out.print("LastName is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobNo31"))).sendKeys(xpathMap.get("MobNo31"));
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword31"))).isDisplayed());
			System.out.print("Mobile No is entered");

			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword31"))).sendKeys(xpathMap.get("Psd31"));
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("SelectIDType"))).click();
			System.out.print("SelectedID DropDown is Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswportTabUnderID"))).click();
			System.out.print("SelectedID DropDown is Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("IDNumberTab"))).sendKeys(xpathMap.get("IdNumberWrongData"));
			System.out.print("IDNumber is Entered");
			Thread.sleep(2000);

			try {
				webdriver.findElement(By.xpath(xpathMap.get("DayDD"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SelectedDD"))).click();
				System.out.print("Date is Selected");
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("Date DropDown not selected" + e);
			}

			report.detailsAppend("TC54-SynapseSign",
					"To check user is able to Select his preferred Day from date of birth dropdown",
					"User is able to Select his preferred Day from date of birth dropdown", "Pass");

//			try {
//				webdriver.findElement(By.xpath(xpathMap.get("MonthDD"))).click();
//				Thread.sleep(2000);
//				webdriver.findElement(By.xpath(xpathMap.get("SelectedDD"))).click();
//				System.out.print("Month is Selected");
//				Thread.sleep(2000);
//			} catch (Exception e) {
//				System.out.print("Month DropDown not selected" + e);
//			}
//			try {
//				webdriver.findElement(By.xpath(xpathMap.get("YearDD"))).click();
//				Thread.sleep(2000);
//				webdriver.findElement(By.xpath(xpathMap.get("SelectedDD"))).click();
//				System.out.print("Year is Selected");
//				Thread.sleep(2000);
//			} catch (Exception e) {
//				System.out.print("Year DropDown not selected" + e);
//			}
//
//			webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
//			System.out.print("AgreeAll Checkbox is Clicked");
//			Thread.sleep(2000);
//			webdriver.findElement(By.xpath(xpathMap.get("SynapseRegisterButton"))).click();
//			System.out.print("Register Button is Entered");
//			Thread.sleep(2000);
//
//			webdriver.navigate().refresh();
//			Thread.sleep(2000);
//			webdriver.findElement(By.xpath(xpathMap.get("ProfileOpen"))).click();
//			Thread.sleep(2000);
//			webdriver.findElement(By.xpath(xpathMap.get("LogoutinProfile"))).click();
//			Thread.sleep(2000);
//			webdriver.findElement(By.xpath(xpathMap.get("ProceedButton"))).click();
//			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {

			report.detailsAppend("TC54-SynapseSign",
					"To check user is able to Select his preferred Day from date of birth dropdown",
					"User is able to Select his preferred Day from date of birth dropdown", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-55(Synapse SignUp) AS66528//
	// To check user is not able to signup if Day is not selected from date of birth
	// dropdown
	public boolean DayNotSelect(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup1"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).isDisplayed());
			System.out.print("SynapseSignup is Visible");

			webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).sendKeys(xpathMap.get("FirstN1"));
			;
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LastNameForSignUp"))).isDisplayed());
			System.out.print("FirstName is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LastNameForSignUp"))).sendKeys(xpathMap.get("LastN"));
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobNo31"))).isDisplayed());
			System.out.print("LastName is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobNo31"))).sendKeys(xpathMap.get("MobNo31"));
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword31"))).isDisplayed());
			System.out.print("Mobile No is entered");

			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword31"))).sendKeys(xpathMap.get("Psd31"));
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("SelectIDType"))).click();
			System.out.print("SelectedID DropDown is Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswportTabUnderID"))).click();
			System.out.print("SelectedID DropDown is Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("IDNumberTab"))).sendKeys(xpathMap.get("IdNumberWrongData"));
			System.out.print("IDNumber is Entered");
			Thread.sleep(2000);

			try {
//				webdriver.findElement(By.xpath(xpathMap.get("DayDD"))).click();
//				Thread.sleep(2000);
//				webdriver.findElement(By.xpath(xpathMap.get("SelectedDD"))).click();
//				System.out.print("Date is Selected");
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("Date DropDown not selected" + e);
			}

			try {
				webdriver.findElement(By.xpath(xpathMap.get("MonthDD"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SelectedDD"))).click();
				System.out.print("Month is Selected");
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("Month DropDown not selected" + e);
			}
			try {
				webdriver.findElement(By.xpath(xpathMap.get("YearDD"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SelectedDD"))).click();
				System.out.print("Year is Selected");
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("Year DropDown not selected" + e);
			}

			webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
			System.out.print("AgreeAll Checkbox is Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseRegisterButton"))).click();
			System.out.print("Register Button is Entered");
			Thread.sleep(2000);

			report.detailsAppend("TC55-SynapseSign",
					"To check user is not able to signup if  Day  is not selected from date of birth dropdown",
					"User is not able to signup if  Day  is not selected from date of birth dropdown", "Pass");

			webdriver.navigate().refresh();
//			Thread.sleep(2000);
//			webdriver.findElement(By.xpath(xpathMap.get("ProfileOpen"))).click();
//			Thread.sleep(2000);
//			webdriver.findElement(By.xpath(xpathMap.get("LogoutinProfile"))).click();
//			Thread.sleep(2000);
//			webdriver.findElement(By.xpath(xpathMap.get("ProceedButton"))).click();
//			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {

			report.detailsAppend("TC55-SynapseSign",
					"To check user is not able to signup if  Day  is not selected from date of birth dropdown",
					"User is not able to signup if  Day  is not selected from date of birth dropdown", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-56(Synapse SignUp) AS66528//
	// To check user is able to Select his preferred Month from Month of birth
	// dropdown
	public boolean MonthSelect(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup1"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).isDisplayed());
			System.out.print("SynapseSignup is Visible");

			webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).sendKeys(xpathMap.get("FirstN1"));
			;
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LastNameForSignUp"))).isDisplayed());
			System.out.print("FirstName is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LastNameForSignUp"))).sendKeys(xpathMap.get("LastN"));
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobNo31"))).isDisplayed());
			System.out.print("LastName is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobNo31"))).sendKeys(xpathMap.get("MobNo31"));
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword31"))).isDisplayed());
			System.out.print("Mobile No is entered");

			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword31"))).sendKeys(xpathMap.get("Psd31"));
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("SelectIDType"))).click();
			System.out.print("SelectedID DropDown is Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswportTabUnderID"))).click();
			System.out.print("SelectedID DropDown is Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("IDNumberTab"))).sendKeys(xpathMap.get("IdNumberWrongData"));
			System.out.print("IDNumber is Entered");
			Thread.sleep(2000);

			try {
				webdriver.findElement(By.xpath(xpathMap.get("DayDD"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SelectedDD"))).click();
				System.out.print("Date is Selected");
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("Date DropDown not selected" + e);
			}

			try {
				webdriver.findElement(By.xpath(xpathMap.get("MonthDD"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SelectedDD"))).click();
				System.out.print("Month is Selected");
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("Month DropDown not selected" + e);
			}

			report.detailsAppend("TC56-SynapseSign",
					"To check user is able to Select his preferred Month from Month of birth dropdown	",
					"User is able to Select his preferred Month from Month of birth dropdown", "Pass");

//			try {
//				webdriver.findElement(By.xpath(xpathMap.get("YearDD"))).click();
//				webdriver.findElement(By.xpath(xpathMap.get("SelectedDD"))).click();
//				System.out.print("Year is Selected");
//				Thread.sleep(2000);
//			} catch (Exception e) {
//				System.out.print("Year DropDown not selected" + e);
//			}
//
//			webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
//			System.out.print("AgreeAll Checkbox is Clicked");
//			Thread.sleep(2000);
//			webdriver.findElement(By.xpath(xpathMap.get("SynapseRegisterButton"))).click();
//			System.out.print("Register Button is Entered");
//			Thread.sleep(2000);
//
//			webdriver.navigate().refresh();
//			Thread.sleep(2000);
//			webdriver.findElement(By.xpath(xpathMap.get("ProfileOpen"))).click();
//			Thread.sleep(2000);
//			webdriver.findElement(By.xpath(xpathMap.get("LogoutinProfile"))).click();
//			Thread.sleep(2000);
//			webdriver.findElement(By.xpath(xpathMap.get("ProceedButton"))).click();
//			Thread.sleep(2000);
//
//			log.debug("Switch to default tab");

		} catch (Exception e) {

			report.detailsAppend("TC56-SynapseSign",
					"To check user is able to Select his preferred Month from Month of birth dropdown	",
					"User is able to Select his preferred Month from Month of birth dropdown", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-57(Synapse SignUp) AS66528//
	// To check user is not able to signup if Month is not selected from date of
	// birth dropdown
	public boolean MonthNotSelect(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup1"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).isDisplayed());
			System.out.print("SynapseSignup is Visible");

			webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).sendKeys(xpathMap.get("FirstN1"));
			;
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LastNameForSignUp"))).isDisplayed());
			System.out.print("FirstName is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LastNameForSignUp"))).sendKeys(xpathMap.get("LastN"));
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobNo31"))).isDisplayed());
			System.out.print("LastName is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobNo31"))).sendKeys(xpathMap.get("MobNo31"));
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword31"))).isDisplayed());
			System.out.print("Mobile No is entered");

			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword31"))).sendKeys(xpathMap.get("Psd31"));
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("SelectIDType"))).click();
			System.out.print("SelectedID DropDown is Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswportTabUnderID"))).click();
			System.out.print("SelectedID DropDown is Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("IDNumberTab"))).sendKeys(xpathMap.get("IdNumberWrongData"));
			System.out.print("IDNumber is Entered");
			Thread.sleep(2000);

			try {
				webdriver.findElement(By.xpath(xpathMap.get("DayDD"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SelectedDD"))).click();
				System.out.print("Date is Selected");
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("Date DropDown not selected" + e);
			}

//			try {
//				webdriver.findElement(By.xpath(xpathMap.get("MonthDD"))).click();
//				Thread.sleep(2000);
//				webdriver.findElement(By.xpath(xpathMap.get("SelectedDD"))).click();
//				System.out.print("Month is Selected");
//				Thread.sleep(2000);
//			} catch (Exception e) {
//				System.out.print("Month DropDown not selected" + e);
//			}
			try {
				webdriver.findElement(By.xpath(xpathMap.get("YearDD"))).click();
				webdriver.findElement(By.xpath(xpathMap.get("SelectedDD"))).click();
				System.out.print("Year is Selected");
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("Year DropDown not selected" + e);
			}

			webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
			System.out.print("AgreeAll Checkbox is Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseRegisterButton"))).click();
			System.out.print("Register Button is Entered");
			Thread.sleep(2000);

			report.detailsAppend("TC57-SynapseSign",
					"To check user is not able to signup if  Month  is not selected from date of birth dropdown",
					"User is not able to signup if  Month  is not selected from date of birth dropdown", "Pass");

			webdriver.navigate().refresh();
//			Thread.sleep(2000);
//			webdriver.findElement(By.xpath(xpathMap.get("ProfileOpen"))).click();
//			Thread.sleep(2000);
//			webdriver.findElement(By.xpath(xpathMap.get("LogoutinProfile"))).click();
//			Thread.sleep(2000);
//			webdriver.findElement(By.xpath(xpathMap.get("ProceedButton"))).click();
//			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {

			report.detailsAppend("TC57-SynapseSign",
					"To check user is not able to signup if  Month  is not selected from date of birth dropdown",
					"User is not able to signup if  Month  is not selected from date of birth dropdown", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-58(Synapse SignUp) AS66528//
	// To check user is able to Select his preferred Year from Year of birth
	// dropdown
	public boolean YearSelect(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup1"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).isDisplayed());
			System.out.print("SynapseSignup is Visible");

			webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).sendKeys(xpathMap.get("FirstN1"));
			;
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LastNameForSignUp"))).isDisplayed());
			System.out.print("FirstName is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LastNameForSignUp"))).sendKeys(xpathMap.get("LastN"));
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobNo31"))).isDisplayed());
			System.out.print("LastName is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobNo31"))).sendKeys(xpathMap.get("MobNo31"));
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword31"))).isDisplayed());
			System.out.print("Mobile No is entered");

			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword31"))).sendKeys(xpathMap.get("Psd31"));
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("SelectIDType"))).click();
			System.out.print("SelectedID DropDown is Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswportTabUnderID"))).click();
			System.out.print("SelectedID DropDown is Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("IDNumberTab"))).sendKeys(xpathMap.get("IdNumberWrongData"));
			System.out.print("IDNumber is Entered");
			Thread.sleep(2000);

			try {
				webdriver.findElement(By.xpath(xpathMap.get("DayDD"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SelectedDD"))).click();
				System.out.print("Date is Selected");
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("Date DropDown not selected" + e);
			}

			try {
				webdriver.findElement(By.xpath(xpathMap.get("MonthDD"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SelectedDD"))).click();
				System.out.print("Month is Selected");
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("Month DropDown not selected" + e);
			}

			try {
				webdriver.findElement(By.xpath(xpathMap.get("YearDD"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SelectedDD"))).click();
				System.out.print("Year is Selected");
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("Year DropDown not selected" + e);
			}

			report.detailsAppend("TC58-SynapseSign",
					"To check user is able to Select his preferred Year from Year of birth dropdown",
					"User is able to Select his preferred Year from Year of birth dropdown", "Pass");

//			webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
//			System.out.print("AgreeAll Checkbox is Clicked");
//			Thread.sleep(2000);
//			webdriver.findElement(By.xpath(xpathMap.get("SynapseRegisterButton"))).click();
//			System.out.print("Register Button is Entered");
//			Thread.sleep(2000);
//
//			webdriver.navigate().refresh();
//			Thread.sleep(2000);
//			webdriver.findElement(By.xpath(xpathMap.get("ProfileOpen"))).click();
//			Thread.sleep(2000);
//			webdriver.findElement(By.xpath(xpathMap.get("LogoutinProfile"))).click();
//			Thread.sleep(2000);
//			webdriver.findElement(By.xpath(xpathMap.get("ProceedButton"))).click();
//			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {

			report.detailsAppend("TC58-SynapseSign",
					"To check user is able to Select his preferred Year from Year of birth dropdown",
					"User is able to Select his preferred Year from Year of birth dropdown", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-59(Synapse SignUp) AS66528//
	// To check user is not able to signup if Year is not selected from date of
	// birth dropdown
	public boolean YearNotSelect(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup1"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).isDisplayed());
			System.out.print("SynapseSignup is Visible");

			webdriver.findElement(By.xpath(xpathMap.get("FirstNameForSignUp"))).sendKeys(xpathMap.get("FirstN1"));
			;
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LastNameForSignUp"))).isDisplayed());
			System.out.print("FirstName is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LastNameForSignUp"))).sendKeys(xpathMap.get("LastN"));
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobNo31"))).isDisplayed());
			System.out.print("LastName is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobNo31"))).sendKeys(xpathMap.get("MobNo31"));
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword31"))).isDisplayed());
			System.out.print("Mobile No is entered");

			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword31"))).sendKeys(xpathMap.get("Psd31"));
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("SelectIDType"))).click();
			System.out.print("SelectedID DropDown is Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswportTabUnderID"))).click();
			System.out.print("SelectedID DropDown is Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("IDNumberTab"))).sendKeys(xpathMap.get("IdNumberWrongData"));
			System.out.print("IDNumber is Entered");
			Thread.sleep(2000);

			try {
				webdriver.findElement(By.xpath(xpathMap.get("DayDD"))).click();
				webdriver.findElement(By.xpath(xpathMap.get("SelectedDD"))).click();
				System.out.print("Date is Selected");
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("Date DropDown not selected" + e);
			}

			try {
				webdriver.findElement(By.xpath(xpathMap.get("MonthDD"))).click();
				webdriver.findElement(By.xpath(xpathMap.get("SelectedDD"))).click();
				System.out.print("Month is Selected");
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("Month DropDown not selected" + e);
			}
//			try {
//				webdriver.findElement(By.xpath(xpathMap.get("YearDD"))).click();
//				webdriver.findElement(By.xpath(xpathMap.get("SelectedDD"))).click();
//				System.out.print("Year is Selected");
//				Thread.sleep(2000);
//			} catch (Exception e) {
//				System.out.print("Year DropDown not selected" + e);
//			}

			webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
			System.out.print("AgreeAll Checkbox is Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseRegisterButton"))).click();
			System.out.print("Register Button is Entered");
			Thread.sleep(2000);

			report.detailsAppend("TC59-SynapseSign",
					"To check user is not able to signup if  Year  is not selected from date of birth dropdown",
					"User is not able to signup if  Year  is not selected from date of birth dropdown", "Pass");

			webdriver.navigate().refresh();
			Thread.sleep(2000);
//			webdriver.findElement(By.xpath(xpathMap.get("ProfileOpen"))).click();
//			Thread.sleep(2000);
//			webdriver.findElement(By.xpath(xpathMap.get("LogoutinProfile"))).click();
//			Thread.sleep(2000);
//			webdriver.findElement(By.xpath(xpathMap.get("ProceedButton"))).click();
//			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {

			report.detailsAppend("TC59-SynapseSign",
					"To check user is not able to signup if  Year  is not selected from date of birth dropdown",
					"User is not able to signup if  Year  is not selected from date of birth dropdown", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-60(Synapse SignUp) AS66528//
	// Check if there is a visible "Sign Up" button on the Hamburger Menu.
	public boolean HamburgerMenu(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HamburgerSigUp"))).isDisplayed());
			System.out.print("SynapseHamburger is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("HamburgerSigUp"))).click();
			Thread.sleep(4000);
//								Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LastNameForSignUp"))).isDisplayed());
//								System.out.print("FirstName is clicked");

			report.detailsAppend("TC60-SynapseSign",
					"Check if there is a visible \"Sign Up\" button on the Hamburger Menu.", "SignUp Button is visible",
					"Pass");

		} catch (Exception e) {

			report.detailsAppend("TC60-SynapseSign",
					"Check if there is a visible \"Sign Up\" button on the Hamburger Menu.", "SignUp Button is visible",
					"Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// PRATIK SYNAPSE BAUILD A SET////

	// TC-01(Synapse Build A Bet) PJ65867
	// To check whether user can click on "Build A Bet" market or not.
	public boolean BuildABetClick1(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("MatchOfLeague is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).click();
			Thread.sleep(4000);

			Robot robot = new Robot();
			System.out.println("About to zoom in");
			for (int i = 0; i < 4; i++) {
				robot.keyPress(KeyEvent.VK_CONTROL);
				robot.keyPress(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_CONTROL);
			}
//								Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("DrawInBuildaBetSynapse"))).isDisplayed());
//								System.out.print("LeftArrowForSynapse is clicked");

			report.detailsAppend("TC01-SynapseBuildABet",
					"To check whether user can click on  \"Build A Bet\" market or not.",
					"User can click on  \"Build A Bet\" market or not.", "Pass");

			System.out.println("About to zoom out");
			for (int i = 0; i < 4; i++) {
				robot.keyPress(KeyEvent.VK_CONTROL);
				robot.keyPress(KeyEvent.VK_ADD);
				robot.keyRelease(KeyEvent.VK_ADD);
				robot.keyRelease(KeyEvent.VK_CONTROL);

			}

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonStatasticPageSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC01-SynapseBuildABet",
					"To check whether user can click on  \"Build A Bet\" market or not.",
					"User can click on  \"Build A Bet\" market or not.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-02(Synapse Build A Bet) PJ65867
	// To check whether for "Build A Bet" market respective bet book with all
	// markets is getting display
	public boolean BuildABetBetBook(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("MatchOfLeague is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).click();
			Thread.sleep(4000);

			Robot robot = new Robot();
			System.out.println("About to zoom in");
			for (int i = 0; i < 4; i++) {
				robot.keyPress(KeyEvent.VK_CONTROL);
				robot.keyPress(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_CONTROL);

			}

			report.detailsAppend("TC02-SynapseBuildABet",
					"To check whether for \"Build A Bet\" market  respective bet book with all markets is getting display",
					"Bet book with all markets is getting display", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonStatasticPageSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

			System.out.println("About to zoom out");
			for (int i = 0; i < 4; i++) {
				robot.keyPress(KeyEvent.VK_CONTROL);
				robot.keyPress(KeyEvent.VK_ADD);
				robot.keyRelease(KeyEvent.VK_ADD);
				robot.keyRelease(KeyEvent.VK_CONTROL);
			}

		} catch (Exception e) {

			report.detailsAppend("TC02-SynapseBuildABet",
					"To check whether for \"Build A Bet\" market  respective bet book with all markets is getting display",
					"Bet book with all markets is getting display", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-03(Synapse Build A Bet) PJ65867
	// To check the UI, Alignment, Spelling for "Build A Bet" market page is as per
	// design or not
	public boolean BuildABetUI(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("MatchOfLeague is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("TopButtonInStatasticPageSynapse1"))).isDisplayed());
			System.out.print("BuildaBetSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("TopButtonInStatasticPageSynapse1"))).click();
			Thread.sleep(6000);

			report.detailsAppend("TC03-SynapseBuildABet",
					"To check the UI, Alignment, Spelling for \"Build A Bet\" market page is as per design or not",
					"The UI, Alignment, Spelling for \"Build A Bet\" market page is as per design", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonStatasticPageSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC03-SynapseBuildABet",
					"To check the UI, Alignment, Spelling for \"Build A Bet\" market page is as per design or not",
					"The UI, Alignment, Spelling for \"Build A Bet\" market page is as per design", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-04(Synapse Build A Bet) PJ65867
	// To check whether on market tab cashout icon, i icon and market name is
	// available or not
	public boolean OptionOfMarket(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("MatchOfLeague is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");
			webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("TopButtonInStatasticPageSynapse1"))).isDisplayed());
			System.out.print("BuildaBetSynapse is clicked");

//								webdriver.findElement(By.xpath(xpathMap.get("TopButtonInStatasticPageSynapse1"))).click();
//								Thread.sleep(6000);		

			report.detailsAppend("TC04-SynapseBuildABet",
					"To check whether on market tab cashout icon, i icon and market name is available or not",
					"On market tab cashout icon, i icon and market name is available", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonStatasticPageSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC04-SynapseBuildABet",
					"To check whether on market tab cashout icon, i icon and market name is available or not",
					"On market tab cashout icon, i icon and market name is available", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-05(Synapse Build A Bet) PJ65867
	// To check whether for exapand-collapse icon is Clickable on market tab or not
	// and list of odds is getting displayed for the same.
	public boolean ExapndCollapseIcon(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("MatchOfLeague is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("TopButtonInStatasticPageSynapse1"))).isDisplayed());
			System.out.print("BuildaBetSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("ExpandCollapseIcon"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC05-SynapseBuildABet",
					"To check whether for exapand-collapse icon is Clickable on market tab or not and list of odds is getting displayed for the same.",
					"Exapand-collapse icon is Clickable on market tab and list of odds is getting displayed for the same.",
					"Pass");

			webdriver.findElement(By.xpath(xpathMap.get("ExpandCollapseIcon"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonStatasticPageSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC05-SynapseBuildABet",
					"To check whether for exapand-collapse icon is Clickable on market tab or not and list of odds is getting displayed for the same.",
					"Exapand-collapse icon is Clickable on market tab and list of odds is getting displayed for the same.",
					"Pass");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-06(Synapse Build A Bet) PJ65867
	// To check whether Total Odd Section is available or not.
	public boolean TotalOddSection(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("MatchOfLeague is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("TopButtonInStatasticPageSynapse1"))).isDisplayed());
			System.out.print("BuildaBetSynapse is clicked");

//								webdriver.findElement(By.xpath(xpathMap.get("ExpandCollapseIcon"))).click();
//								Thread.sleep(2000);

			report.detailsAppend("TC06-SynapseBuildABet", "To check whether Total Odd Section is available or not.",
					"Total Odd Section is available", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonStatasticPageSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

//								webdriver.findElement(By.xpath(xpathMap.get("ExpandCollapseIcon"))).click();
//								Thread.sleep(2000);	

		} catch (Exception e) {

			report.detailsAppend("TC06-SynapseBuildABet", "To check whether Total Odd Section is available or not.",
					"Total Odd Section is available", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-07(Synapse Build A Bet) PJ65867
	// To cehck whether "Total Odds" section is getting '0' odds or not
	public boolean ZeroTotalOddSection(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("MatchOfLeague is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("TopButtonInStatasticPageSynapse1"))).isDisplayed());
			System.out.print("BuildaBetSynapse is clicked");

//								webdriver.findElement(By.xpath(xpathMap.get("ExpandCollapseIcon"))).click();
//								Thread.sleep(2000);

			report.detailsAppend("TC07-SynapseBuildABet",
					"To cehck whether \"Total Odds\" section is getting '0' odds or not",
					"Total Odds\" section is getting '0' odds", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonStatasticPageSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

//								webdriver.findElement(By.xpath(xpathMap.get("ExpandCollapseIcon"))).click();
//								Thread.sleep(2000);	

		} catch (Exception e) {

			report.detailsAppend("TC07-SynapseBuildABet",
					"To cehck whether \"Total Odds\" section is getting '0' odds or not",
					"Total Odds\" section is getting '0' odds", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-08(Synapse Build A Bet) PJ65867
	// To check whether number of selection is present on Total Odds section or not
	public boolean TotalOddNumberSection(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("MatchOfLeague is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("TopButtonInStatasticPageSynapse1"))).isDisplayed());
			System.out.print("BuildaBetSynapse is clicked");

//								webdriver.findElement(By.xpath(xpathMap.get("ExpandCollapseIcon"))).click();
//								Thread.sleep(2000);

			report.detailsAppend("TC08-SynapseBuildABet",
					"To check whether number of selection is present on Total Odds section or not",
					"Number of selection is present on Total Odds section", "Pass");

//								webdriver.findElement(By.xpath(xpathMap.get("ExpandCollapseIcon"))).click();
//								Thread.sleep(2000);	

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonStatasticPageSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC08-SynapseBuildABet",
					"To check whether number of selection is present on Total Odds section or not",
					"Number of selection is present on Total Odds section", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-09(Synapse Build A Bet) PJ65867
	// To check when user select their first odd then on "Total Odds" section it is
	// displaying Total odds as 0.00
	public boolean OddReflectInTotalOdd(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("MatchOfLeague is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("TopButtonInStatasticPageSynapse1"))).isDisplayed());
			System.out.print("BuildaBetSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("DrawInBuildaBetSynapse"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC09-SynapseBuildABet",
					"To check when user select their first odd then on \"Total Odds\" section it is displaying Total odds as 0.00",
					"User select their first odd then on \"Total Odds\" section it is displaying Total odds as 0.00",
					"Pass");

//								webdriver.findElement(By.xpath(xpathMap.get("ExpandCollapseIcon"))).click();
//								Thread.sleep(2000);	

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonStatasticPageSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC09-SynapseBuildABet",
					"To check when user select their first odd then on \"Total Odds\" section it is displaying Total odds as 0.00",
					"User select their first odd then on \"Total Odds\" section it is displaying Total odds as 0.00",
					"Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-10(Synapse Build A Bet) PJ65867
	// To check when user select their first odd then on "Total Odds" section it is
	// displaying selection as 1
	public boolean OddReflectInTotalOddSelection(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("MatchOfLeague is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("TopButtonInStatasticPageSynapse1"))).isDisplayed());
			System.out.print("BuildaBetSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("DrawInBuildaBetSynapse"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC10-SynapseBuildABet",
					"To check when user select their first odd then on \"Total Odds\" section it is displaying selection as 1",
					"User select their first odd then on \"Total Odds\" section it is displaying selection as 1",
					"Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonStatasticPageSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC10-SynapseBuildABet",
					"To check when user select their first odd then on \"Total Odds\" section it is displaying selection as 1",
					"User select their first odd then on \"Total Odds\" section it is displaying selection as 1",
					"Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-11(Synapse Build A Bet) PJ65867
	// To check when user select their first odd then on "Total Odds" section it is
	// displaying "Add to Betslip"
	public boolean AddToBetSlip(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("MatchOfLeague is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("TopButtonInStatasticPageSynapse1"))).isDisplayed());
			System.out.print("BuildaBetSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("DrawInBuildaBetSynapse"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC11-SynapseBuildABet",
					"To check when user select their first odd then on \"Total Odds\" section it is displaying \"Add to Betslip\"  ",
					"User select their first odd then on \"Total Odds\" section it is displaying \"Add to Betslip\"  ",
					"Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonStatasticPageSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC11-SynapseBuildABet",
					"To check when user select their first odd then on \"Total Odds\" section it is displaying \"Add to Betslip\"  ",
					"User select their first odd then on \"Total Odds\" section it is displaying \"Add to Betslip\"  ",
					"Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-12(Synapse Build A Bet) PJ65867
	// To check when the user clicks on "Add to Betslip" then Warning message is
	// displayed as ''You need a minimum of 2 Build a Bet selections before adding
	// to betslip.' or not
	public boolean AddToBetSlipMsg(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("MatchOfLeague is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("TopButtonInStatasticPageSynapse1"))).isDisplayed());
			System.out.print("BuildaBetSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("DrawInBuildaBetSynapse"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("AddToBS"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC12-SynapseBuildABet",
					"To check when the user clicks on Add to Betslip then Warning message is displayed as You need a minimum of 2 Build a Bet selections before adding to betslip or not",
					"Message is displayed", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonStatasticPageSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC12-SynapseBuildABet",
					"To check when the user clicks on Add to Betslip then Warning message is displayed as You need a minimum of 2 Build a Bet selections before adding to betslip or not",
					"Message is displayed", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-13(Synapse Build A Bet) PJ65867
	// Verify that warning message is getting displayed for 5 seconds and gets
	// Auto-Close when the user selects their first odd on "Total Odds" section and
	// clicks on "Add to Betslip" button.
	public boolean AddToBetSlipMsgWait(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("MatchOfLeague is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("TopButtonInStatasticPageSynapse1"))).isDisplayed());
			System.out.print("BuildaBetSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("DrawInBuildaBetSynapse"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("AddToBS"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC13-SynapseBuildABet",
					"Verify that  warning message is getting displayed for 5 seconds and gets Auto-Close when the user selects their first odd on Total Odds section and clicks on Add to Betslip button.",
					"Message is disappeared after 5 Sec", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonStatasticPageSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC13-SynapseBuildABet",
					"Verify that  warning message is getting displayed for 5 seconds and gets Auto-Close when the user selects their first odd on Total Odds section and clicks on Add to Betslip button.",
					"Message is disappeared after 5 Sec", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-14(Synapse Build A Bet) PJ65867
	// To check when the user clicks on "Add to Betslip" (Click To Action) then
	// message is getting close or not when user user click on "Close"
	public boolean AddToBetSlipMsgCloseButton(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("MatchOfLeague is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("TopButtonInStatasticPageSynapse1"))).isDisplayed());
			System.out.print("BuildaBetSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("DrawInBuildaBetSynapse"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("AddToBS"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseButtonPopupBetSlip"))).isDisplayed());
			System.out.print("Add To BetSlip is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseButtonPopupBetSlip"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC14-SynapseBuildABet",
					"To check when the user clicks on \"Add to Betslip\" (Click To Action) then message is getting close or not when user user click on \"Close\"",
					"Message is disappeared after clicked on Close Button", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonStatasticPageSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC14-SynapseBuildABet",
					"To check when the user clicks on \"Add to Betslip\" (Click To Action) then message is getting close or not when user user click on \"Close\"",
					"Message is disappeared after clicked on Close Button", "Pass");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

////////////////////////BuildABet Regression Synapse UAT Ghana /////////////////////////

	public void BackButton() throws Exception {
		Thread.sleep(2000);
		WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("SynapseBackInStatistics")));
		Actions action = new Actions(webdriver);
		action.moveToElement(odds).perform();
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("SynapseBackInStatistics"))).click();
		Thread.sleep(2000);
	}

	public void MarketClick() throws Exception {

		webdriver.findElement(By.xpath(xpathMap.get("4thOddsInTeam"))).click();
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("3rdOddsInTeam"))).click();
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
		Thread.sleep(1000);
		webdriver.findElement(By.xpath(xpathMap.get("2ndOddsInTeam"))).click();
		Thread.sleep(1000);

	}

	public void EventClick() throws Exception {
		Thread.sleep(1000);
		Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
		System.out.println("SynapseSports is Present\n");
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
		Thread.sleep(2000);
		Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseTeamSelected"))).isDisplayed());
		System.out.println("Event is Present\n");
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("SynapseTeamSelected"))).click();
		Thread.sleep(2000);
		Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TopButtonInStatisticPage"))).isDisplayed());
		System.out.println("TopButtonInStatisticPage is Present\n");
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("TopButtonInStatisticPage"))).click();
		Thread.sleep(2000);
		Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowInMarket"))).isDisplayed());
		System.out.println("LeftArrowInMarket is Present\n");
		Thread.sleep(2000);
		try {
			webdriver.findElement(By.xpath(xpathMap.get("RightArrowInMarket"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("RightArrowInMarket"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}

		WebElement BuildABetClick = webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse")));
		BuildABetClick.click();
		System.out.println("BuildABet Market in Statistics is Clicked\n");
	}

// TC-15 (Synapse_BuildABet) AS66528
// To check whether for delete icon it is labelled as "Remove All" or not
	public boolean BuildABetMarketDeleteIconVisible(Mobile_HTML_Report report) {

		try {
			EventClick();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(2000);
			System.out.println(" 1st Odds In Market is Selected ");

			report.detailsAppend("TC15 Synapse_BuildABet",
					"check whether for delete icon it is labelled as \"Remove All\" or not",
					"User Checked whether for delete icon it is labelled as \"Remove All\" or not", "Pass");

			BackButton();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC15 Synapse_BuildABet",
					"check whether for delete icon it is labelled as \"Remove All\" or not",
					"User Checked whether for delete icon it is labelled as \"Remove All\" or not", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC-16 (Synapse_BuildABet) AS66528
// To check whether for delete icon is clickable or not
	public boolean BuildABetMarketDeleteIconClickable(Mobile_HTML_Report report) {

		try {
			EventClick();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(2000);
			System.out.println(" 1st Odds In Market is Selected ");
			webdriver.findElement(By.xpath(xpathMap.get("DeleteIconInTeam"))).click();
			report.detailsAppend("TC16 Synapse_BuildABet",
					"check when a user selects their odds on \"Total Odds\" section, the delete icon is clickable.",
					"when a user selects their odds on \"Total Odds\" section,delete icon is clickable.", "Pass");

			BackButton();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC16 Synapse_BuildABet",
					"check when a user selects their odds on \"Total Odds\" section, the delete icon is clickable.",
					"when a user selects their odds on \"Total Odds\" section,delete icon is clickable.", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC-17 (Synapse_BuildABet) AS66528
// To check whether when user clicks on delete icon, all selected odds are removed from selections or not
	public boolean BuildABetMarketDeleteIconSelectedOddsRemoved(Mobile_HTML_Report report) {

		try {
			EventClick();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(2000);
			System.out.println(" 1st Odds In Market is Selected ");
			webdriver.findElement(By.xpath(xpathMap.get("DeleteIconInTeam"))).click();
			report.detailsAppend("TC17 Synapse_BuildABet",
					"check when user clicks on delete icon, all selected odds are removed from selections or not",
					"check when user clicks on delete icon, all selected odds are removed from selections", "Pass");

			BackButton();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC17 Synapse_BuildABet",
					"check when user clicks on delete icon, all selected odds are removed from selections or not",
					"check when user clicks on delete icon, all selected odds are removed from selections", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC-18 (Synapse_BuildABet) AS66528
// To check when the user selects their  odds then on "Total Odds" section it is displayed Undo icon or not
	public boolean BuildABetOnTotalOddsUndoIconDisplay(Mobile_HTML_Report report) {

		try {
			EventClick();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(2000);
			System.out.println(" 1st Odds In Market is Selected ");

			report.detailsAppend("TC18 Synapse_BuildABet",
					"check when user selects their  odds then on \"Total Odds\" section it is displayed Undo icon or not",
					"user selects their  odds then on \"Total Odds\" section it is displayed Undo icon", "Pass");

			BackButton();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC18 Synapse_BuildABet",
					"check when user selects their  odds then on \"Total Odds\" section it is displayed Undo icon or not",
					"user selects their  odds then on \"Total Odds\" section it is displayed Undo icon", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC-19 (Synapse_BuildABet) AS66528
// To check whether for undo icon is clickable or not
	public boolean BuildABetOnTotalOddsUndoIconClickable(Mobile_HTML_Report report) {

		try {
			EventClick();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(2000);
			System.out.println(" 1st Odds In Market is Selected ");
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("UndoIconInTotalOdds"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("UndoIconInTotalOdds"))).click();
			Thread.sleep(1000);
			report.detailsAppend("TC19 Synapse_BuildABet", "check whether for undo icon is clickable or not",
					"User Checked whether for undo icon is clickable", "Pass");

			BackButton();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC19 Synapse_BuildABet", "check whether for undo icon is clickable or not",
					"User Checked whether for undo icon is clickable", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC-20 (Synapse_BuildABet) AS66528
// To check whether when user clicks on  the undo icon, all recent one odd are removed from selections or not
	public boolean BuildABetUndoIconClickRecentOddsRemoved(Mobile_HTML_Report report) {

		try {
			EventClick();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(2000);
			System.out.println(" 1st Odds In Market is Selected ");
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("UndoIconInTotalOdds"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("UndoIconInTotalOdds"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC20 Synapse_BuildABet",
					"check when user clicks on undo icon,all recent one odd are removed from selections or not",
					"user clicks on undo icon,all recent one odd are removed from selections", "Pass");

			BackButton();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC20 Synapse_BuildABet",
					"check when user clicks on undo icon,all recent one odd are removed from selections or not",
					"user clicks on undo icon,all recent one odd are removed from selections", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC-21 (Synapse_BuildABet) AS66528
// To check whether the drop-down icon for list of selected odds is available or not
	public boolean BuildABetInOddsDropDownIconAvailable(Mobile_HTML_Report report) {

		try {
			EventClick();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(2000);
			System.out.println(" 1st Odds In Market is Selected ");

			report.detailsAppend("TC21 Synapse_BuildABet",
					"check whether the drop-down icon for list of selected odds is available or not",
					"user cheked the drop-down icon for list of selected odds is available", "Pass");

			BackButton();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC21 Synapse_BuildABet",
					"check whether the drop-down icon for list of selected odds is available or not",
					"user cheked the drop-down icon for list of selected odds is available", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC-22 (Synapse_BuildABet) AS66528
// To check whether the drop-down icon is clickable or not
	public boolean BuildABetInOddsDropDownIconClickable(Mobile_HTML_Report report) throws Exception {

		try {
			EventClick();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(2000);
			System.out.println(" 1st Odds In Market is Selected ");

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseClearAll"))).isDisplayed());
				Thread.sleep(2000);
				report.detailsAppend("TC22-Synapse_BAB",
						"check whether the drop-down icon for list of selected odds is available or not",
						"user cheked the drop-down icon for list of selected odds is available", "Pass");
				BackButton();
				log.debug("Switch to default tab");
				Thread.sleep(2000);

			} catch (Exception e) {
				report.detailsAppend("TC22-Synapse_BAB",
						"check whether the drop-down icon for list of selected odds not available",
						"user cheked the drop-down icon for list of selected odds not available", "Fail");
				System.out.println("Dropdown button is not Clicked\n" + e.getMessage());
				BackButton();

			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC22 Synapse_BuildABet",
					"check whether the drop-down icon for list of selected odds not available",
					"user cheked the drop-down icon for list of selected odds not available", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-23 (Synapse_BuildABet) AS66528
// To check whether when user click on drop-down icon then it is displaying the list of selected odds cards
	public boolean BuildABetListOfoddsDisplayInDropDownIcon(Mobile_HTML_Report report) throws Exception {

		try {
			EventClick();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(2000);
			System.out.println(" 1st Odds In Market is Selected ");
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseClearAll"))).isDisplayed());
				Thread.sleep(2000);
				report.detailsAppend("TC23-Synapse_BAB",
						"check whether when user click on drop-down icon then it is displaying the list of selected odds cards",
						"when user click on drop-down icon then it is displaying the list of selected odds cards",
						"Pass");
				BackButton();
				log.debug("Switch to default tab");
				Thread.sleep(2000);

			} catch (Exception e) {
				report.detailsAppend("TC23-Synapse_BAB",
						"check whether the drop-down icon for list of selected odds available or not",
						"user cheked the drop-down icon for list of selected odds not available", "Fail");
				System.out.println("Dropdown button is not Clicked\n" + e.getMessage());
				BackButton();

			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC23-Synapse_BAB",
					"check whether the drop-down icon for list of selected odds available or not",
					"user cheked the drop-down icon for list of selected odds not available", "Fail");
			System.out.println("Dropdown button is not Clicked\n" + e.getMessage());

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-24 (Synapse_BuildABet) AS66528
// To check whether count of selected odds are getting display on drop-down icon or not
	public boolean BuildABetSelectedOddsDisplaySameCountInOddsDropDown(Mobile_HTML_Report report)
			throws InterruptedException {

		try {
			EventClick();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(2000);
			System.out.println(" 1st Odds In Market is Selected ");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseClearAll"))).isDisplayed());
				Thread.sleep(2000);
				report.detailsAppend("TC24-Synapse_BAB",
						"check whether count of selected odds are getting display on drop-down icon or not",
						"when user count of selected odds are getting display on drop-down icon or not", "Pass");
				BackButton();
				log.debug("Switch to default tab");
				Thread.sleep(2000);

			} catch (Exception e) {
				report.detailsAppend("TC24-Synapse_BAB",
						"check whether the drop-down icon for list of selected odds available or not",
						"user cheked the drop-down icon for list of selected odds not available", "Fail");
				System.out.println("Dropdown button is not Clicked\n" + e.getMessage());
				BackButton();

			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC24-Synapse_BAB",
					"check whether the drop-down icon for list of selected odds available or not",
					"user cheked the drop-down icon for list of selected odds not available", "Fail");
			System.out.println("Dropdown button is not Clicked\n" + e.getMessage());

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-25 (Synapse_BuildABet) AS66528
// To check whether list of selected odds is displayed in the horizontal scroll or not
	public boolean BuildABetSelectedOddsViewInhorizontalscroll(Mobile_HTML_Report report) throws InterruptedException {

		try {
			EventClick();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("2ndOddsInTeam"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("3rdOddsInTeam"))).click();
			Thread.sleep(2000);
			System.out.println(" Adding more Odds In Market ");

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseClearAll"))).isDisplayed());
				Thread.sleep(2000);
				report.detailsAppend("TC25-Synapse_BAB",
						"check whether list of selected odds is displayed in the horizontal scroll or not",
						"user cheked list of selected odds is displayed in the horizontal scroll", "Pass");
				webdriver.navigate().refresh();
				BackButton();
				log.debug("Switch to default tab");
				Thread.sleep(2000);

			} catch (Exception e) {
				report.detailsAppend("TC25-Synapse_BAB",
						"check whether the drop-down icon for list of selected odds available or not",
						"user cheked the drop-down icon for list of selected odds not available", "Fail");
				System.out.println("Dropdown button is not Clicked\n" + e.getMessage());
				Thread.sleep(2000);
				webdriver.navigate().refresh();
				BackButton();
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC25-Synapse_BAB",
					"check whether the drop-down icon for list of selected odds available or not",
					"user cheked the drop-down icon for list of selected odds not available", "Fail");
			System.out.println("Dropdown button is not Clicked\n" + e.getMessage());

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-26 (Synapse_BuildABet) AS66528
// To check whether 'Close' icon is available on each selected odds card or not
	public boolean BuildABetCloseIconAvailableOnEachSelectedOdds(Mobile_HTML_Report report)
			throws InterruptedException {

		try {
			EventClick();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("2ndOddsInTeam"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("3rdOddsInTeam"))).click();
			Thread.sleep(2000);
			System.out.println(" Adding more Odds In Market ");

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseClearAll"))).isDisplayed());
				Thread.sleep(2000);
				report.detailsAppend("TC26-Synapse_BAB",
						"check whether Closeicon is available on each selected odds card or not",
						"User Checked Closeicon is available on each selected odds card", "Pass");
				webdriver.navigate().refresh();
				BackButton();
				log.debug("Switch to default tab");
				Thread.sleep(2000);

			} catch (Exception e) {
				System.out.println("Odds DropDown not Clicked ");
				report.detailsAppend("TC26 Synapse_BuildABet",
						"check Closeicon is available on each selected odds card not available",
						"user checked Closeicon is available on each selected odds card not available", "Fail");
				webdriver.navigate().refresh();
				BackButton();
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC26 Synapse_BuildABet",
					"check Closeicon is available on each selected odds card not available",
					"user checked Closeicon is available on each selected odds card not available", "Fail");

			System.out.println("Dropdown button is not Clicked\n" + e.getMessage());

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

//////////////////////PAVAN PD68899 /////////////////

// TC-27(Synapse_BuildABet) PD69988//
// To check whether 'Close' icon is clickable on each selected odds card or not
	public boolean BuildABetDropdownClickSynapse(Mobile_HTML_Report report) {
		try {
			EventClick();
			try {
				webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("2ndOddsInTeam"))).click();
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("3rdOddsInTeam"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(xpathMap.get("SynapseCloseInDropDown"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC27-Synapse_BAB", "User Should be able to click selected odds in Dropdown",
						"User is able to click selected odds in Dropdown", "Pass");
				webdriver.navigate().refresh();
				webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
				Thread.sleep(2000);
				log.debug("Switch to default tab");
				Thread.sleep(4000);

			} catch (Exception e) {
				report.detailsAppend("TC27-Synapse_BAB", "User Should be able to click selected odds in Dropdown",
						"User is able to click selected odds in Dropdown", "Fail");
				System.out.println("Dropdown button is not Clicked\n" + e.getMessage());
				webdriver.navigate().refresh();
				webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
				Thread.sleep(2000);

			}

		} catch (Exception e) {
			report.detailsAppend("TC27-Synapse_BAB", "User Should be able to click selected odds in Dropdown",
					"User is able to click selected odds in Dropdown", "Fail");
			System.out.println("ElementNotVisibleException :\n");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-28(Synapse_BuildABet) PD69988//
// To check whether on click operation on 'Close' icon of selected odds card is
// getting removed or not from the odds selection
	public boolean BuildABetDropdownCloseSynapse(Mobile_HTML_Report report) {
		try {
			EventClick();
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("2ndOddsInTeam"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("3rdOddsInTeam"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(xpathMap.get("SynapseCloseInDropDown"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC28-Synapse_BAB",
						"User Should be able to see odds in Dropdown is getting removed when clicked on Close Icon",
						"User is able to see odds in Dropdown is getting removed when clicked on Close Icon", "Pass");
				webdriver.navigate().refresh();
				BackButton();
				log.debug("Switch to default tab");
				Thread.sleep(4000);

			} catch (Exception e) {
				report.detailsAppend("TC28-Synapse_BAB",
						"User Should be able to see odds in Dropdown is getting removed when clicked on Close Icon",
						"User is able to see odds in Dropdown is getting removed when clicked on Close Icon", "Fail");
				System.out.println("Dropdown button is not Clicked\n" + e.getMessage());
				BackButton();

			}

		} catch (Exception e) {
			report.detailsAppend("TC28-Synapse_BAB",
					"User Should be able to see odds in Dropdown is getting removed when clicked on Close Icon",
					"User is able to see odds in Dropdown is getting removed when clicked on Close Icon", "Fail");
			System.out.println("ElementNotVisibleException :\n");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-29(Synapse_BuildABet) PD69988//
// To check whether the user should able to do left-right horizontal scroll or
// not
	public boolean BuildABetDropdownHorizontalScrollSynapse(Mobile_HTML_Report report) {
		try {
			EventClick();
			Robot robot = new Robot();
			System.out.println("About to zoom in");
			for (int i = 0; i < 4; i++) {
				robot.keyPress(KeyEvent.VK_CONTROL);
				robot.keyPress(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_CONTROL);
			}
			MarketClick();

			try {
				webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).click();
				Thread.sleep(2000);

				System.out.println("About to zoom in");
				for (int i = 0; i < 4; i++) {
					robot.keyPress(KeyEvent.VK_CONTROL);
					robot.keyPress(KeyEvent.VK_ADD);
					robot.keyRelease(KeyEvent.VK_ADD);
					robot.keyRelease(KeyEvent.VK_CONTROL);
				}
				webdriver.findElement(By.xpath(xpathMap.get("SynapseDDRightClick"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SynapseDDLeftClick"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC29-Synapse_BAB",
						"User Should be able to scroll Horizontally to Right and Left in DropDown menu",
						"User is able to scroll Horizontally to Right and Left in DropDown menu", "Pass");
				BackButton();
				log.debug("Switch to default tab");
				Thread.sleep(4000);

			} catch (Exception e) {
				report.detailsAppend("TC29-Synapse_BAB",
						"User Should be able to scroll Horizontally to Right and Left in DropDown menu",
						"User is able to scroll Horizontally to Right and Left in DropDown menu", "Fail");
				System.out.println("Dropdown button is not Clicked\n" + e.getMessage());
				BackButton();

			}

		} catch (Exception e) {
			report.detailsAppend("TC29-Synapse_BAB",
					"User Should be able to scroll Horizontally to Right and Left in DropDown menu",
					"User is able to scroll Horizontally to Right and Left in DropDown menu", "Fail");
			System.out.println("ElementNotVisibleException :\n");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-30(Synapse_BuildABet) PD69988//
// To check whether 'Clear All' text icon is available on each selected odds
// card or not
	public boolean BuildABetDropdownClearAllSynapse(Mobile_HTML_Report report) {
		try {
			EventClick();
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("2ndOddsInTeam"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("3rdOddsInTeam"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseCloseInDropDown"))).isDisplayed());
				System.out.println("SynapseCloseInDropDown is Present\n");
				report.detailsAppend("TC30-Synapse_BAB", "User Should be able to see ClearAll Button in DropDown menu",
						"User is able to see ClearAll Button in DropDown menu", "Pass");
				webdriver.navigate().refresh();
				BackButton();
				log.debug("Switch to default tab");
				Thread.sleep(4000);

			} catch (Exception e) {
				report.detailsAppend("TC30-Synapse_BAB", "User Should be able to see ClearAll Button in DropDown menu",
						"User is able to see ClearAll Button in DropDown menu", "Fail");
				System.out.println("Dropdown button is not Clicked\n" + e.getMessage());
				webdriver.navigate().refresh();
				BackButton();

			}

		} catch (Exception e) {
			report.detailsAppend("TC30-Synapse_BAB", "User Should be able to see ClearAll Button in DropDown menu",
					"User is able to see ClearAll Button in DropDown menu", "Fail");
			System.out.println("ElementNotVisibleException :\n");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-31(Synapse_BuildABet) PD69988//
// To check whether 'Clear All' text is clickable on each selected odds card or
// not
	public boolean BuildABetDropdownClearAllClickSynapse(Mobile_HTML_Report report) {
		try {
			EventClick();
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("2ndOddsInTeam"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("3rdOddsInTeam"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseClearAll"))).isDisplayed());
				System.out.println("SynapseClearAll is Present\n");
				webdriver.findElement(By.xpath(xpathMap.get("SynapseClearAll"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC31-Synapse_BAB",
						"User Should be able to Click ClearAll Button in DropDown menu",
						"User is able to Click ClearAll Button in DropDown menu", "Pass");
				webdriver.navigate().refresh();
				BackButton();
				log.debug("Switch to default tab");
				Thread.sleep(4000);

			} catch (Exception e) {
				report.detailsAppend("TC31-Synapse_BAB",
						"User Should be able to Click ClearAll Button in DropDown menu",
						"User is able to Click ClearAll Button in DropDown menu", "Fail");
				System.out.println("Dropdown button is not Clicked\n" + e.getMessage());
				BackButton();

			}

		} catch (Exception e) {
			report.detailsAppend("TC31-Synapse_BAB", "User Should be able to Click ClearAll Button in DropDown menu",
					"User is able to Click ClearAll Button in DropDown menu", "Fail");
			System.out.println("ElementNotVisibleException :\n");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-32(Synapse_BuildABet) PD69988//
// To check whether on click operation on 'Clear All' text of selected odds card
// is all odds cards getting removed or not from the odds selection
	public boolean BuildABetDropdownClearAllOddsSynapse(Mobile_HTML_Report report) {
		try {
			EventClick();
			Robot robot = new Robot();
			System.out.println("About to zoom in");
			for (int i = 0; i < 2; i++) {
				robot.keyPress(KeyEvent.VK_CONTROL);
				robot.keyPress(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_CONTROL);
			}
			MarketClick();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseClearAll"))).isDisplayed());
				System.out.println("SynapseClearAll is Present\n");
				webdriver.findElement(By.xpath(xpathMap.get("SynapseClearAll"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC32-Synapse_BAB",
						"User Should be able to clear all odds when click on ClearAll Button in DropDown menu",
						"User is able to clear all odds when click on ClearAll Button in DropDown menu", "Pass");
				webdriver.navigate().refresh();
				BackButton();
				log.debug("Switch to default tab");
				Thread.sleep(4000);

			} catch (Exception e) {
				report.detailsAppend("TC32-Synapse_BAB",
						"User Should be able to clear all odds when click on ClearAll Button in DropDown menu",
						"User is able to clear all odds when click on ClearAll Button in DropDown menu", "Fail");
				System.out.println("Dropdown button is not Clicked\n" + e.getMessage());
				webdriver.navigate().refresh();
				BackButton();

			}

		} catch (Exception e) {
			report.detailsAppend("TC32-Synapse_BAB",
					"User Should be able to clear all odds when click on ClearAll Button in DropDown menu",
					"User is able to clear all odds when click on ClearAll Button in DropDown menu", "Fail");
			System.out.println("ElementNotVisibleException :\n");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-33(Synapse_BuildABet) PD69988//
// To check whether user can select only one odd from each market or not
	public boolean BuildABetMultipleMarketClickSynapse(Mobile_HTML_Report report) {
		try {
			EventClick();

			webdriver.findElement(By.xpath(xpathMap.get("Synapse1X2Click"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Synapse1X2Click2"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC33-Synapse_BAB",
					"User Should not be able to select More than one odd from each Market",
					"User is not able to select More than one odd from each Market", "Pass");
			webdriver.navigate().refresh();
			BackButton();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC33-Synapse_BAB",
					"User Should not be able to select More than one odd from each Market",
					"User is not able to select More than one odd from each Market", "Fail");
			System.out.println("ElementNotVisibleException :\n");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-34(Synapse_BuildABet) PD69988//
// To check whether when user tries to add two odds from the same market then a
// warning message is displayed as ' Invalid selection: more than one outcome
// per market.' or not
	public boolean BuildABetMultipleMarketClickErrorSynapse(Mobile_HTML_Report report) {
		try {
			EventClick();

			webdriver.findElement(By.xpath(xpathMap.get("Synapse1X2Click"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Synapse1X2Click2"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC34-Synapse_BAB",
					"User Should be able to see Error message when user selects More than one odd from each Market",
					"User is able to see Error message when user selects More than one odd from each Market", "Pass");
			webdriver.navigate().refresh();
			BackButton();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC34-Synapse_BAB",
					"User Should be able to see Error message when user selects More than one odd from each Market",
					"User is able to see Error message when user selects More than one odd from each Market", "Fail");
			System.out.println("ElementNotVisibleException :\n");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-35(Synapse_BuildABet) PD69988//
// To check whether a warning message is displayed for 5 sec or not
	public boolean BuildABetErrorMessageSynapse(Mobile_HTML_Report report) {
		try {
			EventClick();

			webdriver.findElement(By.xpath(xpathMap.get("Synapse1X2Click"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Synapse1X2Click2"))).click();
			Thread.sleep(4000);

			report.detailsAppend("TC35-Synapse_BAB", "User Should be able to see Error message for 5 Seconds",
					"User is able to see Error message for 5 Seconds", "Pass");
			webdriver.navigate().refresh();
			BackButton();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC35-Synapse_BAB", "User Should be able to see Error message for 5 Seconds",
					"User is able to see Error message for 5 Seconds", "Fail");
			System.out.println("ElementNotVisibleException :\n");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-36(Synapse_BuildABet) PD69988//
// To check whether on clicking close on warning message, message is getting
// closed or not
	public boolean BuildABetErrorMessageCloseSynapse(Mobile_HTML_Report report) {
		try {
			EventClick();

			webdriver.findElement(By.xpath(xpathMap.get("Synapse1X2Click"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Synapse1X2Click2"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseErrorClose"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC36-Synapse_BAB", "User Should be able to close Error message ",
					"User is able to close Error message", "Pass");
			webdriver.navigate().refresh();
			BackButton();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC36-Synapse_BAB", "User Should be able to close Error message ",
					"User is able to close Error message", "Fail");
			System.out.println("ElementNotVisibleException :\n");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-37(Synapse_BuildABet) PD69988//
// To check bets added by "Build A Bet" option are getting place and are added
// to the Betslip and also are reflected in Transaction Summary.
	public boolean BuildABetTransactionSummarySynapse(Mobile_HTML_Report report) {
		try {
			GHLogin();
			EventClick();

			webdriver.findElement(By.xpath(xpathMap.get("Synapse1X2Click"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseDoubleChanceClick"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseAddToBetslip"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBetnow"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseCBDivision")));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseContinueBetting"))).click();
			Thread.sleep(4000);
			webdriver.findElement(By.xpath(xpathMap.get("ProfileOpen"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMyBets"))).click();
			Thread.sleep(1000);
//webdriver.findElement(By.xpath(xpathMap.get("TransactionHistory"))).click();
//Thread.sleep(1000);

			report.detailsAppend("TC37-Synapse_BAB", "User Should be able to see added bets in transaction summary",
					"User is able to see added bets in transaction summary", "Pass");
			webdriver.navigate().refresh();
			BackButton();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC37-Synapse_BAB", "User Should be able to see added bets in transaction summary",
					"User is able to see added bets in transaction summary", "Fail");
			System.out.println("ElementNotVisibleException :\n");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-38(Synapse_BuildABet) PD69988//
// To check bets placed by "Build A Bet" option are NOT getting added to "Multi
// Bet" in the Betslip.
	public boolean BuildABetSingleBetSlipAddSynapse(Mobile_HTML_Report report) {
		try {
			EventClick();
			webdriver.findElement(By.xpath(xpathMap.get("Synapse1X2Click"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseDoubleChanceClick"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseAddToBetslip"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC38-Synapse_BAB",
					"User Should be able to see added bets are only in Single Bet but not in MultiBet",
					"User is able to see added bets are only in Single Bet but not in MultiBet", "Pass");
			webdriver.navigate().refresh();
			BackButton();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC38-Synapse_BAB",
					"User Should be able to see added bets are only in Single Bet but not in MultiBet",
					"User is able to see added bets are only in Single Bet but not in MultiBet", "Fail");
			System.out.println("ElementNotVisibleException :\n");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	/////// Synapse BOOK A BET//////////

	// TC-01(Synapse Book a bet) PJ65867
	// To check presence of Booking Code(Book A Bet) Section
	public boolean BookingCodeVisible(Mobile_HTML_Report report) {

		try {

			report.detailsAppend("TC01-SynapseBookaBet", "To check presence of Booking Code(Book A Bet) Section",
					"Booking Code is present", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC01-SynapseBookaBet", "To check presence of Booking Code(Book A Bet) Section",
					"Booking Code is present", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-02(Synapse Book a bet) PJ65867
	// To check user able to navigate to Booking Code(Book A Bet) Section
	public boolean BookingCodeClick(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).isDisplayed());
			System.out.print("Book a Bet is clicked");

			report.detailsAppend("TC02-SynapseBookaBet",
					"To check user able to navigate to Booking Code(Book A Bet) Section",
					"User able to navigate to Booking Code(Book A Bet) Section", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC02-SynapseBookaBet",
					"To check user able to navigate to Booking Code(Book A Bet) Section",
					"User able to navigate to Booking Code(Book A Bet) Section", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-03(Synapse Book a bet) PJ65867
	// To check user able see "Search text" on Booking Code(Book A Bet) screen.
	public boolean SearchBoxInBookingCode(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).isDisplayed());
			System.out.print("Book a Bet is clicked");

			report.detailsAppend("TC03-SynapseBookaBet",
					"To check user able see \"Search text\" on Booking Code(Book A Bet) screen.",
					"User able see \"Search text\" on Booking Code(Book A Bet) screen.", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC03-SynapseBookaBet",
					"To check user able see \"Search text\" on Booking Code(Book A Bet) screen.",
					"User able see \"Search text\" on Booking Code(Book A Bet) screen.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-04(Synapse Book a bet) PJ65867
	// To check user able click on Search text box on Booking Code(Book A Bet)
	// screen.
	public boolean SearchBoxClickInBookingCode(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).isDisplayed());
			System.out.print("Book a Bet is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SearchBoxForBABSynapse"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC04-SynapseBookaBet",
					"To check user able click on Search text box on Booking Code(Book A Bet) screen.",
					"User able click on Search text box on Booking Code(Book A Bet) screen.", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC04-SynapseBookaBet",
					"To check user able click on Search text box on Booking Code(Book A Bet) screen.",
					"User able click on Search text box on Booking Code(Book A Bet) screen.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-06(Synapse Book a bet) PJ65867
	// To check when user clicks on Search icon without entering the booking code it
	// should show error message "Booking Code not found"
	public boolean SearchIconClickBookingCode(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).isDisplayed());
			System.out.print("Book a Bet is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SearchIconinBABSyanpse"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC06-SynapseBookaBet",
					"To check when user clicks on Search icon without entering the booking code it should show error message \"Booking Code not found\"",
					"User clicks on Search icon without entering the booking code it show error message \"Booking Code not found\"",
					"Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC06-SynapseBookaBet",
					"To check when user clicks on Search icon without entering the booking code it should show error message \"Booking Code not found\"",
					"User clicks on Search icon without entering the booking code it show error message \"Booking Code not found\"",
					"Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-05(Synapse Book a bet) PJ65867
	// To check user able to enter Booking code in Search text box.
	public boolean SearchBoxDataInBookingCode(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).click();
			Thread.sleep(5000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).isDisplayed());
			System.out.print("Book a Bet is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SearchBoxForBABSynapse"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC05-SynapseBookaBet", "To check user able to enter Booking code in Search text box.",
					"User able to enter Booking code in Search text box.", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC05-SynapseBookaBet", "To check user able to enter Booking code in Search text box.",
					"User able to enter Booking code in Search text box.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-07(Synapse Book a bet) PJ65867
	// Verify presence and functionality of back arrow on Booking Code(Book A Bet)
	// screen.
	public boolean BackArrowBookingCode(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).isDisplayed());
			System.out.print("Book a Bet is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SearchIconinBABSyanpse"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

			report.detailsAppend("TC07-SynapseBookaBet",
					"Verify presence and functionality of back arrow on  Booking Code(Book A Bet) screen.",
					"Functionality of back arrow on  Booking Code(Book A Bet) screen is right", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC07-SynapseBookaBet",
					"Verify presence and functionality of back arrow on  Booking Code(Book A Bet) screen.",
					"Functionality of back arrow on  Booking Code(Book A Bet) screen is right", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-08(Synapse Book a bet) PJ65867
	// To check after click on back arrow button it should redirect to back
	// page(Betbook of sport)
	public boolean BackArrowRedirectBookingCode(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).isDisplayed());
			System.out.print("Book a Bet is clicked");

//								webdriver.findElement(By.xpath(xpathMap.get("SearchIconinBABSyanpse"))).click();
//								Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

			report.detailsAppend("TC08-SynapseBookaBet",
					"To check after click on back arrow button it should redirect to back page(Betbook of sport)",
					"After click on back arrow button it is redirecting to back page(Betbook of sport)", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC08-SynapseBookaBet",
					"To check after click on back arrow button it should redirect to back page(Betbook of sport)",
					"After click on back arrow button it is redirecting to back page(Betbook of sport)", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-09(Synapse Book a bet) PJ65867
	// To check user able to see "Sort By Odds" dropdown on Booking Code(Book A Bet)
	// screen.
	public boolean SortByOddsBookingCode(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).isDisplayed());
			System.out.print("Book a Bet is clicked");

//								webdriver.findElement(By.xpath(xpathMap.get("SearchIconinBABSyanpse"))).click();
//								Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("SortByInBABSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("WinBoostInSortBySynapse"))).isDisplayed());
			System.out.print("Sort By Odds is clicked");

			report.detailsAppend("TC09-SynapseBookaBet",
					"To check user able to see \"Sort By Odds\" dropdown on Booking Code(Book A Bet) screen.",
					"User able to see \"Sort By Odds\" dropdown on Booking Code(Book A Bet) screen", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC09-SynapseBookaBet",
					"To check user able to see \"Sort By Odds\" dropdown on Booking Code(Book A Bet) screen.",
					"User able to see \"Sort By Odds\" dropdown on Booking Code(Book A Bet) screen", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC10(Synapse Book a bet) PJ65867
	// To check after clicking on "Sort By Odds" dropdown button user able to see
	// Odds, Win Boost, Outcomes, Bets Taken options in the dropdown
	public boolean SortByOddsOptionsBookingCode(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).isDisplayed());
			System.out.print("Book a Bet is clicked");

//								webdriver.findElement(By.xpath(xpathMap.get("SearchIconinBABSyanpse"))).click();
//								Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("SortByInBABSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("WinBoostInSortBySynapse"))).isDisplayed());
			System.out.print("Sort By Odds is clicked");

			report.detailsAppend("TC10-SynapseBookaBet",
					"To check after clicking on \"Sort By Odds\" dropdown button user able to see Odds, Win Boost, Outcomes, Bets Taken options in the dropdown",
					"After clicking on \"Sort By Odds\" dropdown button user able to see Odds, Win Boost, Outcomes, Bets Taken options in the dropdown",
					"Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC10-SynapseBookaBet",
					"To check after clicking on \"Sort By Odds\" dropdown button user able to see Odds, Win Boost, Outcomes, Bets Taken options in the dropdown",
					"After clicking on \"Sort By Odds\" dropdown button user able to see Odds, Win Boost, Outcomes, Bets Taken options in the dropdown",
					"Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC11(Synapse Book a bet) PJ65867
	// To check user able to see Arrow filter button on Booking Code(Book A Bet)
	// screen.
	public boolean FilterArrowBookingCode(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).isDisplayed());
			System.out.print("Book a Bet is clicked");

//								webdriver.findElement(By.xpath(xpathMap.get("SearchIconinBABSyanpse"))).click();
//								Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("SortByInBABSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("WinBoostInSortBySynapse"))).isDisplayed());
			System.out.print("Sort By Odds is clicked");

			report.detailsAppend("TC11-SynapseBookaBet",
					"To check user able to see Arrow filter button on Booking Code(Book A Bet) screen.",
					"User is able to see Arrow filter button on Booking Code(Book A Bet) screen.", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC11-SynapseBookaBet",
					"To check user able to see Arrow filter button on Booking Code(Book A Bet) screen.",
					"User is able to see Arrow filter button on Booking Code(Book A Bet) screen.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC12(Synapse Book a bet) PJ65867
	// To check functionality of Arrow when in UP direction
	public boolean UpFilterArrowBookingCode(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).isDisplayed());
			System.out.print("Book a Bet is clicked");

//								webdriver.findElement(By.xpath(xpathMap.get("SearchIconinBABSyanpse"))).click();
//								Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("FilterArrowBetBooking"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AddToBSInBookBet"))).isDisplayed());
			System.out.print("Filter Arrow is clicked");

			report.detailsAppend("TC12-SynapseBookaBet", "To check  functionality of Arrow when in UP direction",
					"Functionality of Arrow when in UP direction is right", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC12-SynapseBookaBet", "To check  functionality of Arrow when in UP direction",
					"Functionality of Arrow when in UP direction is right", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC13(Synapse Book a bet) PJ65867
	// To check functionality of Arrow when in Down direction
	public boolean DownFilterArrowBookingCode(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).isDisplayed());
			System.out.print("Book a Bet is clicked");

//								webdriver.findElement(By.xpath(xpathMap.get("SearchIconinBABSyanpse"))).click();
//								Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("FilterArrowBetBooking"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AddToBSInBookBet"))).isDisplayed());
			System.out.print("Filter Arrow is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("FilterArrowBetBooking"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AddToBSInBookBet"))).isDisplayed());
			System.out.print("Filter Arrow is clicked");

			report.detailsAppend("TC13-SynapseBookaBet", "To check  functionality of Arrow when in Down direction",
					"Functionality of Arrow when in Down direction is right", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC13-SynapseBookaBet", "To check  functionality of Arrow when in Down direction",
					"Functionality of Arrow when in Down direction is right", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC14(Synapse Book a bet) PJ65867
	// To check "Sort by" dropdown functionality by selecting options (Odds,Win
	// boost, Outcomes, Bets taken)
	public boolean SortByOddsOptionSelectBookingCode(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).isDisplayed());
			System.out.print("Book a Bet is clicked");

//								webdriver.findElement(By.xpath(xpathMap.get("SearchIconinBABSyanpse"))).click();
//								Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("SortByInBABSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("WinBoostInSortBySynapse"))).isDisplayed());
			System.out.print("Sort By Odds is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("WinBoostInSortBySynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SortByInBABSynapse"))).isDisplayed());
			System.out.print("Sort By Odds is clicked");

			report.detailsAppend("TC14-SynapseBookaBet",
					"To check \"Sort by\" dropdown functionality by selecting options (Odds,Win boost, Outcomes, Bets taken)",
					"Functionality by selecting options (Odds,Win boost, Outcomes, Bets taken) is right", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC14-SynapseBookaBet",
					"To check \"Sort by\" dropdown functionality by selecting options (Odds,Win boost, Outcomes, Bets taken)",
					"Functionality by selecting options (Odds,Win boost, Outcomes, Bets taken) is right", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC15(Synapse Book a bet) PJ65867
	// To check "Sort by" dropdown functionality by selecting options (Odds,Win
	// boost, Outcomes, Bets taken)
	public boolean IiconBookingCode(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).isDisplayed());
			System.out.print("Book a Bet is clicked");

//								webdriver.findElement(By.xpath(xpathMap.get("SearchIconinBABSyanpse"))).click();
//								Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("iIconBookBetSynapse"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC15-SynapseBookaBet", "To check text message is displayed on clicking  \"i\" icon",
					"Text message is displayed on clicking  \"i\" icon", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonForBABSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BookABetSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC15-SynapseBookaBet", "To check text message is displayed on clicking  \"i\" icon",
					"Text message is displayed on clicking  \"i\" icon", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

/////////////////////////////////////   Betway BookABet  Synapse  UAT GHANA   ////////////////////////////

	public void BookingCodeClick() throws InterruptedException {
		Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
		System.out.println("SynapseSports is Present\n");
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
		Thread.sleep(2000);
		Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBookingCode"))).isDisplayed());
		System.out.println("SynapseBookingCode is Present\n");
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("SynapseBookingCode"))).click();

	}

	public void GHLogin() throws Exception {
		Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
		System.out.print("SynapseSports is Present");
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber"))).sendKeys(xpathMap.get("SynapsePhno"));
		Thread.sleep(2000);
		System.out.print("MobileNumber is Entered");
		webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword"))).sendKeys(xpathMap.get("SynapsePwd"));
		System.out.print("Password is Entered");
		Thread.sleep(2000);
		Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).isDisplayed());
		System.out.print("SynapseLogin is Present");
		webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).click();
		Thread.sleep(2000);
	}

	public void TZLogin() throws Exception {
		Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
		System.out.print("SynapseSports is Present");
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber"))).sendKeys(xpathMap.get("TZPH"));
		Thread.sleep(2000);
		System.out.print("MobileNumber is Entered");
		webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword"))).sendKeys(xpathMap.get("TZPW"));
		System.out.print("Password is Entered");
		Thread.sleep(2000);
		Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).isDisplayed());
		System.out.print("SynapseLogin is Present");
		webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).click();
		Thread.sleep(2000);
	}

	public void GHLogout2() throws Exception {
		webdriver.findElement(By.xpath(xpathMap.get("SynapseTestaccounts"))).click();
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("BSLogout"))).click();
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("SynapseProceed"))).click();
		Thread.sleep(2000);

	}

// TC-31(BookingCode) AS66528//
// To check user able to close Booking code screen by clicking on cross button.
	public boolean BookingCodeScreenCrossButton(Mobile_HTML_Report report) {
		try {

			BookingCodeClick();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseShare"))).isDisplayed());
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseShare"))).click();
			Thread.sleep(2000);
			System.out.println("SynapseShare is Clicked\n");
			webdriver.findElement(By.xpath(xpathMap.get("BookingCodeCloseButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC31-Synapse_BookingCode",
					"check user able to close Booking code screen by clicking on cross button.",
					"user able to close Booking code screen by clicking on cross button.", "Pass");

			log.debug("Switch to default tab");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC31" + "-Synapse_BookingCode",
					"check user able to close Booking code screen by clicking on cross button.",
					"user able to close Booking code screen by clicking on cross button.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-32(BookingCode) AS66528//
//To check presence of Booking code with share icon,Outcomes ,odds value,Bets taken with number, Win boost button
	public boolean BookingCodeShareIconClick(Mobile_HTML_Report report) {
		try {

			BookingCodeClick();

			Thread.sleep(2000);
			report.detailsAppend("TC32-Synapse_BookingCode",
					"check presence of Booking code with share icon,Outcomes ,odds value,Bets taken with number, Win boost button",
					"check presence of Booking code with share icon,Outcomes ,odds value,Bets taken with number, Win boost button",
					"Pass");

			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC32-Synapse_BookingCode",
					"check presence of Booking code with share icon,Outcomes ,odds value,Bets taken with number, Win boost button",
					"check presence of Booking code with share icon,Outcomes ,odds value,Bets taken with number, Win boost button",
					"Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC-33(BookingCode) AS66528//
//To Click presence of Booking code with share icon,Outcomes ,odds value,Bets taken with number, Win boost button
	public boolean BookingCodeShareButtonClick(Mobile_HTML_Report report) {
		try {

			BookingCodeClick();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BookingCodeShareButton"))).isDisplayed());
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BookingCodeShareButton"))).click();
			Thread.sleep(2000);
			System.out.println("BookingCode hareButton is Clicked\n");
			Thread.sleep(2000);
			report.detailsAppend("TC33-Synapse_BookingCode",
					"Click presence of Booking code with share icon,Outcomes ,odds value,Bets taken with number, Win boost button",
					"Click presence of Booking code with share icon,Outcomes ,odds value,Bets taken with number, Win boost button",
					"Pass");

			log.debug("Switch to default tab");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC33-Synapse_BookingCode",
					"Click presence of Booking code with share icon,Outcomes ,odds value,Bets taken with number, Win boost button",
					"Click presence of Booking code with share icon,Outcomes ,odds value,Bets taken with number, Win boost button",
					"Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC-34(BookingCode) AS66528//
//To check presence of Add to Betslip button on Booking Code(Book A Bet) screen.
	public boolean CheckAddToBetslipButton(Mobile_HTML_Report report) {
		try {

			BookingCodeClick();

			Thread.sleep(2000);
			report.detailsAppend("TC34-Synapse_BookingCode",
					"check presence of Add to Betslip button on Booking Code(Book A Bet) screen.",
					"check presence of Add to Betslip button on Booking Code(Book A Bet) screen.", "Pass");

			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC34-Synapse_BookingCode",
					"check presence of Add to Betslip button on Booking Code(Book A Bet) screen.",
					"check presence of Add to Betslip button on Booking Code(Book A Bet) screen.", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC-35(BookingCode) AS66528//
//To check after click on Add to Betslip button the bets for that particular booking code should be added to betslip.
	public boolean ClickAddToBetslipButton(Mobile_HTML_Report report) {
		try {

			BookingCodeClick();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AddToBetslipButton"))).isDisplayed());
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("AddToBetslipButton"))).click();
			Thread.sleep(2000);
			System.out.println("AddToBetslip Button is Clicked\n");
			Thread.sleep(2000);
			report.detailsAppend("TC35-Synapse_BookingCode",
					"check after click on Add to Betslip button the bets for that particular booking code should be added to betslip",
					"click on Add to Betslip button the bets for that particular booking code should be added to betslip",
					"Pass");

			log.debug("Switch to default tab");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC35-Synapse_BookingCode",
					"check after click on Add to Betslip button the bets for that particular booking code should be added to betslip",
					"click on Add to Betslip button the bets for that particular booking code should be added to betslip",
					"Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC-36(BookingCode) AS66528//
//To check Bet Now functionality after adding bets to betslip
	public boolean CheckFunctionality_BetNow(Mobile_HTML_Report report) {
		try {

			GHLogin();
			BookingCodeClick();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AddToBetslipButton"))).isDisplayed());
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("AddToBetslipButton"))).click();
			System.out.println("AddToBetslip Button is Clicked\n");

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBetnow"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBetnow"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC36-Synapse_BookingCode",
					"To check Bet Now functionality after adding bets to betslip",
					"check Bet Now functionality after adding bets to betslip", "Pass");

			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
			Thread.sleep(2000);
			GHLogout2();

		} catch (Exception e) {
			report.detailsAppend("TC36-Synapse_BookingCode",
					"To check Bet Now functionality after adding bets to betslip",
					"check Bet Now functionality after adding bets to betslip", "Fail");

			return false;
		}

		return true;
	}

// TC-37(BookingCode) AS66528//
//To check Bets in Open Bets section inside My Bets
	public boolean CheckOpenBets_InsideMyBetPage(Mobile_HTML_Report report) {
		try {

			GHLogin();
			BookingCodeClick();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AddToBetslipButton"))).isDisplayed());
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("AddToBetslipButton"))).click();
			System.out.println("AddToBetslip Button is Clicked\n");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBetnow"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBetnow"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseTestaccounts"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("MyBetInBetNowpage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC37-Synapse_BookingCode", "To check Bets in Open Bets section inside My Bets",
					"check Bets in Open Bets section inside My Bets", "Pass");

			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
			Thread.sleep(2000);
			GHLogout2();

		} catch (Exception e) {
			report.detailsAppend("TC37-Synapse_BookingCode", "To check Bets in Open Bets section inside My Bets",
					"check Bets in Open Bets section inside My Bets", "Fail");

			return false;
		}

		return true;
	}

// TC-38(BookingCode) AS66528//
//To check existance of Bet in Transaction History
	public boolean CheckOpenBets_TransactionHistory(Mobile_HTML_Report report) {
		try {

			GHLogin();
			BookingCodeClick();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AddToBetslipButton"))).isDisplayed());
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("AddToBetslipButton"))).click();
			Thread.sleep(2000);
			System.out.println("AddToBetslip Button is Clicked\n");

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBetnow"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBetnow"))).click();
			Thread.sleep(2000);

			webdriver.navigate().refresh();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseTestaccounts"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TransactionHistory1"))).click();
			Thread.sleep(4000);
			report.detailsAppend("TC38-Synapse_BookingCode", "To check Bets in Open Bets in Transaction History",
					"check Bets in Open Bets in Transaction History", "Pass");

			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
			Thread.sleep(2000);
			GHLogout2();

		} catch (Exception e) {
			report.detailsAppend("TC38-Synapse_BookingCode", "To check Bets in Open Bets in Transaction History",
					"check Bets in Open Bets in Transaction History", "Fail");

			return false;
		}
		return true;
	}

// TC-39(BookingCode) AS66528//
//To check Dropdown's expand/collapsed functionality
	public boolean BookABet_DropDownExpand(Mobile_HTML_Report report) {

		try {

			BookingCodeClick();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BookingCodeDDExpand"))).isDisplayed());
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("BookingCodeDDExpand"))).click();
			Thread.sleep(2000);
			System.out.println("BookingCode DropDown button is Clicked\n");
			Thread.sleep(2000);
			report.detailsAppend("TC39-Synapse_BookingCode", "To check Dropdown's expand/collapsed functionality",
					"check Dropdown's expand/collapsed functionality", "Pass");

			log.debug("Switch to default tab");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC39-Synapse_BookingCode", "To check Dropdown's expand/collapsed functionality",
					"check Dropdown's expand/collapsed functionality", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC-40(BookingCode) AS66528//
//To check user able to see Return To The Tap button on Booking Code(Book A Bet) screen.
	public boolean BookABet_SeeReturnToTheTopbutton(Mobile_HTML_Report report) {

		try {

			BookingCodeClick();
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoadMoreButton")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(xpathMap.get("LoadMoreButton"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("LoadMoreButton"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("LoadMoreButton"))).click();
				Thread.sleep(2000);

				report.detailsAppend("TC40-Synapse_BookingCode",
						"To check user able to see Return To The Tap button on Booking Code(Book A Bet) screen.",
						"check user able to see Return To The Tap button on Booking Code(Book A Bet) screen.", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC40-Synapse_BookingCode",
						"To check user able to see Return To The Tap button on Booking Code(Book A Bet) screen.",
						"check user able to see Return To The Tap button on Booking Code(Book A Bet) screen.", "Pass");
			}

			log.debug("Switch to default tab");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC40-Synapse_BookingCode",
					"To check user able to see Return To The Tap button on Booking Code(Book A Bet) screen.",
					"check user able to see Return To The Tap button on Booking Code(Book A Bet) screen.", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC-41(BookingCode) AS66528//
//To check after clicking on Return To The Tap button the page should be scroll up
	public boolean BookABet_ClickReturnToTheTopbutton(Mobile_HTML_Report report) {

		try {

			BookingCodeClick();
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoadMoreButton")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);

			try {

				webdriver.findElement(By.xpath(xpathMap.get("LoadMoreButton"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("LoadMoreButton"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("LoadMoreButton"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("ReturnToTopButton"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC41-Synapse_BookingCode",
						"To check after clicking on Return To The Tap button the page should be scroll up",
						"check after clicking on Return To The Tap button the page should be scroll up", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC41-Synapse_BookingCode",
						"To check after clicking on Return To The Tap button the page should be scroll up",
						"check after clicking on Return To The Tap button the page should be scroll up", "Pass");
			}

			log.debug("Switch to default tab");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC41-Synapse_BookingCode",
					"To check after clicking on Return To The Tap button the page should be scroll up",
					"check after clicking on Return To The Tap button the page should be scroll up", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC-42(BookingCode) AS66528//
//To check user able to see Load More button on Booking Code(Book A Bet) screen.
	public boolean BookABet_LoadMoreButtonVisible(Mobile_HTML_Report report) {

		try {

			BookingCodeClick();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoadMoreButton")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			System.out.println("Synapse LoadMoreTab is Visible\n");

			report.detailsAppend("TC42-Synapse_BookingCode",
					"To check user able to see Load More button on Booking Code(Book A Bet) screen.",
					"check user able to see Load More button on Booking Code(Book A Bet) screen.", "Pass");

			log.debug("Switch to default tab");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC42-Synapse_BookingCode",
					"To check user able to see Load More button on Booking Code(Book A Bet) screen.",
					"check user able to see Load More button on Booking Code(Book A Bet) screen.", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC-43 (BookingCode) AS66528//
//To check after click on Load More button the page should expand and display more booking code details
	public boolean BookABet_ClickLoadMoreButton(Mobile_HTML_Report report) {

		try {

			BookingCodeClick();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("LoadMoreButton"))).click();
			Thread.sleep(2000);
			System.out.println("LoadMore Button is Clicked\n");
			Thread.sleep(2000);
			report.detailsAppend("TC43-Synapse_BookingCode",
					"To check after click on Load More button the page should expand and display more booking code details",
					"check after click on Load More button the page should expand and display more booking code details",
					"Pass");

			log.debug("Switch to default tab");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC43-Synapse_BookingCode",
					"To check after click on Load More button the page should expand and display more booking code details",
					"check after click on Load More button the page should expand and display more booking code details",
					"Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

//////////////////////////////// PD69988 PAVAN BUILDABET  ///////////

// TC-16(BookingCode) PD69988//
// To check user able to see "Booking Code, Outcomes , Odds, Bets Taken, Win
// Boost" tab on Booking Code(Book A Bet) screen.
	public boolean BookingCodeSortOddsSynapse(Mobile_HTML_Report report) {
		try {

			BookingCodeClick();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSortByOdds"))).isDisplayed());
			System.out.println("SynapseSortByOdds is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSortByOdds"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC16-Synapse_BookingCode",
					"User Should be able to see outcomes,Booking code, Odds, Win Boost",
					"User is able to see outcomes,Booking code, Odds, Win Boost", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC16-Synapse_BookingCode",
					"User Should be able to see outcomes,Booking code, Odds, Win Boost",
					"User is able to see outcomes,Booking code, Odds, Win Boost", "Fail");
			webdriver.navigate().refresh();

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-17(BookingCode) PD69988//
// To check user able to see Booking Code with share icon on Booking Code(Book A
// Bet) result screen.
	public boolean BookingCodeShareIconSynapse(Mobile_HTML_Report report) {
		try {

			BookingCodeClick();
			report.detailsAppend("TC17-Synapse_BookingCode",
					"User Should be able to see Booking Code with share icon on Booking Code(Book A Bet) result screen.",
					"User is able to see Booking Code with share icon on Booking Code(Book A Bet) result screen.",
					"Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC17-Synapse_BookingCode",
					"User Should be able to see Booking Code with share icon on Booking Code(Book A Bet) result screen.",
					"User is able to see Booking Code with share icon on Booking Code(Book A Bet) result screen.",
					"Fail");
			webdriver.navigate().refresh();

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-18(BookingCode) PD69988//
// To check when user click on share option icon it will redirect share pop up
// window.
	public boolean BookingCodeShareIconClickSynapse(Mobile_HTML_Report report) {
		try {

			BookingCodeClick();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseShare"))).isDisplayed());
			System.out.println("SynapseShare is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseShare"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC18-Synapse_BookingCode", "User Should be able to Click Share button",
					"User is able to Click Share button", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC18-Synapse_BookingCode", "User Should be able to Click Share button",
					"User is able to Click Share button", "Fail");
			webdriver.navigate().refresh();

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-19(BookingCode) PD69988//
// To check Booking code pop window contents
	public boolean BookingCodePopupContentsSynapse(Mobile_HTML_Report report) {
		try {

			BookingCodeClick();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseShare"))).isDisplayed());
			System.out.println("SynapseShare is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseShare"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC19-Synapse_BookingCode",
					"User Should be able to see Booking code popup window comments",
					"User is able to see Booking code popup window comments", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC19-Synapse_BookingCode",
					"User Should be able to see Booking code popup window comments",
					"User is able to see Booking code popup window comments", "Fail");
			webdriver.navigate().refresh();

			return false;
		}
		return true;
	}

// TC-20(BookingCode) PD69988//
// To check text is displayed on clicking copy icon
	public boolean BookingCodeCopyMessageSynapse(Mobile_HTML_Report report) {
		try {

			BookingCodeClick();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseShare"))).isDisplayed());
			System.out.println("SynapseShare is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseShare"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBCDivision"))).isDisplayed());
			System.out.println("SynapseBCDivision is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBCDivision")));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseCopyCode"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC20-Synapse_BookingCode", "User Should be able to see message after copying",
					"User is able to see message after copying", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC20-Synapse_BookingCode", "User Should be able to see message after copying",
					"User is able to see message after copying", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-21(BookingCode) PD69988//
// To check after copied of the booking code it change to green colour.
	public boolean BookingCodeGreenColourSynapse(Mobile_HTML_Report report) {
		try {

			BookingCodeClick();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseShare"))).isDisplayed());
			System.out.println("SynapseShare is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseShare"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBCDivision"))).isDisplayed());
			System.out.println("SynapseBCDivision is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBCDivision")));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseCopyCode"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC21-Synapse_BookingCode", "User Should be able to see Booking Code in Green ",
					"User is able to see Booking Code in Green ", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC21-Synapse_BookingCode", "User Should be able to see Booking Code in Green ",
					"User is able to see Booking Code in Green ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-22(BookingCode) PD69988//
// To check the presence of zoom out icon on booking code slip
	public boolean BookingCodeZoomSynapse(Mobile_HTML_Report report) {
		try {

			BookingCodeClick();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseShare"))).isDisplayed());
			System.out.println("SynapseShare is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseShare"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC22-Synapse_BookingCode",
					"User Should be able to see Zoom out in Booking Code popup",
					"User is able to see Zoom out in Booking Code popup", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC22-Synapse_BookingCode",
					"User Should be able to see Zoom out in Booking Code popup",
					"User is able to see Zoom out in Booking Code popup", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-23(BookingCode) PD69988//
// To check after click on zoom out icon on booking code slip it should open in
// pop up window
	public boolean BookingCodeZoomClickSynapse(Mobile_HTML_Report report) {
		try {

			BookingCodeClick();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseShare"))).isDisplayed());
			System.out.println("SynapseShare is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseShare"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBCDivision"))).isDisplayed());
			System.out.println("SynapseBCDivision is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBCDivision")));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseZoomout"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC23-Synapse_BookingCode",
					"User Should be able to Click Zoom out in Booking Code popup",
					"User is able to Click Zoom out in Booking Code popup", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC23-Synapse_BookingCode",
					"User Should be able to Click Zoom out in Booking Code popup",
					"User is able to Click Zoom out in Booking Code popup", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-24(BookingCode) PD69988//
// To check user able to close booking code slip by clicking on cross icon
// button
	public boolean BookingCodeZoomCloseSynapse(Mobile_HTML_Report report) {
		try {

			BookingCodeClick();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseShare"))).isDisplayed());
			System.out.println("SynapseShare is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseShare"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBCDivision"))).isDisplayed());
			System.out.println("SynapseBCDivision is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBCDivision")));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseZoomout"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseZoomDialog"))).isDisplayed());
			System.out.println("SynapseZoomDialog is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseZoomDialog")));
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(xpathMap.get("SynapseZoomClose"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC24-Synapse_BookingCode",
					"User Should be able to Click close icon in Zoom out popup",
					"User is able to Click close icon in Zoom out popup", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC24-Synapse_BookingCode",
					"User Should be able to Click close icon in Zoom out popup",
					"User is able to Click close icon in Zoom out popup", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-25(BookingCode) PD69988//
// To check when user able to click outside the pop up screen then booking code
// slip should be closed.
	public boolean BookingCodeZoomCloseOutSynapse(Mobile_HTML_Report report) {
		try {

			BookingCodeClick();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseShare"))).isDisplayed());
			System.out.println("SynapseShare is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseShare"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBCDivision"))).isDisplayed());
			System.out.println("SynapseBCDivision is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBCDivision")));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseZoomout"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseZoomDialog"))).isDisplayed());
			System.out.println("SynapseZoomDialog is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseZoomDialog")));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseZoomClose"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC25-Synapse_BookingCode",
					"User Should be able to see Zoom Popup when clicked outside of popup",
					"User is able to see Zoom Popup when clicked outside of popup", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC25-Synapse_BookingCode",
					"User Should be able to see Zoom Popup when clicked outside of popup",
					"User is able to see Zoom Popup when clicked outside of popup", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-26(BookingCode) PD69988//
// To check user able to see WhatsApp, twitter, Facebook, Mail, Download options
// on pop up screen.
	public boolean BookingCodeSocialAppsSynapse(Mobile_HTML_Report report) {
		try {

			BookingCodeClick();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseShare"))).isDisplayed());
			System.out.println("SynapseShare is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseShare"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBCDivision"))).isDisplayed());
			System.out.println("SynapseBCDivision is Present\n");
			Thread.sleep(4000);
			report.detailsAppend("TC26-Synapse_BookingCode",
					"User Should be able to see WhatsApp, twitter, Facebook, Mail, Download options on pop up screen.",
					"User is able to see WhatsApp, twitter, Facebook, Mail, Download options on pop up screen.",
					"Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC26-Synapse_BookingCode",
					"User Should be able to see WhatsApp, twitter, Facebook, Mail, Download options on pop up screen.",
					"User is able to see WhatsApp, twitter, Facebook, Mail, Download options on pop up screen.",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-27(BookingCode) PD69988//
// To check after click on particular options from WhatsApp, twitter, Facebook,
// Mail, it should navigate to respective screen.
	public boolean BookingCodeSocialAppsClickSynapse(Mobile_HTML_Report report) {
		try {

			BookingCodeClick();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseShare"))).isDisplayed());
			System.out.println("SynapseShare is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseShare"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBCDivision"))).isDisplayed());
			System.out.println("SynapseBCDivision is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseWhatsApp"))).click();
			Thread.sleep(2000);
			switchToNewTab();
			report.detailsAppend("TC27-Synapse_BookingCode",
					"User Should be able to see WhatsApp Tab when clicked on WhatsApp Icon in Booking code",
					"User is able to see WhatsApp Tab when clicked on WhatsApp Icon in Booking code", "Pass");
			switchToParentTab();
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC27-Synapse_BookingCode",
					"User Should be able to see WhatsApp Tab when clicked on WhatsApp Icon in Booking code",
					"User is able to see WhatsApp Tab when clicked on WhatsApp Icon in Booking code", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-28(BookingCode) PD69988//
//To check after click download arrow icon button the booking code slip should be download.
	public boolean BookingCodeDownloadClickSynapse(Mobile_HTML_Report report) {
		try {

			BookingCodeClick();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseShare"))).isDisplayed());
			System.out.println("SynapseShare is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseShare"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBCDivision"))).isDisplayed());
			System.out.println("SynapseBCDivision is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseDownload"))).click();
			report.detailsAppend("TC28-Synapse_BookingCode",
					"User Should be able to download the betslip when clicked on Download button",
					"User is able to download the betslip when clicked on Download button", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC28-Synapse_BookingCode",
					"User Should be able to download the betslip when clicked on Download button",
					"User is able to download the betslip when clicked on Download button", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-29(BookingCode) PD69988//
//To check user able to see selected Odds list , Total Odds ,Win Boost and booking code number with scanner on booking code slip
	public boolean BookingCodeDownloadVerifySynapse(Mobile_HTML_Report report) {
		try {

			BookingCodeClick();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseShare2"))).isDisplayed());
			System.out.println("SynapseShare is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseShare2"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBCDivision"))).isDisplayed());
			System.out.println("SynapseBCDivision is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseZoomout"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC29-Synapse_BookingCode",
					"User Should be able to see selected Odds list , Total Odds ,Win Boost and booking code number with scanner on booking code slip",
					"User is able to see selected Odds list , Total Odds ,Win Boost and booking code number with scanner on booking code slip",
					"Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC29-Synapse_BookingCode",
					"User Should be able to see selected Odds list , Total Odds ,Win Boost and booking code number with scanner on booking code slip",
					"User is able to see selected Odds list , Total Odds ,Win Boost and booking code number with scanner on booking code slip",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-30(BookingCode) PD69988//
//To check presence and functionality of scanner
	public boolean BookingCodeScannerSynapse(Mobile_HTML_Report report) {
		try {

			BookingCodeClick();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseShare2"))).isDisplayed());
			System.out.println("SynapseShare is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseShare2"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBCDivision"))).isDisplayed());
			System.out.println("SynapseBCDivision is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseZoomout"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC30-Synapse_BookingCode", "User Should be able to see scanner of Booking code",
					"User is able to see scanner of Booking code", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC30-Synapse_BookingCode", "User Should be able to see scanner of Booking code",
					"User is able to see scanner of Booking code", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

/////// TCES FOR BETWAY HEADER SECTION//////////

	// TC-01 (Header) PJ-65867
	// Check if the "Login" Button is visible on the homepage.
	public boolean LoginButtonVisiblee(Mobile_HTML_Report report) {
		try {
			webdriver.findElement(By.xpath(xpathMap.get("LoginOnHomepage"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC01-Header", "Check if the \"Login\" Button is visible on the homepage.",
					"Login Button is visible on the homepage", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC01-Header", "Check if the \"Login\" Button is visible on the homepage.",
					"Login Button is visible on the homepage", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-02 (Header) PJ-65867
	// Check if there is a visible "Login" button on signup window.
	public boolean LoginButtonVisibleOnSignupWindow(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHomepage"))).click();

			Thread.sleep(2000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("ClickOnLoginOnSignUpWindow"))).isDisplayed());
			System.out.print("Login is Present");

			webdriver.findElement(By.xpath(xpathMap.get("ClickOnLoginOnSignUpWindow"))).click();

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginOnSignUp"))).isDisplayed());
			System.out.print("Login is Present");

			Thread.sleep(2000);
			report.detailsAppend("TC02-Header", "Check if there is a visible \"Login\" button on signup window",
					"Login Button is visible on the SignUp Window", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC02-Header", "Check if there is a visible \"Login\" button on signup window",
					"Login Button is visible on the SignUp Window", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-03 (Header) PJ-65867
	// Check if there is a visible "Login" button on the Hamburger Menu.
	public boolean LoginButtonVisibleOnHamburger(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC03-Header", "Check if there is a visible \"Login\" button on the Hamburger Menu.",
					"Login Button is visible on the Hamburger Menu", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC03-Header", "Check if there is a visible \"Login\" button on the Hamburger Menu.",
					"Login Button is visible on the Hamburger Menu", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-04 (Header) PJ-65867
	// Check if the Login Window is visible when the "Login" button is clicked.
	public boolean LoginButton(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC04-Header",
					"Check if the Login Window is visible when the \"Login\" button is clicked.",
					"Login windwo is opened after clicking the Login button", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC04-Header",
					"Check if the Login Window is visible when the \"Login\" button is clicked.",
					"Login windwo is opened after clicking the Login button", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-05 (Header) PJ-65867
	// Check if the required Login fields (e.g., mobile number, password) are
	// visible on the Login Window.
	public boolean LoginFieldss(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHomepage"))).click();

			Thread.sleep(2000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("ClickOnLoginOnSignUpWindow"))).isDisplayed());
			System.out.print("Login is Present");

			webdriver.findElement(By.xpath(xpathMap.get("ClickOnLoginOnSignUpWindow"))).click();

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginOnSignUp"))).isDisplayed());
			System.out.print("Login is Present");

			Thread.sleep(2000);
			report.detailsAppend("TC05-Header",
					"Check if the required Login fields (e.g., mobile number, password) are visible on the Login Window.",
					"Login Fields are visible", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC05-Header",
					"Check if the required Login fields (e.g., mobile number, password) are visible on the Login Window.",
					"Login Fields are visible", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-06 (Header) PJ-65867
	// Check if the visibility of the \"Login\" button is consistent across
	// different pages.
	public boolean LoginButtonVisibleOnMultiplePage(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHomepage"))).click();

			Thread.sleep(2000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("ClickOnLoginOnSignUpWindow"))).isDisplayed());
			System.out.print("Login is Present");

			webdriver.findElement(By.xpath(xpathMap.get("ClickOnLoginOnSignUpWindow"))).click();

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginOnSignUp"))).isDisplayed());
			System.out.print("Login is Present");

			webdriver.navigate().refresh();

			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC06-Header",
					"Check if the visibility of the \"Login\" button is consistent across different pages.",
					"Login Button is visible on the all pages", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {

			System.out.println(e);

			report.detailsAppend("TC06-Header",
					"Check if the visibility of the \"Login\" button is consistent across different pages.",
					"Login Button is visible on the all pages", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-07 (Header) PJ-65867
	// To check if the system accepts a valid mobile number.
	public boolean ValidMobileNo(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			webdriver.findElement(By.xpath(xpathMap.get("VuvuzelaLogin"))).click();

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.cssSelector(xpathMap.get("LoginOnLoginpage"))).isDisplayed());
			System.out.print("VuvuzelaLogin Button Clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MenuMobileNumber"))).sendKeys(xpathMap.get("PhoneNo"));

			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("MenuPassword"))).sendKeys(xpathMap.get("Psd"));
			System.out.print("Password is Entered");

			webdriver.findElement(By.cssSelector(xpathMap.get("LoginOnLoginpage"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC07-Header", "To check if the system accepts a valid  mobile number.",
					"System accepts a valid mobile number.", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("VuvuHamburgerMenu"))).click();
			webdriver.findElement(By.xpath(xpathMap.get("MobileLogout"))).click();

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			System.out.println("Error is" + e);
			report.detailsAppend("TC07-Header", "To check if the system accepts a valid  mobile number.",
					"System accepts a valid mobile number.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-08 (Header) PJ-65867
	// To check user click on "Login" button mobile number field should be display
	// with country code +27
	public boolean CountryCode(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHomepage"))).click();

			Thread.sleep(2000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("ClickOnLoginOnSignUpWindow"))).isDisplayed());
			System.out.print("Login is Present");

			webdriver.findElement(By.xpath(xpathMap.get("ClickOnLoginOnSignUpWindow"))).click();

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginOnSignUp"))).isDisplayed());
			System.out.print("Login is Present");

			Thread.sleep(2000);
			report.detailsAppend("TC08-Header",
					"To check user click on \"Login\" button mobile number field should be display with country code +27",
					"Mobile number field is display with country code +27", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC08-Header",
					"To check user click on \"Login\" button mobile number field should be display with country code +27",
					"Mobile number field is display with country code +27", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-09 (Header) PJ-65867
	// To check user should able to see all such as "Sports","Live","Casino
	// games","Horse Racing","Luckey Numbers","Betway
	// Jackpots","Virtual","Esports","Promotions"
	public boolean HomePageoptions(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("LoginOnHomepage"))).isDisplayed();

			Thread.sleep(2000);
			report.detailsAppend("TC09-Header",
					"To check user should able to see all such as \"Sports\",\"Live\",\"Casino games\",\"Horse Racing\",\"Luckey Numbers\",\"Betway Jackpots\",\"Virtual\",\"Esports\",\"Promotions\"",
					"User is able to see all options", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC09-Header",
					"To check user should able to see all such as \"Sports\",\"Live\",\"Casino games\",\"Horse Racing\",\"Luckey Numbers\",\"Betway Jackpots\",\"Virtual\",\"Esports\",\"Promotions\"",
					"User is able to see all options", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-20 (Header) PJ-65867
	// To check user should open live page.
	public boolean LivePage(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

			webdriver.findElement(By.xpath(xpathMap.get("LiveOpt"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC20-Header", "To check user should open live page.",
					"User is able to open live page.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC20-Header", "To check user should open live page.",
					"User is able to open live page.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-21 (Header) PJ-65867
	// To check user should open Casino Games page.
	public boolean CasinoGamesPage(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

			webdriver.findElement(By.xpath(xpathMap.get("CasinoGames"))).click();

//										Thread.sleep(2000);Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("UpcomingForHeader"))).isDisplayed());
//										System.out.print("Live is clicked");

			Thread.sleep(2000);
			report.detailsAppend("TC21-Header", "To check user should open Casino Games page.",
					"User is able to open Casino Games page.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC21-Header", "To check user should open Casino Games page.",
					"User is able to open Casino Games page.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-22 (Header) PJ-65867
	// To check user should open Horse Racing page.
	public boolean HorseRacingPage(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

			webdriver.findElement(By.xpath(xpathMap.get("HorseRacing"))).click();

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("Tote"))).isDisplayed());
			System.out.print("Live is clicked");

			Thread.sleep(2000);
			report.detailsAppend("TC22-Header", "To check user should open Horse Racing page.",
					"User is able to open Horse Racing page.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC22-Header", "To check user should open Horse Racing page.",
					"User is able to open Horse Racing page.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-23 (Header) PJ-65867
	// To check user should open Lucky Numbers page.
	public boolean LuckyNumbersPage(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

			webdriver.findElement(By.xpath(xpathMap.get("LuckyNumbers"))).click();

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BetwayJackpot"))).isDisplayed());
			System.out.print("Live is clicked");

			Thread.sleep(2000);
			report.detailsAppend("TC23-Header", "To check user should open Lucky Numbers page.",
					"User is able to open Lucky Numbers page.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC23-Header", "To check user should open Lucky Numbers page.",
					"User is able to open Lucky Numbers page.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-24 (Header) PJ-65867
	// To check user should open "Betway Jackpots" page
	public boolean BetwayJackpotPage(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

			webdriver.findElement(By.xpath(xpathMap.get("BetwayJackpot"))).click();

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LuckyNumbers"))).isDisplayed());
			System.out.print("Live is clicked");

			Thread.sleep(2000);
			report.detailsAppend("TC24-Header", "To check user should open \"Betway Jackpots\" page ",
					"User is able to open \"Betway Jackpots\" page ", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC24-Header", "To check user should open \"Betway Jackpots\" page ",
					"User is able to open \"Betway Jackpots\" page ", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-25 (Header) PJ-65867
	// To check user should open "Virtual" page
	public boolean VirtualPage(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

			webdriver.findElement(By.xpath(xpathMap.get("Virtual"))).click();

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BetwayJackpot"))).isDisplayed());
			System.out.print("Live is clicked");

			Thread.sleep(2000);
			report.detailsAppend("TC25-Header", "To check user should open \"Virtual\" page ",
					"User is able to open \"Virtual\" page ", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC25-Header", "To check user should open \"Virtual\" page ",
					"User is able to open \"Virtual\" page ", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-26 (Header) PJ-65867
	// To check user should open "Esports" page
	public boolean EsportsPage(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

			webdriver.findElement(By.xpath(xpathMap.get("Esports"))).click();

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LuckyNumbers"))).isDisplayed());
			System.out.print("Live is clicked");

			Thread.sleep(2000);
			report.detailsAppend("TC26-Header", "To check user should open \"Esports\" page ",
					"User is able to open \"Esports\" page ", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC26-Header", "To check user should open \"Esports\" page ",
					"User is able to open \"Esports\" page ", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-27 (Header) PJ-65867
	// To check user should open "Promotion" page
	public boolean PromotionPage(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

			webdriver.findElement(By.xpath(xpathMap.get("Promotion"))).click();

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("Esports"))).isDisplayed());
			System.out.print("Promotion is clicked");

//										webdriver.findElement(By.cssSelector(xpathMap.get("Signup2"))).click();
//										

			Thread.sleep(2000);
			report.detailsAppend("TC27-Header", "To check user should open \"Promotion\" page ",
					"User is able to open \"Promotion\" page ", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC27-Header", "To check user should open \"Promotion\" page ",
					"User is able to open \"Promotion\" page ", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-28 (Header) PJ-65867
	// To check user should able to click on Email Icon
	public boolean EmailClick(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

			Robot robot = new Robot();
			System.out.println("About to zoom in");
			for (int i = 0; i < 4; i++) {
				robot.keyPress(KeyEvent.VK_CONTROL);
				robot.keyPress(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_CONTROL);
			}

			webdriver.findElement(By.xpath(xpathMap.get("Email"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC28-Header", "To check user should able to click on Email Icon ",
					"User is able to click on Email Icon ", "Pass");

			log.debug("Switch to default tab");

			Thread.sleep(5000);
			System.out.println("About to zoom out");
			for (int i = 0; i < 4; i++) {
				robot.keyPress(KeyEvent.VK_CONTROL);
				robot.keyPress(KeyEvent.VK_ADD);
				robot.keyRelease(KeyEvent.VK_ADD);
				robot.keyRelease(KeyEvent.VK_CONTROL);
			}

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC28-Header", "To check user should able to click on Email Icon ",
					"User is able to click on Email Icon ", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}

	// TC-29 (Header) PJ-65867
	// To check user should able to click on Email Icon
	public boolean LiveChat(Mobile_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

			Robot robot = new Robot();
			System.out.println("About to zoom in");
			for (int i = 0; i < 4; i++) {
				robot.keyPress(KeyEvent.VK_CONTROL);
				robot.keyPress(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_CONTROL);
			}

			webdriver.findElement(By.xpath(xpathMap.get("LiveChat"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC29-Header", "To check user should able to click on Chat Icon ",
					"User is able to click on Chat Icon ", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC29-Header", "To check user should able to click on Chat Icon ",
					"User is able to click on Chat Icon ", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
		// webdriver.getWindowHandle();
		return true;

	}
/////////////////////////////////////   Regresssion HeaderSection Synapse UAT Ghana   ////////////////////////////					

	/////////////// AKHIL AS6658 /////////

	// TC-01(Synapse_HeaderSection) AS66528
	// Check that Betway Logo is visible on the homepage.
	public boolean HeaderSection_BetwayLogoInHomePage(Mobile_HTML_Report report) {

		try {

			System.out.print(" Betway Logo is visible on the homepage\n ");

			report.detailsAppend("TC01-SynapseHeaderSection", "To check that Betway Logo is visible on the homepage.",
					"Check that Betway Logo is visible on the homepage.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC01-SynapseHeaderSection", "To check that Betway Logo is visible on the homepage.",
					"Check that Betway Logo is visible on the homepage.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-02(Synapse_HeaderSection) AS66528
	// Check that Hamburger menu is visible and clickable on the homepage.
	public boolean HeaderSection_HamburgerMenuClicked(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			System.out.print("Hamburger Menu button  is clicked\n");

			report.detailsAppend("TC02-SynapseHeaderSection",
					"To check that Hamburger menu is visible and clickable on the homepage.",
					"Check that Hamburger menu is visible and clickable on the homepage.", "Pass");

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseOnHamburgerMenu"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseOnHamburgerMenu"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {

			report.detailsAppend("TC02-SynapseHeaderSection",
					"To check that Hamburger menu is visible and clickable on the homepage.",
					"Check that Hamburger menu is visible and clickable on the homepage.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-03(Synapse_HeaderSection) AS66528
	// Check that Login and Sign-Up button are visible and clickable in Hamburger
	// Menu.
	public boolean HeaderSection_LoginSignClicked(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			System.out.print("Hamburger Menu button  is clicked\n");

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).click();
			System.out.print("Hamburger Login button  is clicked\n");
			Thread.sleep(2000);

			report.detailsAppend("TC03[1]-SynapseHeaderSection",
					"To check that Login button are visible and clickable in Hamburger Menu.",
					"Check that Login button are visible and clickable in Hamburger Menu.", "Pass");

			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC03[2]-SynapseHeaderSection",
					"To check that Login button are visible and clickable in Hamburger Menu.",
					"Check that Sign-Up button are visible and clickable in Hamburger Menu.", "Pass");

//			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();

		} catch (Exception e) {

			report.detailsAppend("TC03-SynapseHeaderSection",
					"To Check that Login and Sign-Up button are visible and not click in Hamburger Menu.",
					"Check that Login and Sign-Up button are visible and not click in Hamburger Menu.", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC-04(Synapse_HeaderSection) AS66528
	// Verify Quick Links drop down is visible and clickable in Hamburger Menu.
	public boolean HeaderSection_QuickLinksDDClicked(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			System.out.print("Hamburger Menu button  is clicked\n");

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseQuickLinksDD"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseQuickLinksDD"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseQuickLinksDD"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC04-SynapseHeaderSection",
					"To Verify Quick Links drop down is visible and clickable in Hamburger Menu.",
					"Checked Quick Links drop down is visible and clickable in Hamburger Menu.", "Pass");

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseOnHamburgerMenu"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseOnHamburgerMenu"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {

			report.detailsAppend("TC04-SynapseHeaderSection",
					"To Verify Quick Links drop down is visible and clickable in Hamburger Menu.",
					"Checked Quick Links drop down is visible and clickable in Hamburger Menu.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-05(Synapse_HeaderSection) AS66528
	// Check that Betting Rules option in Quick Links drop down is visible and
	// clickable inside Hamburger Menu.
	public boolean HeaderSection_BettingRulesClicked(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			System.out.print("Hamburger Menu button  is clicked\n");

			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburgerBettingRules"))).isDisplayed());
			System.out.print("QuickLinks DropDown is clicked\n");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburgerBettingRules"))).click();
			Thread.sleep(2000);
			System.out.print("Betting Rules Button is clicked\n");

			report.detailsAppend("TC05-SynapseHeaderSection",
					"Check that BettingRules option in QuickLinks dropdown is visible and clickable inside Hamburger Menu.",
					"BettingRules option in QuickLinks dropdown is visible and clickable inside Hamburger Menu.",
					"Pass");

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseOnHamburgerMenu"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseOnHamburgerMenu"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {

			report.detailsAppend("TC05-SynapseHeaderSection",
					"Check that BettingRules option in QuickLinks dropdown is visible Not clickable inside Hamburger Menu.",
					"BettingRules option in QuickLinks dropdown is visible Not clickable inside Hamburger Menu.",
					"Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-06(Synapse_HeaderSection) AS66528
	// Check that Statistics option in Quick Links drop down is visible and
	// clickable inside Hamburger Menu.

	public boolean HeaderSection_StatisticsClicked(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			System.out.print("Hamburger Menu button  is clicked\n");

			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("SynapseHambugerStatisticButton"))).isDisplayed());
			System.out.print("Statistic Button is clicked\n");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHambugerStatisticButton"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC06-SynapseHeaderSection",
					"Check that Statistics option in QuickLinks dropdown is visible and clickable inside Hamburger Menu.",
					"Statistics option in QuickLinks dropdown is visible and clickable inside Hamburger Menu.", "Pass");

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {

			report.detailsAppend("TC06-SynapseHeaderSection",
					"Check that Statistics option in QuickLinks dropdown is visible Not clickable inside Hamburger Menu.",
					"Statistics option in QuickLinks dropdown is visible Not clickable inside Hamburger Menu.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-07(Synapse_HeaderSection) AS66528
	// Check that Download Fixture button is visible and clickable inside Hamburger
	// Menu.

	public boolean HeaderSection_DownloadFixturebuttonClicked(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			System.out.print("Hamburger Menu button  is clicked\n");

			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("SynapseDownloadFixturesButton"))).isDisplayed());
			System.out.print("Statistic Button is clicked\n");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseDownloadFixturesButton"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC07-SynapseHeaderSection",
					"Check that Download Fixture button visible and clickable inside Hamburger Menu.",
					"Checked Download Fixture button visible and clickable inside Hamburger Menu.", "Pass");

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {

			report.detailsAppend("TC07-SynapseHeaderSection",
					"Check that Download Fixture button visible Not clickable inside Hamburger Menu.",
					"Check Download Fixture button visible Not clickable inside Hamburger Menu.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-08(Synapse_HeaderSection) AS66528
	// Check that Odds Format button with Decimal & Fractional options is visible
	// and clickable in Hamburger Menu.

	public boolean HeaderSection_FractionalOddsOptionClicked(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			System.out.print("Hamburger Menu button  is clicked\n");

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseDecimalClick"))).isDisplayed());
			System.out.print(" Odds DropDown under hambugermenu is clicked\n");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseDecimalClick"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC08-SynapseHeaderSection",
					"Check that OddsFormat with Decimal&Fractional options visible and clickable.",
					"Checked OddsFormat with Decimal&Fractional options visible and clickable", "Pass");

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseOnHamburgerMenu"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseOnHamburgerMenu"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {

			report.detailsAppend("TC08-SynapseHeaderSection",
					"Check that OddsFormat with Decimal&Fractional options visible and clickable.",
					"Checked OddsFormat with Decimal&Fractional options visible and clickable", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-09(Synapse_HeaderSection) AS66528
	// Check that close option is visible and clickable in Hamburger Menu.

	public boolean HeaderSection_CloseTabClickedinHamburgerMenu(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			System.out.print("Hamburger Menu button  is clicked\n");

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseOnHamburgerMenu"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseOnHamburgerMenu"))).click();
			Thread.sleep(1000);
			System.out.print(" Fractional Odds Option is clicked\n");

			report.detailsAppend("TC09-SynapseHeaderSection",
					"Check that close option is visible and clickable in Hamburger Menu.",
					"Check that close option is visible and clickable in Hamburger Menu.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC09-SynapseHeaderSection",
					"Check that close option is visible and clickable in Hamburger Menu.",
					"Check that close option is visible and clickable in Hamburger Menu.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-10(Synapse_HeaderSection) AS66528
	// Check that country code +233 is visible on the homepage.
	public boolean HeaderSection_BetwayLogoIne(Mobile_HTML_Report report) {

		try {

			System.out.print(" country code +233 is visible on the homepage\n ");
			report.detailsAppend("TC10-SynapseHeaderSection",
					"To Check that country code +233 is visible on the homepage.",
					"Check that country code +233 is visible on the homepage.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC10-SynapseHeaderSection",
					"To Check that country code +233 is visible on the homepage.",
					"Check that country code +233 is visible on the homepage.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-11(Synapse_HeaderSection) AS66528
	// Check that Mobile Number field is visible on the homepage.
	public boolean HeaderSection_MobileNumberfieldVisible(Mobile_HTML_Report report) {

		try {

			System.out.print(" country code +233 is visible on the homepage\n ");
			report.detailsAppend("TC11-SynapseHeaderSection",
					"To Check that Mobile Number field is visible on the homepage.",
					"Check that Mobile Number field is visible on the homepage.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC11-SynapseHeaderSection",
					"To Check that Mobile Number field is visible on the homepage.",
					"Check that Mobile Number field is visible on the homepage.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-12(Synapse_HeaderSection) AS66528
	// Check that user is able to enter mobile number in Mobile Number field.
	public boolean HeaderSection_MobileNumberfieldEntered(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.print("SynapseSports is Present");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber"))).sendKeys(xpathMap.get("SynapsePhno"));
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");

			report.detailsAppend("TC12-SynapseHeaderSection",
					"To Check that user is able to enter mobilenumber in MobileNumber field.",
					"Check that user is able to enter mobilenumber in MobileNumber field.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC12-SynapseHeaderSection",
					"To Check that user not able to enter mobilenumber in MobileNumber field.",
					"Check that user not able to enter mobilenumber in MobileNumber field.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-13(Synapse_HeaderSection) AS66528
	// Check that password field is visible on the homepage.
	public boolean HeaderSection_PasswordfieldVisible(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			System.out.print(" country code +233 is visible on the homepage\n ");
			report.detailsAppend("TC13-SynapseHeaderSection",
					"To Check that password  field is visible on the homepage.",
					"Check that password  field is visible on the homepage.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC13-SynapseHeaderSection",
					"To Check that password  field is visible on the homepage.",
					"Check that password  field is visible on the homepage.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-14(Synapse_HeaderSection) AS66528
	// Check that user is able to enter password in Password field.
	public boolean HeaderSection_PasswordfieldEntered(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.print("SynapseSports is Present");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword"))).sendKeys(xpathMap.get("SynapsePwd"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);

			report.detailsAppend("TC14-SynapseHeaderSection",
					"To Check that user is able to enter Password in Password field.",
					"Check that user is able to enter Password in Password field.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC14-SynapseHeaderSection",
					"To Check that user not able to enter mobilenumber in MobileNumber field.",
					"Check that user not able to enter Password in Password field.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-15(Synapse_HeaderSection) AS66528
	// Check that Eye icon is visible and clickable in password field on Homepage.
	public boolean HeaderSection_PasswordfieldEyeIconClicked(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.print("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword"))).sendKeys(xpathMap.get("SynapsePwd"));
			System.out.print("Password is Entered\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePasswordEyeIconHomepage"))).click();
			System.out.print("Password EyeIcon is Clicked\n");
			Thread.sleep(2000);

			report.detailsAppend("TC15-SynapseHeaderSection",
					"To Check Eye icon is visible and clickable in password field on Homepage.",
					"Eye icon is visible and clickable in password field on Homepage.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC15-SynapseHeaderSection",
					"To Check Eye icon not visible and clickable in password field on Homepage.",
					"Eye icon not visible and clickable in password field on Homepage.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-16(Synapse_HeaderSection) AS66528
	// Check that Forgot Password option below password field is visible and
	// clickable on Homepage.
	public boolean HeaderSection_ForgotPasswordClicked(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.print("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseForgetPassword"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseForgetPassword"))).click();
			System.out.print("Forget Password is Clicked\n");
			Thread.sleep(2000);

			report.detailsAppend("TC16-SynapseHeaderSection",
					"To Check Forgot Password option below password field is visible and clickable on Homepage.",
					"Forgot Password option below password field is visible and clickable on Homepage.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC16-SynapseHeaderSection",
					"To Check Forgot Password option below password field is visible not clickable on Homepage.",
					"Forgot Password option below password field is visible not clickable on Homepage.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-17(Synapse_HeaderSection) AS66528
	// Check that "Login" button is visible on the homepage.
	public boolean HeaderSection_LoginbuttonClickOnHomePage(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.print("SynapseSports is Present\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).click();
			System.out.print("Login Button On HOMEPAGE is Clicked\n");
			Thread.sleep(2000);

			report.detailsAppend("TC17-SynapseHeaderSection",
					"To Check that Login button is visible and clickable on the homepage.",
					"Check that Login button is visible and clickable on the homepage.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC17-SynapseHeaderSection",
					"To Check that Login button is visible NOT clickable on the homepage.",
					"Check that Login button is visible NOT clickable on the homepage.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

	// TC-18(Synapse_HeaderSection) AS66528
	// Check that "sign up" button is visible and clickable on homepage.
	public boolean HeaderSection_SignupbuttonClickOnHomePage(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.print("SynapseSports is Present\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print("SIGNUP Button On HOMEPAGE is Clicked\n");
			Thread.sleep(2000);

			report.detailsAppend("TC18-SynapseHeaderSection",
					"To Check that sign up button is visible and clickable on the homepage.",
					"Check that sign up button is visible and clickable on the homepage.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC18-SynapseHeaderSection",
					"To Check that sign up button is visible NOT clickable on the homepage.",
					"Check that sign up button is visible NOT clickable on the homepage.", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC-19(Synapse_HeaderSection) AS66528
	// To check that Live Chat icon is visible and clickable on Homepage.
	public boolean HeaderSection_LiveChatIconClicked(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHomepageLiveChat"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHomepageLiveChat"))).click();
			System.out.print("Synapse Homepage LiveChat Button is Clicked");
			Thread.sleep(2000);

			report.detailsAppend("TC19-SynapseHeaderSection",
					"To check that Live Chat icon is visible and clickable on Homepage.",
					"check that Live Chat icon is visible and clickable on Homepage.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC19-SynapseHeaderSection",
					"To check that Live Chat icon is visible and clickable on Homepage.",
					"check that Live Chat icon is visible and clickable on Homepage.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-20(Synapse_HeaderSection) AS66528
	// To check sports, Live,aviator, Jackpots,casino,Live casino,daily jackpots,Bet
	// games,
	// Virtuals,Esports,Promotions is visible and clickable on the carousel of
	// Betway application.

	public boolean HeaderSection_CarouselSportsPage(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.print("SynapseSports is Present\n");
			Thread.sleep(2000);

			report.detailsAppend("TC13-SynapseHeaderSection",
					"To check sports, Live,aviator, Jackpots,casino,Live casino visible and clickable on the carousel of Betway application.",
					"check sports, Live,aviator, Jackpots,casino,Live casino visible and clickable on the carousel of Betway application.",
					"Pass");

		} catch (Exception e) {

			report.detailsAppend("TC13-SynapseHeaderSection",
					"To check sports, Live,aviator, Jackpots,casino,Live casino visible and clickable on the carousel of Betway application.",
					"check sports, Live,aviator, Jackpots,casino,Live casino visible and clickable on the carousel of Betway application.",
					"Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC-21(Synapse_Header) PD69988//
	// To check the Betslip button is visible and clickable on the home page of
	// Betway application.
	public boolean BetSlipInHeaderSynapse(Mobile_HTML_Report report) {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHeaderBetSlip"))).isDisplayed());
			System.out.println("SynapseHeaderBetSlip is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHeaderBetSlip"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC21-Synapse_Header", "User Should be able to see and Click BetSlip on Header",
					"User is able to see and Click BetSlip on Header", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC21-Synapse_Header", "User Should be able to see and Click BetSlip on Header",
					"User is able to see and Click BetSlip on Header", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-22(Synapse_Header) PD69988//
	// To check that user able to see the count of the number of bets present in
	// betslip should be in green colour on the home page of Betway application.
	public boolean BetSlipNumberInHeaderSynapse(Mobile_HTML_Report report) {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMarketClick"))).isDisplayed());
			System.out.println("SynapseMarketClick is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMarketClick"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHeaderBetSlip"))).isDisplayed());
			System.out.println("SynapseHeaderBetSlip is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHeaderBetSlip"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC22-Synapse_Header", "User Should be able to see and Click BetSlip Number on Header",
					"User is able to see and Click BetSlip on Header", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC22-Synapse_Header", "User Should be able to see and Click BetSlip Number on Header",
					"User is able to see and Click BetSlip on Header", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-23(Synapse_Header) PD69988//
	// Check that Betway Logo is visible on the homepage.
	public boolean BetwayLogoInHeaderSynapse(Mobile_HTML_Report report) {
		try {

			GHLogin();
			report.detailsAppend("TC23-Synapse_Header", "User Should be able to see Betway Logo on Header after Login",
					"User is able to see Betway Logo on Header after Login", "Pass");
			GHLogout();
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC23-Synapse_Header", "User Should be able to see Betway Logo on Header after Login",
					"User is able to see Betway Logo on Header after Login", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-24(Synapse_Header) PD69988//
	// Check that Hamburger Menu is visible and clickable on the homepage.
	public boolean HamburgerInHeaderSynapse(Mobile_HTML_Report report) {
		try {

			GHLogin();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC24-Synapse_Header",
					"User Should be able to see and Click Hamburger Menu on Header after Login",
					"User is able to see and Click Hamburger Menu on Header after Login", "Pass");
			GHLogout();
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC24-Synapse_Header",
					"User Should be able to see and Click Hamburger Menu on Header after Login",
					"User is able to see and Click Hamburger Menu on Header after Login", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-25(Synapse_Header) PD69988//
	// Verify Quick Links drop down is visible and clickable in Hamburger Menu.
	public boolean QuickLinksInHamburgerSynapse(Mobile_HTML_Report report) {
		try {

			GHLogin();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseQuickLinks"))).isDisplayed());
			System.out.println("SynapseQuickLinks is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseQuickLinks"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC25-Synapse_Header",
					"User Should be able to Click Quick Links in Hamburger after Login",
					"User is able to Click Quick Links in Hamburger after Login", "Pass");
			GHLogout();
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC25-Synapse_Header",
					"User Should be able to Click Quick Links in Hamburger after Login",
					"User is able to Click Quick Links in Hamburger after Login", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-26(Synapse_Header) PD69988//
	// Check that Betting Rules option is visible and clickable in Quick Links drop
	// down inside Hamburger Menu.
	public boolean BettingRulesInHamburgerSynapse(Mobile_HTML_Report report) {
		try {

			GHLogin();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseQuickLinks"))).isDisplayed());
			System.out.println("SynapseQuickLinks is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseQuickLinks"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBettingRules"))).click();
			Thread.sleep(2000);
			switchToNewTab();
			report.detailsAppend("TC26-Synapse_Header",
					"User Should be able to Click Betting Rules in Hamburger after Login",
					"User is able to Click Betting Rules in Hamburger after Login", "Pass");
			switchToParentTab();
			GHLogout();
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC26-Synapse_Header",
					"User Should be able to Click Betting Rules in Hamburger after Login",
					"User is able to Click Betting Rules in Hamburger after Login", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-27(Synapse_Header) PD69988//
	// Check that Statistics option is visible and clickable in Quick Links drop
	// down inside Hamburger Menu.
	public boolean StatisticsInHamburgerSynapse(Mobile_HTML_Report report) {
		try {

			GHLogin();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseQuickLinks"))).isDisplayed());
			System.out.println("SynapseQuickLinks is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseQuickLinks"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseStatistics"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC27-Synapse_Header",
					"User Should be able to Click Statistics in Hamburger after Login",
					"User is able to Click Statistics in Hamburger after Login", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseTestaccounts"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLogout2"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseProceed"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC27-Synapse_Header",
					"User Should be able to Click Statistics in Hamburger after Login",
					"User is able to Click Statistics in Hamburger after Login", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-28(Synapse_Header) PD69988//
	// Check that Download Fixture option is visible and clickable in Hamburger
	// Menu.
	public boolean DownloadFixturesInHamburgerSynapse(Mobile_HTML_Report report) {
		try {
			GHLogin();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseQuickLinks"))).isDisplayed());
			System.out.println("QuickLinks is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseQuickLinks"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynpaseDownloadFixtures"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC28-Synapse_Header",
					"User Should be able to Click Download Fixtures in Hamburger after Login",
					"User is able to Click Download Fixtures in Hamburger after Login", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseTestaccounts"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLogout2"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseProceed"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC28-Synapse_Header",
					"User Should be able to Click Download Fixtures in Hamburger after Login",
					"User is able to Click Download Fixtures in Hamburger after Login", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-29(Synapse_Header) PD69988//
	// Check that Odds Format button with Decimal & Fractional options is visible
	// and clickable in Hamburger Menu.
	public boolean DecimalFractionalInHamburgerSynapse(Mobile_HTML_Report report) {
		try {
			GHLogin();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseQuickLinks"))).isDisplayed());
			System.out.println("QuickLinks is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseQuickLinks"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseDecimalClick"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(xpathMap.get("SynapseFractional"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC29-Synapse_Header",
					"User Should be able to Click Decimal or Fractional in Hamburger after Login",
					"User is able to Click Decimal or Fractional in Hamburger after Login", "Pass");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseTestaccounts"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLogout"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseProceed"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC29-Synapse_Header",
					"User Should be able to Click Decimal or Fractional in Hamburger after Login",
					"User is able to Click Decimal or Fractional in Hamburger after Login", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-30(Synapse_Header) PD69988//
	// Check that Close button is visible and clickable in Hamburger Menu.
	public boolean CloseInHamburgerSynapse(Mobile_HTML_Report report) {
		try {
			GHLogin();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburgerClose"))).isDisplayed());
			System.out.println("SynapseHamburgerClose is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburgerClose"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC30-Synapse_Header", "User Should be able to Close Hamburger Menu",
					"User is able to to Close Hamburger Menu", "Pass");
			GHLogout();
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC30-Synapse_Header", "User Should be able to Close Hamburger Menu",
					"User is able to to Close Hamburger Menu", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-31(Synapse_Header) PD69988//
	// Check that My account drop down is visible and clickable in Hamburger Menu.
	public boolean MyAccountInHamburgerSynapse(Mobile_HTML_Report report) {
		try {
			GHLogin();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC31-Synapse_Header",
					"User Should be able to Click MyAccount in Hamburger after Login",
					"User is able to Click MyAccount in Hamburger after Login", "Pass");
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburgerClose"))).isDisplayed());
			System.out.println("SynapseHamburgerClose is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburgerClose"))).click();
			Thread.sleep(2000);
			GHLogout();
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC31-Synapse_Header",
					"User Should be able to Click MyAccount in Hamburger after Login",
					"User is able to Click MyAccount in Hamburger after Login", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-32(Synapse_Header) PD69988//
	// To Check Deposit Funds, Withdraw Funds, My Bets, Transaction History, Bonus
	// Summary,
	// Promo Voucher, Update Details, Responsible Gaming, Document Verification,
	// Change Password
	// and Logout is visible and clickable in the Hamburger Menu in My Accounts drop
	// down of Betway application.
	public boolean MyAccountDetailsInHamburgerSynapse(Mobile_HTML_Report report) {
		try {
			GHLogin();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC32-Synapse_Header",
					"User Should be able to see My Account Dropdown Details in Hamburger after Login",
					"User is able to see My Account Dropdown Details in Hamburger after Login", "Pass");
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburgerClose"))).isDisplayed());
			System.out.println("SynapseHamburgerClose is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburgerClose"))).click();
			Thread.sleep(2000);
			GHLogout();
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC32-Synapse_Header",
					"User Should be able to see My Account Dropdown Details in Hamburger after Login",
					"User is able to see My Account Dropdown Details in Hamburger after Login", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-33(Synapse_Header) PD69988//
	// To check that Balance field in green colour is displayed in the Hamburger
	// Menu of Betway application.
	public boolean BalanceFieldInHamburgerSynapse(Mobile_HTML_Report report) {
		try {
			GHLogin();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC33-Synapse_Header",
					"User Should be able to see Balance Field in green Colour in the Hamburger after Login",
					"User is able to see Balance Field in green Colour in the Hamburger after Login", "Pass");
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburgerClose"))).isDisplayed());
			System.out.println("SynapseHamburgerClose is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburgerClose"))).click();
			Thread.sleep(2000);
			GHLogout();
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC33-Synapse_Header",
					"User Should be able to see Balance Field in green Colour in the Hamburger after Login",
					"User is able to see Balance Field in green Colour in the Hamburger after Login", "Pass");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-34(Synapse_Header) PD69988//
	// To check that amount in balance field is displayed on the Hamburger Menu of
	// Betway application.
	public boolean AmountInBalanceFieldSynapse(Mobile_HTML_Report report) {
		try {
			GHLogin();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC34-Synapse_Header",
					"User Should be able to see Amount in Balance Field in the Hamburger after Login",
					"User is able to see Amount in Balance Field in the Hamburger after Login", "Pass");
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburgerClose"))).isDisplayed());
			System.out.println("SynapseHamburgerClose is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburgerClose"))).click();
			Thread.sleep(2000);
			GHLogout();
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC34-Synapse_Header",
					"User Should be able to see Amount in Balance Field in the Hamburger after Login",
					"User is able to see Amount in Balance Field in the Hamburger after Login", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-35(Synapse_Header) PD69988//
	// To check that GHS currency in balance field is displayed on the home page of
	// Betway application.
	public boolean GHSCurrencyInBalanceFieldSynapse(Mobile_HTML_Report report) {
		try {
			GHLogin();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC35-Synapse_Header",
					"User Should be able to see GHS Currency in Balance Field in the Hamburger after Login",
					"User is able to see GHS Currency in Balance Field in the Hamburger after Login", "Pass");
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburgerClose"))).isDisplayed());
			System.out.println("SynapseHamburgerClose is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburgerClose"))).click();
			Thread.sleep(2000);
			GHLogout();
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC35-Synapse_Header",
					"User Should be able to see GHS Currency in Balance Field in the Hamburger after Login",
					"User is able to see GHS Currency in Balance Field in the Hamburger after Login", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-36(Synapse_Header) PD69988//
	// To check that Refresh button in balance field is displayed on the home page
	// of Betway application.
	public boolean RefreshInBalanceFieldSynapse(Mobile_HTML_Report report) {
		try {
			GHLogin();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseRefreshButton"))).isDisplayed());
			System.out.println("SynapseRefreshButton is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseRefreshButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC36-Synapse_Header",
					"User Should be able to see Refresh Button in Balance Field in the Hamburger after Login",
					"User is able to see Refresh Button in Balance Field in the Hamburger after Login", "Pass");
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburgerClose"))).isDisplayed());
			System.out.println("SynapseHamburgerClose is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburgerClose"))).click();
			Thread.sleep(2000);
			GHLogout();
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC36-Synapse_Header",
					"User Should be able to see Refresh Button in Balance Field in the Hamburger after Login",
					"User is able to see Refresh Button in Balance Field in the Hamburger after Login", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-37(Synapse_Header) PD69988//
	// To check that drop down in front of balance field is visible and clickable in
	// the Hamburger Menu of Betway application.
	public boolean DropdownInBalanceFieldSynapse(Mobile_HTML_Report report) {
		try {
			GHLogin();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburgerDropDown"))).isDisplayed());
			System.out.println("SynapseHamburgerDropDown is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburgerDropDown"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC37-Synapse_Header",
					"User Should be able to see and click Dropdown Button in Balance Field in the Hamburger after Login",
					"User is able to see and click Dropdown Button in Balance Field in the Hamburger after Login",
					"Pass");
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburgerClose"))).isDisplayed());
			System.out.println("SynapseHamburgerClose is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburgerClose"))).click();
			Thread.sleep(2000);
			GHLogout();
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC37-Synapse_Header",
					"User Should be able to see and click Dropdown Button in Balance Field in the Hamburger after Login",
					"User is able to see and click Dropdown Button in Balance Field in the Hamburger after Login",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-38(Synapse_Header) PD69988//
	// Check that Eye button is visible and clickable in Hamburger Menu.
	public boolean EyeIconInBalanceFieldSynapse(Mobile_HTML_Report report) {
		try {
			GHLogin();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburgerEye"))).isDisplayed());
			System.out.println("SynapseHamburgerEye is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburgerEye"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC38-Synapse_Header",
					"User Should be able to see and click Eye Icon in Balance Field in the Hamburger after Login",
					"User is able to see and click Eye Icon in Balance Field in the Hamburger after Login", "Pass");
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburgerClose"))).isDisplayed());
			System.out.println("SynapseHamburgerClose is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburgerClose"))).click();
			Thread.sleep(2000);
			GHLogout();
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC38-Synapse_Header",
					"User Should be able to see and click Eye Icon in Balance Field in the Hamburger after Login",
					"User is able to see and click Eye Icon in Balance Field in the Hamburger after Login", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-39(Synapse_Header) PD69988//
	// Check that Eye button is visible and clickable in Hamburger Menu.
	public boolean TestAccountsSynapse(Mobile_HTML_Report report) {
		try {
			GHLogin();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseTestaccounts"))).isDisplayed());
			System.out.println("SynapseTestAccounts is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseTestaccounts"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC39-Synapse_Header", "User Should be able to see and click TestAccounts after Login",
					"User is able to see and click TestAccounts Login", "Pass");
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseTestClose"))).isDisplayed());
			System.out.println("SynapseTestClose is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseTestClose"))).click();
			Thread.sleep(2000);
			GHLogout();
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC39-Synapse_Header", "User Should be able to see and click TestAccounts after Login",
					"User is able to see and click TestAccounts Login", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-40(Synapse_Header) PD69988//
	// To check "Welcome to User Accounts" text is displayed on the home page of
	// Betway application.
	public boolean WelcomeTestAccountsSynapse(Mobile_HTML_Report report) {
		try {
			GHLogin();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseTestaccounts"))).isDisplayed());
			System.out.println("SynapseTestAccounts is Present\n");
			Thread.sleep(2000);
			report.detailsAppend("TC40-Synapse_Header", "User Should be able to see Welcome TestAccounts after Login",
					"User is able to see Welcome TestAccounts Login", "Pass");
			GHLogout();
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC40-Synapse_Header", "User Should be able to see Welcome TestAccounts after Login",
					"User is able to see Welcome TestAccounts Login", "Pass");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}
	////// PRATIK HEADER SYNAPSE//////

	////// PRATIK HEADER SYNAPSE//////

	// TC41(Synapse Header) PJ65867
	// Check that Eye icon is visible and clickable after login on the home page.
	public boolean SynapseEyeIconHeader(Mobile_HTML_Report report) {

		try {

			GHLogin();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).isDisplayed());
			System.out.print("EyeIcon is Present");

			webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC41-SynapseHeader",
					"Check that Eye icon is visible and clickable after login on the home page.",
					"Eye icon is visible and clickable after login on the home page.", "Pass");

			GHLogout();

		} catch (Exception e) {

			report.detailsAppend("TC41-SynapseHeader",
					"Check that Eye icon is visible and clickable after login on the home page.",
					"Eye icon is visible and clickable after login on the home page.", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC42(Synapse Header) PJ65867
	// To check that Balance field in green color is displayed on the home page of
	// Betway application.
	public boolean SynapseBalanceFiledHeader(Mobile_HTML_Report report) {

		try {

			GHLogin();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).isDisplayed());
			System.out.print("EyeIcon is Present");

			report.detailsAppend("TC42-SynapseHeader",
					"To check that Balance field in green color is displayed on the home page of Betway application.",
					"Balance field in green color is displayed on the home page of Betway application.", "Pass");

			GHLogout();

		} catch (Exception e) {

			report.detailsAppend("TC42-SynapseHeader",
					"To check that Balance field in green color is displayed on the home page of Betway application.",
					"Balance field in green color is displayed on the home page of Betway application.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC43(Synapse Header) PJ65867
	// To check that Amount in Balance field is dispalyed on the home page of Betway
	// application..
	public boolean SynapseAmountInBalanceFiledHeader(Mobile_HTML_Report report) {

		try {

			GHLogin();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).isDisplayed());
			System.out.print("EyeIcon is Present");

			report.detailsAppend("TC43-SynapseHeader",
					"To check that Amount in Balance field is dispalyed on the home page of Betway application.",
					"Amount in Balance field is dispalyed on the home page of Betway application.", "Pass");

			GHLogout();

		} catch (Exception e) {

			report.detailsAppend("TC43-SynapseHeader",
					"To check that Amount in Balance field is dispalyed on the home page of Betway application.",
					"Amount in Balance field is dispalyed on the home page of Betway application.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC44(Synapse Header) PJ65867
	// To check that GHS currency in balance field is displayed on the home page of
	// Betway application.
	public boolean SynapseGHSCurrencyHeader(Mobile_HTML_Report report) {

		try {

			GHLogin();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).isDisplayed());
			System.out.print("EyeIcon is Present");

			webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC44-SynapseHeader",
					"To check that GHS currency in balance field is displayed on the home page of Betway application.",
					"GHS currency in balance field is displayed on the home page of Betway application.", "Pass");

			GHLogout();

		} catch (Exception e) {

			report.detailsAppend("TC44-SynapseHeader",
					"To check that GHS currency in balance field is displayed on the home page of Betway application.",
					"GHS currency in balance field is displayed on the home page of Betway application.", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC45(Synapse Header) PJ65867
	// To check that Refresh button in balance field is visible and clickable on the
	// home page of Betway application.
	public boolean SynapseRefreshButtonInBalanceHeader(Mobile_HTML_Report report) {

		try {

			GHLogin();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).isDisplayed());
			System.out.print("EyeIcon is Present");

			webdriver.findElement(By.cssSelector(xpathMap.get("SynapseRefreshButtonHeader1"))).click();

			report.detailsAppend("TC45-SynapseHeader",
					"To check that Refresh button in balance field is visible and clickable on the home page of Betway application.",
					"Refresh button in balance field is visible and clickable on the home page of Betway application.",
					"Pass");

			GHLogout();

		} catch (Exception e) {

			report.detailsAppend("TC45-SynapseHeader",
					"To check that Refresh button in balance field is visible and clickable on the home page of Betway application.",
					"Refresh button in balance field is visible and clickable on the home page of Betway application.",
					"Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC46(Synapse Header) PJ65867
	// To check that Freebet field in green color is displayed on the home page of
	// Betway application.
	public boolean SynapseFreeBetHeader(Mobile_HTML_Report report) {

		try {

			GHLogin();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).isDisplayed());
			System.out.print("EyeIcon is Present");

//									webdriver.findElement(By.cssSelector(xpathMap.get("SynapseRefreshButtonHeader"))).click();

			report.detailsAppend("TC46-SynapseHeader",
					"To check that Freebet field in green color is displayed on the home page of Betway application.",
					"Freebet field in green color is displayed on the home page of Betway application.", "Pass");

			GHLogout();

		} catch (Exception e) {

			report.detailsAppend("TC46-SynapseHeader",
					"To check that Freebet field in green color is displayed on the home page of Betway application.",
					"Freebet field in green color is displayed on the home page of Betway application.", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC47(Synapse Header) PJ65867
	// To check that Amount in free bet field is displayed on the home page of
	// Betway application..
	public boolean SynapseFreeBetAmountHeader(Mobile_HTML_Report report) {

		try {

			GHLogin();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).isDisplayed());
			System.out.print("EyeIcon is Present");

			webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC47-SynapseHeader",
					"To check that Amount in free bet field is displayed on the home page of Betway application.",
					"Amount in free bet field is displayed on the home page of Betway application.", "Pass");

			GHLogout();

		} catch (Exception e) {

			report.detailsAppend("TC47-SynapseHeader",
					"To check that Amount in free bet field is displayed on the home page of Betway application.",
					"Amount in free bet field is displayed on the home page of Betway application.", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC48(Synapse Header) PJ65867
	// To check that GHS currency in free bet field is displayed on the home page of
	// Betway application.
	public boolean SynapseGHSCurrencyFreeBetAmountHeader(Mobile_HTML_Report report) {

		try {

			GHLogin();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).isDisplayed());
			System.out.print("EyeIcon is Present");

			webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC48-SynapseHeader",
					"To check that GHS currency in free bet field is displayed on the home page of Betway application.",
					"GHS currency in free bet field is displayed on the home page of Betway application.", "Pass");

			GHLogout();

		} catch (Exception e) {

			report.detailsAppend("TC48-SynapseHeader",
					"To check that GHS currency in free bet field is displayed on the home page of Betway application.",
					"GHS currency in free bet field is displayed on the home page of Betway application.", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC49(Synapse Header) PJ65867
	// To check that Refresh button in free bet field is visible and clickable on
	// the home page of Betway application.
	public boolean SynapseRefreshButtonInFreeBetHeader(Mobile_HTML_Report report) {

		try {

			GHLogin();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).isDisplayed());
			System.out.print("EyeIcon is Present");

			webdriver.findElement(By.cssSelector(xpathMap.get("SynapseRefreshButtonHeader2"))).click();

			report.detailsAppend("TC49-SynapseHeader",
					"To check that Refresh button in free bet field is visible and clickable on the home page of Betway application.",
					"Refresh button in free bet field is visible and clickable on the home page of Betway application.",
					"Pass");

		} catch (Exception e) {

			report.detailsAppend("TC49-SynapseHeader",
					"To check that Refresh button in free bet field is visible and clickable on the home page of Betway application.",
					"Refresh button in free bet field is visible and clickable on the home page of Betway application.",
					"Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC50(Synapse Header) PJ65867
	// To check that Casino bonus field in blue color is displayed on the home page
	// of Betway application.
	public boolean SynapseCasinoBonusHeader(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).isDisplayed());
			System.out.print("EyeIcon is Present");

//									webdriver.findElement(By.cssSelector(xpathMap.get("SynapseRefreshButtonHeader"))).click();

			report.detailsAppend("TC50-SynapseHeader",
					"To check that Casino bonus field in blue color is displayed on the home page of Betway application.",
					"Casino bonus field in blue color is displayed on the home page of Betway application.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC50-SynapseHeader",
					"To check that Casino bonus field in blue color is displayed on the home page of Betway application.",
					"Casino bonus field in blue color is displayed on the home page of Betway application.", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC51(Synapse Header) PJ65867
	// To check that Amount in casino bonus field is displayed on the home page of
	// Betway application.
	public boolean SynapseCasinoBonusAmountHeader(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).isDisplayed());
			System.out.print("EyeIcon is Present");

			webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC51-SynapseHeader",
					"To check that Amount in casino bonus field is displayed on the home page of Betway application.",
					"Amount in casino bonus field is displayed on the home page of Betway application.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC51-SynapseHeader",
					"To check that Amount in casino bonus field is displayed on the home page of Betway application.",
					"Amount in casino bonus field is displayed on the home page of Betway application.", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC52(Synapse Header) PJ65867
	// To check that GHS currency in casino bonus field is displayed on the home
	// page of Betway application.
	public boolean SynapseGHSCurrencyCasinoBonusHeader(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).isDisplayed());
			System.out.print("EyeIcon is Present");

			webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC52-SynapseHeader",
					"To check that GHS currency in casino bonus field is displayed on the home page of Betway application.",
					"GHS currency in casino bonus field is displayed on the home page of Betway application.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC52-SynapseHeader",
					"To check that GHS currency in casino bonus field is displayed on the home page of Betway application.",
					"GHS currency in casino bonus field is displayed on the home page of Betway application.", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC53(Synapse Header) PJ65867
	// To check that Refresh button in casino bonus field is visible and clickable
	// on the home page of Betway application.
	public boolean SynapseRefreshButtonInCasinoBonusHeader(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).isDisplayed());
			System.out.print("EyeIcon is Present");

			webdriver.findElement(By.cssSelector(xpathMap.get("SynapseRefreshButtonHeader3"))).click();

			report.detailsAppend("TC53-SynapseHeader",
					"To check that Refresh button in casino bonus field is visible and clickable on the home page of Betway application.",
					"Refresh button in casino bonus field is visible and clickable on the home page of Betway application.",
					"Pass");

		} catch (Exception e) {

			report.detailsAppend("TC53-SynapseHeader",
					"To check that Refresh button in casino bonus field is visible and clickable on the home page of Betway application.",
					"Refresh button in casino bonus field is visible and clickable on the home page of Betway application.",
					"Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC54(Synapse Header) PJ65867
	// To check that Deposit button in green colour is visible and clickable on the
	// home page of Betway application.
	public boolean SynapseDepositeButtonHeader(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).isDisplayed());
			System.out.print("EyeIcon is Present");

			webdriver.findElement(By.xpath(xpathMap.get("SynapseDepositeButtonHeader"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.cssSelector(xpathMap.get("LogoutinProfile31"))).isDisplayed());
			System.out.print("Deposite is Present");

			report.detailsAppend("TC54-SynapseHeader",
					"To check that Deposit button in green colour is visible and clickable on the home page of Betway application.",
					"Deposit button in green colour is visible and clickable on the home page of Betway application.",
					"Pass");

			webdriver.findElement(By.cssSelector(xpathMap.get("LogoutinProfile31"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseProceed"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {

			report.detailsAppend("TC54-SynapseHeader",
					"To check that Deposit button in green colour is visible and clickable on the home page of Betway application.",
					"Deposit button in green colour is visible and clickable on the home page of Betway application.",
					"Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC55(Synapse Header) PJ65867
	// To check that Notification bell icon is visible and clickable on the home
	// page of Betway application.
	public boolean SynapsenotificationBellHeader(Mobile_HTML_Report report) {

		try {

			GHLogin();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).isDisplayed());
			System.out.print("EyeIcon is Present");

			webdriver.findElement(By.xpath(xpathMap.get("NotificationBellHeader"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC55-SynapseHeader",
					"To check that Notification bell icon is visible and clickable on the home page of Betway application.",
					"Notification bell icon is visible and clickable on the home page of Betway application.", "Pass");

			webdriver.navigate().refresh();

			GHLogout();

		} catch (Exception e) {

			report.detailsAppend("TC55-SynapseHeader",
					"To check that Notification bell icon is visible and clickable on the home page of Betway application.",
					"Notification bell icon is visible and clickable on the home page of Betway application.", "Fail");

			return false;
		}

		return true;
	}

	// TC56(Synapse Header) PJ65867
	// To check that Chat icon is visible and clickable on the home page of Betway
	// application.
	public boolean SynapseChatIconHeader(Mobile_HTML_Report report) {

		try {

			GHLogin();

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).isDisplayed());
			System.out.print("EyeIcon is Present");

			webdriver.findElement(By.xpath(xpathMap.get("ChatIconHeader"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC56-SynapseHeader",
					"To check that Chat icon is visible and clickable on the home page of Betway application.",
					"Chat icon is visible and clickable on the home page of Betway application.", "Pass");

			webdriver.navigate().refresh();
			GHLogout();

		} catch (Exception e) {

			report.detailsAppend("TC56-SynapseHeader",
					"To check that Chat icon is visible and clickable on the home page of Betway application.",
					"Chat icon is visible and clickable on the home page of Betway application.", "Fail");

			return false;
		}

		return true;
	}

	// TC57(Synapse Header) PJ65867
	// To check that My Bets button is visible on the home page of Betway
	// application.
	public boolean SynapseMyBetsHeader(Mobile_HTML_Report report) {

		try {

			GHLogin();

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).isDisplayed());
			System.out.print("EyeIcon is Present");

//										webdriver.findElement(By.xpath(xpathMap.get("ChatIconHeader"))).click();
//										Thread.sleep(2000);

			report.detailsAppend("TC57-SynapseHeader",
					"To check that My Bets button is visible on the home page of Betway application.",
					"My Bets button is visible on the home page of Betway application.", "Pass");

			GHLogout();

		} catch (Exception e) {

			report.detailsAppend("TC57-SynapseHeader",
					"To check that My Bets button is visible on the home page of Betway application.",
					"My Bets button is visible on the home page of Betway application.", "Fail");

			return false;
		}

		return true;
	}

	// TC58(Synapse Header) PJ65867
	// To check that user is able to click on the My Bets button on the home page of
	// Betway application.
	public boolean SynapseMyBetsClickedHeader(Mobile_HTML_Report report) {

		try {

			GHLogin();

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("EyeIconHeaderSynapse"))).isDisplayed());
			System.out.print("EyeIcon is Present");

			webdriver.findElement(By.xpath(xpathMap.get("MyBetsHeader"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.cssSelector(xpathMap.get("LogoutinProfile31"))).isDisplayed());
			System.out.print("My Bet is Clicked");

			report.detailsAppend("TC58-SynapseHeader",
					"To check that user is able to click on  the My Bets button on the home page of Betway application.",
					"User is able to click on  the My Bets button on the home page of Betway application.", "Pass");

			webdriver.findElement(By.cssSelector(xpathMap.get("LogoutinProfile31"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseProceed"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {

			report.detailsAppend("TC58-SynapseHeader",
					"To check that user is able to click on  the My Bets button on the home page of Betway application.",
					"User is able to click on  the My Bets button on the home page of Betway application.", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	//////// Pratik Footer Synapse////

	// TC02(Synapse Footer) PJ65867
	// To check that the "Betway" logo in footer
	public boolean BetWayLogo(Mobile_HTML_Report report) {

		try {

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterBetwayLogo"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("UpComingButton"))).isDisplayed());
			System.out.print("BetWay Logo is Clicked");

			report.detailsAppend("TC02-SynapseFooter", "To check that the \"Betway\" logo in footer",
					"BetWay Logo is clicked", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC02-SynapseFooter", "To check that the \"Betway\" logo in footer",
					"BetWay Logo is clicked", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC01(Synapse Footer) PJ65867
	// To check the Footer section
	public boolean FooterOption(Mobile_HTML_Report report) {

		try {

			ScrollDown();

			report.detailsAppend("TC01-SynapseFooter", "To check the Footer section", "All options are available",
					"Pass");

		} catch (Exception e) {

			report.detailsAppend("TC01-SynapseFooter", "To check the Footer section", "All options are available",
					"Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC03(Synapse Footer) PJ65867
	// To check functionality of "Betway" logo at footer by clicking on it
	public boolean BetWayLogoFunctionality(Mobile_HTML_Report report) {

		try {

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterBetwayLogo"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("UpComingButton"))).isDisplayed());
			System.out.print("BetWay Logo is Clicked");

			report.detailsAppend("TC03-SynapseFooter",
					"To check functionality of \"Betway\" logo at footer by clicking on it",
					"Functionality of \"Betway\" logo at footer by clicking on it", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC03-SynapseFooter",
					"To check functionality of \"Betway\" logo at footer by clicking on it",
					"Functionality of \"Betway\" logo at footer by clicking on it", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC04(Synapse Footer) PJ65867
	// To check functionality of \"Sponsorships\" logo at footer
	public boolean SponsershipButton(Mobile_HTML_Report report) {

		try {

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterSponserShip"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForSponserShip"))).isDisplayed());
			System.out.print("Sponsership is Clicked");

			report.detailsAppend("TC04-SynapseFooter", "To check functionality of  \"Sponsorships\" logo at footer",
					"Functionality of  \"Sponsorships\" logo at footer", "Pass");

			report.detailsAppend("TC05-SynapseFooter", "To check contents of the \"Sponsorships\" page",
					"Contents of the \"Sponsorships\" page is right", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC04-SynapseFooter", "To check functionality of  \"Sponsorships\" logo at footer",
					"Functionality of  \"Sponsorships\" logo at footer", "Fail");

			report.detailsAppend("TC05-SynapseFooter", "To check contents of the \"Sponsorships\" page",
					"Contents of the \"Sponsorships\" page is right", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC06(Synapse Footer) PJ65867
	// To check functionality of Back button inside "Sponsorships" page
	public boolean BackButtonSponsership(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterSponserShip"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForSponserShip"))).isDisplayed());
			System.out.print("Sponsership is Clicked");

			webdriver.findElement(By.cssSelector(xpathMap.get("BackButtonSponsership"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("UpComingButton"))).isDisplayed());
			System.out.print("Back Button is Clicked");

			report.detailsAppend("TC06-SynapseFooter",
					"To check functionality of Back button inside \"Sponsorships\" page",
					"Functionality of Back button inside \"Sponsorships\" page is working fine", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC06-SynapseFooter",
					"To check functionality of Back button inside \"Sponsorships\" page",
					"Functionality of Back button inside \"Sponsorships\" page is working fine", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC07(Synapse Footer) PJ65867
	// To check functionality of "privacy policy" button
	public boolean PrivacyPolicyButton(Mobile_HTML_Report report) {

		try {

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterPrivacyPolicy"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForPrivacyPolicy"))).isDisplayed());
			System.out.print("Privacy Policy is Clicked");

			report.detailsAppend("TC07-SynapseFooter", "To check  functionality of \"privacy policy\" button",
					"Functionality of \"privacy policy\" button", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC07-SynapseFooter", "To check  functionality of \"privacy policy\" button",
					"Functionality of \"privacy policy\" button", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC08(Synapse Footer) PJ65867
	// To check back button on "Privacy policy" page
	public boolean BackButtonPrivacyPolicy(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterPrivacyPolicy"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForPrivacyPolicy"))).isDisplayed());
			System.out.print("Sponsership is Clicked");

			webdriver.findElement(By.cssSelector(xpathMap.get("BackButtonSponsership"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("UpComingButton"))).isDisplayed());
			System.out.print("Back Button is Clicked");

			report.detailsAppend("TC08-SynapseFooter", "To check back button on  \"Privacy policy\" page",
					"Back button on  \"Privacy policy\" page is working fine", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC08-SynapseFooter", "To check back button on  \"Privacy policy\" page",
					"Back button on  \"Privacy policy\" page is working fine", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC09(Synapse Footer) PJ65867
	// To check functionality of "Contact Us" button by clicking on it
	public boolean ContactUsButton(Mobile_HTML_Report report) {

		try {

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
			System.out.print("Contact Us is Clicked");

			report.detailsAppend("TC09-SynapseFooter",
					"To check functionality of \"Contact Us\" button by clicking on it",
					"Functionality of \"Contact Us\" button by clicking on it", "Pass");

			report.detailsAppend("TC10-SynapseFooter", "To check contents of of \"Contact Us\" button",
					"Contents of the \"Contact Us\" page is right", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC09-SynapseFooter",
					"To check functionality of \"Contact Us\" button by clicking on it",
					"Functionality of \"Contact Us\" button by clicking on it", "Fail");

			report.detailsAppend("TC10-SynapseFooter", "To check contents of of \"Contact Us\" button",
					"Contents of the \"Contact Us\" page is right", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC11(Synapse Footer) PJ65867
	// To check back button on "Contact Us" page
	public boolean BackButtonContactUs(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
			System.out.print("Sponsership is Clicked");

			webdriver.findElement(By.cssSelector(xpathMap.get("BackButtonSponsership"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("UpComingButton"))).isDisplayed());
			System.out.print("Back Button is Clicked");

			report.detailsAppend("TC11-SynapseFooter", "To check back button on  \"Contact Us\" page",
					"Back button on  \"Contact Us\" page is working fine", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC11-SynapseFooter", "To check back button on  \"Contact Us\" page",
					"Back button on  \"Contact Us\" page is working fine", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC12(Synapse Footer) PJ65867
	// To check functionality of "Chat to Live Support" button on contact details
	// page inside contact Us page
	public boolean ChatToLiveContactUs(Mobile_HTML_Report report) {

		try {

//						webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
//						Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
			System.out.print("Sponsership is Clicked");

			webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).click();
			Thread.sleep(4000);
//						Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForChatToLive"))).isDisplayed());
//						System.out.print("Back Button is Clicked");

			report.detailsAppend("TC12-SynapseFooter",
					"To check functionality of \"Chat to Live Support\" button on contact details page inside contact Us page ",
					"Functionality of \"Chat to Live Support\" button on contact details page inside contact Us page ",
					"Pass");

		} catch (Exception e) {

			report.detailsAppend("TC12-SynapseFooter",
					"To check functionality of \"Chat to Live Support\" button on contact details page inside contact Us page ",
					"Functionality of \"Chat to Live Support\" button on contact details page inside contact Us page ",
					"Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC13(Synapse Footer) PJ65867
	// To check the presence and contents of "Standard Rate" on Contact details page
	// inside contact Us page
	public boolean StandardRate(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
			System.out.print("Contact Us is Clicked");

			report.detailsAppend("TC13-SynapseFooter",
					"To check  the presence and contents of  \"Standard Rate\"  on Contact details page inside contact Us page",
					"Presence and contents of  \"Standard Rate\"  on Contact details page inside contact Us page",
					"Pass");

		} catch (Exception e) {

			report.detailsAppend("TC13-SynapseFooter",
					"To check  the presence and contents of  \"Standard Rate\"  on Contact details page inside contact Us page",
					"Presence and contents of  \"Standard Rate\"  on Contact details page inside contact Us page",
					"Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC14(Synapse Footer) PJ65867
	// To check presence and functionality of "Email: Support@betway.com.gh"
	// hyperlink
	public boolean EmailFunctionality(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
			System.out.print("Contact Us is Clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SupportEmail"))).click();
			Thread.sleep(4000);
//						Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
//						System.out.print("Contact Us is Clicked");

			report.detailsAppend("TC14-SynapseFooter",
					"To check presence and functionality of \"Email: Support@betway.com.gh\" hyperlink",
					"Presence and functionality of \"Email: Support@betway.com.gh\" hyperlink", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC14-SynapseFooter",
					"To check presence and functionality of \"Email: Support@betway.com.gh\" hyperlink",
					"Presence and functionality of \"Email: Support@betway.com.gh\" hyperlink", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC15(Synapse Footer) PJ65867
	// To check presence and functionality of "Twitter: @Betway_GH" hyperlink
	public boolean TwitterFunctionality(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
			System.out.print("Contact Us is Clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SupportTwitter"))).click();
			Thread.sleep(9000);
//						Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
//						System.out.print("Contact Us is Clicked");

			report.detailsAppend("TC15-SynapseFooter",
					"To check presence and functionality of \"Twitter: @Betway_GH\" hyperlink",
					"Presence and functionality of \"Twitter: @Betway_GH\" hyperlink", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC15-SynapseFooter",
					"To check presence and functionality of \"Twitter: @Betway_GH\" hyperlink",
					"Presence and functionality of \"Twitter: @Betway_GH\" hyperlink", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC16(Synapse Footer) PJ65867
	// To check that user able to see "WhatsApp: +233 20 930 1418" hyperlink
	public boolean NumberFunctionality(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
			System.out.print("Contact Us is Clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SupportNumber"))).click();
			Thread.sleep(9000);
//						Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
//						System.out.print("Contact Us is Clicked");

			report.detailsAppend("TC16-SynapseFooter",
					"To check that user able to see \"WhatsApp: +233 20 930 1418\" hyperlink",
					"User able to see \"WhatsApp: +233 20 930 1418\" hyperlink", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC16-SynapseFooter",
					"To check that user able to see \"WhatsApp: +233 20 930 1418\" hyperlink",
					"User able to see \"WhatsApp: +233 20 930 1418\" hyperlink", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC17(Synapse Footer) PJ65867
	// To check that user able to see Facebook: /Betway-Ghana" hyperlink
	public boolean FacebookFunctionality(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
			System.out.print("Contact Us is Clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SupportFacebook"))).click();
			Thread.sleep(9000);
//						Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
//						System.out.print("Contact Us is Clicked");

			report.detailsAppend("TC17-SynapseFooter",
					"To check that user able to see Facebook: /Betway-Ghana\" hyperlink",
					"User able to see Facebook: /Betway-Ghana\" hyperlink", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC17-SynapseFooter",
					"To check that user able to see Facebook: /Betway-Ghana\" hyperlink",
					"User able to see Facebook: /Betway-Ghana\" hyperlink", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC18(Synapse Footer) PJ65867
	// To check contents of the "Contact Form" inside Contact Us page
	public boolean ContactForm(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
			System.out.print("Contact Us is Clicked");

			Robot robot = new Robot();
			System.out.println("About to zoom in");
			for (int i = 0; i < 5; i++) {
				robot.keyPress(KeyEvent.VK_CONTROL);
				robot.keyPress(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_CONTROL);
			}
			Thread.sleep(4000);

			report.detailsAppend("TC18-SynapseFooter",
					"To check contents of the \"Contact Form\" inside Contact Us page",
					"Contents of the \"Contact Form\" inside Contact Us page", "Pass");

			for (int i = 0; i < 5; i++) {
				robot.keyPress(KeyEvent.VK_CONTROL);
				robot.keyPress(KeyEvent.VK_ADD);
				robot.keyRelease(KeyEvent.VK_ADD);
				robot.keyRelease(KeyEvent.VK_CONTROL);
			}

		} catch (Exception e) {

			report.detailsAppend("TC18-SynapseFooter",
					"To check contents of the \"Contact Form\" inside Contact Us page",
					"Contents of the \"Contact Form\" inside Contact Us page", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC19(Synapse Footer) PJ65867
	// To check functionality of "Dialing code" dropdown
	public boolean DailCode(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
			System.out.print("Contact Us is Clicked");

			webdriver.findElement(By.xpath(xpathMap.get("DailCodeFooter"))).click();
			Thread.sleep(4000);

			report.detailsAppend("TC19-SynapseFooter", "To check functionality of  \"Dialing code\" dropdown",
					"Functionality of  \"Dialing code\" dropdown", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC19-SynapseFooter", "To check functionality of  \"Dialing code\" dropdown",
					"Functionality of  \"Dialing code\" dropdown", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC20(Synapse Footer) PJ65867
	// To check that user able to see "Mobile Number" filed
	public boolean MobileNumber(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
			System.out.print("Contact Us is Clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MobilenumberFooter"))).click();
			Thread.sleep(4000);

			report.detailsAppend("TC20-SynapseFooter", "To check that user able to see \"Mobile Number\" filed",
					"User able to see \"Mobile Number\" filed", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC20-SynapseFooter", "To check that user able to see \"Mobile Number\" filed",
					"User able to see \"Mobile Number\" filed", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC21(Synapse Footer) PJ65867
	// To check functionality of "Mobile Number" text box
	public boolean MobileNumberData(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
			System.out.print("Contact Us is Clicked");

			webdriver.findElement(By.xpath(xpathMap.get("MobilenumberFooter"))).sendKeys(xpathMap.get("FooterMobNo"));
			Thread.sleep(4000);

			report.detailsAppend("TC21-SynapseFooter", "To check functionality of  \"Mobile Number\"  text box",
					"Functionality of  \"Mobile Number\"  text box", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC21-SynapseFooter", "To check functionality of  \"Mobile Number\"  text box",
					"Functionality of  \"Mobile Number\"  text box", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC22(Synapse Footer) PJ65867
	// To check that it not accept special character in "Email Address" filed
	public boolean EmailWithSpeChar(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
			System.out.print("Contact Us is Clicked");

			webdriver.findElement(By.xpath(xpathMap.get("EmailFooter"))).sendKeys(xpathMap.get("FooterEmails"));
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("SubmitFooter"))).click();
			;
			Thread.sleep(2000);

			report.detailsAppend("TC22-SynapseFooter",
					"To check that it not accept special character in \"Email Address\" filed",
					"It not accept special character in \"Email Address\" filed", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC22-SynapseFooter",
					"To check that it not accept special character in \"Email Address\" filed",
					"It not accept special character in \"Email Address\" filed", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC23(Synapse Footer) PJ65867
	// To check that it should accept only valid data in "Email Address" filed
	public boolean ValidEmail(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
			System.out.print("Contact Us is Clicked");

			webdriver.findElement(By.xpath(xpathMap.get("EmailFooter"))).sendKeys(xpathMap.get("FooterEmail"));
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("SubmitFooter"))).click();
			;
			Thread.sleep(2000);

			report.detailsAppend("TC23-SynapseFooter",
					"To check that it should accept only valid data in \"Email Address\" filed",
					"It accept only valid data in \"Email Address\" filed", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC23-SynapseFooter",
					"To check that it should accept only valid data in \"Email Address\" filed",
					"It accept only valid data in \"Email Address\" filed", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC24(Synapse Footer) PJ65867
	// To check contents and functionality of "Query Type" dropdown
	public boolean QueryType(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
			System.out.print("Contact Us is Clicked");

			webdriver.findElement(By.xpath(xpathMap.get("QueryTypeFooter"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("QueryTypeOpt"))).isDisplayed());
			System.out.print("Contact Us is Clicked");

			webdriver.findElement(By.xpath(xpathMap.get("QueryTypeOpt"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC24-SynapseFooter", "To check contents and functionality of \"Query Type\" dropdown",
					"Contents and functionality of \"Query Type\" dropdown", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC24-SynapseFooter", "To check contents and functionality of \"Query Type\" dropdown",
					"Contents and functionality of \"Query Type\" dropdown", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC-25(Synapse_Footer) PD69988//
	// To check functionality of "Query Type" dropdown by selecting option from
	// dropdown
	public boolean QueryTypeFooterSynapse(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(2000);
			WebElement odd = webdriver.findElement(By.xpath(xpathMap.get("SynapseQueryComments")));
			Actions action1 = new Actions(webdriver);
			action1.moveToElement(odd).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseQueryType"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordQuery"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseQueryComments"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC25-Synapse_Footer", "User Should be able to select query type",
					"User is able to select query type", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC25-Synapse_Footer", "User Should be able to select query type",
					"User is able to select query type", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-27(Synapse_Footer) PD69988//
	// To check functionality of "Query Field" comment text box
	public boolean QueryFieldFooterSynapse(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(2000);
			WebElement odd = webdriver.findElement(By.xpath(xpathMap.get("SynapseQueryComments")));
			Actions action1 = new Actions(webdriver);
			action1.moveToElement(odd).perform();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("SynapseQueryComments"))).sendKeys("Password Reset");
			Thread.sleep(2000);
			report.detailsAppend("TC27-Synapse_Footer", "User Should be able to enter the text in Query field",
					"User is able to enter the text in Query field", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC27-Synapse_Footer", "User Should be able to enter the text in Query field",
					"User is able to enter the text in Query field", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-28(Synapse_Footer) PD69988//
	// To check functionality of "Submit" button"
	public boolean QuerySubmitFooterSynapse(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("FooterMobile"))).sendKeys("995941937");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("FooterMail"))).sendKeys("pavandande123@gmail.com");
			Thread.sleep(2000);
			WebElement odd = webdriver.findElement(By.xpath(xpathMap.get("SynapseQueryComments")));
			Actions action1 = new Actions(webdriver);
			action1.moveToElement(odd).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseQueryType"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordQuery"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseQueryComments"))).sendKeys("Password Reset");
			Thread.sleep(2000);
			WebElement odd2 = webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs")));
			Actions action2 = new Actions(webdriver);
			action2.moveToElement(odd2).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("FooterSubmit"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC28-Synapse_Footer", "User Should be able to Submit query type",
					"User is able to Submit query type", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC28-Synapse_Footer", "User Should be able to Submit query type",
					"User is able to Submit query type", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-29(Synapse_Footer) PD69988//
	// To check functionality of "FAQ's" button at Footer section by clicking on it
	public boolean FAQFooterSynapse(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("FAQS")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("FAQS"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC29-Synapse_Footer", "User Should be able to open FAQs Page",
					"User is able to open FAQs Page", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC29-Synapse_Footer", "User Should be able to open FAQs Page",
					"User is able to open FAQs Page", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-30(Synapse_Footer) PD69988//
	// To check that User should able to click on any question from FAQs list
	public boolean FAQQuestionFooterSynapse(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("FAQS")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("FAQS"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FooterQuestion"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("FooterQuestion"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC30-Synapse_Footer", "User Should be able to open any question in FAQs Page",
					"User is able to open any question in FAQs Page", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC30-Synapse_Footer", "User Should be able to open any question in FAQs Page",
					"User is able to open any question in FAQs Page", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-31(Synapse_Footer) PD69988//
	// To check that User is able to click on Back button available on FAQ's page
	public boolean FAQBackFooterSynapse(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("FAQS")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("FAQS"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FAQBack"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("FAQBack"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC31-Synapse_Footer", "User Should be able to click back button in FAQs Page",
					"User is able to click back button in FAQs Page", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC31-Synapse_Footer", "User Should be able to click back button in FAQs Page",
					"User is able to click back button in FAQs Page", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-32(Synapse_Footer) PD69988//
	// To check functionality of "Responsible Gaming" at Footer section
	public boolean ResponsibleGamingFooterSynapse(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("Rgaming")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("Rgaming"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC32-Synapse_Footer", "User Should be able to open Responsible gaming Page",
					"User is able to open Responsible gaming Page", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC32-Synapse_Footer", "User Should be able to open Responsible gaming Page",
					"User is able to open Responsible gaming Page", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-33(Synapse_Footer) PD69988//
	// To check contents of the "Responsible Gaming" at Footer section
	public boolean ResponsibleGamingContentsFooterSynapse(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("Rgaming")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("Rgaming"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC33[1]-Synapse_Footer",
					"User Should be able to see Responsible gaming Page contents",
					"User is able to see Responsible gaming Page Contents", "Pass");

			WebElement odds1 = webdriver.findElement(By.xpath(xpathMap.get("GamingContactUs")));
			Actions action1 = new Actions(webdriver);
			action1.moveToElement(odds1).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("GamingContactUs"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC33[2]-Synapse_Footer",
					"User Should be able to open Hyperlinks in Responsible gaming Page",
					"User is able to open Hyperlinks in Responsible gaming Page", "Pass");
			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(xpathMap.get("AutoPlayID"))).click();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC33-Synapse_Footer", "User Should be able to see Responsible gaming Page Contents",
					"User is able to see Responsible gaming Page Contents", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-34(Synapse_Footer) PD69988//
	// To check functionality of "Back button" on Responsible Gaming page
	public boolean ResponsibleGamingBackFooterSynapse(Mobile_HTML_Report report) {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("SynapseFBAppIcon")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("Rgaming"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FAQBack"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("FAQBack"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC34-Synapse_Footer",
					"User Should be able to click back button in Responsible Gaming Page",
					"User is able to click back button in Responsible Gamin Page", "Pass");

			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC34-Synapse_Footer",
					"User Should be able to click back button in Responsible Gaming Page",
					"User is able to click back button in Responsible Gamin Page", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-35(Synapse_Footer) PD69988//
	// To check functionality of "Terms & Conditions" at the Footer section
	public boolean TermsConditionsFooterSynapse(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("SynapseFooter")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			try {
				webdriver.findElement(By.xpath(xpathMap.get("TermsConditions1"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC35-Synapse_Footer", "User Should be able to open Terms&Conditions Page",
					"User is able to open Terms&Conditions Page", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC35-Synapse_Footer", "User Should be able to open Terms&Conditions Page",
					"User is able to open Terms&Conditions Page", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-36(Synapse_Footer) PD69988//
	// To check expand and collapse functionality of any options button inside
	// "Terms & Conditions" page
	public boolean TermsConditionsContentFooterSynapse(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("SynapseFBAppIcon")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("TermsConditions1"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TCJackpots"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC36-Synapse_Footer", "User Should be able to open Terms&Conditions Page Contents",
					"User is able to open Terms&Conditions Page Contents", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC36-Synapse_Footer", "User Should be able to open Terms&Conditions Page Contents",
					"User is able to open Terms&Conditions Page Contents", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-37(Synapse_Footer) PD69988//
	// To check functionality of "Back" button on "Terms & Conditions" page
	public boolean TermsConditionsBackFooterSynapse(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("SynapseFBAppIcon")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("TermsConditions1"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("FAQBack"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC37-Synapse_Footer", "User Should be able to go Back from Terms&Conditions Page",
					"User is able to go Back from Terms&Conditions Page ", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC37-Synapse_Footer", "User Should be able to go Back from Terms&Conditions Page",
					"User is able to go Back from Terms&Conditions Page ", "Pass");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-38(Synapse_Footer) PD69988//
	// To check functionality of "Betting Rules" at footer section
	public boolean BettingRulesContentFooterSynapse(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("SynapseFooter")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("BettingRules"))).click();
			Thread.sleep(2000);
			switchToNewTab();
			report.detailsAppend("TC38-Synapse_Footer", "User Should be able to open BettingRules Page Contents",
					"User is able to open BettingRules Page Contents", "Pass");
			switchToParentTab();
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC38-Synapse_Footer", "User Should be able to open BettingRules Page Contents",
					"User is able to open BettingRules Page Contents", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-39(Synapse_Footer) PD69988//
	// To check functionality of "Betway App" at footer section
	public boolean BetwayAppContentFooterSynapse(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("SynapseFooter")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("BetwayApp"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC39-Synapse_Footer", "User Should be able to open BetwayApp Page Contents",
					"User is able to open BetwayApp Page Contents", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC39-Synapse_Footer", "User Should be able to open BetwayApp Page Contents",
					"User is able to open BetwayApp Page Contents", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC40(Synapse Footer) PJ65867
	// To check Contents of betway app
	public boolean BetWayAppOption(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterBetWayApp"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForBetWayApp"))).isDisplayed());
			System.out.print("BetWay App is Clicked");

			report.detailsAppend("TC40-SynapseFooter", "To check Contents of betway app", "Contents of betway app",
					"Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonInsideBetWayApp"))).click();
			Thread.sleep(4000);
//						Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("UpComingButton"))).isDisplayed());
//						System.out.print("Back Button is Clicked");

			report.detailsAppend("TC41-SynapseFooter",
					"To check functionality of  \"Back button\" inside the Betway App page screen",
					"Functionality of  \"Back button\" inside the Betway App page screen", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC40-SynapseFooter", "To check Contents of betway app", "Contents of betway app",
					"Fail");

			report.detailsAppend("TC41-SynapseFooter",
					"To check functionality of  \"Back button\" inside the Betway App page screen",
					"Functionality of  \"Back button\" inside the Betway App page screen", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC42(Synapse Footer) PJ65867
	// To check back button on "betWay App" page
	public boolean BackButtonBetWayApp(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterBetWayApp"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForBetWayApp"))).isDisplayed());
			System.out.print("BetWay App is Clicked");

			webdriver.findElement(By.cssSelector(xpathMap.get("BackButtonSponsership"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("UpComingButton"))).isDisplayed());
			System.out.print("Back Button is Clicked");

			report.detailsAppend("TC42-SynapseFooter", "To check back button on \"betWay App\" page",
					"Back button on  \"betWay App\" page is working fine", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC42-SynapseFooter", "To check back button on \"betWay App\" page",
					"Back button on  \"betWay App\" page is working fine", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	//////////// Akhil AS66528 Regression FooterSection Synapse ////////////////////

	// TC-43 (Synapse_Footer) AS66528//
	// To check functionality of "How To" button at Footer section
	public boolean Synapse_HowtoButton(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC43-Synapse_Footer",
					"User is able To check functionality of \"How To\" button at Footer sectione",
					"Checked User is able To check functionality of \"How To\" button at Footer section", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC43-Synapse_Footer",
					"User Not able to check functionality of \"How To\" button at Footer section",
					"Checked User Not able To check functionality of \"How To\" button at Footer section", "Fail");
			return false;
		}

		return true;
	}

	// TC-44 (Synapse_Footer) AS66528//
	// To check options availability at "How To" page
	public boolean Synapse_CheckHowtoOptionPage(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC44-Synapse_Footer", "User is able to check options availability at \"How To\" page",
					"Checked User is able to check options availability at \"How To\" page", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC44-Synapse_Footer",
					"User Not able to check options availability at \"How To\" page",
					"Checked User Not able To check options availability at \"How To\" page", "Fail");
			return false;
		}

		return true;
	}

	// TC-45 (Synapse_Footer) AS66528//
	// User is able to click on "How to BetSMS" on the How To page
	public boolean Synapse_HowtoBetSMSPage(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBetSMSButton"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("SynapseBetSMSButton"))).click();
				Thread.sleep(2000);

				report.detailsAppend("TC45-Synapse_Footer",
						"User is able to click on \"How to BetSMS\" on the How To page",
						"Checked User is able to click on \"How to BetSMS\" on the How To page", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC45-Synapse_Footer",
						"User Not able to click on \"How to BetSMS\" on the How To page",
						"Checked User Not able to click on \"How to BetSMS\" on the How To page", "Fail");
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC45-Synapse_Footer",
					"User Not able to click on \"How to BetSMS\" on the How To page",
					"Checked User Not able to click on \"How to BetSMS\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

	// TC-46 (Synapse_Footer) AS66528//
	// User is able to click on any option available on "How to BetSMS" section
	public boolean Synapse_ClickAnyOptionInBetSMS(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);

			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBetSMSButton"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("SynapseBetSMSButton"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("Synapse1stOptionInHowToSMSPage"))).isDisplayed());
				System.out.print(" 1stOption InHowToPage  Visible ");
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("Synapse1stOptionInHowToSMSPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC46-Synapse_Footer",
						"User is able to click on any option available on \"How to BetSMS\" Section",
						"Checked User clicked any option available on \"How to BetSMS\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC46-Synapse_Footer",
						"User is able to click on any option available on \"How to BetSMS\" Section",
						"Checked User clicked any option available on \"How to BetSMS\" Section", "Fail");
				return false;
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC46-Synapse_Footer",
					"User is able to click on any option available on \"How to BetSMS\" Section",
					"Checked User clicked any option available on \"How to BetSMS\" Section", "Fail");
			return false;
		}
		return true;
	}

	// TC-47 (Synapse_Footer) AS66528//
	// User is able to click on "How to Bet" on the How To page
	public boolean Synapse_HowtoBetPage(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToBetButton"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToBetButton"))).click();
				Thread.sleep(2000);

				report.detailsAppend("TC47-Synapse_Footer",
						"User is able to click on \"How to Bet\" on the How To page",
						"Checked User is able to click on \"How to Bet\" on the How To page", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC47-Synapse_Footer",
						"User Not able to click on \"How to Bet\" on the How To page",
						"Checked User Not able to click on \"How to Bet\" on the How To page", "Fail");
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC47-Synapse_Footer", "User Not able to click on \"How to Bet\" on the How To page",
					"Checked User Not able to click on \"How to Bet\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

	// TC-48 (Synapse_Footer) AS66528//
	// User is able to click on any option available on "How to Bet" section
	public boolean Synapse_ClickAnyOptionInBetPage(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);

			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToBetButton"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToBetButton"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).isDisplayed());
				System.out.print(" 1stOption InHowToPage  Visible ");
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC48-Synapse_Footer",
						"User is able to click on any option available on \"How to Bet\" Section",
						"Checked User clicked any option available on \"How to Bet\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC48-Synapse_Footer",
						"User is able to click on any option available on \"How to Bet\" Section",
						"Checked User clicked any option available on \"How to Bet\" Section", "Fail");
				return false;
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC48-Synapse_Footer",
					"User is able to click on any option available on \"How to Bet\" Section",
					"Checked User clicked any option available on \"How to Bet\" Section", "Fail");
			return false;
		}
		return true;
	}

	// TC-49 (Synapse_Footer) AS66528//
	// User is able to click on "How to Betgames" on the How To page
	public boolean Synapse_HowtoBetgamesPage(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBetgamesButton"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("SynapseBetgamesButton"))).click();
				Thread.sleep(2000);

				report.detailsAppend("TC49-Synapse_Footer",
						"User is able to click on \"How to Betgames\" on the How To page",
						"Checked User is able to click on \"How to Betgames\" on the How To page", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC49-Synapse_Footer",
						"User Not able to click on \"How to Bet\" on the How To page",
						"Checked User Not able to click on \"How to Bet\" on the How To page", "Fail");
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC49-Synapse_Footer", "User Not able to click on \"How to Bet\" on the How To page",
					"Checked User Not able to click on \"How to Bet\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

	// TC-50 (Synapse_Footer) AS66528//
	// User is able to click on any option available on "How to Betgames" section
	public boolean Synapse_ClickAnyOptionInBetgames(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);

			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBetgamesButton"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("SynapseBetgamesButton"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).isDisplayed());
				System.out.print(" 1stOption InHowToPage  Visible ");
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC50-Synapse_Footer",
						"User is able to click on any option available on \"How to Betgames\" Section",
						"Checked User clicked any option available on \"How to Betgames\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC50-Synapse_Footer",
						"User is able to click on any option available on \"How to Betgames\" Section",
						"Checked User clicked any option available on \"How to Betgames\" Section", "Fail");
				return false;
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC50-Synapse_Footer",
					"User is able to click on any option available on \"How to Betgames\" Section",
					"Checked User clicked any option available on \"How to Betgames\" Section", "Fail");
			return false;
		}
		return true;
	}

	// TC-51 (Synapse_Footer) AS66528//
	// User is able to click on "How to Register" on the How To page
	public boolean Synapse_HowtoRegisterPage(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToRegisterButton"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToRegisterButton"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC51-Synapse_Footer",
						"User is able to click on \"How to Register\" on the How To page",
						"Checked User is able to click on \"How to Register\" on the How To page", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC51-Synapse_Footer",
						"User is able to click on \"How to Register\" on the How To page",
						"Checked User is able to click on \"How to Register\" on the How To page", "Fail");
				return false;
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC51-Synapse_Footer",
					"User is able to click on \"How to Register\" on the How To page",
					"Checked User is able to click on \"How to Register\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

	// TC-52 (Synapse_Footer) AS66528//
	// User is able to click on any option available on "How to Register" section
	public boolean Synapse_ClickAnyOptionInRegister(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToRegisterButton"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToRegisterButton"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).isDisplayed());
				System.out.print(" 1stOption InHowToPage  Visible ");
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC52-Synapse_Footer",
						"User is able to click on any option available on \"How to Register\" Section",
						"Checked User clicked any option available on \"How to Register\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC52-Synapse_Footer",
						"User Not able to click on any option available on \"How to Register\" Section",
						"Checked User Not clicked any option available on \"How to Register\" Section", "Fail");
				return false;
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC52-Synapse_Footer",
					"User Not able to click on any option available on \"How to Register\" Section",
					"Checked User Not clicked any option available on \"How to Register\" Section", "Fail");
			return false;
		}

		return true;
	}

	// TC-53 (Synapse_Footer) AS66528//
	// User is able to click on "How to Deposit" on the How To page
	public boolean Synapse_HowtoDepositPage(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {

				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToDepositButton"))).isDisplayed());
				System.out.print(" HowTo Deposit Visible ");
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToDepositButton"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC53-Synapse_Footer",
						"User is able to click on \"How to Deposit\" on the How To page",
						"Checked User is able to click on \"How to Deposit\" on the How To page", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC53-Synapse_Footer",
						"User is able to click on \"How to Deposit\" on the How To page",
						"Checked User is able to click on \"How to Deposit\" on the How To page", "Fail");
				return false;
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC53-Synapse_Footer",
					"User is able to click on \"How to Deposit\" on the How To page",
					"Checked User is able to click on \"How to Deposit\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

	// TC-54 (Synapse_Footer) AS66528//
	// User is able to click on any option available on "How to Deposit" section
	public boolean Synapse_ClickAnyOptionInDeposit(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {

				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToDepositButton"))).isDisplayed());
				System.out.print(" HowTo Deposit Visible ");
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToDepositButton"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).isDisplayed());
				System.out.print(" 1stOption InHowToPage  Visible ");
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC54-Synapse_Footer",
						"User is able to click on any option available on \"How to Deposit\" Section",
						"Checked User clicked any option available on \"How to Deposit\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC54-Synapse_Footer",
						"User is able to click on any option available on \"How to Deposit\" Section",
						"Checked User clicked any option available on \"How to Deposit\" Section", "Fail");
				return false;
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC54-Synapse_Footer",
					"User is able to click on any option available on \"How to Deposit\" Section",
					"Checked User clicked any option available on \"How to Deposit\" Section", "Fail");
			return false;
		}

		return true;
	}

	// TC-55 (Synapse_Footer) AS66528//
	// User is able to click on "How to Reset Password" on the How To page
	public boolean Synapse_HowtoResetPasswordPage(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {

				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToResetPasswordButton"))).isDisplayed());
				System.out.print(" HowTo ResetPassword Visible ");
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToResetPasswordButton"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC55-Synapse_Footer",
						"User is able to click on \"How to Reset Password\" on the How To page",
						"Checked User is able to click on \"How to Reset Password\" on the How To page", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC55-Synapse_Footer",
						"User is able to click on \"How to Reset Password\" on the How To page",
						"Checked User is able to click on \"How to Reset Password\" on the How To page", "Fail");
				return false;
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC55-Synapse_Footer",
					"User is able to click on \"How to Reset Password\" on the How To page",
					"Checked User is able to click on \"How to Reset Password\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

	// TC-56 (Synapse_Footer) AS66528//
	// User is able to click on any option available on "How to Reset Password"
	// section
	public boolean Synapse_ClickAnyOptionInResetPassword(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {

				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToResetPasswordButton"))).isDisplayed());
				System.out.print(" HowTo ResetPassword Visible ");
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToResetPasswordButton"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).isDisplayed());
				System.out.print(" 1stOption InHowToPage  Visible ");
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC56-Synapse_Footer",
						"User is able to click on any option available on \"How to Reset Password\" Section",
						"Checked User clicked any option available on \"How to Reset Password\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC56-Synapse_Footer",
						"User is able to click on any option available on \"How to Reset Password\" Section",
						"Checked User clicked any option available on \"How to Reset Password\" Section", "Fail");
				return false;
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC56-Synapse_Footer",
					"User is able to click on any option available on \"How to Reset Password\" Section",
					"Checked User clicked any option available on \"How to Reset Password\" Section", "Fail");
			return false;
		}

		return true;
	}

	// TC-57 (Synapse_Footer) AS66528//
	// User is able to click on "How to Withdraw" on the How To page
	public boolean Synapse_HowtoWithdrawPage(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {

				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToWithdrawButton"))).isDisplayed());
				System.out.print(" HowTo Withdraw button Visible ");
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToWithdrawButton"))).click();
				Thread.sleep(2000);

				report.detailsAppend("TC57-Synapse_Footer",
						"User is able to click on \"How to Withdraw\" on the How To page",
						"Checked User is able to click on \"How to Withdraw\" on the How To page", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC57-Synapse_Footer",
						"User is able to click on \"How to Withdraw\" on the How To page",
						"Checked User is able to click on \"How to Withdraw\" on the How To page", "Fail");
				return false;
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC57-Synapse_Footer",
					"User is able to click on \"How to Withdraw\" on the How To page",
					"Checked User is able to click on \"How to Withdraw\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

	// TC-58 (Synapse_Footer) AS66528//
	// User is able to click on any option available on "How to Withdraw" section
	public boolean Synapse_ClickAnyOptionInWithdraw(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {

				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToWithdrawButton"))).isDisplayed());
				System.out.print(" HowTo Withdraw button Visible ");
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToWithdrawButton"))).click();
				Thread.sleep(2000);

				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).isDisplayed());
				System.out.print(" 1stOption InHowToPage  Visible ");
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC58-Synapse_Footer",
						"User is able to click on any option available on \"How to Withdraw\" Section",
						"Checked User clicked any option available on \"How to Withdraw\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC58-Synapse_Footer",
						"User is able to click on any option available on \"How to Withdraw\" Section",
						"Checked User clicked any option available on \"How to Withdraw\" Section", "Fail");
				return false;
			}

			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC58-Synapse_Footer",
					"User is able to click on any option available on \"How to Withdraw\" Section",
					"Checked User clicked any option available on \"How to Withdraw\" Section", "Fail");
			return false;
		}

		return true;
	}

	// TC-59 (Synapse_Footer) AS66528//
	// User is able to click on "How to Jackpots" on the How To page
	public boolean Synapse_HowtoJackpotsPage(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {

				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToJackpotsButton"))).isDisplayed());
				System.out.print(" HowTo Jackpots button Visible ");
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToJackpotsButton"))).click();
				Thread.sleep(2000);

				report.detailsAppend("TC59-Synapse_Footer",
						"User is able to click on \"How to Jackpots\" on the How To page",
						"Checked User is able to click on \"How to Jackpots\" on the How To page", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC59-Synapse_Footer",
						"User is able to click on \"How to Jackpots\" on the How To page",
						"Checked User is able to click on \"How to Jackpots\" on the How To page", "Fail");
				return false;
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC59-Synapse_Footer",
					"User is able to click on \"How to Jackpots\" on the How To page",
					"Checked User is able to click on \"How to Jackpots\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

//	public void SynapseNavigateFooterPage() throws Exception {
//		try {
//			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
//			Thread.sleep(2000);
//			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooter"))).click();
//			Thread.sleep(2000);
//		} catch (Exception e) {
//			System.out.println(e);
//		}
//	}

	// TC-60 (Synapse_Footer) AS66528//
	// User is able to click on any option available on "How to Jackpots" section
	public boolean Synapse_ClickAnyOptionInJackpots(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {

				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToJackpotsButton"))).isDisplayed());
				System.out.print(" HowTo Jackpots button Visible ");
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToJackpotsButton"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).isDisplayed());
				System.out.print(" 1stOption InHowToPage  Visible ");
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC60-Synapse_Footer",
						"User is able to click on any option available on \"How to Jackpots\" Section",
						"Checked User clicked any option available on \"How to Jackpots\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC60-Synapse_Footer",
						"User is able to click on any option available on \"How to Jackpots\" Section",
						"Checked User clicked any option available on \"How to Jackpots\" Section", "Fail");
				return false;
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC60-Synapse_Footer",
					"User is able to click on any option available on \"How to Jackpots\" Section",
					"Checked User clicked any option available on \"How to Jackpots\" Section", "Fail");
			return false;
		}

		return true;
	}

	// TC-61 (Synapse_Footer) AS66528//
	// User is able to click on "How to Casino" on the How To page
	public boolean Synapse_HowtoCasinoPage(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {

				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToCasinoButton"))).isDisplayed());
				System.out.print(" HowTo Casino button Visible ");
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToCasinoButton"))).click();
				Thread.sleep(2000);

				report.detailsAppend("TC61-Synapse_Footer",
						"User is able to click on \"How to Casino\" on the How To page",
						"Checked User is able to click on \"How to Casino\" on the How To page", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC61-Synapse_Footer",
						"User is able to click on \"How to Casino\" on the How To page",
						"Checked User is able to click on \"How to Casino\" on the How To page", "Fail");
				return false;
			}

			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC61-Synapse_Footer", "User is able to click on \"How to Casino\" on the How To page",
					"Checked User is able to click on \"How to Casino\" on the How To page", "Fail");
			return false;
		}
		return true;
	}

	// TC-62 (Synapse_Footer) AS66528//
	// User is able to click on any option available on "How to Casino" section
	public boolean Synapse_ClickAnyOptionInCasino(Mobile_HTML_Report report) {

		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {

				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToCasinoButton"))).isDisplayed());
				System.out.print(" HowTo Casino button Visible ");
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToCasinoButton"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).isDisplayed());
				System.out.print(" 1stOption InHowToPage  Visible ");
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC62-Synapse_Footer",
						"User is able to click on any option available on \"How to Casino\" Section",
						"Checked User clicked any option available on \"How to Casino\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC62-Synapse_Footer",
						"User is able to click on any option available on \"How to Casino\" Section",
						"Checked User clicked any option available on \"How to Casino\" Section", "Fail");
				return false;
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC62-Synapse_Footer",
					"User is able to click on any option available on \"How to Casino\" Section",
					"Checked User clicked any option available on \"How to Casino\" Section", "Fail");
			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC-63 (Synapse_Footer) AS66528//
	// To check that User is able to click on Affiliates from the Footer section
	public boolean Synapse_AffiliatesOnFooter(Mobile_HTML_Report report) {

		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("SynapseAffiliateProgramButton"))).isDisplayed());
			System.out.print(" Affiliates Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseAffiliateProgramButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC63-Synapse_Footer", "User is able to click on Affiliates from the Footer",
					"User click on Affiliates from the Footer", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC63-Synapse_Footer", "User Not able to click on Affiliates from the Footer",
					"User Not able to click on Affiliates from the Footer", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC-64 (Synapse_Footer) AS66528//
	// TVerify that User should able to see the Legal information about betWay on
	// footer section
	public boolean Synapse_LegalinformationOnFooter(Mobile_HTML_Report report) {

		try {

			SynapseNavigateFooterPage();
			Thread.sleep(2000);

			report.detailsAppend("TC64-Synapse_Footer",
					"User should able to see the Legal information about betWay on footer section",
					"User able to see the Legalinformation about betWay on footer", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC64-Synapse_Footer", "User not able check available Hyperlinks on footer section",
					"User not able to see the Legalinformation about betWay on footer", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;

	}

	// TC-65 (Synapse_Footer) AS66528//
	// To check presence of version information of Betway application at footer
	// section
	public boolean Synapse_versionInformationOnFooter(Mobile_HTML_Report report) {

		try {

			SynapseNavigateFooterPage();
			Thread.sleep(2000);

			report.detailsAppend("TC65-Synapse_Footer",
					"User able check presence of version information of Betway application at footer section",
					"User able to check presence of version information of Betway application at footer section",
					"Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC65-Synapse_Footer",
					"User not able check presence of version information of Betway application at footer section",
					"User not able to check presence of version information of Betway application at footer section",
					"Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;

	}

	// TC-66 (Synapse_Footer) AS66528//
	// To Verify that User is able to see the Current time on footer section
	public boolean Synapse_CurrentTimeOnFooter(Mobile_HTML_Report report) {

		try {

			SynapseNavigateFooterPage();
			Thread.sleep(2000);

			report.detailsAppend("TC66-Synapse_Footer", "User is able to see the Current time on footer section",
					"User is able to see the Current time on footer section", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC66-Synapse_Footer", "User is able to see the Current time on footer section",
					"User is able to see the Current time on footer section", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;

	}

	// TC-67 (Synapse_Footer) AS66528//
	// To Check presence and functionality of "Betway App QR code" at footer section
	public boolean Synapse_betWayAppQRcodeOnFooter(Mobile_HTML_Report report) {

		try {

			SynapseNavigateFooterPage();
			Thread.sleep(2000);

			report.detailsAppend("TC67-Synapse_Footer",
					"User Check presence and functionality of \"Betway App QR code\" at footer section",
					"User able to Check presence and functionality of \"Betway App QR code\" at footer section",
					"Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC67-Synapse_Footer",
					"User not able to Check presence and functionality of \"Betway App QR code\" at footer section",
					"User Not check presence and functionality of \"Betway App QR code\" at footer section", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC-68 (Synapse_Footer) AS66528//
	// To check that User is able to click on App store icons on Footer section
	public boolean Synapse_AppstoreiconsOnFooter(Mobile_HTML_Report report) {

		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseAppStoreIcon"))).isDisplayed());
			System.out.print(" App Store Icon Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseAppStoreIcon"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC68-Synapse_Footer", "User is able to click on App store icons on Footer",
					"User click on App store icons on Footer", "Pass");

			Thread.sleep(2000);

			log.debug("Switch to default tab");
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC68-Synapse_Footer", "User is able to click on App store icons on Footer",
					"User click on App store icons on Footer", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC-69 (Synapse_Footer) AS66528//
	// To check that User is able to click on the social media icons from the footer
	// section
	public boolean Synapse_socialmediaIconsOnFooter(Mobile_HTML_Report report) {

		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFBAppIcon"))).isDisplayed());
			System.out.print(" Affiliates Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFBAppIcon"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC69-Synapse_Footer", "User is able to click on social media icons on Footer",
					"User click on social media icons on Footer", "Pass");

			Thread.sleep(2000);

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC69-Synapse_Footer", "User is able to click on social media icons on Footer",
					"User click on social media icons on Footer", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC-70 (Synapse_Footer) AS66528//
	// To check that User is able to click on 18Plus Logo, redirect to the "Terms &
	// conditions" page
	public boolean Synapse_EighteenPlusLogoOnFooter(Mobile_HTML_Report report) {

		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseTermsCondition"))).isDisplayed());
			System.out.print(" terms&condition Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseTermsCondition"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC70-Synapse_Footer",
					"User is able to click on 18Plus Logo,redirect to the \"Terms & conditions\" page",
					"User click on 18Plus logo, redirect to the \"Terms & conditions\" page", "Pass");

			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBackButton"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC70-Synapse_Footer",
					"User is able to click on 18Plus Logo,redirect to the \"Terms & conditions\" page",
					"User click on 18Plus, redirect to the \"Terms & conditions\" pager", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC-71 (Synapse_Footer) AS66528//
	// To check navigation of back button on any section
	public boolean Synapse_BackButtonOnAnySection(Mobile_HTML_Report report) {

		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseTermsCondition"))).isDisplayed());
			System.out.print(" Terms&Condition Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseTermsCondition"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBackButton"))).click();
			Thread.sleep(1000);
			report.detailsAppend("TC71-Synapse_Footer",
					"User is able To check navigation of back button on any section",
					"Checked User is able To check navigation of back button on any section", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC71-Synapse_Footer",
					"User is able To check navigation of back button on any section",
					"Checked User is able To check navigation of back button on any section", "Fail");
			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}
///////////////////////////////////////////////////////Tanzania////////////////////////////////////////////////////////////////

///////////////////////////////////////////// TANZANIA///////////////////////////////////////////
// TC-06(Synapse Build A Bet) PJ65867
// To check whether Total Odd Section is available or not.
	public Boolean TZTotalOddSection(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("MatchOfLeague is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("TopButtonInStatasticPageSynapse1"))).isDisplayed());
			System.out.print("BuildaBetSynapse is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("ExpandCollapseIcon"))).click();
//Thread.sleep(2000);

			report.detailsAppend("TC01-Tanzania_BAB", "To check whether Total Odd Section is available or not.",
					"Total Odd Section is available", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonStatasticPageSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("ExpandCollapseIcon"))).click();
//Thread.sleep(2000);	

		} catch (Exception e) {

			report.detailsAppend("TC01-Tanzania_BAB", "To check whether Total Odd Section is available or not.",
					"Total Odd Section is available", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-07(Synapse Build A Bet) PJ65867
// To cehck whether "Total Odds" section is getting '0' odds or not
	public Boolean TZZeroTotalOddSection(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("MatchOfLeague is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("TopButtonInStatasticPageSynapse1"))).isDisplayed());
			System.out.print("BuildaBetSynapse is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("ExpandCollapseIcon"))).click();
//Thread.sleep(2000);

			report.detailsAppend("TC02-Tanzania_BAB",
					"To cehck whether \"Total Odds\" section is getting '0' odds or not",
					"Total Odds\" section is getting '0' odds", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonStatasticPageSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("ExpandCollapseIcon"))).click();
//Thread.sleep(2000);	

		} catch (Exception e) {

			report.detailsAppend("TC02-Tanzania_BAB",
					"To cehck whether \"Total Odds\" section is getting '0' odds or not",
					"Total Odds\" section is getting '0' odds", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-08(Synapse Build A Bet) PJ65867
// To check whether number of selection is present on Total Odds section or not
	public Boolean TZTotalOddNumberSection(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("MatchOfLeague is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("TopButtonInStatasticPageSynapse1"))).isDisplayed());
			System.out.print("BuildaBetSynapse is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("ExpandCollapseIcon"))).click();
//Thread.sleep(2000);

			report.detailsAppend("TC03-Tanzania_BAB",
					"To check whether number of selection is present on Total Odds section or not",
					"Number of selection is present on Total Odds section", "Pass");

//webdriver.findElement(By.xpath(xpathMap.get("ExpandCollapseIcon"))).click();
//Thread.sleep(2000);	

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonStatasticPageSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC03-Tanzania_BAB",
					"To check whether number of selection is present on Total Odds section or not",
					"Number of selection is present on Total Odds section", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-09(Synapse Build A Bet) PJ65867
// To check when user select their first odd then on "Total Odds" section it is
// displaying Total odds as 0.00
	public Boolean TZOddReflectInTotalOdd(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("MatchOfLeague is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("TopButtonInStatasticPageSynapse1"))).isDisplayed());
			System.out.print("BuildaBetSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("DrawInBuildaBetSynapse"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC04-Tanzania_BAB",
					"To check when user select their first odd then on \"Total Odds\" section it is displaying Total odds as 0.00",
					"User select their first odd then on \"Total Odds\" section it is displaying Total odds as 0.00",
					"Pass");

//webdriver.findElement(By.xpath(xpathMap.get("ExpandCollapseIcon"))).click();
//Thread.sleep(2000);	

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonStatasticPageSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC04-Tanzania_BAB",
					"To check when user select their first odd then on \"Total Odds\" section it is displaying Total odds as 0.00",
					"User select their first odd then on \"Total Odds\" section it is displaying Total odds as 0.00",
					"Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-10(Synapse Build A Bet) PJ65867
// To check when user select their first odd then on "Total Odds" section it is
// displaying selection as 1
	public Boolean TZOddReflectInTotalOddSelection(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("MatchOfLeague is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("TopButtonInStatasticPageSynapse1"))).isDisplayed());
			System.out.print("BuildaBetSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("DrawInBuildaBetSynapse"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC05-Tanzania_BAB",
					"To check when user select their first odd then on \"Total Odds\" section it is displaying selection as 1",
					"User select their first odd then on \"Total Odds\" section it is displaying selection as 1",
					"Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonStatasticPageSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC05-Tanzania_BAB",
					"To check when user select their first odd then on \"Total Odds\" section it is displaying selection as 1",
					"User select their first odd then on \"Total Odds\" section it is displaying selection as 1",
					"Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-11(Synapse Build A Bet) PJ65867
// To check when user select their first odd then on "Total Odds" section it is
// displaying "Add to Betslip"
	public Boolean TZAddToBetSlip(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("MatchOfLeague is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("TopButtonInStatasticPageSynapse1"))).isDisplayed());
			System.out.print("BuildaBetSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("DrawInBuildaBetSynapse"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC06-Tanzania_BAB",
					"To check when user select their first odd then on \"Total Odds\" section it is displaying \"Add to Betslip\"  ",
					"User select their first odd then on \"Total Odds\" section it is displaying \"Add to Betslip\"  ",
					"Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonStatasticPageSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC06-Tanzania_BAB",
					"To check when user select their first odd then on \"Total Odds\" section it is displaying \"Add to Betslip\"  ",
					"User select their first odd then on \"Total Odds\" section it is displaying \"Add to Betslip\"  ",
					"Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-12(Synapse Build A Bet) PJ65867
// To check when the user clicks on "Add to Betslip" then Warning message is
// displayed as ''You need a minimum of 2 Build a Bet selections before adding
// to betslip.' or not
	public Boolean TZAddToBetSlipMsg(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("MatchOfLeague is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("TopButtonInStatasticPageSynapse1"))).isDisplayed());
			System.out.print("BuildaBetSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("DrawInBuildaBetSynapse"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("AddToBS"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC07-Tanzania_BAB",
					"To check when the user clicks on Add to Betslip then Warning message is displayed as You need a minimum of 2 Build a Bet selections before adding to betslip or not",
					"Message is displayed", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonStatasticPageSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC07-Tanzania_BAB",
					"To check when the user clicks on Add to Betslip then Warning message is displayed as You need a minimum of 2 Build a Bet selections before adding to betslip or not",
					"Message is displayed", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-13(Synapse Build A Bet) PJ65867
// Verify that warning message is getting displayed for 5 seconds and gets
// Auto-Close when the user selects their first odd on "Total Odds" section and
// clicks on "Add to Betslip" button.
	public Boolean TZAddToBetSlipMsgWait(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("MatchOfLeague is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("TopButtonInStatasticPageSynapse1"))).isDisplayed());
			System.out.print("BuildaBetSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("DrawInBuildaBetSynapse"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("AddToBS"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC08-Tanzania_BAB",
					"Verify that  warning message is getting displayed for 5 seconds and gets Auto-Close when the user selects their first odd on Total Odds section and clicks on Add to Betslip button.",
					"Message is disappeared after 5 Sec", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonStatasticPageSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC08-Tanzania_BAB",
					"Verify that  warning message is getting displayed for 5 seconds and gets Auto-Close when the user selects their first odd on Total Odds section and clicks on Add to Betslip button.",
					"Message is disappeared after 5 Sec", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-14(Synapse Build A Bet) PJ65867
// To check when the user clicks on "Add to Betslip" (Click To Action) then
// message is getting close or not when user user click on "Close"
	public Boolean TZAddToBetSlipMsgCloseButton(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("MatchOfLeague is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LeftArrowForSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).isDisplayed());
			System.out.print("LeftArrowForSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("BuildaBetSynapse"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("TopButtonInStatasticPageSynapse1"))).isDisplayed());
			System.out.print("BuildaBetSynapse is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("DrawInBuildaBetSynapse"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("AddToBS"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseButtonPopupBetSlip"))).isDisplayed());
			System.out.print("Add To BetSlip is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseButtonPopupBetSlip"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC09-Tanzania_BAB",
					"To check when the user clicks on \"Add to Betslip\" (Click To Action) then message is getting close or not when user user click on \"Close\"",
					"Message is disappeared after clicked on Close Button", "Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonStatasticPageSynapse"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MatchOfLeagueSynapse"))).isDisplayed());
			System.out.print("BackButton is clicked");

		} catch (Exception e) {

			report.detailsAppend("TC09-Tanzania_BAB",
					"To check when the user clicks on \"Add to Betslip\" (Click To Action) then message is getting close or not when user user click on \"Close\"",
					"Message is disappeared after clicked on Close Button", "Pass");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-15 (Synapse_BuildABet) AS66528
// To check whether for delete icon it is labelled as "Remove All" or not
	public Boolean TZBuildABetMarketDeleteIconVisible(Mobile_HTML_Report report) {

		try {
			EventClick();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(2000);
			System.out.println(" 1st Odds In Market is Selected ");

			report.detailsAppend("TC10 Tanzania_BAB",
					"check whether for delete icon it is labelled as \"Remove All\" or not",
					"User Checked whether for delete icon it is labelled as \"Remove All\" or not", "Pass");

			BackButton();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC10 Tanzania_BAB",
					"check whether for delete icon it is labelled as \"Remove All\" or not",
					"User Checked whether for delete icon it is labelled as \"Remove All\" or not", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC-16 (Synapse_BuildABet) AS66528
// To check whether for delete icon is clickable or not
	public Boolean TZBuildABetMarketDeleteIconClickable(Mobile_HTML_Report report) {

		try {
			EventClick();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(2000);
			System.out.println(" 1st Odds In Market is Selected ");
			webdriver.findElement(By.xpath(xpathMap.get("DeleteIconInTeam"))).click();
			report.detailsAppend("TC11 Tanzania_BAB",
					"check when a user selects their odds on \"Total Odds\" section, the delete icon is clickable.",
					"when a user selects their odds on \"Total Odds\" section,delete icon is clickable.", "Pass");

			BackButton();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC11 Tanzania_BAB",
					"check when a user selects their odds on \"Total Odds\" section, the delete icon is clickable.",
					"when a user selects their odds on \"Total Odds\" section,delete icon is clickable.", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC-17 (Synapse_BuildABet) AS66528
// To check whether when user clicks on delete icon, all selected odds are
// removed from selections or not
	public Boolean TZBuildABetMarketDeleteIconSelectedOddsRemoved(Mobile_HTML_Report report) {

		try {
			EventClick();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(2000);
			System.out.println(" 1st Odds In Market is Selected ");
			webdriver.findElement(By.xpath(xpathMap.get("DeleteIconInTeam"))).click();
			report.detailsAppend("TC12 Tanzania_BAB",
					"check when user clicks on delete icon, all selected odds are removed from selections or not",
					"check when user clicks on delete icon, all selected odds are removed from selections", "Pass");

			BackButton();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC12 Tanzania_BAB",
					"check when user clicks on delete icon, all selected odds are removed from selections or not",
					"check when user clicks on delete icon, all selected odds are removed from selections", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC-18 (Synapse_BuildABet) AS66528
// To check when the user selects their odds then on "Total Odds" section it is
// displayed Undo icon or not
	public Boolean TZBuildABetOnTotalOddsUndoIconDisplay(Mobile_HTML_Report report) {

		try {
			EventClick();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(2000);
			System.out.println(" 1st Odds In Market is Selected ");

			report.detailsAppend("TC13 Tanzania_BAB",
					"check when user selects their  odds then on \"Total Odds\" section it is displayed Undo icon or not",
					"user selects their  odds then on \"Total Odds\" section it is displayed Undo icon", "Pass");

			BackButton();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC13 Tanzania_BAB",
					"check when user selects their  odds then on \"Total Odds\" section it is displayed Undo icon or not",
					"user selects their  odds then on \"Total Odds\" section it is displayed Undo icon", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC-19 (Synapse_BuildABet) AS66528
// To check whether for undo icon is clickable or not
	public Boolean TZBuildABetOnTotalOddsUndoIconClickable(Mobile_HTML_Report report) {

		try {
			EventClick();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(2000);
			System.out.println(" 1st Odds In Market is Selected ");
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("UndoIconInTotalOdds"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("UndoIconInTotalOdds"))).click();
			Thread.sleep(1000);
			report.detailsAppend("TC14 Tanzania_BAB", "check whether for undo icon is clickable or not",
					"User Checked whether for undo icon is clickable", "Pass");

			BackButton();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC14 Tanzania_BAB", "check whether for undo icon is clickable or not",
					"User Checked whether for undo icon is clickable", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC-20 (Synapse_BuildABet) AS66528
// To check whether when user clicks on the undo icon, all recent one odd are
// removed from selections or not
	public Boolean TZBuildABetUndoIconClickRecentOddsRemoved(Mobile_HTML_Report report) {

		try {
			EventClick();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(2000);
			System.out.println(" 1st Odds In Market is Selected ");
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("UndoIconInTotalOdds"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("UndoIconInTotalOdds"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC15 Tanzania_BAB",
					"check when user clicks on undo icon,all recent one odd are removed from selections or not",
					"user clicks on undo icon,all recent one odd are removed from selections", "Pass");

			BackButton();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC15 Tanzania_BAB",
					"check when user clicks on undo icon,all recent one odd are removed from selections or not",
					"user clicks on undo icon,all recent one odd are removed from selections", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC-21 (Synapse_BuildABet) AS66528
// To check whether the drop-down icon for list of selected odds is available or
// not
	public Boolean TZBuildABetInOddsDropDownIconAvailable(Mobile_HTML_Report report) {

		try {
			EventClick();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(2000);
			System.out.println(" 1st Odds In Market is Selected ");

			report.detailsAppend("TC16 Tanzania_BAB",
					"check whether the drop-down icon for list of selected odds is available or not",
					"user cheked the drop-down icon for list of selected odds is available", "Pass");

			BackButton();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC16 Tanzania_BAB",
					"check whether the drop-down icon for list of selected odds is available or not",
					"user cheked the drop-down icon for list of selected odds is available", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC-22 (Synapse_BuildABet) AS66528
// To check whether the drop-down icon is clickable or not
	public Boolean TZBuildABetInOddsDropDownIconClickable(Mobile_HTML_Report report) throws Exception {

		try {
			EventClick();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(2000);
			System.out.println(" 1st Odds In Market is Selected ");

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseClearAll"))).isDisplayed());
				Thread.sleep(2000);
				report.detailsAppend("TC17-Tanzania_BAB",
						"check whether the drop-down icon for list of selected odds is available or not",
						"user cheked the drop-down icon for list of selected odds is available", "Pass");
				BackButton();
				log.debug("Switch to default tab");
				Thread.sleep(2000);

			} catch (Exception e) {
				report.detailsAppend("TC17-Tanzania_BAB",
						"check whether the drop-down icon for list of selected odds not available",
						"user cheked the drop-down icon for list of selected odds not available", "Fail");
				System.out.println("Dropdown button is not Clicked\n" + e.getMessage());
				BackButton();

			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC17 Synapse_BuildABet",
					"check whether the drop-down icon for list of selected odds not available",
					"user cheked the drop-down icon for list of selected odds not available", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-23 (Synapse_BuildABet) AS66528
// To check whether when user click on drop-down icon then it is displaying the
// list of selected odds cards
	public Boolean TZBuildABetListOfoddsDisplayInDropDownIcon(Mobile_HTML_Report report) throws Exception {

		try {
			EventClick();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(2000);
			System.out.println(" 1st Odds In Market is Selected ");
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseClearAll"))).isDisplayed());
				Thread.sleep(2000);
				report.detailsAppend("TC18-Tanzania_BAB",
						"check whether when user click on drop-down icon then it is displaying the list of selected odds cards",
						"when user click on drop-down icon then it is displaying the list of selected odds cards",
						"Pass");
				BackButton();
				log.debug("Switch to default tab");
				Thread.sleep(2000);

			} catch (Exception e) {
				report.detailsAppend("TC18-Tanzania_BAB",
						"check whether the drop-down icon for list of selected odds available or not",
						"user cheked the drop-down icon for list of selected odds not available", "Fail");
				System.out.println("Dropdown button is not Clicked\n" + e.getMessage());
				BackButton();

			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC18-Tanzania_BAB",
					"check whether the drop-down icon for list of selected odds available or not",
					"user cheked the drop-down icon for list of selected odds not available", "Fail");
			System.out.println("Dropdown button is not Clicked\n" + e.getMessage());

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-24 (Synapse_BuildABet) AS66528
// To check whether count of selected odds are getting display on drop-down icon
// or not
	public Boolean TZBuildABetSelectedOddsDisplaySameCountInOddsDropDown(Mobile_HTML_Report report)
			throws InterruptedException {

		try {
			EventClick();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(2000);
			System.out.println(" 1st Odds In Market is Selected ");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseClearAll"))).isDisplayed());
				Thread.sleep(2000);
				report.detailsAppend("TC19-Tanzania_BAB",
						"check whether count of selected odds are getting display on drop-down icon or not",
						"when user count of selected odds are getting display on drop-down icon or not", "Pass");
				BackButton();
				log.debug("Switch to default tab");
				Thread.sleep(2000);

			} catch (Exception e) {
				report.detailsAppend("TC19-Tanzania_BAB",
						"check whether the drop-down icon for list of selected odds available or not",
						"user cheked the drop-down icon for list of selected odds not available", "Fail");
				System.out.println("Dropdown button is not Clicked\n" + e.getMessage());
				BackButton();

			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC19-Tanzania_BAB",
					"check whether the drop-down icon for list of selected odds available or not",
					"user cheked the drop-down icon for list of selected odds not available", "Fail");
			System.out.println("Dropdown button is not Clicked\n" + e.getMessage());

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-25 (Synapse_BuildABet) AS66528
// To check whether list of selected odds is displayed in the horizontal scroll
// or not
	public Boolean TZBuildABetSelectedOddsViewInhorizontalscroll(Mobile_HTML_Report report)
			throws InterruptedException {

		try {
			EventClick();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("2ndOddsInTeam"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("3rdOddsInTeam"))).click();
			Thread.sleep(2000);
			System.out.println(" Adding more Odds In Market ");

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseClearAll"))).isDisplayed());
				Thread.sleep(2000);
				report.detailsAppend("TC20-Tanzania_BAB",
						"check whether list of selected odds is displayed in the horizontal scroll or not",
						"user cheked list of selected odds is displayed in the horizontal scroll", "Pass");
				webdriver.navigate().refresh();
				BackButton();
				log.debug("Switch to default tab");
				Thread.sleep(2000);

			} catch (Exception e) {
				report.detailsAppend("TC20-Tanzania_BAB",
						"check whether the drop-down icon for list of selected odds available or not",
						"user cheked the drop-down icon for list of selected odds not available", "Fail");
				System.out.println("Dropdown button is not Clicked\n" + e.getMessage());
				Thread.sleep(2000);
				webdriver.navigate().refresh();
				BackButton();
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC20-Tanzania_BAB",
					"check whether the drop-down icon for list of selected odds available or not",
					"user cheked the drop-down icon for list of selected odds not available", "Fail");
			System.out.println("Dropdown button is not Clicked\n" + e.getMessage());

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-26 (Synapse_BuildABet) AS66528
// To check whether 'Close' icon is available on each selected odds card or not
	public Boolean TZBuildABetCloseIconAvailableOnEachSelectedOdds(Mobile_HTML_Report report)
			throws InterruptedException {

		try {
			EventClick();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("2ndOddsInTeam"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("3rdOddsInTeam"))).click();
			Thread.sleep(2000);
			System.out.println(" Adding more Odds In Market ");

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseClearAll"))).isDisplayed());
				Thread.sleep(2000);
				report.detailsAppend("TC21-Tanzania_BAB",
						"check whether Closeicon is available on each selected odds card or not",
						"User Checked Closeicon is available on each selected odds card", "Pass");
				webdriver.navigate().refresh();
				BackButton();
				log.debug("Switch to default tab");
				Thread.sleep(2000);

			} catch (Exception e) {
				System.out.println("Odds DropDown not Clicked ");
				report.detailsAppend("TC21 Tanzania_BAB",
						"check Closeicon is available on each selected odds card not available",
						"user checked Closeicon is available on each selected odds card not available", "Fail");
				webdriver.navigate().refresh();
				BackButton();
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC21 Tanzania_BAB",
					"check Closeicon is available on each selected odds card not available",
					"user checked Closeicon is available on each selected odds card not available", "Fail");

			System.out.println("Dropdown button is not Clicked\n" + e.getMessage());

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

////////////////////// PAVAN PD68899 /////////////////

// TC-27(Synapse_BuildABet) PD69988//
// To check whether 'Close' icon is clickable on each selected odds card or not
	public Boolean TZBuildABetDropdownClickSynapse(Mobile_HTML_Report report) {
		try {
			EventClick();
			try {
				webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("2ndOddsInTeam"))).click();
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("3rdOddsInTeam"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(xpathMap.get("SynapseCloseInDropDown"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC22-Tanzania_BAB", "User Should be able to click selected odds in Dropdown",
						"User is able to click selected odds in Dropdown", "Pass");
				webdriver.navigate().refresh();
				webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
				Thread.sleep(2000);
				log.debug("Switch to default tab");
				Thread.sleep(4000);

			} catch (Exception e) {
				report.detailsAppend("TC22-Tanzania_BAB", "User Should be able to click selected odds in Dropdown",
						"User is able to click selected odds in Dropdown", "Fail");
				System.out.println("Dropdown button is not Clicked\n" + e.getMessage());
				webdriver.navigate().refresh();
				webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
				Thread.sleep(2000);

			}

		} catch (Exception e) {
			report.detailsAppend("TC22-Tanzania_BAB", "User Should be able to click selected odds in Dropdown",
					"User is able to click selected odds in Dropdown", "Fail");
			System.out.println("ElementNotVisibleException :\n");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-28(Synapse_BuildABet) PD69988//
// To check whether on click operation on 'Close' icon of selected odds card is
// getting removed or not from the odds selection
	public Boolean TZBuildABetDropdownCloseSynapse(Mobile_HTML_Report report) {
		try {
			EventClick();
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("2ndOddsInTeam"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("3rdOddsInTeam"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(xpathMap.get("SynapseCloseInDropDown"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC23-Tanzania_BAB",
						"User Should be able to see odds in Dropdown is getting removed when clicked on Close Icon",
						"User is able to see odds in Dropdown is getting removed when clicked on Close Icon", "Pass");
				webdriver.navigate().refresh();
				BackButton();
				log.debug("Switch to default tab");
				Thread.sleep(4000);

			} catch (Exception e) {
				report.detailsAppend("TC23-Tanzania_BAB",
						"User Should be able to see odds in Dropdown is getting removed when clicked on Close Icon",
						"User is able to see odds in Dropdown is getting removed when clicked on Close Icon", "Fail");
				System.out.println("Dropdown button is not Clicked\n" + e.getMessage());
				BackButton();

			}

		} catch (Exception e) {
			report.detailsAppend("TC23-Tanzania_BAB",
					"User Should be able to see odds in Dropdown is getting removed when clicked on Close Icon",
					"User is able to see odds in Dropdown is getting removed when clicked on Close Icon", "Fail");
			System.out.println("ElementNotVisibleException :\n");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-29(Synapse_BuildABet) PD69988//
// To check whether the user should able to do left-right horizontal scroll or
// not
	public Boolean TZBuildABetDropdownHorizontalScrollSynapse(Mobile_HTML_Report report) {
		try {
			EventClick();
			Robot robot = new Robot();
			System.out.println("About to zoom in");
			for (int i = 0; i < 4; i++) {
				robot.keyPress(KeyEvent.VK_CONTROL);
				robot.keyPress(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_CONTROL);
			}
			MarketClick();

			try {
				webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).click();
				Thread.sleep(2000);

				System.out.println("About to zoom in");
				for (int i = 0; i < 4; i++) {
					robot.keyPress(KeyEvent.VK_CONTROL);
					robot.keyPress(KeyEvent.VK_ADD);
					robot.keyRelease(KeyEvent.VK_ADD);
					robot.keyRelease(KeyEvent.VK_CONTROL);
				}
				webdriver.findElement(By.xpath(xpathMap.get("SynapseDDRightClick"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SynapseDDLeftClick"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC24-Tanzania_BAB",
						"User Should be able to scroll Horizontally to Right and Left in DropDown menu",
						"User is able to scroll Horizontally to Right and Left in DropDown menu", "Pass");
				BackButton();
				log.debug("Switch to default tab");
				Thread.sleep(4000);

			} catch (Exception e) {
				report.detailsAppend("TC24-Tanzania_BAB",
						"User Should be able to scroll Horizontally to Right and Left in DropDown menu",
						"User is able to scroll Horizontally to Right and Left in DropDown menu", "Fail");
				System.out.println("Dropdown button is not Clicked\n" + e.getMessage());
				BackButton();

			}

		} catch (Exception e) {
			report.detailsAppend("TC24-Tanzania_BAB",
					"User Should be able to scroll Horizontally to Right and Left in DropDown menu",
					"User is able to scroll Horizontally to Right and Left in DropDown menu", "Fail");
			System.out.println("ElementNotVisibleException :\n");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-30(Synapse_BuildABet) PD69988//
// To check whether 'Clear All' text icon is available on each selected odds
// card or not
	public Boolean TZBuildABetDropdownClearAllSynapse(Mobile_HTML_Report report) {
		try {
			EventClick();
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("2ndOddsInTeam"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("3rdOddsInTeam"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseCloseInDropDown"))).isDisplayed());
				System.out.println("SynapseCloseInDropDown is Present\n");
				report.detailsAppend("TC25-Tanzania_BAB", "User Should be able to see ClearAll Button in DropDown menu",
						"User is able to see ClearAll Button in DropDown menu", "Pass");
				webdriver.navigate().refresh();
				BackButton();
				log.debug("Switch to default tab");
				Thread.sleep(4000);

			} catch (Exception e) {
				report.detailsAppend("TC25-Tanzania_BAB", "User Should be able to see ClearAll Button in DropDown menu",
						"User is able to see ClearAll Button in DropDown menu", "Fail");
				System.out.println("Dropdown button is not Clicked\n" + e.getMessage());
				webdriver.navigate().refresh();
				BackButton();

			}

		} catch (Exception e) {
			report.detailsAppend("TC25-Tanzania_BAB", "User Should be able to see ClearAll Button in DropDown menu",
					"User is able to see ClearAll Button in DropDown menu", "Fail");
			System.out.println("ElementNotVisibleException :\n");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-31(Synapse_BuildABet) PD69988//
// To check whether 'Clear All' text is clickable on each selected odds card or
// not
	public Boolean TZBuildABetDropdownClearAllClickSynapse(Mobile_HTML_Report report) {
		try {
			EventClick();
			webdriver.findElement(By.xpath(xpathMap.get("1stOddsInTeam"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("2ndOddsInTeam"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("3rdOddsInTeam"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseClearAll"))).isDisplayed());
				System.out.println("SynapseClearAll is Present\n");
				webdriver.findElement(By.xpath(xpathMap.get("SynapseClearAll"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC26-Tanzania_BAB",
						"User Should be able to Click ClearAll Button in DropDown menu",
						"User is able to Click ClearAll Button in DropDown menu", "Pass");
				webdriver.navigate().refresh();
				BackButton();
				log.debug("Switch to default tab");
				Thread.sleep(4000);

			} catch (Exception e) {
				report.detailsAppend("TC26-Tanzania_BAB",
						"User Should be able to Click ClearAll Button in DropDown menu",
						"User is able to Click ClearAll Button in DropDown menu", "Fail");
				System.out.println("Dropdown button is not Clicked\n" + e.getMessage());
				BackButton();

			}

		} catch (Exception e) {
			report.detailsAppend("TC26-Tanzania_BAB", "User Should be able to Click ClearAll Button in DropDown menu",
					"User is able to Click ClearAll Button in DropDown menu", "Fail");
			System.out.println("ElementNotVisibleException :\n");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-32(Synapse_BuildABet) PD69988//
// To check whether on click operation on 'Clear All' text of selected odds card
// is all odds cards getting removed or not from the odds selection
	public Boolean TZBuildABetDropdownClearAllOddsSynapse(Mobile_HTML_Report report) {
		try {
			EventClick();
			Robot robot = new Robot();
			System.out.println("About to zoom in");
			for (int i = 0; i < 2; i++) {
				robot.keyPress(KeyEvent.VK_CONTROL);
				robot.keyPress(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_CONTROL);
			}
			MarketClick();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBABDropdown"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseClearAll"))).isDisplayed());
				System.out.println("SynapseClearAll is Present\n");
				webdriver.findElement(By.xpath(xpathMap.get("SynapseClearAll"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC27-Tanzania_BAB",
						"User Should be able to clear all odds when click on ClearAll Button in DropDown menu",
						"User is able to clear all odds when click on ClearAll Button in DropDown menu", "Pass");
				webdriver.navigate().refresh();
				BackButton();
				log.debug("Switch to default tab");
				Thread.sleep(4000);

			} catch (Exception e) {
				report.detailsAppend("TC27-Tanzania_BAB",
						"User Should be able to clear all odds when click on ClearAll Button in DropDown menu",
						"User is able to clear all odds when click on ClearAll Button in DropDown menu", "Fail");
				System.out.println("Dropdown button is not Clicked\n" + e.getMessage());
				webdriver.navigate().refresh();
				BackButton();

			}

		} catch (Exception e) {
			report.detailsAppend("TC27-Tanzania_BAB",
					"User Should be able to clear all odds when click on ClearAll Button in DropDown menu",
					"User is able to clear all odds when click on ClearAll Button in DropDown menu", "Fail");
			System.out.println("ElementNotVisibleException :\n");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-33(Synapse_BuildABet) PD69988//
// To check whether user can select only one odd from each market or not
	public Boolean TZBuildABetMultipleMarketClickSynapse(Mobile_HTML_Report report) {
		try {
			EventClick();

			webdriver.findElement(By.xpath(xpathMap.get("Synapse1X2Click"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Synapse1X2Click2"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC28-Tanzania_BAB",
					"User Should not be able to select More than one odd from each Market",
					"User is not able to select More than one odd from each Market", "Pass");
			webdriver.navigate().refresh();
			BackButton();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC28-Tanzania_BAB",
					"User Should not be able to select More than one odd from each Market",
					"User is not able to select More than one odd from each Market", "Fail");
			System.out.println("ElementNotVisibleException :\n");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-34(Synapse_BuildABet) PD69988//
// To check whether when user tries to add two odds from the same market then a
// warning message is displayed as ' Invalid selection: more than one outcome
// per market.' or not
	public Boolean TZBuildABetMultipleMarketClickErrorSynapse(Mobile_HTML_Report report) {
		try {
			EventClick();

			webdriver.findElement(By.xpath(xpathMap.get("Synapse1X2Click"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Synapse1X2Click2"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC29-Tanzania_BAB",
					"User Should be able to see Error message when user selects More than one odd from each Market",
					"User is able to see Error message when user selects More than one odd from each Market", "Pass");
			webdriver.navigate().refresh();
			BackButton();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC29-Tanzania_BAB",
					"User Should be able to see Error message when user selects More than one odd from each Market",
					"User is able to see Error message when user selects More than one odd from each Market", "Fail");
			System.out.println("ElementNotVisibleException :\n");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-35(Synapse_BuildABet) PD69988//
// To check whether a warning message is displayed for 5 sec or not
	public Boolean TZBuildABetErrorMessageSynapse(Mobile_HTML_Report report) {
		try {
			EventClick();

			webdriver.findElement(By.xpath(xpathMap.get("Synapse1X2Click"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Synapse1X2Click2"))).click();
			Thread.sleep(4000);

			report.detailsAppend("TC30-Tanzania_BAB", "User Should be able to see Error message for 5 Seconds",
					"User is able to see Error message for 5 Seconds", "Pass");
			webdriver.navigate().refresh();
			BackButton();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC30-Tanzania_BAB", "User Should be able to see Error message for 5 Seconds",
					"User is able to see Error message for 5 Seconds", "Fail");
			System.out.println("ElementNotVisibleException :\n");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-36(Synapse_BuildABet) PD69988//
// To check whether on clicking close on warning message, message is getting
// closed or not
	public Boolean TZBuildABetErrorMessageCloseSynapse(Mobile_HTML_Report report) {
		try {
			EventClick();

			webdriver.findElement(By.xpath(xpathMap.get("Synapse1X2Click"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Synapse1X2Click2"))).click();
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseErrorClose"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC31-Tanzania_BAB", "User Should be able to close Error message ",
					"User is able to close Error message", "Pass");
			webdriver.navigate().refresh();
			BackButton();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC31-Tanzania_BAB", "User Should be able to close Error message ",
					"User is able to close Error message", "Fail");
			System.out.println("ElementNotVisibleException :\n");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

/////////////////////////////////////////////////////////////////////Tanzania Footer////////////////////////////////////////////////////////////////
////////Pratik Footer Synapse////

	public void ScrollDown() throws InterruptedException {

		WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("SynpaseFooterScrollDown")));
		Actions action = new Actions(webdriver);
		action.moveToElement(odds).perform();
		Thread.sleep(2000);

	}

// TC02(Synapse Footer) PJ65867
// To check that the "Betway" logo in footer
	public boolean TZBetWayLogo(Mobile_HTML_Report report) {

		try {

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterBetwayLogo"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("UpComingButton"))).isDisplayed());
			System.out.print("BetWay Logo is Clicked");

			report.detailsAppend("TC02-TanzaniaFooter", "To check that the \"Betway\" logo in footer",
					"BetWay Logo is clicked", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC02-TanzaniaFooter", "To check that the \"Betway\" logo in footer",
					"BetWay Logo is clicked", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC01(Synapse Footer) PJ65867
// To check the Footer section
	public boolean TZFooterOption(Mobile_HTML_Report report) {

		try {

			ScrollDown();

			report.detailsAppend("TC01-TanzaniaFooter", "To check the Footer section", "All options are available",
					"Pass");

		} catch (Exception e) {

			report.detailsAppend("TC01-TanzaniaFooter", "To check the Footer section", "All options are available",
					"Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC03(Synapse Footer) PJ65867
// To check functionality of "Betway" logo at footer by clicking on it
	public boolean TZBetWayLogoFunctionality(Mobile_HTML_Report report) {

		try {

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterBetwayLogo"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("UpComingButton"))).isDisplayed());
			System.out.print("BetWay Logo is Clicked");

			report.detailsAppend("TC03-TanzaniaFooter",
					"To check functionality of \"Betway\" logo at footer by clicking on it",
					"Functionality of \"Betway\" logo at footer by clicking on it", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC03-TanzaniaFooter",
					"To check functionality of \"Betway\" logo at footer by clicking on it",
					"Functionality of \"Betway\" logo at footer by clicking on it", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC04(Synapse Footer) PJ65867
// To check functionality of \"Sponsorships\" logo at footer
	public boolean TZSponsershipButton(Mobile_HTML_Report report) {

		try {

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterSponserShip"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForSponserShip"))).isDisplayed());
			System.out.print("Sponsership is Clicked");

			report.detailsAppend("TC04-TanzaniaFooter", "To check functionality of  \"Sponsorships\" logo at footer",
					"Functionality of  \"Sponsorships\" logo at footer", "Pass");

			report.detailsAppend("TC05-TanzaniaFooter", "To check contents of the \"Sponsorships\" page",
					"Contents of the \"Sponsorships\" page is right", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC04-TanzaniaFooter", "To check functionality of  \"Sponsorships\" logo at footer",
					"Functionality of  \"Sponsorships\" logo at footer", "Fail");

			report.detailsAppend("TC05-TanzaniaFooter", "To check contents of the \"Sponsorships\" page",
					"Contents of the \"Sponsorships\" page is right", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC06(Synapse Footer) PJ65867
// To check functionality of Back button inside "Sponsorships" page
	public boolean TZBackButtonSponsership(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterSponserShip"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForSponserShip"))).isDisplayed());
			System.out.print("Sponsership is Clicked");

			webdriver.findElement(By.cssSelector(xpathMap.get("BackButtonSponsership"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("UpComingButton"))).isDisplayed());
			System.out.print("Back Button is Clicked");

			report.detailsAppend("TC06-TanzaniaFooter",
					"To check functionality of Back button inside \"Sponsorships\" page",
					"Functionality of Back button inside \"Sponsorships\" page is working fine", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC06-TanzaniaFooter",
					"To check functionality of Back button inside \"Sponsorships\" page",
					"Functionality of Back button inside \"Sponsorships\" page is working fine", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC07(Synapse Footer) PJ65867
// To check functionality of "privacy policy" button
	public boolean TZPrivacyPolicyButton(Mobile_HTML_Report report) {

		try {

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterPrivacyPolicy"))).click();
			Thread.sleep(4000);

			report.detailsAppend("TC07-TanzaniaFooter", "To check  functionality of \"privacy policy\" button",
					"Functionality of \"privacy policy\" button", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC07-TanzaniaFooter", "To check  functionality of \"privacy policy\" button",
					"Functionality of \"privacy policy\" button", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC08(Synapse Footer) PJ65867
// To check back button on "Privacy policy" page
	public boolean TZBackButtonPrivacyPolicy(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterPrivacyPolicy"))).click();
			Thread.sleep(4000);

			webdriver.findElement(By.cssSelector(xpathMap.get("BackButtonSponsership"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("UpComingButton"))).isDisplayed());
			System.out.print("Back Button is Clicked");

			report.detailsAppend("TC08-TanzaniaFooter", "To check back button on  \"Privacy policy\" page",
					"Back button on  \"Privacy policy\" page is working fine", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC08-TanzaniaFooter", "To check back button on  \"Privacy policy\" page",
					"Back button on  \"Privacy policy\" page is working fine", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC09(Synapse Footer) PJ65867
// To check functionality of "Contact Us" button by clicking on it
	public boolean TZContactUsButton(Mobile_HTML_Report report) {

		try {

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);

			report.detailsAppend("TC09-TanzaniaFooter",
					"To check functionality of \"Contact Us\" button by clicking on it",
					"Functionality of \"Contact Us\" button by clicking on it", "Pass");

			report.detailsAppend("TC10-TanzaniaFooter", "To check contents of of \"Contact Us\" button",
					"Contents of the \"Contact Us\" page is right", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC09-TanzaniaFooter",
					"To check functionality of \"Contact Us\" button by clicking on it",
					"Functionality of \"Contact Us\" button by clicking on it", "Fail");

			report.detailsAppend("TC10-TanzaniaFooter", "To check contents of of \"Contact Us\" button",
					"Contents of the \"Contact Us\" page is right", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC11(Synapse Footer) PJ65867
// To check back button on "Contact Us" page
	public boolean TZBackButtonContactUs(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);

			webdriver.findElement(By.cssSelector(xpathMap.get("BackButtonSponsership"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("UpComingButton"))).isDisplayed());
			System.out.print("Back Button is Clicked");

			report.detailsAppend("TC11-TanzaniaFooter", "To check back button on  \"Contact Us\" page",
					"Back button on  \"Contact Us\" page is working fine", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC11-TanzaniaFooter", "To check back button on  \"Contact Us\" page",
					"Back button on  \"Contact Us\" page is working fine", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC12(Synapse Footer) PJ65867
// To check functionality of "Chat to Live Support" button on contact details
// page inside contact Us page
	public boolean TZChatToLiveContactUs(Mobile_HTML_Report report) {

		try {

//webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
//Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);

			webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).click();
			Thread.sleep(4000);
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForChatToLive"))).isDisplayed());
//System.out.print("Back Button is Clicked");

			report.detailsAppend("TC12-TanzaniaFooter",
					"To check functionality of \"Chat to Live Support\" button on contact details page inside contact Us page ",
					"Functionality of \"Chat to Live Support\" button on contact details page inside contact Us page ",
					"Pass");

		} catch (Exception e) {

			report.detailsAppend("TC12-TanzaniaFooter",
					"To check functionality of \"Chat to Live Support\" button on contact details page inside contact Us page ",
					"Functionality of \"Chat to Live Support\" button on contact details page inside contact Us page ",
					"Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC13(Synapse Footer) PJ65867
// To check the presence and contents of "Standard Rate" on Contact details page
// inside contact Us page
	public boolean TZStandardRate(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
			System.out.print("Contact Us is Clicked");

			report.detailsAppend("TC13-TanzaniaFooter",
					"To check  the presence and contents of  \"Standard Rate\"  on Contact details page inside contact Us page",
					"Presence and contents of  \"Standard Rate\"  on Contact details page inside contact Us page",
					"Pass");

		} catch (Exception e) {

			report.detailsAppend("TC13-TanzaniaFooter",
					"To check  the presence and contents of  \"Standard Rate\"  on Contact details page inside contact Us page",
					"Presence and contents of  \"Standard Rate\"  on Contact details page inside contact Us page",
					"Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC14(Synapse Footer) PJ65867
// To check presence and functionality of "Email: Support@betway.com.gh"
// hyperlink
	public boolean TZEmailFunctionality(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
			System.out.print("Contact Us is Clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SupportEmail"))).click();
			Thread.sleep(4000);
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
//System.out.print("Contact Us is Clicked");

			report.detailsAppend("TC14-TanzaniaFooter",
					"To check presence and functionality of \"Email: Support@betway.com.tz\" hyperlink",
					"Presence and functionality of \"Email: Support@betway.com.tz\" hyperlink", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC14-TanzaniaFooter",
					"To check presence and functionality of \"Email: Support@betway.com.tz\" hyperlink",
					"Presence and functionality of \"Email: Support@betway.com.tz\" hyperlink", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC15(Synapse Footer) PJ65867
// To check presence and functionality of "Twitter: @Betway_GH" hyperlink
	public boolean TZTwitterFunctionality(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);

			webdriver.findElement(By.xpath(xpathMap.get("SupportTwitter"))).click();
			Thread.sleep(2000);
			switchToNewTab();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
//System.out.print("Contact Us is Clicked");
			switchToParentTab();
			report.detailsAppend("TC15-TanzaniaFooter",
					"To check presence and functionality of \"Twitter: @Betway_TZ\" hyperlink",
					"Presence and functionality of \"Twitter: @Betway_TZ\" hyperlink", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC15-TanzaniaFooter",
					"To check presence and functionality of \"Twitter: @Betway_TZ\" hyperlink",
					"Presence and functionality of \"Twitter: @Betway_TZ\" hyperlink", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC16(Synapse Footer) PJ65867
// To check that user able to see "WhatsApp: +233 20 930 1418" hyperlink
	public boolean TZNumberFunctionality(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);

			webdriver.findElement(By.xpath(xpathMap.get("SupportNumber"))).click();
			Thread.sleep(2000);
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
//System.out.print("Contact Us is Clicked");

			report.detailsAppend("TC16-TanzaniaFooter",
					"To check that user able to see \"WhatsApp: +255 20 930 1418\" hyperlink",
					"User able to see \"WhatsApp: +255 20 930 1418\" hyperlink", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC16-TanzaniaFooter",
					"To check that user able to see \"WhatsApp: +255 20 930 1418\" hyperlink",
					"User able to see \"WhatsApp: +255 20 930 1418\" hyperlink", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC17(Synapse Footer) PJ65867
// To check that user able to see Facebook: /Betway-Ghana" hyperlink
	public boolean TZFacebookFunctionality(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);

			webdriver.findElement(By.xpath(xpathMap.get("TZFacebook"))).click();
			Thread.sleep(2000);
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
//System.out.print("Contact Us is Clicked");
			switchToNewTab();
			report.detailsAppend("TC17-TanzaniaFooter",
					"To check that user able to see Facebook: /Betway-Tanzania\" hyperlink",
					"User able to see Facebook: /Betway-Tanzania\" hyperlink", "Pass");
			switchToParentTab();
		} catch (Exception e) {

			report.detailsAppend("TC17-TanzaniaFooter",
					"To check that user able to see Facebook: /Betway-Ghana\" hyperlink",
					"User able to see Facebook: /Betway-Ghana\" hyperlink", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC18(Synapse Footer) PJ65867
// To check contents of the "Contact Form" inside Contact Us page
	public boolean TZContactForm(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
			System.out.print("Contact Us is Clicked");

			Robot robot = new Robot();
			System.out.println("About to zoom in");
			for (int i = 0; i < 5; i++) {
				robot.keyPress(KeyEvent.VK_CONTROL);
				robot.keyPress(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_SUBTRACT);
				robot.keyRelease(KeyEvent.VK_CONTROL);
			}
			Thread.sleep(4000);

			report.detailsAppend("TC18-TanzaniaFooter",
					"To check contents of the \"Contact Form\" inside Contact Us page",
					"Contents of the \"Contact Form\" inside Contact Us page", "Pass");

			for (int i = 0; i < 5; i++) {
				robot.keyPress(KeyEvent.VK_CONTROL);
				robot.keyPress(KeyEvent.VK_ADD);
				robot.keyRelease(KeyEvent.VK_ADD);
				robot.keyRelease(KeyEvent.VK_CONTROL);
			}

		} catch (Exception e) {

			report.detailsAppend("TC18-TanzaniaFooter",
					"To check contents of the \"Contact Form\" inside Contact Us page",
					"Contents of the \"Contact Form\" inside Contact Us page", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC19(Synapse Footer) PJ65867
// To check functionality of "Dialing code" dropdown
	public boolean TZDailCode(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);

			webdriver.findElement(By.xpath(xpathMap.get("DailCodeFooter"))).click();
			Thread.sleep(4000);

			report.detailsAppend("TC19-TanzaniaFooter", "To check functionality of  \"Dialing code\" dropdown",
					"Functionality of  \"Dialing code\" dropdown", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC19-TanzaniaFooter", "To check functionality of  \"Dialing code\" dropdown",
					"Functionality of  \"Dialing code\" dropdown", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC20(Synapse Footer) PJ65867
// To check that user able to see "Mobile Number" filed
	public boolean TZMobileNumber(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);

			webdriver.findElement(By.xpath(xpathMap.get("MobilenumberFooter"))).click();
			Thread.sleep(4000);

			report.detailsAppend("TC20-TanzaniaFooter", "To check that user able to see \"Mobile Number\" filed",
					"User able to see \"Mobile Number\" filed", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC20-TanzaniaFooter", "To check that user able to see \"Mobile Number\" filed",
					"User able to see \"Mobile Number\" filed", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC21(Synapse Footer) PJ65867
// To check functionality of "Mobile Number" text box
	public boolean TZMobileNumberData(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);

			webdriver.findElement(By.xpath(xpathMap.get("MobilenumberFooter"))).sendKeys(xpathMap.get("FooterMobNo"));
			Thread.sleep(4000);

			report.detailsAppend("TC21-TanzaniaFooter", "To check functionality of  \"Mobile Number\"  text box",
					"Functionality of  \"Mobile Number\"  text box", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC21-TanzaniaFooter", "To check functionality of  \"Mobile Number\"  text box",
					"Functionality of  \"Mobile Number\"  text box", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC22(Synapse Footer) PJ65867
// To check that it not accept special character in "Email Address" filed
	public boolean TZEmailWithSpeChar(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);

			webdriver.findElement(By.xpath(xpathMap.get("EmailFooter"))).sendKeys(xpathMap.get("FooterEmails"));
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("SubmitFooter"))).click();
			;
			Thread.sleep(2000);

			report.detailsAppend("TC22-TanzaniaFooter",
					"To check that it not accept special character in \"Email Address\" filed",
					"It not accept special character in \"Email Address\" filed", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC22-TanzaniaFooter",
					"To check that it not accept special character in \"Email Address\" filed",
					"It not accept special character in \"Email Address\" filed", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC23(Synapse Footer) PJ65867
// To check that it should accept only valid data in "Email Address" filed
	public boolean TZValidEmail(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
			System.out.print("Contact Us is Clicked");

			webdriver.findElement(By.xpath(xpathMap.get("EmailFooter"))).sendKeys(xpathMap.get("FooterEmail"));
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("SubmitFooter"))).click();
			;
			Thread.sleep(2000);

			report.detailsAppend("TC23-TanzaniaFooter",
					"To check that it should accept only valid data in \"Email Address\" filed",
					"It accept only valid data in \"Email Address\" filed", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC23-TanzaniaFooter",
					"To check that it should accept only valid data in \"Email Address\" filed",
					"It accept only valid data in \"Email Address\" filed", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC24(Synapse Footer) PJ65867
// To check contents and functionality of "Query Type" dropdown
	public boolean TZQueryType(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForContactUs"))).isDisplayed());
			System.out.print("Contact Us is Clicked");

			webdriver.findElement(By.xpath(xpathMap.get("QueryTypeFooter"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("QueryTypeOpt"))).isDisplayed());
			System.out.print("Contact Us is Clicked");

			webdriver.findElement(By.xpath(xpathMap.get("QueryTypeOpt"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC24-TanzaniaFooter",
					"To check contents and functionality of \"Query Type\" dropdown",
					"Contents and functionality of \"Query Type\" dropdown", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC24-TanzaniaFooter",
					"To check contents and functionality of \"Query Type\" dropdown",
					"Contents and functionality of \"Query Type\" dropdown", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC-25(TanzaniaFooter) PD69988//
// To check functionality of "Query Type" dropdown by selecting option from
// dropdown
	public boolean TZQueryTypeFooterSynapse(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(2000);
			WebElement odd = webdriver.findElement(By.xpath(xpathMap.get("SynapseQueryComments")));
			Actions action1 = new Actions(webdriver);
			action1.moveToElement(odd).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseQueryType"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordQuery"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseQueryComments"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC25-TanzaniaFooter", "User Should be able to select query type",
					"User is able to select query type", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC25-TanzaniaFooter", "User Should be able to select query type",
					"User is able to select query type", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-27(TanzaniaFooter) PD69988//
// To check functionality of "Query Field" comment text box
	public boolean TZQueryFieldFooterSynapse(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(2000);
			WebElement odd = webdriver.findElement(By.xpath(xpathMap.get("SynapseQueryComments")));
			Actions action1 = new Actions(webdriver);
			action1.moveToElement(odd).perform();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("SynapseQueryComments"))).sendKeys("Password Reset");
			Thread.sleep(2000);
			report.detailsAppend("TC27-TanzaniaFooter", "User Should be able to enter the text in Query field",
					"User is able to enter the text in Query field", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC27-TanzaniaFooter", "User Should be able to enter the text in Query field",
					"User is able to enter the text in Query field", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-28(TanzaniaFooter) PD69988//
// To check functionality of "Submit" button"
	public boolean TZQuerySubmitFooterSynapse(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("FooterMobile"))).sendKeys("995941937");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("FooterMail"))).sendKeys("pavandande123@gmail.com");
			Thread.sleep(2000);
			WebElement odd = webdriver.findElement(By.xpath(xpathMap.get("SynapseQueryComments")));
			Actions action1 = new Actions(webdriver);
			action1.moveToElement(odd).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseQueryType"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordQuery"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseQueryComments"))).sendKeys("Password Reset");
			Thread.sleep(2000);
			WebElement odd2 = webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterContactUs")));
			Actions action2 = new Actions(webdriver);
			action2.moveToElement(odd2).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("FooterSubmit"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC28-TanzaniaFooter", "User Should be able to Submit query type",
					"User is able to Submit query type", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC28-TanzaniaFooter", "User Should be able to Submit query type",
					"User is able to Submit query type", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-29(TanzaniaFooter) PD69988//
// To check functionality of "FAQ's" button at Footer section by clicking on it
	public boolean TZFAQFooterSynapse(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("FAQS")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("FAQS"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC29-TanzaniaFooter", "User Should be able to open FAQs Page",
					"User is able to open FAQs Page", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC29-TanzaniaFooter", "User Should be able to open FAQs Page",
					"User is able to open FAQs Page", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-30(TanzaniaFooter) PD69988//
// To check that User should able to click on any question from FAQs list
	public boolean TZFAQQuestionFooterSynapse(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("FAQS")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("FAQS"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FooterQuestionTZ"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("FooterQuestionTZ"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC30-TanzaniaFooter", "User Should be able to open any question in FAQs Page",
					"User is able to open any question in FAQs Page", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC30-TanzaniaFooter", "User Should be able to open any question in FAQs Page",
					"User is able to open any question in FAQs Page", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-31(TanzaniaFooter) PD69988//
// To check that User is able to click on Back button available on FAQ's page
	public boolean TZFAQBackFooterSynapse(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("FAQS")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("FAQS"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FAQBack"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("FAQBack"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC31-TanzaniaFooter", "User Should be able to click back button in FAQs Page",
					"User is able to click back button in FAQs Page", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC31-TanzaniaFooter", "User Should be able to click back button in FAQs Page",
					"User is able to click back button in FAQs Page", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-32(TanzaniaFooter) PD69988//
// To check functionality of "Responsible Gaming" at Footer section
	public boolean TZResponsibleGamingFooterSynapse(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("Rgaming")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("Rgaming"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC32-TanzaniaFooter", "User Should be able to open Responsible gaming Page",
					"User is able to open Responsible gaming Page", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC32-TanzaniaFooter", "User Should be able to open Responsible gaming Page",
					"User is able to open Responsible gaming Page", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-33(TanzaniaFooter) PD69988//
// To check contents of the "Responsible Gaming" at Footer section
	public boolean TZResponsibleGamingContentsFooterSynapse(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("Rgaming")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("Rgaming"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC33[1]-TanzaniaFooter",
					"User Should be able to see Responsible gaming Page contents",
					"User is able to see Responsible gaming Page Contents", "Pass");

			WebElement odds1 = webdriver.findElement(By.xpath(xpathMap.get("GamingContactUs")));
			Actions action1 = new Actions(webdriver);
			action1.moveToElement(odds1).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("GamingContactUs"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC33[2]-TanzaniaFooter",
					"User Should be able to open Hyperlinks in Responsible gaming Page",
					"User is able to open Hyperlinks in Responsible gaming Page", "Pass");
			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(xpathMap.get("AutoPlayID"))).click();
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(xpathMap.get("LanguageSelection"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("EnglishLang"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC33-TanzaniaFooter", "User Should be able to see Responsible gaming Page Contents",
					"User is able to see Responsible gaming Page Contents", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-34(TanzaniaFooter) PD69988//
// To check functionality of "Back button" on Responsible Gaming page
	public boolean TZResponsibleGamingBackFooterSynapse(Mobile_HTML_Report report) {
		try {
			webdriver.navigate().to("https://synapse-uat.betway.co.tz");
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("Rgaming")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("Rgaming"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("FAQBack"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("FAQBack"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC34-TanzaniaFooter",
					"User Should be able to click back button in Responsible Gaming Page",
					"User is able to click back button in Responsible Gamin Page", "Pass");

			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC34-TanzaniaFooter",
					"User Should be able to click back button in Responsible Gaming Page",
					"User is able to click back button in Responsible Gamin Page", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-35(TanzaniaFooter) PD69988//
// To check functionality of "Terms & Conditions" at the Footer section
	public boolean TZTermsConditionsFooterSynapse(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("SynapseFooter")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			try {
				webdriver.findElement(By.xpath(xpathMap.get("TermsConditions1"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC35-TanzaniaFooter", "User Should be able to open Terms&Conditions Page",
					"User is able to open Terms&Conditions Page", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC35-TanzaniaFooter", "User Should be able to open Terms&Conditions Page",
					"User is able to open Terms&Conditions Page", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-36(TanzaniaFooter) PD69988//
// To check expand and collapse functionality of any options button inside
// "Terms & Conditions" page
	public boolean TZTermsConditionsContentFooterSynapse(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("TermsConditions1")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("TermsConditions1"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TCJackpots"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC36-TanzaniaFooter", "User Should be able to open Terms&Conditions Page Contents",
					"User is able to open Terms&Conditions Page Contents", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC36-TanzaniaFooter", "User Should be able to open Terms&Conditions Page Contents",
					"User is able to open Terms&Conditions Page Contents", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-37(TanzaniaFooter) PD69988//
// To check functionality of "Back" button on "Terms & Conditions" page
	public boolean TZTermsConditionsBackFooterSynapse(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("TermsConditions1")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("TermsConditions1"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("FAQBack"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC37-TanzaniaFooter", "User Should be able to go Back from Terms&Conditions Page",
					"User is able to go Back from Terms&Conditions Page ", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC37-TanzaniaFooter", "User Should be able to go Back from Terms&Conditions Page",
					"User is able to go Back from Terms&Conditions Page ", "Pass");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-38(TanzaniaFooter) PD69988//
// To check functionality of "Betting Rules" at footer section
	public boolean TZBettingRulesContentFooterSynapse(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("SynapseFooter")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("BettingRules"))).click();
			Thread.sleep(2000);
			switchToNewTab();
			report.detailsAppend("TC38-TanzaniaFooter", "User Should be able to open BettingRules Page Contents",
					"User is able to open BettingRules Page Contents", "Pass");
			switchToParentTab();
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC38-TanzaniaFooter", "User Should be able to open BettingRules Page Contents",
					"User is able to open BettingRules Page Contents", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-39(TanzaniaFooter) PD69988//
// To check functionality of "Betway App" at footer section
	public boolean TZBetwayAppContentFooterSynapse(Mobile_HTML_Report report) {
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("SynapseFooter")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(6000);
			webdriver.findElement(By.xpath(xpathMap.get("BetwayApp"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC39-TanzaniaFooter", "User Should be able to open BetwayApp Page Contents",
					"User is able to open BetwayApp Page Contents", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC39-TanzaniaFooter", "User Should be able to open BetwayApp Page Contents",
					"User is able to open BetwayApp Page Contents", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC40(Synapse Footer) PJ65867
// To check Contents of betway app
	public boolean TZBetWayAppOption(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterBetWayApp"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForBetWayApp"))).isDisplayed());
			System.out.print("BetWay App is Clicked");

			report.detailsAppend("TC40-TanzaniaFooter", "To check Contents of betway app", "Contents of betway app",
					"Pass");

			webdriver.findElement(By.xpath(xpathMap.get("BackButtonInsideBetWayApp"))).click();
			Thread.sleep(4000);
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("UpComingButton"))).isDisplayed());
//System.out.print("Back Button is Clicked");

			report.detailsAppend("TC41-TanzaniaFooter",
					"To check functionality of  \"Back button\" inside the Betway App page screen",
					"Functionality of  \"Back button\" inside the Betway App page screen", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC40-TanzaniaFooter", "To check Contents of betway app", "Contents of betway app",
					"Fail");

			report.detailsAppend("TC41-TanzaniaFooter",
					"To check functionality of  \"Back button\" inside the Betway App page screen",
					"Functionality of  \"Back button\" inside the Betway App page screen", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC42(Synapse Footer) PJ65867
// To check back button on "betWay App" page
	public boolean TZBackButtonBetWayApp(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("SportBForSynapseFooter"))).click();
			Thread.sleep(4000);

			ScrollDown();

			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooterBetWayApp"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AssertionForBetWayApp"))).isDisplayed());
			System.out.print("BetWay App is Clicked");

			webdriver.findElement(By.cssSelector(xpathMap.get("BackButtonSponsership"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("UpComingButton"))).isDisplayed());
			System.out.print("Back Button is Clicked");

			report.detailsAppend("TC42-TanzaniaFooter", "To check back button on \"betWay App\" page",
					"Back button on  \"betWay App\" page is working fine", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC42-TanzaniaFooter", "To check back button on \"betWay App\" page",
					"Back button on  \"betWay App\" page is working fine", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

//////////// Akhil AS66528 Regression FooterSection Synapse ////////////////////

	public void SynapseNavigateFooterPage() throws Exception {
		try {
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFooter"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			System.out.println(e);
		}
	}

// TC-43 (TanzaniaFooter) AS66528//
// To check functionality of "How To" button at Footer section
	public boolean TZSynapse_HowtoButton(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC43-TanzaniaFooter",
					"User is able To check functionality of \"How To\" button at Footer sectione",
					"Checked User is able To check functionality of \"How To\" button at Footer section", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC43-TanzaniaFooter",
					"User Not able to check functionality of \"How To\" button at Footer section",
					"Checked User Not able To check functionality of \"How To\" button at Footer section", "Fail");
			return false;
		}

		return true;
	}

// TC-44 (TanzaniaFooter) AS66528//
// To check options availability at "How To" page
	public boolean TZSynapse_CheckHowtoOptionPage(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC44-TanzaniaFooter", "User is able to check options availability at \"How To\" page",
					"Checked User is able to check options availability at \"How To\" page", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC44-TanzaniaFooter",
					"User Not able to check options availability at \"How To\" page",
					"Checked User Not able To check options availability at \"How To\" page", "Fail");
			return false;
		}

		return true;
	}

// TC-45 (TanzaniaFooter) AS66528//
// User is able to click on "How to BetSMS" on the How To page
	public boolean TZSynapse_HowtoBetSMSPage(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBetSMSButton"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("SynapseBetSMSButton"))).click();
				Thread.sleep(2000);

				report.detailsAppend("TC45-TanzaniaFooter",
						"User is able to click on \"How to BetSMS\" on the How To page",
						"Checked User is able to click on \"How to BetSMS\" on the How To page", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC45-TanzaniaFooter",
						"User Not able to click on \"How to BetSMS\" on the How To page",
						"Checked User Not able to click on \"How to BetSMS\" on the How To page", "Fail");
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC45-TanzaniaFooter",
					"User Not able to click on \"How to BetSMS\" on the How To page",
					"Checked User Not able to click on \"How to BetSMS\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

// TC-46 (TanzaniaFooter) AS66528//
// User is able to click on any option available on "How to BetSMS" section
	public boolean TZSynapse_ClickAnyOptionInBetSMS(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);

			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBetSMSButton"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("SynapseBetSMSButton"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("Synapse1stOptionInHowToSMSPage"))).isDisplayed());
				System.out.print(" 1stOption InHowToPage  Visible ");
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("Synapse1stOptionInHowToSMSPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC46-TanzaniaFooter",
						"User is able to click on any option available on \"How to BetSMS\" Section",
						"Checked User clicked any option available on \"How to BetSMS\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC46-TanzaniaFooter",
						"User is able to click on any option available on \"How to BetSMS\" Section",
						"Checked User clicked any option available on \"How to BetSMS\" Section", "Fail");
				return false;
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC46-TanzaniaFooter",
					"User is able to click on any option available on \"How to BetSMS\" Section",
					"Checked User clicked any option available on \"How to BetSMS\" Section", "Fail");
			return false;
		}
		return true;
	}

// TC-47 (TanzaniaFooter) AS66528//
// User is able to click on "How to Bet" on the How To page
	public boolean TZSynapse_HowtoBetPage(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToBetButton"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToBetButton"))).click();
				Thread.sleep(2000);

				report.detailsAppend("TC47-TanzaniaFooter",
						"User is able to click on \"How to Bet\" on the How To page",
						"Checked User is able to click on \"How to Bet\" on the How To page", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC47-TanzaniaFooter",
						"User Not able to click on \"How to Bet\" on the How To page",
						"Checked User Not able to click on \"How to Bet\" on the How To page", "Fail");
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC47-TanzaniaFooter", "User Not able to click on \"How to Bet\" on the How To page",
					"Checked User Not able to click on \"How to Bet\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

// TC-48 (TanzaniaFooter) AS66528//
// User is able to click on any option available on "How to Bet" section
	public boolean TZSynapse_ClickAnyOptionInBetPage(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);

			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToBetButton"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToBetButton"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).isDisplayed());
				System.out.print(" 1stOption InHowToPage  Visible ");
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC48-TanzaniaFooter",
						"User is able to click on any option available on \"How to Bet\" Section",
						"Checked User clicked any option available on \"How to Bet\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC48-TanzaniaFooter",
						"User is able to click on any option available on \"How to Bet\" Section",
						"Checked User clicked any option available on \"How to Bet\" Section", "Fail");
				return false;
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC48-TanzaniaFooter",
					"User is able to click on any option available on \"How to Bet\" Section",
					"Checked User clicked any option available on \"How to Bet\" Section", "Fail");
			return false;
		}
		return true;
	}

// TC-49 (TanzaniaFooter) AS66528//
// User is able to click on "How to Betgames" on the How To page
	public boolean TZSynapse_HowtoBetgamesPage(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBetgamesButton"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("SynapseBetgamesButton"))).click();
				Thread.sleep(2000);

				report.detailsAppend("TC49-TanzaniaFooter",
						"User is able to click on \"How to Betgames\" on the How To page",
						"Checked User is able to click on \"How to Betgames\" on the How To page", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC49-TanzaniaFooter",
						"User Not able to click on \"How to Bet\" on the How To page",
						"Checked User Not able to click on \"How to Bet\" on the How To page", "Fail");
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC49-TanzaniaFooter", "User Not able to click on \"How to Bet\" on the How To page",
					"Checked User Not able to click on \"How to Bet\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

// TC-50 (TanzaniaFooter) AS66528//
// User is able to click on any option available on "How to Betgames" section
	public boolean TZSynapse_ClickAnyOptionInBetgames(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);

			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBetgamesButton"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("SynapseBetgamesButton"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).isDisplayed());
				System.out.print(" 1stOption InHowToPage  Visible ");
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC50-TanzaniaFooter",
						"User is able to click on any option available on \"How to Betgames\" Section",
						"Checked User clicked any option available on \"How to Betgames\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC50-TanzaniaFooter",
						"User is able to click on any option available on \"How to Betgames\" Section",
						"Checked User clicked any option available on \"How to Betgames\" Section", "Fail");
				return false;
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC50-TanzaniaFooter",
					"User is able to click on any option available on \"How to Betgames\" Section",
					"Checked User clicked any option available on \"How to Betgames\" Section", "Fail");
			return false;
		}
		return true;
	}

// TC-51 (TanzaniaFooter) AS66528//
// User is able to click on "How to Register" on the How To page
	public boolean TZSynapse_HowtoRegisterPage(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToRegisterButton"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToRegisterButton"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC51-TanzaniaFooter",
						"User is able to click on \"How to Register\" on the How To page",
						"Checked User is able to click on \"How to Register\" on the How To page", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC51-TanzaniaFooter",
						"User is able to click on \"How to Register\" on the How To page",
						"Checked User is able to click on \"How to Register\" on the How To page", "Fail");
				return false;
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC51-TanzaniaFooter",
					"User is able to click on \"How to Register\" on the How To page",
					"Checked User is able to click on \"How to Register\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

// TC-52 (TanzaniaFooter) AS66528//
// User is able to click on any option available on "How to Register" section
	public boolean TZSynapse_ClickAnyOptionInRegister(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToRegisterButton"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToRegisterButton"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).isDisplayed());
				System.out.print(" 1stOption InHowToPage  Visible ");
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC52-TanzaniaFooter",
						"User is able to click on any option available on \"How to Register\" Section",
						"Checked User clicked any option available on \"How to Register\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC52-TanzaniaFooter",
						"User Not able to click on any option available on \"How to Register\" Section",
						"Checked User Not clicked any option available on \"How to Register\" Section", "Fail");
				return false;
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC52-TanzaniaFooter",
					"User Not able to click on any option available on \"How to Register\" Section",
					"Checked User Not clicked any option available on \"How to Register\" Section", "Fail");
			return false;
		}

		return true;
	}

// TC-53 (TanzaniaFooter) AS66528//
// User is able to click on "How to Deposit" on the How To page
	public boolean TZSynapse_HowtoDepositPage(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {

				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToDepositButton"))).isDisplayed());
				System.out.print(" HowTo Deposit Visible ");
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToDepositButton"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC53-TanzaniaFooter",
						"User is able to click on \"How to Deposit\" on the How To page",
						"Checked User is able to click on \"How to Deposit\" on the How To page", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC53-TanzaniaFooter",
						"User is able to click on \"How to Deposit\" on the How To page",
						"Checked User is able to click on \"How to Deposit\" on the How To page", "Fail");
				return false;
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC53-TanzaniaFooter",
					"User is able to click on \"How to Deposit\" on the How To page",
					"Checked User is able to click on \"How to Deposit\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

// TC-54 (TanzaniaFooter) AS66528//
// User is able to click on any option available on "How to Deposit" section
	public boolean TZSynapse_ClickAnyOptionInDeposit(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {

				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToDepositButton"))).isDisplayed());
				System.out.print(" HowTo Deposit Visible ");
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToDepositButton"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).isDisplayed());
				System.out.print(" 1stOption InHowToPage  Visible ");
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC54-TanzaniaFooter",
						"User is able to click on any option available on \"How to Deposit\" Section",
						"Checked User clicked any option available on \"How to Deposit\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC54-TanzaniaFooter",
						"User is able to click on any option available on \"How to Deposit\" Section",
						"Checked User clicked any option available on \"How to Deposit\" Section", "Fail");
				return false;
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC54-TanzaniaFooter",
					"User is able to click on any option available on \"How to Deposit\" Section",
					"Checked User clicked any option available on \"How to Deposit\" Section", "Fail");
			return false;
		}

		return true;
	}

// TC-55 (TanzaniaFooter) AS66528//
// User is able to click on "How to Reset Password" on the How To page
	public boolean TZSynapse_HowtoResetPasswordPage(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {

				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToResetPasswordButton"))).isDisplayed());
				System.out.print(" HowTo ResetPassword Visible ");
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToResetPasswordButton"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC55-TanzaniaFooter",
						"User is able to click on \"How to Reset Password\" on the How To page",
						"Checked User is able to click on \"How to Reset Password\" on the How To page", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC55-TanzaniaFooter",
						"User is able to click on \"How to Reset Password\" on the How To page",
						"Checked User is able to click on \"How to Reset Password\" on the How To page", "Fail");
				return false;
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC55-TanzaniaFooter",
					"User is able to click on \"How to Reset Password\" on the How To page",
					"Checked User is able to click on \"How to Reset Password\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

// TC-56 (TanzaniaFooter) AS66528//
// User is able to click on any option available on "How to Reset Password"
// section
	public boolean TZSynapse_ClickAnyOptionInResetPassword(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {

				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToResetPasswordButton"))).isDisplayed());
				System.out.print(" HowTo ResetPassword Visible ");
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToResetPasswordButton"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).isDisplayed());
				System.out.print(" 1stOption InHowToPage  Visible ");
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC56-TanzaniaFooter",
						"User is able to click on any option available on \"How to Reset Password\" Section",
						"Checked User clicked any option available on \"How to Reset Password\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC56-TanzaniaFooter",
						"User is able to click on any option available on \"How to Reset Password\" Section",
						"Checked User clicked any option available on \"How to Reset Password\" Section", "Fail");
				return false;
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC56-TanzaniaFooter",
					"User is able to click on any option available on \"How to Reset Password\" Section",
					"Checked User clicked any option available on \"How to Reset Password\" Section", "Fail");
			return false;
		}

		return true;
	}

// TC-57 (TanzaniaFooter) AS66528//
// User is able to click on "How to Withdraw" on the How To page
	public boolean TZSynapse_HowtoWithdrawPage(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {

				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToWithdrawButton"))).isDisplayed());
				System.out.print(" HowTo Withdraw button Visible ");
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToWithdrawButton"))).click();
				Thread.sleep(2000);

				report.detailsAppend("TC57-TanzaniaFooter",
						"User is able to click on \"How to Withdraw\" on the How To page",
						"Checked User is able to click on \"How to Withdraw\" on the How To page", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC57-TanzaniaFooter",
						"User is able to click on \"How to Withdraw\" on the How To page",
						"Checked User is able to click on \"How to Withdraw\" on the How To page", "Fail");
				return false;
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC57-TanzaniaFooter",
					"User is able to click on \"How to Withdraw\" on the How To page",
					"Checked User is able to click on \"How to Withdraw\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

// TC-58 (TanzaniaFooter) AS66528//
// User is able to click on any option available on "How to Withdraw" section
	public boolean TZSynapse_ClickAnyOptionInWithdraw(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {

				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToWithdrawButton"))).isDisplayed());
				System.out.print(" HowTo Withdraw button Visible ");
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToWithdrawButton"))).click();
				Thread.sleep(2000);

				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).isDisplayed());
				System.out.print(" 1stOption InHowToPage  Visible ");
				Thread.sleep(1000);
				webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC58-TanzaniaFooter",
						"User is able to click on any option available on \"How to Withdraw\" Section",
						"Checked User clicked any option available on \"How to Withdraw\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC58-TanzaniaFooter",
						"User is able to click on any option available on \"How to Withdraw\" Section",
						"Checked User clicked any option available on \"How to Withdraw\" Section", "Fail");
				return false;
			}

			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC58-TanzaniaFooter",
					"User is able to click on any option available on \"How to Withdraw\" Section",
					"Checked User clicked any option available on \"How to Withdraw\" Section", "Fail");
			return false;
		}

		return true;
	}

// TC-59 (TanzaniaFooter) AS66528//
// User is able to click on "How to Jackpots" on the How To page
	public boolean TZSynapse_HowtoJackpotsPage(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {

				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToJackpotsButton"))).isDisplayed());
				System.out.print(" HowTo Jackpots button Visible ");
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToJackpotsButton"))).click();
				Thread.sleep(2000);

				report.detailsAppend("TC59-TanzaniaFooter",
						"User is able to click on \"How to Jackpots\" on the How To page",
						"Checked User is able to click on \"How to Jackpots\" on the How To page", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC59-TanzaniaFooter",
						"User is able to click on \"How to Jackpots\" on the How To page",
						"Checked User is able to click on \"How to Jackpots\" on the How To page", "Fail");
				return false;
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC59-TanzaniaFooter",
					"User is able to click on \"How to Jackpots\" on the How To page",
					"Checked User is able to click on \"How to Jackpots\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

// TC-60 (TanzaniaFooter) AS66528//
// User is able to click on any option available on "How to Jackpots" section
	public boolean TZSynapse_ClickAnyOptionInJackpots(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {

				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToJackpotsButton"))).isDisplayed());
				System.out.print(" HowTo Jackpots button Visible ");
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToJackpotsButton"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).isDisplayed());
				System.out.print(" 1stOption InHowToPage  Visible ");
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC60-TanzaniaFooter",
						"User is able to click on any option available on \"How to Jackpots\" Section",
						"Checked User clicked any option available on \"How to Jackpots\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC60-TanzaniaFooter",
						"User is able to click on any option available on \"How to Jackpots\" Section",
						"Checked User clicked any option available on \"How to Jackpots\" Section", "Fail");
				return false;
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC60-TanzaniaFooter",
					"User is able to click on any option available on \"How to Jackpots\" Section",
					"Checked User clicked any option available on \"How to Jackpots\" Section", "Fail");
			return false;
		}

		return true;
	}

// TC-61 (TanzaniaFooter) AS66528//
// User is able to click on "How to Casino" on the How To page
	public boolean TZSynapse_HowtoCasinoPage(Mobile_HTML_Report report) {
		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {

				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToCasinoButton"))).isDisplayed());
				System.out.print(" HowTo Casino button Visible ");
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToCasinoButton"))).click();
				Thread.sleep(2000);

				report.detailsAppend("TC61-TanzaniaFooter",
						"User is able to click on \"How to Casino\" on the How To page",
						"Checked User is able to click on \"How to Casino\" on the How To page", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC61-TanzaniaFooter",
						"User is able to click on \"How to Casino\" on the How To page",
						"Checked User is able to click on \"How to Casino\" on the How To page", "Fail");
				return false;
			}

			Thread.sleep(2000);
			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC61-TanzaniaFooter", "User is able to click on \"How to Casino\" on the How To page",
					"Checked User is able to click on \"How to Casino\" on the How To page", "Fail");
			return false;
		}
		return true;
	}

// TC-62 (TanzaniaFooter) AS66528//
// User is able to click on any option available on "How to Casino" section
	public boolean TZSynapse_ClickAnyOptionInCasino(Mobile_HTML_Report report) {

		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToButton"))).click();
			Thread.sleep(2000);
			try {

				Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).isDisplayed());
				webdriver.findElement(By.xpath(xpathMap.get("RightArrowInHowToPage"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToCasinoButton"))).isDisplayed());
				System.out.print(" HowTo Casino button Visible ");
				webdriver.findElement(By.xpath(xpathMap.get("SynapseHowToCasinoButton"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).isDisplayed());
				System.out.print(" 1stOption InHowToPage  Visible ");
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("SynapseNG1stOptionInHowToPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC62-TanzaniaFooter",
						"User is able to click on any option available on \"How to Casino\" Section",
						"Checked User clicked any option available on \"How to Casino\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC62-TanzaniaFooter",
						"User is able to click on any option available on \"How to Casino\" Section",
						"Checked User clicked any option available on \"How to Casino\" Section", "Fail");
				return false;
			}
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC62-TanzaniaFooter",
					"User is able to click on any option available on \"How to Casino\" Section",
					"Checked User clicked any option available on \"How to Casino\" Section", "Fail");
			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC-63 (TanzaniaFooter) AS66528//
// To check that User is able to click on Affiliates from the Footer section
	public boolean TZSynapse_AffiliatesOnFooter(Mobile_HTML_Report report) {

		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(
					webdriver.findElement(By.xpath(xpathMap.get("SynapseAffiliateProgramButton"))).isDisplayed());
			System.out.print(" Affiliates Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseAffiliateProgramButton"))).click();
			Thread.sleep(2000);
			switchToNewTab();
			report.detailsAppend("TC63-TanzaniaFooter", "User is able to click on Affiliates from the Footer",
					"User click on Affiliates from the Footer", "Pass");
			switchToParentTab();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC63-TanzaniaFooter", "User Not able to click on Affiliates from the Footer",
					"User Not able to click on Affiliates from the Footer", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC-64 (TanzaniaFooter) AS66528//
// TVerify that User should able to see the Legal information about betWay on
// footer section
	public boolean TZSynapse_LegalinformationOnFooter(Mobile_HTML_Report report) {

		try {

			SynapseNavigateFooterPage();
			Thread.sleep(2000);

			report.detailsAppend("TC64-TanzaniaFooter",
					"User should able to see the Legal information about betWay on footer section",
					"User able to see the Legalinformation about betWay on footer", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC64-TanzaniaFooter", "User not able check available Hyperlinks on footer section",
					"User not able to see the Legalinformation about betWay on footer", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;

	}

// TC-65 (TanzaniaFooter) AS66528//
// To check presence of version information of Betway application at footer
// section
	public boolean TZSynapse_versionInformationOnFooter(Mobile_HTML_Report report) {

		try {

			SynapseNavigateFooterPage();
			Thread.sleep(2000);

			report.detailsAppend("TC65-TanzaniaFooter",
					"User able check presence of version information of Betway application at footer section",
					"User able to check presence of version information of Betway application at footer section",
					"Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC65-TanzaniaFooter",
					"User not able check presence of version information of Betway application at footer section",
					"User not able to check presence of version information of Betway application at footer section",
					"Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;

	}

// TC-66 (TanzaniaFooter) AS66528//
// To Verify that User is able to see the Current time on footer section
	public boolean TZSynapse_CurrentTimeOnFooter(Mobile_HTML_Report report) {

		try {

			SynapseNavigateFooterPage();
			Thread.sleep(2000);

			report.detailsAppend("TC66-TanzaniaFooter", "User is able to see the Current time on footer section",
					"User is able to see the Current time on footer section", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC66-TanzaniaFooter", "User is able to see the Current time on footer section",
					"User is able to see the Current time on footer section", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;

	}

// TC-67 (TanzaniaFooter) AS66528//
// To Check presence and functionality of "Betway App QR code" at footer section
	public boolean TZSynapse_betWayAppQRcodeOnFooter(Mobile_HTML_Report report) {

		try {

			SynapseNavigateFooterPage();
			Thread.sleep(2000);

			report.detailsAppend("TC67-TanzaniaFooter",
					"User Check presence and functionality of \"Betway App QR code\" at footer section",
					"User able to Check presence and functionality of \"Betway App QR code\" at footer section",
					"Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC67-TanzaniaFooter",
					"User not able to Check presence and functionality of \"Betway App QR code\" at footer section",
					"User Not check presence and functionality of \"Betway App QR code\" at footer section", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-68 (TanzaniaFooter) AS66528//
// To check that User is able to click on App store icons on Footer section
	public boolean TZSynapse_AppstoreiconsOnFooter(Mobile_HTML_Report report) {

		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseAppStoreIcon"))).isDisplayed());
			System.out.print(" App Store Icon Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseAppStoreIcon"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC68-TanzaniaFooter", "User is able to click on App store icons on Footer",
					"User click on App store icons on Footer", "Pass");

			Thread.sleep(2000);

			log.debug("Switch to default tab");
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC68-TanzaniaFooter", "User is able to click on App store icons on Footer",
					"User click on App store icons on Footer", "Fail");

			return false;
		}

		webdriver.navigate().back();
		return true;
	}

// TC-69 (TanzaniaFooter) AS66528//
// To check that User is able to click on the social media icons from the footer
// section
	public boolean TZSynapse_socialmediaIconsOnFooter(Mobile_HTML_Report report) {

		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFBAppIcon"))).isDisplayed());
			System.out.print(" Affiliates Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFBAppIcon"))).click();
			Thread.sleep(2000);
			switchToNewTab();
			report.detailsAppend("TC69-TanzaniaFooter", "User is able to click on social media icons on Footer",
					"User click on social media icons on Footer", "Pass");
			switchToParentTab();
			Thread.sleep(2000);

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC69-TanzaniaFooter", "User is able to click on social media icons on Footer",
					"User click on social media icons on Footer", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC-70 (TanzaniaFooter) AS66528//
// To check that User is able to click on 18Plus Logo, redirect to the "Terms &
// conditions" page
	public boolean TZSynapse_EighteenPlusLogoOnFooter(Mobile_HTML_Report report) {

		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseTermsCondition"))).isDisplayed());
			System.out.print(" terms&condition Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseTermsCondition"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC70-TanzaniaFooter",
					"User is able to click on 18Plus Logo,redirect to the \"Terms & conditions\" page",
					"User click on 18Plus logo, redirect to the \"Terms & conditions\" page", "Pass");

			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBackButton"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC70-TanzaniaFooter",
					"User is able to click on 18Plus Logo,redirect to the \"Terms & conditions\" page",
					"User click on 18Plus, redirect to the \"Terms & conditions\" pager", "Fail");

			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

// TC-71 (TanzaniaFooter) AS66528//
// To check navigation of back button on any section
	public boolean TZSynapse_BackButtonOnAnySection(Mobile_HTML_Report report) {

		try {

			SynapseNavigateFooterPage();
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseTermsCondition"))).isDisplayed());
			System.out.print(" Terms&Condition Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseTermsCondition"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBackButton"))).click();
			Thread.sleep(1000);
			report.detailsAppend("TC71-TanzaniaFooter",
					"User is able To check navigation of back button on any section",
					"Checked User is able To check navigation of back button on any section", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC71-TanzaniaFooter",
					"User is able To check navigation of back button on any section",
					"Checked User is able To check navigation of back button on any section", "Fail");
			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

//////////////////////////////Signup////////////Tanzania///////////////////////////////////////////////////////////////////////////////////////
//////////////////Akhil AS66528 Regression SIGNUP Synapse UAT TANZANIA ///////////////////

	public void TZ_Logout() throws InterruptedException {

		webdriver.findElement(By.xpath(xpathMap.get("ProfileOpen"))).click();
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("TZ_logout"))).click();
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(xpathMap.get("ProceedButton"))).click();
		Thread.sleep(2000);
	}

//TC-2(Tanzania_SignUp) AS66528 //
// Check if there is a visible "Sign Up" button on the Hamburger Menu.
	public boolean TZ_SignUpVisibleOnHamburger(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("Synapse Hamburger is Present\n");

			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC2-Tanzania_SignUp",
					"Check if there is a visible \"Sign Up\" button on the Hamburger Menu.",
					"User Check if there is a visible \"Sign Up\" button on the Hamburger Menu", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC2-Tanzania_SignUp",
					"Check if there is a visible \"Sign Up\" button on the Hamburger Menu.",
					"User Check if there is a visible \"Sign Up\" button on Hamburger Menu", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-10 (Tanzania_SignUp) AS66528 //
// To check if the system rejects a mobile number with non-numeric characters.
	public boolean TZ_RejectMobileNoWithNonNumericChar(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(03, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo")))
					.sendKeys(xpathMap.get("MobileNoNonNumeric"));
			System.out.print("MobileNumber is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC10-Tanzania_SignUp",
					"check if the system rejects a mobile number with non-numeric characters",
					"Checked if system rejects a mobile number with non-numeric characters", "Pass");

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC10-Tanzania_SignUp",
					"check if the system rejects a mobile number with non-numeric characters",
					"Checked if system rejects a mobile number with non-numeric characters", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-13 (Tanzania_SignUp) AS66528 //
// To check if the system accepts a valid mobile number with hyphens.
	public boolean TZ_AcceptsMobileNoWithHyphens(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo")))
					.sendKeys(xpathMap.get("MobileNowithHyphen"));
			System.out.print("MobileNumber is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC13-Tanzania_SignUp",
					"check if the system accepts a valid mobile number with hyphens.",
					"Checked if system accepts a valid mobile number with hyphens.", "Pass");

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC13-Tanzania_SignUp",
					"check if the system accepts a valid mobile number with hyphens.",
					"Checked if system accepts a valid mobile number with hyphens.", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-14 (Tanzania_SignUp) AS66528 //
// To check if the system accepts a valid mobile number with parentheses.
	public boolean TZ_AcceptsMobileNoWithParentheses(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo")))
					.sendKeys(xpathMap.get("MobileNowithParentheses"));
			System.out.print("MobileNumber is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC14-Tanzania_SignUp",
					"check if the system accepts a valid mobile number with parentheses.",
					"Checked if system accepts a valid mobile number with parentheses.", "Pass");

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC14-Tanzania_SignUp",
					"check if the system accepts a valid mobile number with parentheses.",
					"Checked if system accepts a valid mobile number with parentheses.", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-15 (Tanzania_SignUp) AS66528 //
// To check if the system accepts a valid mobile number with both spaces and
// hyphens..
	public boolean TZ_AcceptsMobileNoWithbothSpacesHyphens(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo")))
					.sendKeys(xpathMap.get("MobileNowithSpaces_Hyphens"));
			System.out.print("MobileNumber is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC15-Tanzania_SignUp",
					"check if the system accepts a valid mobile number with both spaces and hyphens..",
					"Checked if system accepts a valid mobile number with both spaces and hyphens..", "Pass");

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC15-Tanzania_SignUp",
					"check if the system accepts a valid mobile number with both spaces and hyphens..",
					"Checked if system accepts a valid mobile number with both spaces and hyphens..", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-18 (Tanzania_SignUp) AS66528 //
// To check if the system rejects a valid mobile number Starting with Hyphen.
	public boolean TZ_rejectsMobileNoStartingWithHyphens(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo")))
					.sendKeys(xpathMap.get("MobileNowithStartingHyphens"));
			System.out.print("MobileNumber is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC18-Tanzania_SignUp",
					"check if the system rejects a valid mobile number Starting with Hyphen.",
					"Checked if system rejects a valid mobile number Starting with Hyphen.", "Pass");

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC18-Tanzania_SignUp",
					"check if the system rejects a valid mobile number Starting with Hyphen.",
					"Checked if system rejects a valid mobile number Starting with Hyphen.", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-19 (Tanzania_SignUp) AS66528 //
// To check if the system rejects a valid mobile number Ending with Hyphen.
	public boolean TZ_rejectsMobileNoEndingWithHyphens(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo")))
					.sendKeys(xpathMap.get("MobileNowithEndingHyphens"));
			System.out.print("MobileNumber is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC19-Tanzania_SignUp",
					"check if the system rejects a valid mobile number Ending with Hyphen.",
					"Checked if system rejects a valid mobile number Ending with Hyphen.", "Pass");

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC19-Tanzania_SignUp",
					"check if the system rejects a valid mobile number Ending with Hyphen.",
					"Checked if system rejects a valid mobile number Ending with Hyphen.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-29 (Tanzania_SignUp) AS66528 //
// Check if the system trims leading and trailing spaces in the entered
// password.
	public boolean TZ_leadTrailSpacesInPassword(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).sendKeys(xpathMap.get("TZPassword_Space"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC29-Tanzania_SignUp",
					"Check if the system trims leading and trailing spaces in the entered password.",
					"Checked if the system trims leading and trailing spaces in the entered password.", "Pass");

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC29-Tanzania_SignUp",
					"Check if the system trims leading and trailing spaces in the entered password.",
					"Checked if the system trims leading and trailing spaces in the entered password.", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-34 (Tanzania_SignUp) AS66528 //
// Check the "English" and "Swahili" language options are available
// in "Communication's Language" dropdown on "Sign Up" pop-up window.

	public boolean TZ_CommunicationLanguageDDClicked(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_CommunicationLDD"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_CommunicationLDD"))).click();
			System.out.print("Communication Language DD is Clicked");
			Thread.sleep(2000);

			report.detailsAppend("TC34-Tanzania_SignUp",
					"Check English and Swahili language options available in Communication's Language dropdown.",
					"Checked English and Swahili language options available in Communication's Language dropdown.",
					"Pass");

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC34-Tanzania_SignUp",
					"Check English and Swahili language options available in Communication's Language dropdown.",
					"Checked English and Swahili language options available in Communication's Language dropdown.",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-38(Tanzania_SignUp) AS66528 //
// Check if the "Register" button is visible on the sign-up form.
	public boolean TZ_RegisterButtonVisibleOnSignupForm(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("Synapse Hamburger is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("Signup button OnHamburger is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC38-Tanzania_SignUp",
					"Check if the \"Register\" button is visible on the sign-up form.",
					"User Check if the \"Register\" button is visible on the sign-up form.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC38-Tanzania_SignUp",
					"Check if the \"Register\" button is visible on the sign-up form.",
					"User Check if the \"Register\" button is visible on the sign-up form.", "Fail");

			System.out.println("ElementNotVisibleException :\n");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-39(Tanzania_SignUp) AS66528 //
// Check if there is a visible success message displayed after a successful
// sign-up.
	public boolean TZ_SignupSuccessfullyDisplayed(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("Synapse Hamburger is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("Signup button OnHamburger is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).isDisplayed());
			long min = 836595200; // Minimum 9-digit number
			long max = 999999999; // Maximum 9-digit number
// Create an instance of Random class
			Random random = new Random();
// Generate random number within the specified range
			long randomNumber = random.nextLong() % (max - min + 1) + min;
// Ensure the generated number is positive
			randomNumber = Math.abs(randomNumber);
			String randomString = Long.toString(randomNumber);
			System.out.println(randomString);
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).sendKeys(randomString);
			System.out.print("MobileNumber is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).sendKeys("12345");
			System.out.print("Password is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
			System.out.print("AllCheckbox is Clicked");
			Thread.sleep(2000);

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("TZAllreadyHaveAccount")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseRegisterButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseRegisterButton"))).click();
			System.out.print("Register Button is Successfull Clicked");
			Thread.sleep(2000);

			report.detailsAppend("TC38-Tanzania_SignUp",
					"Check if there is a visible success message displayed after a successful sign-up.",
					"User Check if there is a visible success message displayed after a successful sign-up.", "Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
			Thread.sleep(2000);
			TZ_Logout();
		} catch (Exception e) {

			report.detailsAppend("TC39-Tanzania_SignUp",
					"Check if there is a visible success message displayed after a successful sign-up.",
					"User Check if there is a visible success message displayed after a successful sign-up.", "Fail");

			System.out.println("ElementNotVisibleException :\n");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-44 (Tanzania_SignUp) AS66528 //
// Check if the system accepts a sign-up code with the maximum allowed length.
	public boolean TZ_SignupCodewithMaxAllowedlength(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("Synapse Hamburger is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("Signup button OnHamburger is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).isDisplayed());
			long min = 836595200; // Minimum 9-digit number
			long max = 999999999; // Maximum 9-digit number
// Create an instance of Random class
			Random random = new Random();
// Generate random number within the specified range
			long randomNumber = random.nextLong() % (max - min + 1) + min;
// Ensure the generated number is positive
			randomNumber = Math.abs(randomNumber);
			String randomString = Long.toString(randomNumber);
			System.out.println(randomString);
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).sendKeys(randomString);
			System.out.print("MobileNumber is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).sendKeys("12345");
			System.out.print("Password is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VoucherCodeDD"))).isDisplayed());
			System.out.println("SignupCodeDD is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("VoucherCodeDD"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseVoucherCode"))).isDisplayed());
			System.out.println("SignupCodeDD is Entered\n");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseVoucherCode")))
					.sendKeys(xpathMap.get("SignUpCodeLength"));
			Thread.sleep(2000);

			report.detailsAppend("TC44-Tanzania_SignUp",
					"Check if there is a visible success message displayed after a successful sign-up.",
					"User Check if there is a visible success message displayed after a successful sign-up.", "Pass");

			log.debug("Switch to default tab");
			webdriver.navigate().refresh();

		} catch (Exception e) {

			report.detailsAppend("TC44-Tanzania_SignUp",
					"Check if there is a visible success message displayed after a successful sign-up.",
					"User Check if there is a visible success message displayed after a successful sign-up.", "Fail");

			System.out.println("ElementNotVisibleException :\n");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-54 (Tanzania_SignUp) AS66528 //
// To check user is able to see the "Login" window when clicked on "Heart icon"
// button on game banner while on "Aviator" page

	public boolean TZ_LoginPopupOnHeartIconOfAviator(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).click();
			System.out.print(" Aviator Sport Clicked ");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).click();
			System.out.print("Heart Icon Button is Clicked");
			Thread.sleep(2000);

			report.detailsAppend("TC54-Tanzania_SignUp",
					"check user is able to see the \"Login\" window when clicked on \"Heart icon\" button on game banner while on \"Aviator\" page",
					"check user is able to see the \"Login\" window when clicked on \"Heart icon\" button on game banner while on \"Aviator\" page",
					"Pass");

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC54-Tanzania_SignUp",
					"check user is able to see the \"Login\" window when clicked on \"Heart icon\" button on game banner while on \"Aviator\" page",
					"check user is able to see the \"Login\" window when clicked on \"Heart icon\" button on game banner while on \"Aviator\" page",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-55 (Tanzania_SignUp) AS66528 //
// check user able to see "Login" popup from signup popup, when clicked "Heart
// icon" button on "Aviator" page

	public boolean TZ_LoginPopupfromSignupPopupOnHeartIconOfAviator(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).click();
			System.out.print(" Aviator Sport Clicked ");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).click();
			System.out.print("Heart Icon Button is Clicked");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			System.out.print("Signup Button is Clicked");
			Thread.sleep(2000);

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("TZAllreadyHaveAccount")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).click();
			System.out.print("Login Button is Clicked");
			Thread.sleep(2000);

			report.detailsAppend("TC55-Tanzania_SignUp",
					"check user able to see  \"Login\" popup from signup popup, when clicked \"Heart icon\" button on \"Aviator\" page",
					"check user able to see  \"Login\" popup from signup popup, when clicked \"Heart icon\" button on \"Aviator\" page",
					"Pass");

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC55-Tanzania_SignUp",
					"check user able to see  \"Login\" popup from signup popup, when clicked \"Heart icon\" button on \"Aviator\" page",
					"check user able to see  \"Login\" popup from signup popup, when clicked \"Heart icon\" button on \"Aviator\" page",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-56 (Tanzania_SignUp) AS66528 //
// check user able to click "Login" popup when clicked on "Hearticon" button on
// gamebanner of "Aviator" page

	public boolean TZ_UserLoginFromLoginPopupHeartIconOfAviator(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).click();
			System.out.print(" Aviator Sport Clicked ");
			Thread.sleep(2000);

			webdriver.navigate().refresh();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).click();
			System.out.print("Heart Icon Button is Clicked");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).sendKeys(xpathMap.get("TZPH"));
			System.out.print("Username is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).sendKeys(xpathMap.get("TZPW"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).click();
			System.out.print("Login Button is Clicked");
			Thread.sleep(2000);

			report.detailsAppend("TC56-Tanzania_SignUp",
					"check user able to click \"Login\" popup when clicked on \"Hearticon\" button on gamebanner of \"Aviator\" page",
					"user able to click \"Login\" popup when clicked on \"Hearticon\" button on gamebanner of \"Aviator\" page",
					"Pass");

			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");

			TZ_Logout();

		} catch (Exception e) {
			report.detailsAppend("TC56-Tanzania_SignUp",
					"check user able to click \"Login\" popup when clicked on \"Hearticon\" button on gamebanner of \"Aviator\" page",
					"user able to click \"Login\" popup when clicked on \"Hearticon\" button on gamebanner of \"Aviator\" page",
					"Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-57 (Tanzania_SignUp) AS66528 //
// check user able to click "Login" popup window from signup popup when clicked
// on "Hearticon" button on gamebanner of "Aviator" page

	public boolean TZ_UserLoginFromSignupPopupOnHeartIconOfAviator(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).click();
			System.out.print(" Aviator Sport Clicked ");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).click();
			System.out.print("Heart Icon Button is Clicked");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			System.out.print("Signup Button is Clicked");
			Thread.sleep(2000);

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("TZAllreadyHaveAccount")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).click();
			System.out.print("Login Button is Clicked");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).sendKeys(xpathMap.get("TZPH"));
			System.out.print("Username is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).sendKeys(xpathMap.get("TZPW"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).click();
			System.out.print("Login Button is Clicked");
			Thread.sleep(2000);

			report.detailsAppend("TC57-Tanzania_SignUp",
					"check user able to click \"Login\" popup window from signuppopup when clicked on \"Hearticon\" button on gamebanner of \"Aviator\" page",
					"user able to click \"Login\" popup window from signuppopup when clicked on \"Hearticon\" button on gamebanner of \"Aviator\" page",
					"Pass");

			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");

			TZ_Logout();

		} catch (Exception e) {
			report.detailsAppend("TC57-Tanzania_SignUp",
					"check user able to click \"Login\" popup window from signuppopup when clicked on \"Hearticon\" button on gamebanner of \"Aviator\" page",
					"user able to click \"Login\" popup window from signuppopup when clicked on \"Hearticon\" button on gamebanner of \"Aviator\" page",
					"Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-58 (Tanzania_SignUp) AS66528 //
// check user is not able to login if mobile number field is empty when clicked
// on "Heart icon" button on game banner while on "Aviator" page

	public boolean TZ_CheckUserLoginByMobileNoEmpty(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).click();
			System.out.print(" Aviator Sport Clicked ");
			Thread.sleep(2000);

			webdriver.navigate().refresh();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).click();
			System.out.print("Heart Icon Button is Clicked");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).sendKeys(xpathMap.get("TZPW"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).sendKeys(" ");
			System.out.print("Username is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).click();
			System.out.print("Login Button is Clicked");
			Thread.sleep(2000);

			report.detailsAppend("TC58-Tanzania_SignUp",
					"check user is not able to login if mobile number field is empty when clicked on \"Heart icon\" button on game banner while on \"Aviator\" page",
					"user not able to login if mobile number field is empty when clicked on \"Heart icon\" button on game banner while on \"Aviator\" page",
					"Pass");

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC58-Tanzania_SignUp",
					"check user is not able to login if mobile number field is empty when clicked on \"Heart icon\" button on game banner while on \"Aviator\" page",
					"user not able to login if mobile number field is empty when clicked on \"Heart icon\" button on game banner while on \"Aviator\" page",
					"Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-59 (Tanzania_SignUp) AS66528 //
// check user is not able to login if mobile number field has less than numeric
// 9 characters when clicked on "Heart icon" button on game banner while on
// "Aviator" page

	public boolean TZ_CheckUserLoginBylessNumericCharsInMobileNo(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).click();
			System.out.print(" Aviator Sport Clicked ");
			Thread.sleep(2000);

			webdriver.navigate().refresh();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).click();
			System.out.print("Heart Icon Button is Clicked");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).sendKeys(xpathMap.get("TZPW"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).sendKeys("8723567");
			System.out.print("Username is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).click();
			System.out.print("Login Button is Clicked");
			Thread.sleep(2000);

			report.detailsAppend("TC59-Tanzania_SignUp",
					"check user is not able to login if mobilenumber field has less than numeric 9 characters when clicked on \"Heart icon\" button on \"Aviator\" page",
					"user not able to login if mobile number field is mobilenumber field has less than numeric 9 characters  when clicked on \"Heart icon\" button on \"Aviator\" page",
					"Pass");

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC59-Tanzania_SignUp",
					"check user is not able to login if mobilenumber field is mobilenumber field has less than numeric 9 characters  when clicked on \"Heart icon\" button on \"Aviator\" page",
					"user not able to login if mobile number field is mobilenumber field has less than numeric 9 characters  when clicked on \"Heart icon\" button on \"Aviator\" page",
					"Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-60 (Tanzania_SignUp) AS66528 //
// check user is not able to login if mobile number field has more than numeric
// 9 characters when clicked on "Heart icon" button on game banner while on
// "Aviator" page

	public boolean TZ_CheckUserLoginBymoreNumericCharsInMobileNo(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).click();
			System.out.print(" Aviator Sport Clicked ");
			Thread.sleep(2000);

			webdriver.navigate().refresh();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).click();
			System.out.print("Heart Icon Button is Clicked");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).sendKeys(xpathMap.get("TZPW"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).sendKeys("8723567345");
			System.out.print("Username is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).click();
			System.out.print("Login Button is Clicked");
			Thread.sleep(2000);

			report.detailsAppend("TC60-Tanzania_SignUp",
					"check user is not able to login if mobilenumber field has more than numeric 9 characters when clicked on \"Heart icon\" button on \"Aviator\" page",
					"user not able to login if mobile number field is mobilenumber field has more than numeric 9 characters  when clicked on \"Heart icon\" button on \"Aviator\" page",
					"Pass");

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC60-Tanzania_SignUp",
					"check user is not able to login if mobilenumber field is mobilenumber field has more than numeric 9 characters  when clicked on \"Heart icon\" button on \"Aviator\" page",
					"user not able to login if mobile number field is mobilenumber field has more than numeric 9 characters  when clicked on \"Heart icon\" button on \"Aviator\" page",
					"Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-61 (Tanzania_SignUp) AS66528 //
// check user is not able to login if mobile number field has alphanumeric
// characters when clicked on "Heart icon" button on game banner while on
// "Aviator" page

	public boolean TZ_CheckUserLoginByAlphaNumericCharsInMobileNo(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).click();
			System.out.print(" Aviator Sport Clicked ");
			Thread.sleep(2000);

			webdriver.navigate().refresh();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).click();
			System.out.print("Heart Icon Button is Clicked");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).sendKeys(xpathMap.get("TZPW"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).sendKeys("AG867345");
			System.out.print("Username is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).click();
			System.out.print("Login Button is Clicked");
			Thread.sleep(2000);

			report.detailsAppend("TC61-Tanzania_SignUp",
					"check user is not able to login if mobilenumber field has alphanumeric characters when clicked on \"Heart icon\" button on \"Aviator\" page",
					"user not able to login if mobile number field is mobilenumber field has alphanumeric characters  when clicked on \"Heart icon\" button on \"Aviator\" page",
					"Pass");

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC61-Tanzania_SignUp",
					"check user is not able to login if mobilenumber field is mobilenumber field has alphanumeric characters  when clicked on \"Heart icon\" button on \"Aviator\" page",
					"user not able to login if mobile number field is mobilenumber field has alphanumeric characters  when clicked on \"Heart icon\" button on \"Aviator\" page",
					"Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-62 (Tanzania_SignUp) AS66528 //
// check user is not able to enter special character in mobilenumber field when
// clicked on "Heart icon" button on game banner while on "Aviator" page

	public boolean TZ_CheckUserLoginBySpecialCharsInMobileNo(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).click();
			System.out.print(" Aviator Sport Clicked ");
			Thread.sleep(2000);

			webdriver.navigate().refresh();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).click();
			System.out.print("Heart Icon Button is Clicked");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).sendKeys("659064#");
			System.out.print("Username is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).sendKeys(xpathMap.get("TZPW"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).click();
			System.out.print("Login Button is Clicked");
			Thread.sleep(2000);

			report.detailsAppend("TC62-Tanzania_SignUp",
					"check user is not able to enter special character in mobilenumber field when clicked on \"Heart icon\" button on \"Aviator\" page",
					"user not able to enter special character in mobilenumber field  when clicked on \"Heart icon\" button on \"Aviator\" page",
					"Pass");

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC62-Tanzania_SignUp",
					"check user is not able to enter special character in mobilenumber field when clicked on \"Heart icon\" button on \"Aviator\" page",
					"user not able to enter special character in mobilenumber field when clicked on \"Heart icon\" button on \"Aviator\" page",
					"Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-63 (Tanzania_SignUp) AS66528 //
// check user is not able to login if passwordfield is empty when clicked on
// "Heart icon" button on game banner while on "Aviator" page

	public boolean TZ_CheckUserLoginByPasswordEmpty(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).click();
			System.out.print(" Aviator Sport Clicked ");
			Thread.sleep(2000);

			webdriver.navigate().refresh();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).click();
			System.out.print("Heart Icon Button is Clicked");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).sendKeys("815117704");
			System.out.print("Username is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).sendKeys(xpathMap.get(""));
			System.out.print("Password is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).click();
			System.out.print("Login Button is Clicked");
			Thread.sleep(2000);

			report.detailsAppend("TC63-Tanzania_SignUp",
					"check user is not able to login if passwordfield is empty when clicked on \"Heart icon\" button on \"Aviator\" page",
					"user not able to login if passwordfield is empty when clicked on \"Heart icon\" button on \"Aviator\" page",
					"Pass");

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC63-Tanzania_SignUp",
					"check user is not able to login if passwordfield is empty when clicked on \"Heart icon\" button on \"Aviator\" page",
					"user not able to login if passwordfield is empty when clicked on \"Heart icon\" button on \"Aviator\" page",
					"Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-64 (Tanzania_SignUp) AS66528 //
// check user is not able to login if passwordfield has less than 5character
// when clicked on "Heart icon" button on game banner while on "Aviator" page

	public boolean TZ_CheckUserLoginByPasswordwithLessChar(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).click();
			System.out.print(" Aviator Sport Clicked ");
			Thread.sleep(2000);

			webdriver.navigate().refresh();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).click();
			System.out.print("Heart Icon Button is Clicked");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).sendKeys("815117704");
			System.out.print("Username is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).sendKeys("1234");
			System.out.print("Password is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).click();
			System.out.print("Login Button is Clicked");
			Thread.sleep(2000);

			report.detailsAppend("TC64-Tanzania_SignUp",
					"check user is not able to login if passwordfield has less than 5 character when clicked on \"Heart icon\" button on \"Aviator\" page",
					"user not able to login if passwordfield has less than 5 character when clicked on \"Heart icon\" button on \"Aviator\" page",
					"Pass");

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC64-Tanzania_SignUp",
					"check user is not able to login if passwordfield has less than 5 character when clicked on \"Heart icon\" button on \"Aviator\" page",
					"user not able to login if passwordfield has less than 5 character when clicked on \"Heart icon\" button on \"Aviator\" page",
					"Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-65 (Tanzania_SignUp) AS66528 //
// check user is not able to login if passwordfield has less than more than 20
// when clicked on "Heart icon" button on game banner while on "Aviator" page

	public boolean TZ_CheckUserLoginByPasswordwithMoreChar(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).click();
			System.out.print(" Aviator Sport Clicked ");
			Thread.sleep(2000);

			webdriver.navigate().refresh();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).click();
			System.out.print("Heart Icon Button is Clicked");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).sendKeys("815117704");
			System.out.print("Username is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).sendKeys("12345612789123456789");
			System.out.print("Password is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).click();
			System.out.print("Login Button is Clicked");
			Thread.sleep(2000);

			report.detailsAppend("TC65-Tanzania_SignUp",
					"check user is not able to login if passwordfield has less than more than 20 when clicked on \"Heart icon\" button on \"Aviator\" page",
					"user not able to login if passwordfield has less than more than 20 when clicked on \"Heart icon\" button on \"Aviator\" page",
					"Pass");

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC65-Tanzania_SignUp",
					"check user is not able to login if passwordfield has less than more than 20 when clicked on \"Heart icon\" button on \"Aviator\" page",
					"user not able to login if passwordfield has less than more than 20 when clicked on \"Heart icon\" button on \"Aviator\" page",
					"Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-66(Tanzania_SignUp) AS66528//
// Check if the "Sign Up" Button is visible on the login Modal popup window
	public Boolean TZ_SignupVisibleOnAviatorSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).isDisplayed());
			System.out.println("TZ_Aviator is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			System.out.println("CloseInLogin is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			System.out.println("SynapseSignup is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC66-Tanzania_SignUp",
					"User Should be able to Navigate to Signup Page from Aviator SignUp Button",
					"User is able to Navigate to Signup Page  from Aviator SignUp Button", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC66-Tanzania_SignUp",
					"User Should be able to Navigate to Signup Page from Aviator SignUp Button ",
					"User is able to Navigate to Signup Page from Aviator SignUp Button", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-68 (Tanzania_SignUp) AS66528 //
// Check if the required sign-up fields (e.g., mobile number, password) are
// visible on the sign-up form.

	public boolean TZ_SignupFieldsVisibleOnSignupFormInAviator(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).click();
			System.out.print(" Aviator Sport Clicked ");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			System.out.print("Signup Button is Clicked");
			Thread.sleep(2000);

			report.detailsAppend("TC68-Tanzania_SignUp",
					"Check if the required sign-up fields (e.g., mobile number, password) are visible on the sign-up form.",
					"Check if required sign-up fields (e.g., mobile number, password) are visible on the sign-up form.",
					"Pass");

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC68-Tanzania_SignUp",
					"Check if the required sign-up fields (e.g., mobile number, password) are visible on the sign-up form.",
					"Check if required sign-up fields (e.g., mobile number, password) are visible on the sign-up form.",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-69 (Tanzania_SignUp) AS66528 //
// Check if the "Register" button is visible on the sign-up form.

	public boolean TZ_RegisterButtonVisibleOnSignUpOfAviator(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).click();
			System.out.print(" Aviator Sport Clicked ");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			System.out.print("Signup Button is Clicked");
			Thread.sleep(2000);

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("TZAllreadyHaveAccount")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);

			report.detailsAppend("TC69-Tanzania_SignUp",
					"Check if the \"Register\" button is visible on the sign-up form.",
					"Checked the \"Register\" button is visible on the sign-up form.", "Pass");

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC69-Tanzania_SignUp",
					"Check if the \"Register\" button is visible on the sign-up form.",
					"Checked the \"Register\" button is visible on the sign-up form.", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-70 (Tanzania_SignUp) AS66528 //
// Check if there is a visible success message displayed after a successful
// sign-up.

	public boolean TZ_SuccessfulSignupOnAviatorGame(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).click();
			System.out.print(" Aviator Sport Clicked ");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			System.out.print("Signup Button is Clicked");
			Thread.sleep(2000);

			long min = 807060501; // Minimum 9-digit number
			long max = 999999999; // Maximum 9-digit number
// Create an instance of Random class
			Random random = new Random();
// Generate random number within the specified range
			long randomNumber = random.nextLong() % (max - min + 1) + min;
// Ensure the generated number is positive
			randomNumber = Math.abs(randomNumber);
			String randomString = Long.toString(randomNumber);
			System.out.println(randomString);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).sendKeys(randomString);
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).sendKeys("12345");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
			System.out.print("AllCheckbox is Clicked");
			Thread.sleep(2000);

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("TZAllreadyHaveAccount")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseRegisterButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseRegisterButton"))).click();
			System.out.print("Register Button is Successfull Clicked");
			Thread.sleep(2000);

			report.detailsAppend("TC70-Tanzania_SignUp",
					"Check if there is a visible success message displayed after a successful sign-up.",
					"Checked there is a visible success message displayed after a successful sign-up.", "Pass");

			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");

			TZ_Logout();

		} catch (Exception e) {
			report.detailsAppend("TC70-Tanzania_SignUp",
					"Check if there is a visible success message displayed after a successful sign-up.",
					"Checked there is a visible success message displayed after a successful sign-up.", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-71(Tanzania_SignUp) AS66528//
// Check if the "Sign Up" Button is visible on the login Modal popup window
	public Boolean TZ_SignupLiveCasinoFavouriteSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_LiveCasino"))).isDisplayed());
			System.out.println("TZ_LiveCasino is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZ_LiveCasino"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			System.out.println("SynapseFavourite is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			System.out.println("SignupInLogin is Clicked\n");
			Thread.sleep(2000);
			report.detailsAppend("TC71-Tanzania_SignUp",
					"User Should be able to Navigate to Signup Page from Login Window in LiveCasino when clicked on Favourite",
					"User is able to Navigate to Signup Page from Login Window in LiveCasino when clicked on Favourite",
					"Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC71-Tanzania_SignUp",
					"User Should be able to Navigate to Signup Page from Login Window in LiveCasino when clicked on Favourite ",
					"User is able to Navigate to Signup Page from Login Window in LiveCasino when clicked on Favourite",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-72 (Tanzania_SignUp) AS66528//
// check user is able to see the "Login" popup from signup popup when clicked
// "Hearticon" game banner on "Live casino" page
	public boolean TZ_loginPopupFromSignupInLiveCasino(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_LiveCasino"))).isDisplayed());
			System.out.println("TZ_LiveCasino is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("TZ_LiveCasino"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			System.out.println("SynapseFavourite is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			System.out.println("SignupInLogin is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).click();
			System.out.println("Login button in SignupForm is Clicked\n");
			Thread.sleep(2000);

			report.detailsAppend("TC72-Tanzania_SignUp",
					"check user is able to see the \"Login\" popup from signup popup when clicked \"Hearticon\" game banner on \"Live casino\" page",
					"check user is able to see the \"Login\" popup from signup popup when clicked \"Hearticon\" game banner on \"Live casino\" page",
					"Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC72-Tanzania_SignUp",
					"check user is able to see the \"Login\" popup from signup popup when clicked \"Hearticon\" game banner on \"Live casino\" page",
					"check user is able to see the \"Login\" popup from signup popup when clicked \"Hearticon\" game banner on \"Live casino\" page",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-73 (Tanzania_SignUp) AS66528//
// check user is able to click the "Login" on window when clicked on "Hearticon"
// button on gamebanner "Live casino" page
	public boolean TZ_UserCheckedLoginOnLiveCasinoPage(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_LiveCasino"))).isDisplayed());
			System.out.println("TZ_LiveCasino is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("TZ_LiveCasino"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			System.out.println("SynapseFavourite is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZUsername"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZUsername"))).sendKeys("815117704");
			System.out.print("Username is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).sendKeys("12345");
			System.out.print("Password is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).click();
			System.out.print("Login Button is Clicked");
			Thread.sleep(2000);

			report.detailsAppend("TC73-Tanzania_SignUp",
					"check user is able to click the \"Login\" on window when clicked on \"Hearticon\" button on gamebanner \"Live casino\" page",
					"user is able to click the \"Login\" on window when clicked on \"Hearticon\" button on gamebanner \"Live casino\" page",
					"Pass");

			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");
			TZ_Logout();

		} catch (Exception e) {
			report.detailsAppend("TC73-Tanzania_SignUp",
					"check user is able to click the \"Login\" on window when clicked on \"Hearticon\" button on gamebanner \"Live casino\" page",
					"user is able to click the \"Login\" on window when clicked on \"Hearticon\" button on gamebanner \"Live casino\" page",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-74 (Tanzania_SignUp) AS66528//
// check user is able to see the "Login" popup window from signup popup window
// when clicked on "Hearticon" button on gamebanner "Live casino" page
	public boolean TZ_UserLoginFromSignupPopupInLiveCasinoPage(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_LiveCasino"))).isDisplayed());
			System.out.println("TZ_LiveCasino is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("TZ_LiveCasino"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			System.out.println("SynapseFavourite is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			System.out.println("SignupInLogin is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).click();
			System.out.println("Login button in SignupForm is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZUsername"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZUsername"))).sendKeys("815117704");
			System.out.print("Username is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).sendKeys("12345");
			System.out.print("Password is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).click();
			System.out.print("Login Button is Clicked");
			Thread.sleep(2000);

			report.detailsAppend("TC74-Tanzania_SignUp",
					"check user is able see the Login popup window from signup popup window when clicked  on \"Hearticon\" button on gamebanner \"Live casino\" page",
					"user is able see the Login popup window from signup popup window when clicked  on \"Hearticon\" button on gamebanner \"Live casino\" page",
					"Pass");

			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");
			TZ_Logout();

		} catch (Exception e) {
			report.detailsAppend("TC74-Tanzania_SignUp",
					"check user is able to click the \"Login\" on window when clicked on \"Hearticon\" button on gamebanner \"Live casino\" page",
					"user is able see the Login popup window from signup popup window when clicked  on \"Hearticon\" button on gamebanner \"Live casino\" page",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-77 (Tanzania_SignUp) AS66528//
// check user is able to click the "Login" on window when clicked on "Hearticon"
// button on gamebanner "casino" page
	public boolean TZ_UserCheckedLoginOnCasinoPage(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Casino"))).isDisplayed());
			System.out.println("Casino is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Casino"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			System.out.println("SynapseFavourite is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZUsername"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZUsername"))).sendKeys("815117704");
			System.out.print("Username is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).sendKeys("12345");
			System.out.print("Password is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).click();
			System.out.print("Login Button is Clicked");
			Thread.sleep(2000);

			report.detailsAppend("TC77-Tanzania_SignUp",
					"check user is able to click the \"Login\" on window when clicked on \"Hearticon\" button on gamebanner \"casino\" page",
					"user is able to click the \"Login\" on window when clicked on \"Hearticon\" button on gamebanner \"casino\" page",
					"Pass");

			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");
			TZ_Logout();

		} catch (Exception e) {
			report.detailsAppend("TC77-Tanzania_SignUp",
					"check user is able to click the \"Login\" on window when clicked on \"Hearticon\" button on gamebanner \"casino\" page",
					"user is able to click the \"Login\" on window when clicked on \"Hearticon\" button on gamebanner \"casino\" page",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-78 (Tanzania_SignUp) AS66528//
// check user is able to see the "Login" popup window from signup popup window
// when clicked on "Hearticon" button on gamebanner "casino" page
	public boolean TZ_UserLoginFromSignupPopupInCasinoPage(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Casino"))).isDisplayed());
			System.out.println("Casino is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Casino"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			System.out.println("SynapseFavourite is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			System.out.println("SignupInLogin is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).click();
			System.out.println("Login button in SignupForm is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZUsername"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZUsername"))).sendKeys("815117704");
			System.out.print("Username is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).sendKeys("12345");
			System.out.print("Password is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).click();
			System.out.print("Login Button is Clicked");
			Thread.sleep(2000);

			report.detailsAppend("TC78-Tanzania_SignUp",
					"check user is able see the Login popup window from signup popup window when clicked  on \"Hearticon\" button on gamebanner \"casino\" page",
					"user is able see the Login popup window from signup popup window when clicked  on \"Hearticon\" button on gamebanner \"casino\" page",
					"Pass");

			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");
			TZ_Logout();

		} catch (Exception e) {
			report.detailsAppend("TC78-Tanzania_SignUp",
					"check user is able to click the \"Login\" on window when clicked on \"Hearticon\" button on gamebanner \"casino\" page",
					"user is able see the Login popup window from signup popup window when clicked  on \"Hearticon\" button on gamebanner \"casino\" page",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-79(Tanzania_SignUp) AS66528//
// check user is able to see the "Login" window when clicked on "Heart icon"
// button on game banner while on "Virtuals" page
	public Boolean TZ_LoginWindowOnVirtualsSynapse(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).isDisplayed());
			System.out.println("TZ_Virtuals is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			System.out.println("SynapseFavourite is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC79-Tanzania_SignUp",
					"User Should be able to see Login window when clicked on HeartIcon button on gamebanner of Virtuals page",
					"User is able to Navigate to see Login window when clicked on HeartIcon button on gamebanner of Virtuals page",
					"Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC79-Tanzania_SignUp",
					"User Should be able to see Login window when clicked on HeartIcon button on gamebanner of Virtuals page",
					"User not able to Navigate to see Login window when clicked on HeartIcon button on gamebanner of Virtuals page",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-80 (Tanzania_SignUp) AS66528//
// check user is able to see the "Login" popup from signup popup when clicked
// "Hearticon" game banner on "Virtuals" page
	public boolean TZ_loginPopupFromSignupInVirtuals(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).isDisplayed());
			System.out.println("Casino is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			System.out.println("SynapseFavourite is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			System.out.println("SignupInLogin is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).click();
			System.out.println("Login button in SignupForm is Clicked\n");
			Thread.sleep(2000);

			report.detailsAppend("TC80-Tanzania_SignUp",
					"check user is able to see the \"Login\" popup from signup popup when clicked \"Hearticon\" game banner on \"Virtuals\" page",
					"check user is able to see the \"Login\" popup from signup popup when clicked \"Hearticon\" game banner on \"Virtuals\" page",
					"Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC80-Tanzania_SignUp",
					"check user is able to see the \"Login\" popup from signup popup when clicked \"Hearticon\" game banner on \"Virtuals\" page",
					"check user is able to see the \"Login\" popup from signup popup when clicked \"Hearticon\" game banner on \"Virtuals\" page",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-81 (Tanzania_SignUp) AS66528//
// check user is able to click the "Login" on window when clicked on "Hearticon"
// button on gamebanner "Virtuals" page
	public boolean TZ_UserCheckedLoginOnVirtualsPage(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).isDisplayed());
			System.out.println("Virtuals is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			System.out.println("SynapseFavourite is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZUsername"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZUsername"))).sendKeys("815117704");
			System.out.print("Username is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).sendKeys("12345");
			System.out.print("Password is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).click();
			System.out.print("Login Button is Clicked");
			Thread.sleep(2000);

			report.detailsAppend("TC81-Tanzania_SignUp",
					"check user is able to click the \"Login\" on window when clicked on \"Hearticon\" button on gamebanner \"Virtuals\" page",
					"user is able to click the \"Login\" on window when clicked on \"Hearticon\" button on gamebanner \"Virtuals\" page",
					"Pass");

			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");
			TZ_Logout();

		} catch (Exception e) {
			report.detailsAppend("TC81-Tanzania_SignUp",
					"check user is able to click the \"Login\" on window when clicked on \"Hearticon\" button on gamebanner \"Virtuals\" page",
					"user is able to click the \"Login\" on window when clicked on \"Hearticon\" button on gamebanner \"Virtuals\" page",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-82 (Synapse_SignUp) AS66528//
// check user is able to see the "Login" popup window from signup popup window
// when clicked on "Hearticon" button on gamebanner "Virtuals" page
	public boolean TZ_UserLoginFromSignupPopupInVirtualsPage(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).isDisplayed());
			System.out.println("Virtuals is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			System.out.println("SynapseFavourite is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			System.out.println("SignupInLogin is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).click();
			System.out.println("Login button in SignupForm is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZUsername"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZUsername"))).sendKeys("815117704");
			System.out.print("Username is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZPassword"))).sendKeys("12345");
			System.out.print("Password is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZLoginButton"))).click();
			System.out.print("Login Button is Clicked");
			Thread.sleep(2000);

			report.detailsAppend("TC82-Tanzania_SignUp",
					"check user is able see the Login popup window from signup popup window when clicked  on \"Hearticon\" button on gamebanner \"Virtuals\" page",
					"user is able see the Login popup window from signup popup window when clicked  on \"Hearticon\" button on gamebanner \"Virtuals\" page",
					"Pass");

			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");
			TZ_Logout();

		} catch (Exception e) {
			report.detailsAppend("TC82-Tanzania_SignUp",
					"check user is able to click the \"Login\" on window when clicked on \"Hearticon\" button on gamebanner \"Virtuals\" page",
					"user is able see the Login popup window from signup popup window when clicked  on \"Hearticon\" button on gamebanner \"Virtuals\" page",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-83(Tanzania_SignUp) AS66528//
// Check if the "Sign Up" Button is visible on the login Modal popup window
	public Boolean TZ_SignupButtonOnLoginPopupOnVirtuals(Mobile_HTML_Report report) {
		try {
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).isDisplayed());
			System.out.println("TZ_Virtuals is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			System.out.println("SynapseFavourite is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC83-Tanzania_SignUp",
					"User Should be able to Navigate to Signup Page from Login Window in Virtuals when clicked on Favourite",
					"User is able to Navigate to Signup Page from Login Window in Virtuals when clicked on Favourite",
					"Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC83-Tanzania_SignUp",
					"User Should be able to Navigate to Signup Page from Login Window in Virtuals when clicked on Favourite ",
					"User Not able to Navigate to Signup Page from Login Window in Virtuals when clicked on Favourite",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-84(Tanzania_SignUp) AS66528//
// Check if the sign-up form is visible when the "Sign Up" button is clicked.
	public Boolean TZ_SignupFormVisibleOnVirtuals(Mobile_HTML_Report report) {
		try {
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).isDisplayed());
			System.out.println("TZ_Virtuals is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			System.out.println("SynapseFavourite is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC84-Tanzania_SignUp",
					"User Should be able to Check if the sign-up form is visible when the \"Sign Up\" button is clicked.",
					"User is able to Navigate to Signup Page from Login Window in Virtuals when clicked on Favourite",
					"Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC84-Tanzania_SignUp",
					"User Should be able to Check if the sign-up form is visible when the \"Sign Up\" button is clicked.",
					"User Not able to Check if the sign-up form is visible when the \"Sign Up\" button is clicked.",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-85 (Tanzania_SignUp) AS66528//
// Check if the required sign-up fields (e.g., mobile number, password) are
// visible on the sign-up form.
	public boolean TZ_CheckSignupFieldsVisibleInVirtualsPage(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).isDisplayed());
			System.out.println("Casino is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			System.out.println("Play button in game banner is Clicked\n");
			Thread.sleep(2000);

			report.detailsAppend("TC85-Tanzania_SignUp",
					"Check if the required sign-up fields (e.g., mobile number, password) are visible on the sign-up form.",
					"Check if the required sign-up fields (e.g., mobile number, password) are visible on the sign-up form.",
					"Pass");

			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC85-Tanzania_SignUp",
					"Check if the required sign-up fields (e.g., mobile number, password) are visible on the sign-up form.",
					"Check if the required sign-up fields (e.g., mobile number, password) are visible on the sign-up form.",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-86 (Tanzania_SignUp) AS66528//
// Check if the "Register" button is visible on the sign-up form.
	public boolean TZ_CheckRegisterButtonVisibleInVirtualsPage(Mobile_HTML_Report report) {

		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).isDisplayed());
			System.out.println("Casino is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			System.out.println("Play button in game banner is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			System.out.println("SignupInLogin is Clicked\n");
			Thread.sleep(2000);

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("TZAllreadyHaveAccount")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);

			report.detailsAppend("TC86-Tanzania_SignUp",
					"Check if the \"Register\" button is visible on the sign-up form.",
					"Check if the \"Register\" button is visible on the sign-up form.", "Pass");

			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC86-Tanzania_SignUp",
					"Check if the \"Register\" button is visible on the sign-up form.",
					"Check if the \"Register\" button is visible on the sign-up form.", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-87 (Tanzania_SignUp) AS66528//
// Check if there is a visible success message displayed after a successful
// sign-up.
	public boolean TZ_SignupSuccessfullInVirtualsPage(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).isDisplayed());
			System.out.println("Casino is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			System.out.println("Play button in game banner is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			System.out.println("SignupInLogin is Clicked\n");
			Thread.sleep(2000);

			long min = 807060501; // Minimum 9-digit number
			long max = 999999999; // Maximum 9-digit number
// Create an instance of Random class
			Random random = new Random();
// Generate random number within the specified range
			long randomNumber = random.nextLong() % (max - min + 1) + min;
// Ensure the generated number is positive
			randomNumber = Math.abs(randomNumber);
			String randomString = Long.toString(randomNumber);
			System.out.println(randomString);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).sendKeys(randomString);
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).sendKeys("12345");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
			System.out.print("AllCheckbox is Clicked");
			Thread.sleep(2000);

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("TZAllreadyHaveAccount")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseRegisterButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseRegisterButton"))).click();
			System.out.print("Register Button is Successfull Clicked");
			Thread.sleep(2000);

			report.detailsAppend("TC87-Tanzania_SignUp",
					"Check if there is a visible success message displayed after a successful sign-up.",
					"Check if there is a visible success message displayed after a successful sign-up.", "Pass");

			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			TZ_Logout();

		} catch (Exception e) {
			report.detailsAppend("TC87-Tanzania_SignUp",
					"Check if there is a visible success message displayed after a successful sign-up.",
					"Check if there is a visible success message displayed after a successful sign-up.", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-88(Tanzania_SignUp) AS66528//
// Check if the sign-up form is visible when the "Sign Up" button is clicked.
	public Boolean TZ_SignupPromotionsSynapse(Mobile_HTML_Report report) {
		try {
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Promotions"))).isDisplayed());
			System.out.println("TZ_Promotions is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Promotions"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignUpForPromotion"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SignUpForPromotion"))).click();
			System.out.println("Signup button is Clicked\n");
			Thread.sleep(2000);

			report.detailsAppend("TC88-Tanzania_SignUp",
					"User Should be able to Check if sign-up form is visible when the \"Sign Up\" button is clicked.",
					"User is able to Check if sign-up form is visible when the \"Sign Up\" button is clicked.", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC88-Tanzania_SignUp",
					"User Should be able to Check if sign-up form is visible when the \\\"Sign Up\\\" button is clicked.",
					"User Not able to Check if sign-up form is visible when the \\\"Sign Up\\\" button is clicked.",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-89 (Tanzania_SignUp) AS66528//
//Check if the required sign-up fields (e.g., mobile number, password) are visible on the sign-up form.
	public boolean TZ_CheckSignupFieldsVisibleInPromotionsPage(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Promotions"))).isDisplayed());
			System.out.println("Promotion is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Promotions"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignUpForPromotion"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SignUpForPromotion"))).click();
			System.out.println("Signup button is Clicked\n");
			Thread.sleep(2000);

			report.detailsAppend("TC89-Tanzania_SignUp",
					"Check if the required sign-up fields (e.g., mobile number, password) are visible on the sign-up form.",
					"Check if the required sign-up fields (e.g., mobile number, password) are visible on the sign-up form.",
					"Pass");

			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC89-Tanzania_SignUp",
					"Check if the required sign-up fields (e.g., mobile number, password) are visible on the sign-up form.",
					"Check if the required sign-up fields (e.g., mobile number, password) are visible on the sign-up form.",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-90 (Tanzania_SignUp) AS66528//
//Check if the "Register" button is visible on the sign-up form.
	public boolean TZ_CheckRegisterButtonVisibleInPromotionsPage(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Promotions"))).isDisplayed());
			System.out.println("Promotion is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Promotions"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignUpForPromotion"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SignUpForPromotion"))).click();
			System.out.println("Signup button is Clicked\n");
			Thread.sleep(2000);

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("TZAllreadyHaveAccount")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);

			report.detailsAppend("TC90-Tanzania_SignUp",
					"Check if the \"Register\" button is visible on the sign-up form.",
					"Check if the \"Register\" button is visible on the sign-up form.", "Pass");

			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC90-Tanzania_SignUp",
					"Check if the \"Register\" button is visible on the sign-up form.",
					"Check if the \"Register\" button is visible on the sign-up form.", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-91 (Tanzania_SignUp) AS66528//
//Check if the "Sign Up" Button is visible on the login Modal popup window
	public boolean TZ_SignupSuccessfulDisplayInPromotionsPage(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Promotions"))).isDisplayed());
			System.out.println("Promotion is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Promotions"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignUpForPromotion"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SignUpForPromotion"))).click();
			System.out.println("Signup button is Clicked\n");
			Thread.sleep(2000);

			long min = 807060501; // Minimum 9-digit number
			long max = 999999999; // Maximum 9-digit number
// Create an instance of Random class
			Random random = new Random();
// Generate random number within the specified range
			long randomNumber = random.nextLong() % (max - min + 1) + min;
// Ensure the generated number is positive
			randomNumber = Math.abs(randomNumber);
			String randomString = Long.toString(randomNumber);
			System.out.println(randomString);
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).sendKeys(randomString);
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).sendKeys("12345");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
			System.out.print("AllCheckbox is Clicked");
			Thread.sleep(2000);

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("TZAllreadyHaveAccount")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseRegisterButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseRegisterButton"))).click();
			System.out.print("Register Button is Successfull Clicked");
			Thread.sleep(2000);

			report.detailsAppend("TC91-Tanzania_SignUp",
					"Check if there is a visible success message displayed after a successful sign-up.",
					"Check if there is a visible success message displayed after a successful sign-up.", "Pass");

			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			TZ_Logout();

		} catch (Exception e) {
			report.detailsAppend("TC91-Tanzania_SignUp",
					"Check if there is a visible success message displayed after a successful sign-up.",
					"Check if there is a visible success message displayed after a successful sign-up.", "Fail");

			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-92(Tanzania_SignUp) AS66528//
// Check if the "Sign Up" Button is visible on the login Modal popup window
	public Boolean TZ_SignupPromotionsFavouriteSynapse(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Promotions"))).isDisplayed());
			System.out.println("TZ_Promotions is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Promotions"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignUpForPromotion"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SignUpForPromotion"))).click();
			System.out.println("Signup button is Clicked\n");
			Thread.sleep(2000);
			report.detailsAppend("TC92-Tanzania_SignUp",
					"User Should be able to Navigate to Signup Page from Login Window in Promotions when clicked on Favourite",
					"User is able to Navigate to Signup Page from Login Window in Promotions when clicked on Favourite",
					"Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC92-Tanzania_SignUp",
					"User Should be able to Navigate to Signup Page from Login Window in Promotions when clicked on Favourite ",
					"User Not able to Navigate to Signup Page from Login Window in Promotions when clicked on Favourite",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//SYNAPSE SIGNUP Tanzania//

// TC-1 (Tanzania_SignUp) AS66528 //
// Check if the "Sign Up" Button is visible on the homepage.//
	public Boolean TZ_SignupButtonVisibleHomepage(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			System.out.print("Signup Button is Visible on homepage");
			report.detailsAppend("TC-1 Tanzania_SignUp", "Signup Button in Home page Should be Visible",
					"Signup Button in Home page is Visible", "Pass");
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();

		} catch (Exception e) {
			report.detailsAppend("TC-1 Tanzania_SignUp", "Signup Button in Home page Should be Visible",
					"Signup Button in Home page is Visible", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

// TC-3 (Tanzania_SignUp) AS66528 //
// Check if the sign-up form is visible when the "Sign Up" button is clicked.//
	public Boolean TZ_SignupFormVisibility(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			Thread.sleep(2000);
			System.out.print(" SignupButton Clicked ");
			report.detailsAppend("TC3-Tanzania_SignUp", "Signup Form Should be Visible", "Signup Form  is Visible",
					"Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC3-Tanzania_SignUp", "Signup Form Should be Visible", "Signup Form  is Visible",
					"Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-4 (Tanzania_SignUp) AS66528 //
// Check if the required sign-up fields (e.g., mobile number, password) are
// visible on the sign-up form.
	public Boolean TZ_SignupFieldsVisibleOnForm(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			Thread.sleep(2000);
			System.out.print(" SignupButton Clicked ");
			report.detailsAppend("TC4-Tanzania_SignUp", "Check if required fields on Signup Form Should be Visible",
					"Checked the required fields on Signup Form Should be Visible", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC4-Tanzania_SignUp", "Check if required fields on Signup Form Should be Visible",
					"Checked the required fields on Signup Form Should be Visible", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-5 (Tanzania_SignUp) AS66528 //
// Check if the "Register" button is visible on the sign-up form.
	public Boolean TZ_RegisterButtonVisibleOnSignup(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			Thread.sleep(2000);
			System.out.print(" SignupButton Clicked ");
			webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).isDisplayed();
			Thread.sleep(2000);
			report.detailsAppend("TC5-Tanzania_SignUp", "Check if required fields on Signup Form Should be Visible",
					"Checked the required fields on Signup Form Should be Visible", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC5-Tanzania_SignUp", "Check if required fields on Signup Form Should be Visible",
					"Checked the required fields on Signup Form Should be Visible", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-6 (Tanzania_SignUp) AS66528 //
// Check if the user is able to Register.
	public Boolean TZ_RegisterButtonClickOnSignupForm(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			Thread.sleep(2000);

			long min = 807060501; // Minimum 9-digit number
			long max = 999999999; // Maximum 9-digit number
// Create an instance of Random class
			Random random = new Random();
// Generate random number within the specified range
			long randomNumber = random.nextLong() % (max - min + 1) + min;
// Ensure the generated number is positive
			randomNumber = Math.abs(randomNumber);
			String randomString = Long.toString(randomNumber);
			System.out.println(randomString);

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).sendKeys(randomString);
			System.out.print("MobileNumber is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).sendKeys(xpathMap.get("TZPW"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
			System.out.print("AllCheckbox is Clicked");
			Thread.sleep(2000);

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("TZAllreadyHaveAccount")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseRegisterButton"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseRegisterButton"))).click();
			System.out.print("Register Button is Successfull Clicked");
			Thread.sleep(4000);

			report.detailsAppend("TC6-Tanzania_SignUp", "Check if the user is able to Register.",
					"user abled to Register.", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
			Thread.sleep(2000);
			TZ_Logout();

		} catch (Exception e) {
			report.detailsAppend("TC6-Tanzania_SignUp", "Check if the user is able to Register.",
					"user not able to Register.", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-7 (Tanzania_SignUp) AS66528 //
// To check if the system accepts a valid Ghanaian mobile number.
	public Boolean TZ_ValidTanzaniaMobileNo(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			Thread.sleep(2000);

			long min = 807060501; // Minimum 9-digit number
			long max = 999999999; // Maximum 9-digit number
// Create an instance of Random class
			Random random = new Random();
// Generate random number within the specified range
			long randomNumber = random.nextLong() % (max - min + 1) + min;
// Ensure the generated number is positive
			randomNumber = Math.abs(randomNumber);
			String randomString = Long.toString(randomNumber);
			System.out.println(randomString);

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).sendKeys(randomString);
			System.out.print("MobileNumber is Entered");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC7-Tanzania_SignUp", "Check if system accepts a valid Tanzania mobile number.",
					"Checked if system accepts a valid Tanzania mobile number.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC7-Tanzania_SignUp", "Check if system accepts a valid Tanzania mobile number.",
					"Checked if system accepts a valid Tanzania mobile number.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-8 (Tanzania_SignUp) AS66528 //
// To check user click on "Sign Up" button mobile number field should be display
// with country code +233
	public Boolean TZ_MobileNumberDisplycountrycode(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			Thread.sleep(2000);
			System.out.print(" SignupButton Clicked ");
			report.detailsAppend("TC8-Tanzania_SignUp",
					"check user click on \"Sign Up\" button mobile number field should be display with country code +255",
					"user click on \"Sign Up\" button mobile number field should be display with country code +255",
					"Pass");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC8-Tanzania_SignUp",
					"check user click on \"Sign Up\" button mobile number field should be display with country code +255",
					"user click on \"Sign Up\" button mobile number field should be display with country code +255",
					"Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-9 (Tanzania_SignUp) AS66528 //
// To check if the system accepts a valid mobile number with leading zeros.
	public Boolean TZ_ValidMobileNoWithleadingZeros(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).sendKeys("0815117704");
			System.out.print("MobileNumber is Entered");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC9-Tanzania_SignUp",
					"Check if system accepts a valid mobile number with leading zeros.",
					"Checked if system accepts a valid mobile number with leading zeros.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC9-Tanzania_SignUp",
					"Check if system accepts a valid mobile number with leading zeros.",
					"Checked if system accepts a valid mobile number with leading zeros.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-11 (Tanzania_SignUp) AS66528 //
// To check if the system rejects a mobile number that is too short.
	public Boolean TZ_SystemrejectsMobileNo_tooShort(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).sendKeys(xpathMap.get("MobileNoShort"));
			System.out.print("MobileNumber is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC11-Tanzania_SignUp", "Check if system rejects a mobile number that is too short..",
					"Checked if system rejects a mobile number that is too short.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC11-Tanzania_SignUp", "Check if system rejects a mobile number that is too short..",
					"Checked if system rejects a mobile number that is too short.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-12 (Tanzania_SignUp) AS66528 //
// To check if the system rejects a mobile number that is too Long.
	public Boolean TZ_SystemrejectsMobileNo_tooLong(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo"))).sendKeys(xpathMap.get("MobileNoLong"));
			System.out.print("MobileNumber is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC12-Tanzania_SignUp", "Check if system rejects a mobile number that is too Long..",
					"Checked if system rejects a mobile number that is too Long.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC12-Tanzania_SignUp", "Check if system rejects a mobile number that is too Long..",
					"Checked if system rejects a mobile number that is too Long.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-16 (Tanzania_SignUp) AS66528 //
// To check if the system rejects a mobile number with alphabetic characters.
	public Boolean TZ_SystemrejectsMobileNo_AlphabeticChar(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo")))
					.sendKeys(xpathMap.get("MobileNoAlphabeticChar"));
			System.out.print("MobileNumber is Entered");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC16-Tanzania_SignUp",
					"Check if system rejects a mobile number with alphabetic characters..",
					"Checked if system rejects a mobile number with alphabetic characters.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC16-Tanzania_SignUp",
					"Check if system rejects a mobile number with alphabetic characters..",
					"Checked if system rejects a mobile number with alphabetic characters.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-17 (Tanzania_SignUp) AS66528 //
// To check if the system rejects a mobile number with special characters.
	public Boolean TZ_SystemrejectsMobileNo_specialChar(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo")))
					.sendKeys(xpathMap.get("MobileNoSpecialChar"));
			System.out.print("MobileNumber is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC17-Tanzania_SignUp",
					"Check if system rejects a mobile number with special characters..",
					"Checked if system rejects a mobile number with special characters.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC17-Tanzania_SignUp",
					"Check if system rejects a mobile number with special characters..",
					"Checked if system rejects a mobile number with special characters.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-20 (Tanzania_SignUp) AS66528 //
// To check if the system rejects a mobile number with consecutive spaces.
	public Boolean TZ_SystemrejectsMobileNo_Spaces(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo")))
					.sendKeys(xpathMap.get("MobileNoSpecialChar"));
			System.out.print("MobileNumber is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC20-Tanzania_SignUp",
					"Check if system rejects a mobile number with consecutive spaces..",
					"Checked if system rejects a mobile number with consecutive spaces.", "Pass");

			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC20-Tanzania_SignUp",
					"Check if system rejects a mobile number with consecutive spaces..",
					"Checked if system rejects a mobile number with consecutive spaces.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-21 (Tanzania_SignUp) AS66528 //
// Check if the system accepts a strong password.
	public Boolean TZ_Systemaccept_StrongPassword(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).sendKeys(xpathMap.get("PasswordValidData"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordEyeIcon"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC21-Tanzania_SignUp", "Check if system accepts a strong password.",
					"Checked if system accepts a strong password.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC21-Tanzania_SignUp", "Check if system accepts a strong password.",
					"Checked if system accepts a strong password.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-22 (Tanzania_SignUp) AS66528 //
// Check if the system accepts with combination of uppercase and lowercase
// letters.
	public Boolean TZ_Systemaccept_UpperLowerCasePassword(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).sendKeys(xpathMap.get("PasswordCasedata"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordEyeIcon"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC22-Tanzania_SignUp",
					"Check if system accepts with combination of uppercase and lowercase letters.",
					"Checked if system accepts with combination of uppercase and lowercase letters.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC22-Tanzania_SignUp",
					"Check if system accepts with combination of uppercase and lowercase letters.",
					"Checked if system accepts with combination of uppercase and lowercase letters.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-23 (Tanzania_SignUp) AS66528 //
// Check if the system accepts a password with numeric characters
	public Boolean TZ_Systemaccept_PasswordwithNumeric(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).sendKeys(xpathMap.get("PasswordValidData"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordEyeIcon"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC23-Tanzania_SignUp", "Check if system accepts password with numeric characters",
					"Checked if system accepts password with numeric characters", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC23-Tanzania_SignUp", "Check if system accepts password with numeric characters",
					"Checked if system accepts password with numeric characters", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-24 (Tanzania_SignUp) AS66528 //
// Check if the system accepts a password with special characters
	public Boolean TZ_Systemaccept_PasswordwithSpecialChar(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).sendKeys(xpathMap.get("PasswordSpecialChar"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordEyeIcon"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC24-Tanzania_SignUp", "Check if system accepts password with special characters",
					"Checked if system accepts password with special characters", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC24-Tanzania_SignUp", "Check if system accepts password with special characters",
					"Checked if system accepts password with special characters", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-25 (Tanzania_SignUp) AS66528 //
// Check if the system accepts a password with minimum required length.
	public Boolean TZ_Systemaccept_PasswordwithMinLength(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).sendKeys(xpathMap.get("PasswordMinlength"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordEyeIcon"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC25-Tanzania_SignUp",
					"Check if system accepts password with minimum required length.",
					"Checked if system accepts password with minimum required length.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC25-Tanzania_SignUp",
					"Check if system accepts password with minimum required length.",
					"Checked if system accepts password with minimum required length.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-26 (Tanzania_SignUp) AS66528 //
// Check if the system accepts a password with maximum required length.
	public Boolean TZ_Systemaccept_PasswordwithMaxLength(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).sendKeys(xpathMap.get("PasswordMaxlength"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordEyeIcon"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC26-Tanzania_SignUp",
					"Check if system accepts password with maximum required length.",
					"Checked if system accepts password with maximum required length.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC26-Tanzania_SignUp",
					"Check if system accepts password with maximum required length.",
					"Checked if system accepts password with maximum required length.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-27 (Tanzania_SignUp) AS66528 //
// Check if the system accepts a password with all allowed characters, including
// uppercase letters, lowercase letters, numbers, and special characters.
	public Boolean TZ_Systemaccept_PasswordwithAllAllowedChar(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).sendKeys(xpathMap.get("PaswordAllChar"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordEyeIcon"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC27-Tanzania_SignUp",
					"Check if system accepts password with all allowed characters, including uppercase letters, lowercase letters, numbers, and special characters.",
					"Checked if system accepts password with all allowed characters, including uppercase letters, lowercase letters, numbers, and special characters.",
					"Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC27-Tanzania_SignUp",
					"Check if system accepts password with all allowed characters, including uppercase letters, lowercase letters, numbers, and special characters.",
					"Checked if system accepts password with all allowed characters, including uppercase letters, lowercase letters, numbers, and special characters.",
					"Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-28 (Tanzania_SignUp) AS66528 //
// Check if the system accepts a password with containing spaces.
	public Boolean TZ_Systemaccept_PasswordwithContainsSpaces(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).sendKeys(xpathMap.get("PasswordwithSpace"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordEyeIcon"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC28-Tanzania_SignUp", "Check if system accepts password with containing spaces.",
					"Checked if system accepts password with containing spaces.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC28-Tanzania_SignUp", "Check if system accepts password with containing spaces.",
					"Checked if system accepts password with containing spaces.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-30 (Tanzania_SignUp) AS66528 //
// Check if the system rejects a weak password.
	public Boolean TZ_Systemrejects_weakpassword(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).sendKeys(xpathMap.get("PasswordMinlength"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordEyeIcon"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC30-Tanzania_SignUp", "Check if system rejects a weak password.",
					"Checked if system rejects a weak password.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC30-Tanzania_SignUp", "Check if system rejects a weak password.",
					"Checked if system rejects a weak password.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-31(Tanzania_SignUp) AS66528 //
// Check if the system rejects a blank password.
	public Boolean TZ_Systemrejects_blankpassword(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).sendKeys(xpathMap.get("BlankPassword"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordEyeIcon"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC31-Tanzania_SignUp", "Check if system rejects a blank password.",
					"Checked if system rejects a blank password.", "Pass");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC31-Tanzania_SignUp", "Check if system rejects a blank password.",
					"Checked if system rejects a blank password.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-32(Tanzania_SignUp) AS66528 //
// Check if the system rejects exceeding the maximum allowed length.
	public Boolean TZ_Systemrejects_PasswordMaxLength(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password")))
					.sendKeys(xpathMap.get("PasswordExceedMaxlength"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordEyeIcon"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC32-Tanzania_SignUp",
					"Check if system rejects exceeding the maximum allowed length.",
					"Checked if system rejects exceeding the maximum allowed length.", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC32-Tanzania_SignUp",
					"Check if system rejects exceeding the maximum allowed length.",
					"Checked if system rejects exceeding the maximum allowed length.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-33(Tanzania_SignUp) AS66528 //
// Verify Password succeeding Minimum Length
	public Boolean TZ_Systemaccept_PasswordMinLength(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).sendKeys(xpathMap.get("PasswordMinlength"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("PasswordEyeIcon"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC33-Tanzania_SignUp", "Verify Password succeeding Minimum Length",
					"Verify Password succeeding Minimum Length", "Pass");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC33-Tanzania_SignUp", "Verify Password succeeding Minimum Length",
					"Verify Password succeeding Minimum Length", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-30(Tanzania_SignUp) AS66528 //
// Check if the system rejects a blank first name.
	public Boolean TZ_Systemrejects_FirstNameBlank(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			System.out.print(" SignupButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFirstName"))).sendKeys(xpathMap.get("FirstNameBlank"));
			System.out.print("FirstName is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Password"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC30-Tanzania_SignUp", "Check if the system rejects a blank first name.",
					"Checked the system rejects a blank first name.", "Pass");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC30-Tanzania_SignUp", "Check if the system rejects a blank first name.",
					"Checked the system rejects a blank first name.", "Fail");
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

// TC-36(Tanzania_SignUp) AS66528//
// Check if the sign-up form is visible when the "Sign Up" button is clicked.
	public Boolean TZ_SignupFormHamburgerSynapse(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("Synapse Hamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC36-Tanzania_SignUp",
					"User Should be able to see Signup Form when clicked on Signup on Hamburger Menu",
					"User is able to see Signup Form when clicked on Signup on Hamburger Menu", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC36-Tanzania_SignUp",
					"User Should be able to see Signup Form when clicked on Signup on Hamburger Menu",
					"User is able to see Signup Form when clicked on Signup on Hamburger Menu", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-37(Tanzania_SignUp) AS66528//
// Check if the required sign-up fields (e.g., mobile number, password) are
// visible on the sign-up form.
	public Boolean TZ_CheckSignupFieldsOnSignupForm(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("Synapse Hamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC37-Tanzania_SignUp",
					"User Should be able to see required sign-up fields(e.g., mobile number, password) visible on sign-up form",
					"User is able to see required sign-up fields(e.g., mobile number, password) visible on sign-up form",
					"Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC37-Tanzania_SignUp",
					"User Should be able to see required sign-up fields(e.g., mobile number, password) visible on sign-up form",
					"User not able to see required sign-up fields(e.g., mobile number, password) visible on sign-up form",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-45(Tanzania_SignUp) AS66528//
// Check if the system allows the user to check the "Agree to All" checkbox.
	public Boolean TZ_SignupAgreeToAllSynapse(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("Synapse Hamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			try {

				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC45-Tanzania_SignUp", "User Should be able to select Agree All CheckBox",
					"User is able to select Agree All CheckBox", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC45-Tanzania_SignUp", "User Should be able to select Agree All CheckBox",
					"User is able to select Agree All CheckBox", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-46(Tanzania_SignUp) AS66528//
// Check if the system allows the user to uncheck the "Agree to All" checkbox
// after checking.
	public Boolean TZ_SignupAgreeToAllUncheckSynapse(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("Synapse Hamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			try {

				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC46-Tanzania_SignUp", "User Should be able to Deselect Agree All CheckBox",
					"User is able to Deselect Agree All CheckBox", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC46-Tanzania_SignUp", "User Should be able to Deselect Agree All CheckBox",
					"User is able to Deselect Agree All CheckBox", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-47(Tanzania_SignUp) AS66528//
// Check if the system prevents the user from proceeding without checking the
// "Agree to All" checkbox.
	public Boolean TZ_SignupAgreeToAllProceedSynapse(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("Synapse Hamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			try {

				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC47-Tanzania_SignUp",
					"User Should not be able to proceed if Deselect Agree All CheckBox",
					"User is not be able to proceed if Deselect Agree All CheckBox", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC47-Tanzania_SignUp",
					"User Should not be able to proceed if Deselect Agree All CheckBox",
					"User is not be able to proceed if Deselect Agree All CheckBox", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-48(Tanzania_SignUp) AS66528//
// Check if unchecking the "Agree to All" checkbox disables other related
// checkboxes or options.
	public Boolean TZ_SignupAgreeToAllDisableSynapse(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("Synapse Hamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			try {

				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC48-Tanzania_SignUp",
					"User Should be able to see related checkboxes disables if Deselect Agree All CheckBox",
					"User is  able to see related checkboxes disables if Deselect Agree All CheckBox", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC48-Tanzania_SignUp",
					"User Should be able to see related checkboxes disables if Deselect Agree All CheckBox",
					"User is  able to see related checkboxes disables if Deselect Agree All CheckBox", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-49(Tanzania_SignUp) AS66528//
// Check we are getting 3 check boxes
	public Boolean TZ_SignupAgreeToAllCheckBoxDisableSynapse(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("Synapse Hamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			try {

				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC49-Tanzania_SignUp",
					"User Should be able to see 3 checkboxes disables if Deselect Agree All CheckBox",
					"User is  able to see 3 checkboxes disables if Deselect Agree All CheckBox", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC49-Tanzania_SignUp",
					"User Should be able to see 3 checkboxes disables if Deselect Agree All CheckBox",
					"User is  able to see 3 checkboxes disables if Deselect Agree All CheckBox", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-50(Tanzania_SignUp) AS66528//
// Check if we are clicking on agree to all it should select the two checkboxes
// and all three checkboxes must be green in colour
	public Boolean TZ_SignupAgreeToAllCheckBoxGreenSynapse(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("Synapse Hamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			try {

				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC50-Tanzania_SignUp", "User Should be able to see all checkboxes in Green",
					"User is able to see all checkboxes in Green", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC50-Tanzania_SignUp", "User Should be able to see all checkboxes in Green",
					"User is able to see all checkboxes in Green", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-51(Tanzania_SignUp) AS66528//
// check if we are clicking on the "sign me up to receive free bets, exclusive
// promos & more" check box it should show an error message to check " I am over
// 18 years of age & I accept Betway's Terms & Conditions & Privacy Policy.
	public Boolean TZ_SignupErrorOnTermsConditionsSynapse(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("Synapse Hamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			try {

				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}

			report.detailsAppend("TC51-Tanzania_SignUp",
					"User Should be able to see error message under Terms and Conditions",
					"User is able to see error message under Terms and Conditions", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC51-Tanzania_SignUp",
					"User Should be able to see error message under Terms and Conditions",
					"User is able to see error message under Terms and Conditions", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-52(Tanzania_SignUp) AS66528//
// Verify if we are clicking on the " I am over 18 years of age & I accept
// Betway's Terms & Conditions & Privacy Policy." check box without checking the
// signup checkbox it shouldn't show an error and allow user to register
	public Boolean TZ_SignupNoErrorOnTermsConditionsSynapse(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("Synapse Hamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			try {

				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(xpathMap.get("AgreeAllCheckBox"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			webdriver.findElement(By.xpath(xpathMap.get("ConfirmAge"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC52-Tanzania_SignUp",
					"User Should not be able to see error message under Terms and Conditions after selecting Terms and Conditions",
					"User is not able to see error message under Terms and Conditions after selecting Terms and Conditions",
					"Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC52-Tanzania_SignUp",
					"User Should not be able to see error message under Terms and Conditions after selecting Terms and Conditions",
					"User is not able to see error message under Terms and Conditions after selecting Terms and Conditions",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-53(Tanzania_SignUp) AS66528//
// Check if there is a visible "Sign Up" button on the Hamburger Menu.
	public Boolean TZ_SignupVisibleOnHamburgerLoginSynapse(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("Synapse Hamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).isDisplayed());
			System.out.println("LoginOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).click();
			Thread.sleep(2000);
			try {

				webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC-T53anzania_SignUp",
					"User Should be able to Navigate to Signup Page from Hamburger Login ",
					"User is able to Navigate to Signup Page from Hamburger Login", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC53-Tanzania_SignUp",
					"User Should be able to Navigate to Signup Page from Hamburger Login ",
					"User is able to Navigate to Signup Page from Hamburger Login", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-67(Tanzania_SignUp) AS66528//
// Check if the SignUp Form is visible,When Signup is Clicked
	public Boolean TZ_SignupFormVisibleOnAviator(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).isDisplayed());
			System.out.println("TZ_Aviator is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Aviator"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).isDisplayed());
			System.out.println("SignupInLogin is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC67-Tanzania_SignUp",
					"User Should be able to Check if the SignUp Form is visible in Aviator",
					"User is able to Check if the SignUp Form is visible in Aviator", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC67-Tanzania_SignUp",
					"User Should be able to able to Check if the SignUp Form is visible in Aviator",
					"User not able to able to Check if the SignUp Form is visible in Aviator", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-75(Tanzania_SignUp) AS66528//
// Check if the "Sign Up" Button is visible on the login Modal popup window
	public Boolean TZ_SignupCasinoSynapse(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Casino"))).isDisplayed());
			System.out.println("TZ_Casino is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Casino"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			System.out.println("SynapseFavourite is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC75-Tanzania_SignUp",
					"User Should be able to see Signup in Login Window in Casino when clicked on Favourite",
					"User is able to Navigate to see Signup in Login Window in Casino when clicked on Favourite",
					"Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC75-Tanzania_SignUp",
					"User Should be able to Navigate to see Signup in Login Window in Casino when clicked on Favourite ",
					"User is able to Navigate to see Signup in Login Window in Casino when clicked on Favourite",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-76 (Tanzania_SignUp) AS66528//
// check user is able to see the "Login" popup from signup popup when clicked
// "Hearticon" game banner on "casino" page
	public boolean TZ_loginPopupFromSignupInCasino(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Casino"))).isDisplayed());
			System.out.println("Casino is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Casino"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			System.out.println("SynapseFavourite is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			System.out.println("SignupInLogin is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup"))).click();
			System.out.println("Login button in SignupForm is Clicked\n");
			Thread.sleep(2000);

			report.detailsAppend("TC76-Tanzania_SignUp",
					"check user is able to see the \"Login\" popup from signup popup when clicked \"Hearticon\" game banner on \"casino\" page",
					"check user is able to see the \"Login\" popup from signup popup when clicked \"Hearticon\" game banner on \"casino\" page",
					"Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC76-Tanzania_SignUp",
					"check user is able to see the \"Login\" popup from signup popup when clicked \"Hearticon\" game banner on \"casino\" page",
					"check user is able to see the \"Login\" popup from signup popup when clicked \"Hearticon\" game banner on \"casino\" page",
					"Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-40(Tanzania_SignUp) AS66528//
// Check if the system accepts a valid sign-up code.
	public Boolean TZ_SignupSignupCodeSynapse(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VoucherCodeDD"))).isDisplayed());
			System.out.println("VoucherCodeDD is Present\n");
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VoucherCodeDD"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseVoucherCode"))).sendKeys("QWERT");
			Thread.sleep(2000);

			report.detailsAppend("TC40-Tanzania_SignUp", "User Should be able to see Valid Signup code accepted",
					"User is able to see Valid Signup code accepted", "Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC40-Tanzania_SignUp", "User Should be able to see Valid Signup code accepted",
					"User is able to see Valid Signup code accepted", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-41(Tanzania_SignUp) AS66528//
// Check if the system accepts a sign-up code in a case-insensitive manner
	public Boolean TZ_SignupSignupCodeCaseSynapse(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VoucherCodeDD"))).isDisplayed());
			System.out.println("VoucherCodeDD is Present\n");
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VoucherCodeDD"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseVoucherCode"))).sendKeys("QwertgD");
			Thread.sleep(2000);

			report.detailsAppend("TC41-Tanzania_SignUp",
					"User Should be able to see Valid Signup code with Case insensitive characters accepted",
					"User is able to see Valid Signup code with Case insensitive characters accepted", "Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC41-Tanzania_SignUp",
					"User Should be able to see Valid Signup code with Case insensitive characters accepted",
					"User is able to see Valid Signup code with Case insensitive characters accepted", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-42(Tanzania_SignUp) AS66528//
// Check if the system accepts a sign-up code containing numeric characters.
	public Boolean TZ_SignupSignupCodeNumbersSynapse(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VoucherCodeDD"))).isDisplayed());
			System.out.println("VoucherCodeDD is Present\n");
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VoucherCodeDD"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseVoucherCode"))).sendKeys("1234567");
			Thread.sleep(2000);

			report.detailsAppend("TC42-Tanzania_SignUp",
					"User Should be able to see Valid Signup code with numeric characters accepted",
					"User is able to see Valid Signup code with numeric characters accepted", "Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC42-Tanzania_SignUp",
					"User Should be able to see Valid Signup code with Case insensitive characters accepted",
					"User is able to see Valid Signup code with Case insensitive characters accepted", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-43(Tanzania_SignUp) AS66528//
// Check if the system accepts a sign-up code containing special characters.
	public Boolean TZ_SignupSignupCodeSpecialSynapse(Mobile_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).isDisplayed());
			System.out.println("SynapseSports is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.println("SynapseHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).isDisplayed());
			System.out.println("SignupOnHamburger is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupOnHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("VoucherCodeDD"))).isDisplayed());
			System.out.println("VoucherCodeDD is Present\n");
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("VoucherCodeDD"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseVoucherCode"))).sendKeys("@#$%Yu");
			Thread.sleep(2000);

			report.detailsAppend("TC43-Tanzania_SignUp",
					"User Should be able to see Valid Signup code with Special characters accepted",
					"User is able to see Valid Signup code with Special characters accepted", "Pass");
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC43-Tanzania_SignUp",
					"User Should be able to see Valid Signup code with Special characters accepted",
					"User is able to see Valid Signup code with Special characters accepted", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

// TC-35(Tanzania_SignUp) AS66528 //
// Check if there is a visible "Sign Up" button on the Hamburger Menu.
	public Boolean TZ_SignupVisibleOnHamburgerMenu(Mobile_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HamburgerSigUp"))).isDisplayed());
			System.out.print("SynapseHamburger is clicked");
			webdriver.findElement(By.xpath(xpathMap.get("HamburgerSigUp"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC35-SynapseSign",
					"Check if there is a visible \"Sign Up\" button on the Hamburger Menu.", "SignUp Button is visible",
					"Pass");
		} catch (Exception e) {

			report.detailsAppend("TC35-SynapseSign",
					"Check if there is a visible \"Sign Up\" button on the Hamburger Menu.", "SignUp Button is visible",
					"Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}
//////////////////////////////////////////////////TANZANIA LOGIN///////////////////////////////////////////////
///////////////////////// PARTIK LOGIN REGRESSION SYNAPSE UAT TANZANIA  /////////

//public void BetslipsLogout() throws Exception {
//
//webdriver.findElement(By.xpath(xpathMap.get("ProfileOpen"))).click();
//Thread.sleep(2000);
//Assert.assertTrue(webdriver.findElement(By.cssSelector(xpathMap.get("LogoutinProfile31TZ"))).isDisplayed());
//System.out.print("ProfileOpen is Clicked");
//
//webdriver.findElement(By.cssSelector(xpathMap.get("LogoutinProfile31TZ"))).click();
//Thread.sleep(2000);
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("ProceedButtonTZ"))).isDisplayed());
//System.out.print("LogoutinProfile is Clicked");
//
//webdriver.findElement(By.xpath(xpathMap.get("ProceedButtonTZ"))).click();
//Thread.sleep(2000);
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSportButtonTZ"))).isDisplayed());
//System.out.print("ProceedButton is Clicked");
//}

//TC-01(TZ_Login) PJ65867
//To check  presence and functionality "Login" button functionality on base screen.

	public boolean TZLoginWindow(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).click();
			Thread.sleep(2000);
			System.out.println("Login is clicked\n");

			report.detailsAppend("TC01-TZ Login",
					"To check  presence and functionality \"Login\" button functionality on base screen.",
					"Presence and functionality \"Login\" button functionality on base screen.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC01-TZ Login",
					"To check  presence and functionality \"Login\" button functionality on base screen.",
					"Presence and functionality \"Login\" button functionality on base screen.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-02(TZ_Login) PJ65867
//To check "Login" button functionality without entering user name and password..

	public boolean TZLoginWindowWithoutCred(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).click();
			Thread.sleep(2000);
			System.out.println("Login is clicked\n");

			report.detailsAppend("TC02-TZ Login",
					"To check \"Login\" button functionality without entering user name and password.",
					"Login button functionality without entering user name and password.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC02-TZ Login",
					"To check \"Login\" button functionality without entering user name and password.",
					"Login button functionality without entering user name and password.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-03(TZ_Login) PJ65867
//To check "Login" button functionality without entering user name and password..

	public boolean TZLoginWindowWithCred(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNo1TZ"))).sendKeys(xpathMap.get("SynapsePhnoTZ"));
			Thread.sleep(2000);
			System.out.println("Mobile No is enterd\n");

			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword1TZ"))).sendKeys(xpathMap.get("SynapsePwdTZ"));
			Thread.sleep(2000);
			System.out.println("Password is entered\n");

			webdriver.findElement(By.xpath(xpathMap.get("SynapseLogin"))).click();
			Thread.sleep(2000);
			System.out.println("Login is clicked\n");

			report.detailsAppend("TC03-TZ Login",
					"To check \"Login\" button functionality by entering valid user name and password.",
					"Login button functionality by entering valid user name and password.", "Pass");

			BetslipsLogout();

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC03-TZ Login",
					"To check \"Login\" button functionality by entering valid user name and password.",
					"Login button functionality by entering valid user name and password.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-04(TZ_Login) PJ65867
//To check user is able to see the "Login" button in Hamburger menu.

	public boolean TZLoginWindowHamburgerMenu(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("HamburgerMenuButton"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburgerTZ"))).isDisplayed());
			System.out.println("Hamburger Menu is clicked");

			report.detailsAppend("TC04-TZ Login",
					"To check user is able to see the \"Login\" button in Hamburger menu.",
					"User is able to see the \"Login\" button in Hamburger menu.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC04-TZ Login",
					"To check user is able to see the \"Login\" button in Hamburger menu.",
					"User is able to see the \"Login\" button in Hamburger menu.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-05(TZ_Login) PJ65867
//To check user is able to Click the "Login" button in Hamburger menu.

	public boolean TZLoginWindowHamburgerMenuClicked(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("HamburgerMenuButton"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburgerTZ"))).isDisplayed());
			System.out.println("Hamburger Menu is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburgerTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MobileNoFieldAfterLoginTZ"))).isDisplayed());
			System.out.println("Login Button is clicked");

			report.detailsAppend("TC05-TZ Login",
					"To check user is able to Click the \"Login\" button in Hamburger menu.",
					"User is able to Click the \"Login\" button in Hamburger menu.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC05-TZ Login",
					"To check user is able to Click the \"Login\" button in Hamburger menu.",
					"User is able to Click the \"Login\" button in Hamburger menu.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-06(TZ_Login) PJ65867
//To check user is able to see the "Login" button  on signup popup window.
	public boolean TZSignupLogin(Mobile_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(xpathMap.get("HamburgerMenuButton"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).isDisplayed());
			System.out.print("SynapseSignup Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSignup"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			System.out.print(" LoginButton Clicked ");
			report.detailsAppend("TC06-TZ Login",
					"To check user is able to see the \"Login\" button  on signup popup window.",
					"User is able to see the \"Login\" button  on signup popup window.", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC06-TZ Login",
					"To check user is able to see the \"Login\" button  on signup popup window.",
					"User is able to see the \"Login\" button  on signup popup window.", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-07(TZ_Login) PJ65867
//To check contents of "Login" pop up window.

	public boolean TZLoginWindowContent(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("HamburgerMenuButton"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburgerTZ"))).isDisplayed());
			System.out.println("Hamburger Menu is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburgerTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("MobileNoFieldAfterLoginTZ"))).isDisplayed());
			System.out.println("Login Button is clicked");

			report.detailsAppend("TC07-TZ Login", "To check contents of \"Login\" pop up window.",
					"Contents of \"Login\" pop up window.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC07-TZ Login", "To check contents of \"Login\" pop up window.",
					"Contents of \"Login\" pop up window.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC08 (Login) PD69988//
//To check user is not able to Login  if mobile number field is empty.
	public boolean SynapseLoginFromHamburgerWithEmptyMB(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print("SynapseHamburger is Present");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).isDisplayed());
			System.out.print("LoginOnHamburger is Present");
			webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber2")))
					.sendKeys(xpathMap.get("SynPhoneNoTZ"));
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword2"))).sendKeys(xpathMap.get("SynPsdTZ"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).isDisplayed());
			System.out.print("SynapseLoginInLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC08-TZ Login",
					"To check user is not able to Login  if mobile number field is empty.",
					"User is not able to Login  if mobile number field is empty.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC08-TZ Login",
					"To check user is not able to Login  if mobile number field is empty.",
					"User is not able to Login  if mobile number field is empty.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

//TC09 (Login) PD69988//
//To check user is not able to Login  if mobile number field has less than numeric  9 characters..
	public boolean SynapseLoginFromHamburgerLessThanNineDigit(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print("SynapseHamburger is Present");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).isDisplayed());
			System.out.print("LoginOnHamburger is Present");
			webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber2")))
					.sendKeys(xpathMap.get("SynapseMobileNoNineDigTZ"));
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword2"))).sendKeys(xpathMap.get("SynPsdTZ"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).isDisplayed());
			System.out.print("SynapseLoginInLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC09-TZ Login",
					"To check user is not able to Login  if mobile number field has less than numeric  9 characters.",
					"User is not able to Login  if mobile number field has less than numeric  9 characters.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC09-TZ Login",
					"To check user is not able to Login  if mobile number field has less than numeric  9 characters.",
					"User is not able to Login  if mobile number field has less than numeric  9 characters.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

//TC10 (Login) PD69988//
//To check user is not able to Login  if mobile number field has more than numeric  9 characters
	public boolean SynapseLoginFromHamburgerMoreThanNineDigit(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print("SynapseHamburger is Present");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).isDisplayed());
			System.out.print("LoginOnHamburger is Present");
			webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber2")))
					.sendKeys(xpathMap.get("SynapseMobileNoMoreThanNineDigTZ"));
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword2"))).sendKeys(xpathMap.get("SynPsdTZ"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).isDisplayed());
			System.out.print("SynapseLoginInLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC10-TZ Login",
					"To check user is not able to Login  if mobile number field has More than numeric  9 characters.",
					"User is not able to Login  if mobile number field has More than numeric  9 characters.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC10-TZ Login",
					"To check user is not able to Login  if mobile number field has More than numeric  9 characters.",
					"User is not able to Login  if mobile number field has More than numeric  9 characters.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

//TC11 (Login) PD69988//
//To check user is not able to Login  if mobile number field has alphanumeric characters.
	public boolean SynapseLoginFromHamburgerAlphaNumeric(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print("SynapseHamburger is Present");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).isDisplayed());
			System.out.print("LoginOnHamburger is Present");
			webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber2")))
					.sendKeys(xpathMap.get("SynapseMobileNoAlphaNumTZ"));
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword2"))).sendKeys(xpathMap.get("SynPsdTZ"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).isDisplayed());
			System.out.print("SynapseLoginInLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC11-TZ Login",
					"To check user is not able to Login  if mobile number field has alphanumeric characters.",
					"User is not able to Login  if mobile number field has alphanumeric characters.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC11-TZ Login",
					"To check user is not able to Login  if mobile number field has alphanumeric characters.",
					"User is not able to Login  if mobile number field has alphanumeric characters.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

//TC12 (Login) PD69988//
//To check user is not able to Login  if mobile number field has Special characters.
	public boolean SynapseLoginFromHamburgerSpecChar(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print("SynapseHamburger is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).isDisplayed());
			System.out.print("LoginOnHamburger is Present");
			webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber2")))
					.sendKeys(xpathMap.get("SynapseMobileNoSpeCharTZ"));
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword2"))).sendKeys(xpathMap.get("SynPsdTZ"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).isDisplayed());
			System.out.print("SynapseLoginInLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC12-TZ Login",
					"To check user is not able to Login  if mobile number field has Special characters.",
					"User is not able to Login  if mobile number field has Special characters.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC12-TZ Login",
					"To check user is not able to Login  if mobile number field has Special characters.",
					"User is not able to Login  if mobile number field has Special characters.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

//TC13 (Login) PJ65867//
//To check user is not able to Login if Password field is empty.
	public boolean SynapseLoginFromHamburgerWithEmptyPsd(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print("SynapseHamburger is Present");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).isDisplayed());
			System.out.print("LoginOnHamburger is Present");
			webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber2")))
					.sendKeys(xpathMap.get("SynapsePhnoTZ"));
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword2"))).sendKeys(xpathMap.get("SynPsdEmptyTZ"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).isDisplayed());
			System.out.print("SynapseLoginInLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC13-TZ Login", "To check user is not able to Login  if Password field is empty.",
					"User is not able to Login  if Password field is empty.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC13-TZ Login", "To check user is not able to Login  if Password field is empty.",
					"User is not able to Login  if Password field is empty.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

//TC14 (Login) PJ65867//
//To check user is not able to Login  if Psd field is contain less than five char
	public boolean SynapseLoginFromHamburgerLessThanFiveChar(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print("SynapseHamburger is Present");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).isDisplayed());
			System.out.print("LoginOnHamburger is Present");
			webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber2")))
					.sendKeys(xpathMap.get("SynapsePhnoTZ"));
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword2"))).sendKeys(xpathMap.get("SynPsdTZ"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).isDisplayed());
			System.out.print("SynapseLoginInLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC14-TZ Login",
					"To check user is not able to Login  if Psd field is less than five char",
					"User is not able to Login  if Psd field is less than five char", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC14-TZ Login",
					"To check user is not able to Login  if Psd field is less than five char",
					"User is not able to Login  if Psd field is less than five char", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

//TC15 (Login) PJ65867//
//To check user is not able to Login  if Psd field is contain More than Twenty char
	public boolean SynapseLoginFromHamburgerMoreThanTwentyChar(Mobile_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print("SynapseHamburger is Present");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).isDisplayed());
			System.out.print("LoginOnHamburger is Present");
			webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber2")))
					.sendKeys(xpathMap.get("SynapsePhnoTZ"));
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword2")))
					.sendKeys(xpathMap.get("SynPsdMoreThanTwentyCharTZ"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).isDisplayed());
			System.out.print("SynapseLoginInLogin is Present");
			webdriver.findElement(By.xpath(xpathMap.get("SynapseLoginInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC15-TZ Login",
					"To check user is not able to Login  if Psd field is contain More than Twenty char",
					"User is not able to Login  if Psd field is contain More than Twenty char", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC15-TZ Login",
					"To check user is not able to Login  if Psd field is contain More than Twenty char",
					"User is not able to Login  if Psd field is contain More than Twenty char", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

//TC-16(TZ Login) PJ-65867
//To check user is able to hide or show password when clicked on eye hide button when on homepage.

	public boolean TZEyeFieldForLoginWindow(Mobile_HTML_Report report) {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print("SynapseHamburger is Present");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).isDisplayed());
			System.out.print("LoginOnHamburger is Present");
			webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber2")))
					.sendKeys(xpathMap.get("SynapsePhnoTZ"));
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword2"))).sendKeys(xpathMap.get("SynPsdTZ"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("EyeFieldForLoginTZ"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("EyeFieldForLoginTZ"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC16-TZ Login",
					"To check user is able to hide or show password when clicked on eye hide button when on homepage.",
					"User is able to hide or show password when clicked on eye hide button when on homepage.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC16-TZ Login",
					"To check user is able to hide or show password when clicked on eye hide button when on homepage.",
					"User is able to hide or show password when clicked on eye hide button when on homepage.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-17(TZ Login) PJ-65867
//To check user is able to hide or show password when clicked on eye hide button when on homepage.

	public boolean TZEyeFieldForLoginWindows(Mobile_HTML_Report report) {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print("SynapseHamburger is Present");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).isDisplayed());
			System.out.print("LoginOnHamburger is Present");
			webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber2")))
					.sendKeys(xpathMap.get("SynapsePhnoTZ"));
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword2"))).sendKeys(xpathMap.get("SynPsdTZ"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("EyeFieldForLoginTZ"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC17-TZ Login",
					"To check user is able to hide or show password when clicked on eye hide button when on homepage.",
					"User is able to hide or show password when clicked on eye hide button when on homepage.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC17-TZ Login",
					"To check user is able to hide or show password when clicked on eye hide button when on homepage.",
					"User is able to hide or show password when clicked on eye hide button when on homepage.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-18(TZ Login) PJ-65867
//To check  user able to Login  by clicking on Login  button which is on Login  pop up window.

	public boolean TZLoginClicked(Mobile_HTML_Report report) {
		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).isDisplayed());
			System.out.print("SynapseHamburger is Present");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseHamburger"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).isDisplayed());
			System.out.print("LoginOnHamburger is Present");
			webdriver.findElement(By.xpath(xpathMap.get("LoginOnHamburger"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseMobileNumber2")))
					.sendKeys(xpathMap.get("SynapsePhnoTZ"));
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(xpathMap.get("SynapsePassword2"))).sendKeys(xpathMap.get("SynapsePwdTZ"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("LoginForLoginWindowTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("ProfileOpen"))).isDisplayed());
			System.out.print("Login is clicked");

			report.detailsAppend("TC18-TZ Login",
					"To check  user able to Login  by clicking on Login  button which is on Login  pop up window.",
					"User able to Login  by clicking on Login  button which is on Login  pop up window.", "Pass");

			BetslipsLogout();

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC18-TZ Login",
					"To check  user able to Login  by clicking on Login  button which is on Login  pop up window.",
					"User able to Login  by clicking on Login  button which is on Login  pop up window.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-19(TZ Login) PJ-65867
//To check user able to see Login  pop up window on clicking \"Play\" button of the game from casino section.
	public boolean TZLoginWindowForCasino(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("CasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			report.detailsAppend("TC19-TZ Login",
					"To check user able to see   Login  pop up window on clicking \"Play\" button of the game from casino section.",
					"User able to see   Login  pop up window on clicking \"Play\" button of the game from casino section.",
					"Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC19-TZ Login",
					"To check user able to see   Login  pop up window on clicking \"Play\" button of the game from casino section.",
					"User able to see   Login  pop up window on clicking \"Play\" button of the game from casino section.",
					"Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-20(TZ Login) PJ-65867
//To check presence of Login  button on "Log into your account" pop up window.on.
	public boolean TZLoginButtonVisibleForCasino(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("CasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			report.detailsAppend("TC20-TZ Login",
					"To check presence of Login  button on \"Log into your account\" pop up window.",
					"Presence of Login  button on \"Log into your account\" pop up window.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC20-TZ Login",
					"To check presence of Login  button on \"Log into your account\" pop up window.",
					"Presence of Login  button on \"Log into your account\" pop up window.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-21(TZ Login) PJ-65867
//To check user able to close Login  pop up window by clicking on it
	public boolean TZCloseButtonForLoginForCasino(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("CasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignup"))).click();
			Thread.sleep(2000);
			System.out.print("Close Button is clicked");

			report.detailsAppend("TC21-TZ Login", "To check user able to close Login  pop up window by clicking on it",
					"User able to close Login  pop up window by clicking on it", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC21-TZ Login", "To check user able to close Login  pop up window by clicking on it",
					"User able to close Login  pop up window by clicking on it", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-22(TZ Login) PJ-65867
//To check  presence of Login  button on register pop up window.
	public boolean TZSignUpButtonOnLoginWindowForCasino(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("CasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SignUpOnLoginWindowTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AgreeToAllTZ"))).isDisplayed());
			System.out.print("SignUp Button is clicked");

			report.detailsAppend("TC22-TZ Login", "To check  presence of Login  button on register pop up window.",
					"Presence of Login  button on register pop up window.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC22-TZ Login", "To check  presence of Login  button on register pop up window.",
					"Presence of Login  button on register pop up window.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-23(TZ Login) PJ-65867
//To check user able to close Sign up pop up window by clicking on it..
	public boolean TZCloseButtonSignUpForCasino(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("CasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SignUpOnLoginWindowTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AgreeToAllTZ"))).isDisplayed());
			System.out.print("SignUp Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignupTZ"))).click();
			Thread.sleep(2000);
			System.out.print("SignUp Button is clicked");

			report.detailsAppend("TC23-TZ Login",
					"To check user able to close Sign up pop up window by clicking on it.",
					"User able to close Sign up pop up window by clicking on it.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC23-TZ Login",
					"To check user able to close Sign up pop up window by clicking on it.",
					"User able to close Sign up pop up window by clicking on it.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-24(TZ Login) PJ-65867
//Check Login  Button is visible on the Login  popup window by clicking on heart icon inside casino games section.
	public boolean TZHeartIconForCasino(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("CasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("HeartIconTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			report.detailsAppend("TC24-TZ Login",
					"Check Login  Button is visible on the Login  popup window by clicking on heart icon inside casino games section.",
					"Login Button is visible on the Login  popup window by clicking on heart icon inside casino games section.",
					"Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC24-TZ Login",
					"Check Login  Button is visible on the Login  popup window by clicking on heart icon inside casino games section.",
					"Login Button is visible on the Login  popup window by clicking on heart icon inside casino games section.",
					"Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-25(TZ Login) PJ-65867
//Verify user can close Login  pop up window by clicking on close icon.
	public boolean TZCloseButtonAfterClickHeartIconForCasino(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("CasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("HeartIconTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignup"))).click();
			Thread.sleep(2000);
			System.out.print("Close Button is clicked");

			report.detailsAppend("TC25-TZ Login",
					"Verify user can close Login  pop up window by clicking on close icon.",
					"User can close Login  pop up window by clicking on close icon.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC25-TZ Login",
					"Verify user can close Login  pop up window by clicking on close icon.",
					"User can close Login  pop up window by clicking on close icon.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-26(TZ Login) PJ-65867
//Check if the sign-up form is visible when the "Sign Up" button is clicked.
	public boolean TZSignUpFormForCasino(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("CasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SignUpOnLoginWindowTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AgreeToAllTZ"))).isDisplayed());
			System.out.print("SignUp Button is clicked");

			report.detailsAppend("TC26-TZ Login",
					"Check if the sign-up form is visible when the \"Sign Up\" button is clicked.",
					"Dign-up form is visible when the \"Sign Up\" button is clicked.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC26-TZ Login",
					"Check if the sign-up form is visible when the \"Sign Up\" button is clicked.",
					"Dign-up form is visible when the \"Sign Up\" button is clicked.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-27(TZ Login) PJ-65867
//Verify user can close sign up pop up window by clicking on close icon.
	public boolean TZCloseIconSignUpForCasino(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("CasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SignUpOnLoginWindowTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AgreeToAllTZ"))).isDisplayed());
			System.out.print("SignUp Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignupTZ"))).click();
			Thread.sleep(2000);
			System.out.print("SignUp Button is clicked");

			report.detailsAppend("TC27-TZ Login",
					"Verify user can close sign up pop up window by clicking on close icon.",
					"User can close sign up pop up window by clicking on close icon.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC27-TZ Login",
					"Verify user can close sign up pop up window by clicking on close icon.",
					"User can close sign up pop up window by clicking on close icon.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-28(TZ Login) PJ-65867
//Check if the "Login" Button is visible on the Login  popup window.
	public boolean TZPlayButtonBeforeHeartIconForCasino(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("CasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("HeartIconTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			report.detailsAppend("TC28-TZ Login",
					"Check if the \"Login\" Button is visible on the Login  popup window.",
					"The \"Login\" Button is visible on the Login  popup window.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC28-TZ Login",
					"Check if the \"Login\" Button is visible on the Login  popup window.",
					"The \"Login\" Button is visible on the Login  popup window.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-29(TZ Login) PJ-65867
//Verify user can close Login  pop up window by clicking on close icon.
	public boolean TZPlayCloseButtonAfterClickHeartIconForCasino(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("CasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("HeartIconTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignup"))).click();
			Thread.sleep(2000);
			System.out.print("Close Button is clicked");

			report.detailsAppend("TC29-TZ Login",
					"Verify user can close Login  pop up window by clicking on close icon.",
					"User can close Login  pop up window by clicking on close icon.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC29-TZ Login",
					"Verify user can close Login  pop up window by clicking on close icon.",
					"User can close Login  pop up window by clicking on close icon.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-30(TZ Login) PJ-65867
//Check if the sign-up form is visible when the "Sign Up" button is clicked.
	public boolean TZPlaySignUpFormForCasino(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("CasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SignUpOnLoginWindowTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AgreeToAllTZ"))).isDisplayed());
			System.out.print("SignUp Button is clicked");

			report.detailsAppend("TC30-TZ Login",
					"Check if the sign-up form is visible when the \"Sign Up\" button is clicked.",
					"Sign-up form is visible when the \"Sign Up\" button is clicked.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC30-TZ Login",
					"Check if the sign-up form is visible when the \"Sign Up\" button is clicked.",
					"Sign-up form is visible when the \"Sign Up\" button is clicked.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-31(TZ Login) PJ-65867
//Verify user can close sign up pop up window by clicking on close icon.
	public boolean TZPlayCloseIconSignUpForCasino(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("CasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SignUpOnLoginWindowTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AgreeToAllTZ"))).isDisplayed());
			System.out.print("SignUp Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignupTZ"))).click();
			Thread.sleep(2000);
			System.out.print("SignUp Button is clicked");

			report.detailsAppend("TC31-TZ Login",
					"Verify user can close sign up pop up window by clicking on close icon.",
					"User can close sign up pop up window by clicking on close icon.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC31-TZ Login",
					"Verify user can close sign up pop up window by clicking on close icon.",
					"User can close sign up pop up window by clicking on close icon.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-36(TZ Login) PJ-65867
//To check user able to see Login  pop up window on clicking \"Play\" button of the game from casino section.
	public boolean TZLoginWindowForCasino1(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("CasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			System.out.print("Play Button is clicked");

			report.detailsAppend("TC36-TZ Login",
					"To check user able to see   Login  pop up window on clicking \"Play\" button of the game from casino section.",
					"User able to see   Login  pop up window on clicking \"Play\" button of the game from casino section.",
					"Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC36-TZ Login",
					"To check user able to see   Login  pop up window on clicking \"Play\" button of the game from casino section.",
					"User able to see   Login  pop up window on clicking \"Play\" button of the game from casino section.",
					"Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-37(TZ Login) PJ-65867
//To check presence of Login  button on "Log into your account" pop up window.on.
	public boolean TZLoginButtonVisibleForCasino1(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("CasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			System.out.print("Play Button is clicked");

			report.detailsAppend("TC37-TZ Login",
					"To check presence of Login  button on \"Log into your account\" pop up window.",
					"Presence of Login  button on \"Log into your account\" pop up window.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC37-TZ Login",
					"To check presence of Login  button on \"Log into your account\" pop up window.",
					"Presence of Login  button on \"Log into your account\" pop up window.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-39(TZ Login) PJ-65867
//To check user able to close Login  pop up window by clicking on it
	public boolean TZCloseButtonForLoginForCasino1(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("CasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignup"))).click();
			Thread.sleep(2000);
			System.out.print("Close Button is clicked");

			report.detailsAppend("TC39-TZ Login", "To check user able to close Login  pop up window by clicking on it",
					"User able to close Login  pop up window by clicking on it", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC39-TZ Login", "To check user able to close Login  pop up window by clicking on it",
					"User able to close Login  pop up window by clicking on it", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-38(TZ Login) PJ-65867
//To check  presence of Login  button on register pop up window .
	public boolean TZLoginButtonOnSignUpFormForCasino(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("CasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SignUpOnLoginWindowTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AgreeToAllTZ"))).isDisplayed());
			System.out.print("SignUp Button is clicked");

			WebElement odds1 = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action1 = new Actions(webdriver);
			action1.moveToElement(odds1).perform();
			Thread.sleep(4000);

			report.detailsAppend("TC38-TZ Login", "To check  presence of Login  button on register pop up window .",
					"Presence of Login  button on register pop up window .", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC38-TZ Login", "To check  presence of Login  button on register pop up window .",
					"Presence of Login  button on register pop up window .", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-40(TZ Login) PJ-65867
//To check user able to close Sign up pop up window by clicking on it.
	public boolean TZCloseIconSignUpForCasino1(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("CasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SignUpOnLoginWindowTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AgreeToAllTZ"))).isDisplayed());
			System.out.print("SignUp Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignupTZ"))).click();
			Thread.sleep(2000);
			System.out.print("SignUp Button is clicked");

			report.detailsAppend("TC40-TZ Login",
					"To check user able to close Sign up pop up window by clicking on it.",
					"User able to close Sign up pop up window by clicking on it.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC40-TZ Login",
					"To check user able to close Sign up pop up window by clicking on it.",
					"User able to close Sign up pop up window by clicking on it.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-41(TZ Login) PJ-65867
//Check Login  Button is visible on the Login  popup window by clicking on heart icon inside casino games section.
	public boolean TZHeartIconForCasino1(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("CasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("HeartIconTZ"))).click();
			Thread.sleep(2000);
			System.out.print("Play Button is clicked");

			report.detailsAppend("TC41-TZ Login",
					"Check Login  Button is visible on the Login  popup window by clicking on heart icon inside casino games section.",
					"Login Button is visible on the Login  popup window by clicking on heart icon inside casino games section.",
					"Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC41-TZ Login",
					"Check Login  Button is visible on the Login  popup window by clicking on heart icon inside casino games section.",
					"Login Button is visible on the Login  popup window by clicking on heart icon inside casino games section.",
					"Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-42(TZ Login) PJ-65867
//Verify user can close Login  pop up window by clicking on close icon.
	public boolean TZCloseButtonAfterClickHeartIconForCasino1(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("CasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("HeartIconTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignup"))).click();
			Thread.sleep(2000);
			System.out.print("Close Button is clicked");
			report.detailsAppend("TC42-TZ Login",
					"Verify user can close Login  pop up window by clicking on close icon.",
					"User can close Login  pop up window by clicking on close icon.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC42-TZ Login",
					"Verify user can close Login  pop up window by clicking on close icon.",
					"User can close Login  pop up window by clicking on close icon.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-43(TZ Login) PJ-65867
//Check if the sign-up form is visible when the "Sign Up" button is clicked.
	public boolean TZSignUpFormForCasino1(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("CasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SignUpOnLoginWindowTZ"))).click();
			Thread.sleep(2000);
			System.out.print("SignUp Button is clicked");

			report.detailsAppend("TC43-TZ Login",
					"Check if the sign-up form is visible when the \"Sign Up\" button is clicked.",
					"Dign-up form is visible when the \"Sign Up\" button is clicked.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC43-TZ Login",
					"Check if the sign-up form is visible when the \"Sign Up\" button is clicked.",
					"Dign-up form is visible when the \"Sign Up\" button is clicked.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-44(TZ Login) PJ-65867
//Verify user can close sign up pop up window by clicking on close icon.
	public boolean TZCloseIconSignUpForCasino2(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("CasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SignUpOnLoginWindowTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AgreeToAllTZ"))).isDisplayed());
			System.out.print("SignUp Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignupTZ"))).click();
			Thread.sleep(2000);
			System.out.print("SignUp Button is clicked");

			report.detailsAppend("TC44-TZ Login",
					"Verify user can close sign up pop up window by clicking on close icon.",
					"User can close sign up pop up window by clicking on close icon.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC44-TZ Login",
					"Verify user can close sign up pop up window by clicking on close icon.",
					"User can close sign up pop up window by clicking on close icon.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-45(TZ Login) PJ-65867
//Check if the "Login" Button is visible on the Login  popup window.
	public boolean TZPlayButtonBeforeHeartIconForCasino1(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("CasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("HeartIconTZ"))).click();
			Thread.sleep(2000);
			System.out.print("Play Button is clicked");

			report.detailsAppend("TC45-TZ Login",
					"Check if the \"Login\" Button is visible on the Login  popup window.",
					"The \"Login\" Button is visible on the Login  popup window.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC45-TZ Login",
					"Check if the \"Login\" Button is visible on the Login  popup window.",
					"The \"Login\" Button is visible on the Login  popup window.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-46(TZ Login) PJ-65867
//Verify user can close Login  pop up window by clicking on close icon.
	public boolean TZPlayCloseButtonAfterClickHeartIconForCasino1(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("CasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("HeartIconTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignup"))).click();
			Thread.sleep(2000);
			System.out.print("Close Button is clicked");

			report.detailsAppend("TC46-TZ Login",
					"Verify user can close Login  pop up window by clicking on close icon.",
					"User can close Login  pop up window by clicking on close icon.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC46-TZ Login",
					"Verify user can close Login  pop up window by clicking on close icon.",
					"User can close Login  pop up window by clicking on close icon.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-47(TZ Login) PJ-65867
//Check if the sign-up form is visible when the "Sign Up" button is clicked.
	public boolean TZPlaySignUpFormForCasino1(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("CasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SignUpOnLoginWindowTZ"))).click();
			Thread.sleep(2000);
			System.out.print("SignUp Button is clicked");

			report.detailsAppend("TC47-TZ Login",
					"Check if the sign-up form is visible when the \"Sign Up\" button is clicked.",
					"Sign-up form is visible when the \"Sign Up\" button is clicked.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC47-TZ Login",
					"Check if the sign-up form is visible when the \"Sign Up\" button is clicked.",
					"Sign-up form is visible when the \"Sign Up\" button is clicked.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-48(TZ Login) PJ-65867
//Verify user can close sign up pop up window by clicking on close icon.
	public boolean TZPlayCloseIconSignUpForCasino1(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("CasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SignUpOnLoginWindowTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AgreeToAllTZ"))).isDisplayed());
			System.out.print("SignUp Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignupTZ"))).click();
			Thread.sleep(2000);
			System.out.print("Close Button is clicked");

			report.detailsAppend("TC48-TZ Login",
					"Verify user can close sign up pop up window by clicking on close icon.",
					"User can close sign up pop up window by clicking on close icon.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC48-TZ Login",
					"Verify user can close sign up pop up window by clicking on close icon.",
					"User can close sign up pop up window by clicking on close icon.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-49(TZ Login) PJ-65867
//To check user able to see Login  pop up window on clicking \"Play\" button of the game from live casino section.
	public boolean TZLoginWindowForLiveCasino(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("LiveCasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			System.out.print("Play Button is clicked");

			report.detailsAppend("TC49-TZ Login",
					"To check user able to see   Login  pop up window on clicking \"Play\" button of the game from live casino section.",
					"User able to see   Login  pop up window on clicking \"Play\" button of the game from live casino section.",
					"Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC49-TZ Login",
					"To check user able to see   Login  pop up window on clicking \"Play\" button of the game from live casino section.",
					"User able to see   Login  pop up window on clicking \"Play\" button of the game from live casino section.",
					"Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-50(TZ Login) PJ-65867
//To check presence of Login  button on "Log into your account" pop up window.on.
	public boolean TZLoginButtonVisibleForLiveCasino(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("LiveCasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			System.out.print("Play Button is clicked");

			report.detailsAppend("TC50-TZ Login",
					"To check presence of Login  button on \"Log into your account\" pop up window.",
					"Presence of Login  button on \"Log into your account\" pop up window.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC50-TZ Login",
					"To check presence of Login  button on \"Log into your account\" pop up window.",
					"Presence of Login  button on \"Log into your account\" pop up window.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-52(TZ Login) PJ-65867
//To check user able to close Login  pop up window by clicking on it
	public boolean TZCloseButtonForLoginForLiveCasino(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("LiveCasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignup"))).click();
			Thread.sleep(2000);
			System.out.print("Close Button is clicked");

			report.detailsAppend("TC52-TZ Login", "To check user able to close Login  pop up window by clicking on it",
					"User able to close Login  pop up window by clicking on it", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC52-TZ Login", "To check user able to close Login  pop up window by clicking on it",
					"User able to close Login  pop up window by clicking on it", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-51(TZ Login) PJ-65867
//To check  presence of Login  button on register pop up window .
	public boolean TZLoginButtonOnSignUpFormForLiveCasino(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("LiveCasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SignUpOnLoginWindowTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AgreeToAllTZ"))).isDisplayed());
			System.out.print("SignUp Button is clicked");

			WebElement odds1 = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action1 = new Actions(webdriver);
			action1.moveToElement(odds1).perform();
			Thread.sleep(4000);

			report.detailsAppend("TC51-TZ Login", "To check  presence of Login  button on register pop up window .",
					"Presence of Login  button on register pop up window .", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC51-TZ Login", "To check  presence of Login  button on register pop up window .",
					"Presence of Login  button on register pop up window .", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-53(TZ Login) PJ-65867
//To check user able to close Sign up pop up window by clicking on it.
	public boolean TZCloseIconSignUpForLiveCasino(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("LiveCasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SignUpOnLoginWindowTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AgreeToAllTZ"))).isDisplayed());
			System.out.print("SignUp Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignupTZ"))).click();
			Thread.sleep(2000);
			System.out.print("SignUp Button is clicked");

			report.detailsAppend("TC53-TZ Login",
					"To check user able to close Sign up pop up window by clicking on it.",
					"User able to close Sign up pop up window by clicking on it.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC53-TZ Login",
					"To check user able to close Sign up pop up window by clicking on it.",
					"User able to close Sign up pop up window by clicking on it.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-54(TZ Login) PJ-65867
//To check user able to see Login  pop up window on clicking \"Play\" button of the game from Live casino section.
	public boolean TZPlayButtonLoginWindowForLiveCasino(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("LiveCasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);

			System.out.print("Play Button is clicked");

			report.detailsAppend("TC54-TZ Login",
					"To check user able to see   Login  pop up window on clicking \"Play\" button of the game from live casino section.",
					"User able to see   Login  pop up window on clicking \"Play\" button of the game from live casino section.",
					"Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC54-TZ Login",
					"To check user able to see   Login  pop up window on clicking \"Play\" button of the game from live casino section.",
					"User able to see   Login  pop up window on clicking \"Play\" button of the game from live casino section.",
					"Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-55(TZ Login) PJ-65867
//To check presence of Login  button on "Log into your account" pop up window.on.
	public boolean TZPlayButtonLoginButtonVisibleForLiveCasino(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("LiveCasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			System.out.print("Play Button is clicked");

			report.detailsAppend("TC55-TZ Login",
					"To check presence of Login  button on \"Log into your account\" pop up window.",
					"Presence of Login  button on \"Log into your account\" pop up window.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC55-TZ Login",
					"To check presence of Login  button on \"Log into your account\" pop up window.",
					"Presence of Login  button on \"Log into your account\" pop up window.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-57(TZ Login) PJ-65867
//To check user able to close Login  pop up window by clicking on it
	public boolean TZPlayButtonCloseButtonForLoginForLiveCasino(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("LiveCasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignup"))).click();
			Thread.sleep(2000);

			System.out.print("Close Button is clicked");

			report.detailsAppend("TC57-TZ Login", "To check user able to close Login  pop up window by clicking on it",
					"User able to close Login  pop up window by clicking on it", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC57-TZ Login", "To check user able to close Login  pop up window by clicking on it",
					"User able to close Login  pop up window by clicking on it", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-56(TZ Login) PJ-65867
//To check  presence of Login  button on register pop up window .
	public boolean TZPlayButtonLoginButtonOnSignUpFormForLiveCasino(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("LiveCasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SignUpOnLoginWindowTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AgreeToAllTZ"))).isDisplayed());
			System.out.print("SignUp Button is clicked");

			WebElement odds1 = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action1 = new Actions(webdriver);
			action1.moveToElement(odds1).perform();
			Thread.sleep(4000);

			report.detailsAppend("TC56-TZ Login", "To check  presence of Login  button on register pop up window .",
					"Presence of Login  button on register pop up window .", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC56-TZ Login", "To check  presence of Login  button on register pop up window .",
					"Presence of Login  button on register pop up window .", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-58(TZ Login) PJ-65867
//To check user able to close Sign up pop up window by clicking on it.
	public boolean TZPlayButtonCloseIconSignUpForLiveCasino(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("LiveCasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SignUpOnLoginWindowTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AgreeToAllTZ"))).isDisplayed());
			System.out.print("SignUp Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignupTZ"))).click();
			Thread.sleep(2000);

			System.out.print("SignUp Button is clicked");

			report.detailsAppend("TC58-TZ Login",
					"To check user able to close Sign up pop up window by clicking on it.",
					"User able to close Sign up pop up window by clicking on it.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC58-TZ Login",
					"To check user able to close Sign up pop up window by clicking on it.",
					"User able to close Sign up pop up window by clicking on it.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-59(TZ Login) PJ-65867
//To check user able to see   Login  pop up window on clicking "heart" icon of the game from Live casino section.
	public boolean TZHeartIconForLiveCasino(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("CasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("HeartIconTZ"))).click();
			Thread.sleep(2000);
			System.out.print("Play Button is clicked");

			report.detailsAppend("TC59-TZ Login",
					"To check user able to see   Login  pop up window on clicking \"heart\" icon of the game from Live casino section.",
					"User able to see   Login  pop up window on clicking \"heart\" icon of the game from Live casino section.",
					"Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC59-TZ Login",
					"To check user able to see   Login  pop up window on clicking \"heart\" icon of the game from Live casino section.",
					"User able to see   Login  pop up window on clicking \"heart\" icon of the game from Live casino section.",
					"Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-60(TZ Login) PJ-65867
//To check presence of Login  button on "Log into your account" pop up window.on.
	public boolean TZLoginButtonVisibleForLiveCasino1(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("LiveCasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			System.out.print("Play Button is clicked");

			report.detailsAppend("TC60-TZ Login",
					"To check presence of Login  button on \"Log into your account\" pop up window.",
					"Presence of Login  button on \"Log into your account\" pop up window.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC60-TZ Login",
					"To check presence of Login  button on \"Log into your account\" pop up window.",
					"Presence of Login  button on \"Log into your account\" pop up window.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-61(TZ Login) PJ-65867
//To check user able to close Login  pop up window by clicking on it
	public boolean TZCloseButtonForLoginForLiveCasino1(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("LiveCasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignup"))).click();
			Thread.sleep(2000);
			System.out.print("Close Button is clicked");

			report.detailsAppend("TC61-TZ Login", "To check user able to close Login  pop up window by clicking on it",
					"User able to close Login  pop up window by clicking on it", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC61-TZ Login", "To check user able to close Login  pop up window by clicking on it",
					"User able to close Login  pop up window by clicking on it", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-62(TZ Login) PJ-65867
//To check  presence of Login  button on register pop up window .
	public boolean TZLoginButtonOnSignUpFormForLiveCasino1(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("LiveCasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SignUpOnLoginWindowTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AgreeToAllTZ"))).isDisplayed());
			System.out.print("SignUp Button is clicked");

			WebElement odds1 = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action1 = new Actions(webdriver);
			action1.moveToElement(odds1).perform();
			Thread.sleep(4000);

			report.detailsAppend("TC62-TZ Login", "To check  presence of Login  button on register pop up window .",
					"Presence of Login  button on register pop up window .", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC62-TZ Login", "To check  presence of Login  button on register pop up window .",
					"Presence of Login  button on register pop up window .", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-63(TZ Login) PJ-65867
//To check user able to close Sign up pop up window by clicking on it.
	public boolean TZCloseIconSignUpForLiveCasino1(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("LiveCasinoTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SignUpOnLoginWindowTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AgreeToAllTZ"))).isDisplayed());
			System.out.print("SignUp Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignupTZ"))).click();
			Thread.sleep(2000);
			System.out.print("SignUp Button is clicked");

			report.detailsAppend("TC63-TZ Login",
					"To check user able to close Sign up pop up window by clicking on it.",
					"User able to close Sign up pop up window by clicking on it.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC63-TZ Login",
					"To check user able to close Sign up pop up window by clicking on it.",
					"User able to close Sign up pop up window by clicking on it.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-64(TZ Login) PJ-65867
//To check user able to see Login  pop up window on clicking \"Play\" button of the game from BetGames section.
	public boolean TZPlayButtonLoginWindowForBetGames(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("BetGamesTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			System.out.print("Play Button is clicked");

			report.detailsAppend("TC64-TZ Login",
					"To check user able to see   Login  pop up window on clicking \"Play\" button of the game from BetGames section.",
					"User able to see   Login  pop up window on clicking \"Play\" button of the game from BetGames section.",
					"Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC64-TZ Login",
					"To check user able to see   Login  pop up window on clicking \"Play\" button of the game from BetGames section.",
					"User able to see   Login  pop up window on clicking \"Play\" button of the game from BetGames section.",
					"Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-65(TZ Login) PJ-65867
//To check presence of Login  button on "Log into your account" pop up window.on.
	public boolean TZLoginButtonVisibleForBetGames(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("BetGamesTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			System.out.print("Play Button is clicked");

			report.detailsAppend("TC65-TZ Login",
					"To check presence of Login  button on \"Log into your account\" pop up window.",
					"Presence of Login  button on \"Log into your account\" pop up window.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC65-TZ Login",
					"To check presence of Login  button on \"Log into your account\" pop up window.",
					"Presence of Login  button on \"Log into your account\" pop up window.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-66(TZ Login) PJ-65867
//To check user able to close Login  pop up window by clicking on it
	public boolean TZCloseButtonForLoginForBetGames(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("BetGamesTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignup"))).click();
			Thread.sleep(2000);
			System.out.print("Close Button is clicked");

			report.detailsAppend("TC66-TZ Login", "To check user able to close Login  pop up window by clicking on it",
					"User able to close Login  pop up window by clicking on it", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC66-TZ Login", "To check user able to close Login  pop up window by clicking on it",
					"User able to close Login  pop up window by clicking on it", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-67(TZ Login) PJ-65867
//To check  presence of Login  button on register pop up window .
	public boolean TZLoginButtonOnSignUpFormForBetGames(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("BetGamesTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SignUpOnLoginWindowTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AgreeToAllTZ"))).isDisplayed());
			System.out.print("SignUp Button is clicked");

			WebElement odds1 = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action1 = new Actions(webdriver);
			action1.moveToElement(odds1).perform();
			Thread.sleep(4000);

			report.detailsAppend("TC67-TZ Login", "To check  presence of Login  button on register pop up window .",
					"Presence of Login  button on register pop up window .", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC67-TZ Login", "To check  presence of Login  button on register pop up window .",
					"Presence of Login  button on register pop up window .", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-68(TZ Login) PJ-65867
//To check user able to close Sign up pop up window by clicking on it.
	public boolean TZCloseIconSignUpForBetGames(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("BetGamesTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SignUpOnLoginWindowTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AgreeToAllTZ"))).isDisplayed());
			System.out.print("SignUp Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignupTZ"))).click();
			Thread.sleep(2000);
			System.out.print("SignUp Button is clicked");

			report.detailsAppend("TC68-TZ Login",
					"To check user able to close Sign up pop up window by clicking on it.",
					"User able to close Sign up pop up window by clicking on it.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC68-TZ Login",
					"To check user able to close Sign up pop up window by clicking on it.",
					"User able to close Sign up pop up window by clicking on it.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-69(TZ Login) PJ-65867
//Check if the "Login" Button is visible on the Login  popup window by clicking on heart icon of the game..
	public boolean TZHeartIconForBetGames(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("BetGamesTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("HeartIconTZ"))).click();
			Thread.sleep(2000);
			System.out.print("Play Button is clicked");

			report.detailsAppend("TC69-TZ Login",
					"Check if the \"Login\" Button is visible on the Login  popup window by clicking on heart icon of the game.",
					"Login Button is visible on the Login  popup window by clicking on heart icon of the game.",
					"Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC69-TZ Login",
					"Check if the \"Login\" Button is visible on the Login  popup window by clicking on heart icon of the game.",
					"Login Button is visible on the Login  popup window by clicking on heart icon of the game.",
					"Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-70(TZ Login) PJ-65867
//Verify user can close Login  pop up window by clicking on close icon.
	public boolean TZCloseButtonAfterClickHeartIconForBetGames(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("BetGamesTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("HeartIconTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignup"))).click();
			Thread.sleep(2000);
			System.out.print("Close Button is clicked");

			report.detailsAppend("TC70-TZ Login",
					"Verify user can close Login  pop up window by clicking on close icon.",
					"User can close Login  pop up window by clicking on close icon.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC70-TZ Login",
					"Verify user can close Login  pop up window by clicking on close icon.",
					"User can close Login  pop up window by clicking on close icon.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-71(TZ Login) PJ-65867
//Check if the sign-up form is visible when the "Sign Up" button is clicked.
	public boolean TZSignUpFormForBetGames(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("BetGamesTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SignUpOnLoginWindowTZ"))).click();
			Thread.sleep(2000);
			System.out.print("SignUp Button is clicked");

			report.detailsAppend("TC71-TZ Login",
					"Check if the sign-up form is visible when the \"Sign Up\" button is clicked.",
					"Dign-up form is visible when the \"Sign Up\" button is clicked.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC71-TZ Login",
					"Check if the sign-up form is visible when the \"Sign Up\" button is clicked.",
					"Dign-up form is visible when the \"Sign Up\" button is clicked.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-72(TZ Login) PJ-65867
//Verify user can close sign up pop up window by clicking on close icon.
	public boolean TZCloseIconSignUpForBetGames2(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("BetGamesTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SignUpOnLoginWindowTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AgreeToAllTZ"))).isDisplayed());
			System.out.print("SignUp Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignupTZ"))).click();
			Thread.sleep(2000);
			System.out.print("SignUp Button is clicked");

			report.detailsAppend("TC72-TZ Login",
					"Verify user can close sign up pop up window by clicking on close icon.",
					"User can close sign up pop up window by clicking on close icon.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC72-TZ Login",
					"Verify user can close sign up pop up window by clicking on close icon.",
					"User can close sign up pop up window by clicking on close icon.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-73(TZ Login) PJ-65867
//Check if the "Login" Button is visible on the Login  popup window.
	public boolean TZPlayButtonBeforeHeartIconForBetGames(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("BetGamesTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("HeartIconTZ"))).click();
			Thread.sleep(2000);
			System.out.print("Play Button is clicked");

			report.detailsAppend("TC73-TZ Login",
					"Check if the \"Login\" Button is visible on the Login  popup window.",
					"The \"Login\" Button is visible on the Login  popup window.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC73-TZ Login",
					"Check if the \"Login\" Button is visible on the Login  popup window.",
					"The \"Login\" Button is visible on the Login  popup window.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-74(TZ Login) PJ-65867
//Verify user can close Login  pop up window by clicking on close icon.
	public boolean TZPlayCloseButtonAfterClickHeartIconForBetGames(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("BetGamesTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("HeartIconTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignup"))).click();
			Thread.sleep(2000);
			System.out.print("Close Button is clicked");

			report.detailsAppend("TC74-TZ Login",
					"Verify user can close Login  pop up window by clicking on close icon.",
					"User can close Login  pop up window by clicking on close icon.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC74-TZ Login",
					"Verify user can close Login  pop up window by clicking on close icon.",
					"User can close Login  pop up window by clicking on close icon.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-75(TZ Login) PJ-65867
//Check if the sign-up form is visible when the "Sign Up" button is clicked.
	public boolean TZPlaySignUpFormForBetGames(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("BetGamesTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SignUpOnLoginWindowTZ"))).click();
			Thread.sleep(2000);
			System.out.print("SignUp Button is clicked");

			report.detailsAppend("TC75-TZ Login",
					"Check if the sign-up form is visible when the \"Sign Up\" button is clicked.",
					"Sign-up form is visible when the \"Sign Up\" button is clicked.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC75-TZ Login",
					"Check if the sign-up form is visible when the \"Sign Up\" button is clicked.",
					"Sign-up form is visible when the \"Sign Up\" button is clicked.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-76(TZ Login) PJ-65867
//Verify user can close sign up pop up window by clicking on close icon.
	public boolean TZPlayCloseIconSignUpForBetGames(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("BetGamesTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SignUpOnLoginWindowTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AgreeToAllTZ"))).isDisplayed());
			System.out.print("SignUp Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignupTZ"))).click();
			Thread.sleep(2000);
			System.out.print("SignUp Button is clicked");

			report.detailsAppend("TC76-TZ Login",
					"Verify user can close sign up pop up window by clicking on close icon.",
					"User can close sign up pop up window by clicking on close icon.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC76-TZ Login",
					"Verify user can close sign up pop up window by clicking on close icon.",
					"User can close sign up pop up window by clicking on close icon.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-77(TZ Login) PJ-65867
//To check user able to see Login  pop up window on clicking \"Play\" button of the game from virtual section.
	public boolean TZPlayButtonLoginWindowForvirtual(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("VirtualsTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			System.out.print("Play Button is clicked");

			report.detailsAppend("TC77-TZ Login",
					"To check user able to see   Login  pop up window on clicking \"Play\" button of the game from virtual section.",
					"User able to see   Login  pop up window on clicking \"Play\" button of the game from virtual section.",
					"Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC77-TZ Login",
					"To check user able to see   Login  pop up window on clicking \"Play\" button of the game from virtualo section.",
					"User able to see   Login  pop up window on clicking \"Play\" button of the game from virtual section.",
					"Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-78(TZ Login) PJ-65867
//To check presence of Login  button on "Log into your account" pop up window.on.
	public boolean TZPlayButtonLoginButtonVisibleForVirtuals(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("VirtualsTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			System.out.print("Play Button is clicked");

			report.detailsAppend("TC78-TZ Login",
					"To check presence of Login  button on \"Log into your account\" pop up window.",
					"Presence of Login  button on \"Log into your account\" pop up window.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC78-TZ Login",
					"To check presence of Login  button on \"Log into your account\" pop up window.",
					"Presence of Login  button on \"Log into your account\" pop up window.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-79(TZ Login) PJ-65867
//To check user able to close Login  pop up window by clicking on it
	public boolean TZPlayButtonCloseButtonForLoginForVirtualso(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("VirtualsTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignup"))).click();
			Thread.sleep(2000);
			System.out.print("Close Button is clicked");

			report.detailsAppend("TC79-TZ Login", "To check user able to close Login  pop up window by clicking on it",
					"User able to close Login  pop up window by clicking on it", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC79-TZ Login", "To check user able to close Login  pop up window by clicking on it",
					"User able to close Login  pop up window by clicking on it", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-80(TZ Login) PJ-65867
//To check  presence of Login  button on register pop up window .
	public boolean TZPlayButtonLoginButtonOnSignUpFormForVirtuals(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("VirtualsTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SignUpOnLoginWindowTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AgreeToAllTZ"))).isDisplayed());
			System.out.print("SignUp Button is clicked");

			WebElement odds1 = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action1 = new Actions(webdriver);
			action1.moveToElement(odds1).perform();
			Thread.sleep(4000);

			report.detailsAppend("TC80-TZ Login", "To check  presence of Login  button on register pop up window .",
					"Presence of Login  button on register pop up window .", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC80-TZ Login", "To check  presence of Login  button on register pop up window .",
					"Presence of Login  button on register pop up window .", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-81(TZ Login) PJ-65867
//To check user able to close Sign up pop up window by clicking on it.
	public boolean TZPlayButtonCloseIconSignUpForVirtuals(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("VirtualsTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("LoginAfterPlay"))).isDisplayed());
			System.out.print("Play Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("SignUpOnLoginWindowTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("AgreeToAllTZ"))).isDisplayed());
			System.out.print("SignUp Button is clicked");

			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignupTZ"))).click();
			Thread.sleep(2000);
			System.out.print("SignUp Button is clicked");

			report.detailsAppend("TC81-TZ Login",
					"To check user able to close Sign up pop up window by clicking on it.",
					"User able to close Sign up pop up window by clicking on it.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC81-TZ Login",
					"To check user able to close Sign up pop up window by clicking on it.",
					"User able to close Sign up pop up window by clicking on it.", "Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//TC-82(TZ Login) PJ-65867
//TCheck if the "Login" Button is visible on the Login  popup window by clicking on heart icon of the game inside virualsn.
	public boolean TZHeartIconForVirtuals(Mobile_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(xpathMap.get("VirtualsTZ"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("GameBanner4"))).isDisplayed());
			System.out.print("Promotion is clicked");

//webdriver.findElement(By.xpath(xpathMap.get("GameBanner"))).click();
//Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("PlayButton4"))).isDisplayed());
//Thread.sleep(2000);

			webdriver.findElement(By.xpath(xpathMap.get("HeartIconTZ"))).click();
			Thread.sleep(2000);
			System.out.print("Play Button is clicked");

			report.detailsAppend("TC82-TZ Login",
					"Check if the \"Login\" Button is visible on the Login  popup window by clicking on heart icon of the game inside viruals",
					"Login Button is visible on the Login  popup window by clicking on heart icon of the game inside viruals",
					"Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC82-TZ Login",
					"Check if the \"Login\" Button is visible on the Login  popup window by clicking on heart icon of the game inside viruals",
					"Login Button is visible on the Login  popup window by clicking on heart icon of the game inside viruals",
					"Fail");

			return false;

		}
		webdriver.navigate().refresh();
//webdriver.getWindowHandle();
		return true;

	}

//////////////////Akhil AS66528 Regression LOGIN Synapse UAT TANZANIA ///////////////////

//TC-83 (Tanzania_Login) AS66528//
//Verify user can close Login  pop up window by clicking on close icon.
	public boolean TZLogin_LoginPopupCloseInVirtualsGame(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).isDisplayed());
			System.out.println("Virtuals is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			System.out.println("SynapseFavourite is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			System.out.println("Close Button of LoginPopup is Clicked\n");
			Thread.sleep(1000);

			report.detailsAppend("TC83-Tanzania_Login",
					"Verify user can close Login  pop up window by clicking on close icon.",
					"Verify user can close Login  pop up window by clicking on close icon.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC83-Tanzania_Login",
					"Verify user can close Login  pop up window by clicking on close icon.",
					"Verify user can close Login  pop up window by clicking on close icon.", "Fail");
			System.out.println("Close Button is not Clicked :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-84 (Tanzania_Login) AS66528//
//Check if the sign-up form is visible when the "Sign Up" button is clicked.
	public boolean TZLogin_SignupFormVisibleInVirtualsGame(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).isDisplayed());
			System.out.println("Virtuals is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			System.out.println("SynapseFavourite is Present\n");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			System.out.println("Signup button In LoginPopup is Clicked\n");
			Thread.sleep(2000);

			report.detailsAppend("TC84-Tanzania_Login",
					"Check if sign-up form is visible when the \"Sign Up\" button is clicked.",
					"Checked if sign-up form is visible when the \"Sign Up\" button is clicked.", "Pass");

			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSports"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC84-Tanzania_Login",
					"Check if sign-up form is visible when the \"Sign Up\" button Should clicked.",
					"sign-up form Not visible when the \"Sign Up\" button Not clicked.", "Fail");
			System.out.println("Close Button is not Clicked :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-85 (Tanzania_Login) AS66528//
//Verify sign up pop up window close functionality
	public boolean TZLogin_SignupWindowCloseFunctionInVirtuals(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).isDisplayed());
			System.out.println("Virtuals is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseFavourite"))).click();
			System.out.println("SynapseFavourite is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			System.out.println("Close Button of LoginPopup is Clicked\n");
			Thread.sleep(1000);

			report.detailsAppend("TC85-Tanzania_Login", "Verify sign up pop up window close functionality",
					"Verify sign up pop up window close functionality", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC85-Tanzania_Login", "Verify sign up popup window close functionality",
					"Close functionality of Signup popup window not verified", "Fail");
			System.out.println("Close Button is not Clicked :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-86 (Tanzania_Login) AS66528//
//Check if the "Login" Button is visible on the Login  popup window inside virtuals.
	public boolean TZLogin_LoginPopupVisibleInVirtuals(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).isDisplayed());
			System.out.println("Virtuals is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).click();
			Thread.sleep(2000);

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("Gamebanner")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			String searchText = "Play";
			String xpath = "//*[contains(normalize-space(text()), '" + searchText + "')]";
			webdriver.findElement(By.xpath(xpath)).click();
			System.out.println("Play button on Page is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).isDisplayed());
			System.out.println("HeartIcon is Present\n");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC86-Tanzania_Login",
					"Check if the \"Login\" Button is visible on the Login  popup window inside virtuals.",
					"Check if the \"Login\" Button is visible on the Login  popup window inside virtuals.", "Pass");

			log.debug("Switch to default tab");
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			System.out.println("Close Button of LoginPopup is Clicked\n");
			Thread.sleep(1000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSportButtonTZ"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSportButtonTZ"))).click();
			System.out.println("Sport Button is Clicked\n");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC86-Tanzania_Login",
					"Check if the \"Login\" Button is visible on the Login  popup window inside virtuals.",
					"\"Login\" Button Not visible on the Login  popup window inside virtuals.", "Fail");
			System.out.println("Close Button is not Clicked :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-87 (Tanzania_Login) AS66528//
//Verify user can close Login  pop up window by clicking on close icon.
	public boolean TZLogin_LoginPopupCloseFunctionInVirtuals(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).isDisplayed());
			System.out.println("Virtuals is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).click();
			Thread.sleep(2000);

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("Gamebanner")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			String searchText = "Play";
			String xpath = "//*[contains(normalize-space(text()), '" + searchText + "')]";
			webdriver.findElement(By.xpath(xpath)).click();
			System.out.println("Play button on Page is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).isDisplayed());
			System.out.println("HeartIcon is Present\n");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			System.out.println("Close Button of LoginPopup is Clicked\n");
			Thread.sleep(1000);

			report.detailsAppend("TC87-Tanzania_Login",
					"Verify user can close Login  pop up window by clicking on close icon.",
					"Verify user can close Login  popup window by clicking on close icon.", "Pass");

			log.debug("Switch to default tab");
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSportButtonTZ"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSportButtonTZ"))).click();
			System.out.println("Sport Button is Clicked\n");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC87-Tanzania_Login",
					"Verify user can close Login  pop up window by clicking on close icon.",
					"user cannot close Login  pop up window Not able clicking on close icon.", "Fail");
			System.out.println("Close Button is not Clicked :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-88 (Tanzania_Login) AS66528//
//Check if the sign-up form is visible when the "Sign Up" button is clicked.
	public boolean TZLogin_SignupFormVisibleOnVirtual(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).isDisplayed());
			System.out.println("Virtuals is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).click();
			Thread.sleep(2000);

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("Gamebanner")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			String searchText = "Play";
			String xpath = "//*[contains(normalize-space(text()), '" + searchText + "')]";
			webdriver.findElement(By.xpath(xpath)).click();
			System.out.println("Play button on Page is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).isDisplayed());
			System.out.println("HeartIcon is Present\n");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			System.out.println("Signup button In LoginPopup is Clicked\n");
			Thread.sleep(2000);

			report.detailsAppend("TC88-Tanzania_Login",
					"Check if the sign-up form is visible when the \"Sign Up\" button is clicked.",
					"Check if the sign-up form is visible when the \"Sign Up\" button is clicked.", "Pass");

			log.debug("Switch to default tab");
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			System.out.println("Close Button of LoginPopup is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSportButtonTZ"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSportButtonTZ"))).click();
			System.out.println("Sport Button is Clicked\n");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC88-Tanzania_Login",
					"Check if the sign-up form is visible when the \"Sign Up\" button is clicked.",
					"sign-up form Not visible when the \"Sign Up\" button Not clicked.", "Fail");
			System.out.println("Close Button is not Clicked :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-89 (Tanzania_Login) AS66528//
//Verify user can close sign up pop up window by clicking on close icon
	public boolean TZLogin_SignupPopupCloseFunctionInVirtuals(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).isDisplayed());
			System.out.println("Virtuals is Present\n");
			webdriver.findElement(By.xpath(xpathMap.get("TZ_Virtuals"))).click();
			Thread.sleep(2000);

			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("Gamebanner")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			String searchText = "Play";
			String xpath = "//*[contains(normalize-space(text()), '" + searchText + "')]";
			webdriver.findElement(By.xpath(xpath)).click();
			System.out.println("Play button on Page is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).isDisplayed());
			System.out.println("HeartIcon is Present\n");
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(xpathMap.get("HeatIconInAviator"))).click();
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			System.out.println("Signup button In LoginPopup is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			System.out.println("Close Button of LoginPopup is Clicked\n");
			Thread.sleep(1000);

			report.detailsAppend("TC89-Tanzania_Login",
					"Verify user can close sign up pop up window by clicking on close icon",
					"Verify user can close sign up pop up window by clicking on close icon", "Pass");

			log.debug("Switch to default tab");
			Thread.sleep(1000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseSportButtonTZ"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseSportButtonTZ"))).click();
			System.out.println("Sport Button is Clicked\n");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC89-Tanzania_Login",
					"Verify user can close sign up pop up window by clicking on close icon",
					"user cannot close signup popup window not able to clicking on closeicon", "Fail");
			System.out.println("Close Button is not Clicked :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-95 (Tanzania_Login) AS66528//
//check  user able to see  login button on login pop up window on clicking Bet now button of the betlip
	public boolean TZLogin_LoginPopupOnBetnowPage(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("OddsClickTZ"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("OddsClickTZ"))).click();
			System.out.println("Odds market is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBetnow"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBetnow"))).click();
			System.out.println("Betnow Button is Clicked\n");
			Thread.sleep(1000);

			report.detailsAppend("TC95-Tanzania_Login",
					"check user able to see login button on login pop up window on clicking Bet now button of the betlip",
					"user able to see login button on login pop up window on clicking Bet now button of the betlip",
					"Pass");

			log.debug("Switch to default tab");
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			System.out.println("Close Button of LoginPopup is Clicked\n");
			Thread.sleep(1000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("OddsDeleteInBetslip"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("OddsDeleteInBetslip"))).click();
			System.out.println("Remove odds market is Clicked\n");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC95-Tanzania_Login",
					"check user able to see login button on login pop up window on clicking Bet now button of the betlip",
					"user not able to see  login button on login pop up window when Bet now button not Clicked on betlip",
					"Fail");
			System.out.println("Betnow Button is not Clicked :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-96 (Tanzania_Login) AS66528//
//check presence of Login  button on "Log into your account" pop up window.
	public boolean TZLogin_CheckPreseneceLoginButtonWindow(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("OddsClickTZ"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("OddsClickTZ"))).click();
			System.out.println("Odds market is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBetnow"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBetnow"))).click();
			System.out.println("Betnow Button is Clicked\n");
			Thread.sleep(1000);

			report.detailsAppend("TC96-Tanzania_Login",
					"check presence of Login  button on \"Log into your account\" pop up window.",
					"check presence of Login  button on \"Log into your account\" pop up window.", "Pass");

			log.debug("Switch to default tab");
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			System.out.println("Close Button of LoginPopup is Clicked\n");
			Thread.sleep(1000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("OddsDeleteInBetslip"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("OddsDeleteInBetslip"))).click();
			System.out.println("Remove odds market is Clicked\n");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC96-Tanzania_Login",
					"check presence of Login  button on \"Log into your account\" pop up window.",
					"check presence of Login  button not visible on \"Log into your account\" pop up window.", "Fail");
			System.out.println(" BET Button is not Clicked :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-97 (Tanzania_Login) AS66528//
//Verify user can close the Login  pop up window by Clicking it
	public boolean TZLogin_LoginPopupCloseOnBetnowpage(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("OddsClickTZ"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("OddsClickTZ"))).click();
			System.out.println("Odds market is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBetnow"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBetnow"))).click();
			System.out.println("Betnow Button is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			System.out.println("Close Button of LoginPopup is Clicked\n");
			Thread.sleep(1000);

			report.detailsAppend("TC97-Tanzania_Login", "Verify user can close the Login  pop up window",
					"Verify user can close the Login  pop up window", "Pass");

			log.debug("Switch to default tab");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("OddsDeleteInBetslip"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("OddsDeleteInBetslip"))).click();
			System.out.println("Remove odds market is Clicked\n");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC97-Tanzania_Login", "Verify user can close the Login  pop up window",
					"user cannot close the Login  pop up window", "Fail");
			System.out.println("Close Button is not Clicked :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-98 (Tanzania_Login) AS66528//
//To check  presence of Login  button on register pop up window
	public boolean TZLogin_CheckLoginButtonOnRegisterbutton(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("OddsClickTZ"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("OddsClickTZ"))).click();
			System.out.println("Odds market is Clicked\n");
			Thread.sleep(1000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBetnow"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBetnow"))).click();
			System.out.println("Betnow Button is Clicked\n");
			Thread.sleep(1000);

			report.detailsAppend("TC98-Tanzania_Login",
					"Verify user can check presence of Login button on register pop up window",
					"user check presence of Login button on register pop up window", "Pass");

			log.debug("Switch to default tab");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			System.out.println("Close Button of LoginPopup is Clicked\n");
			Thread.sleep(1000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("OddsDeleteInBetslip"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("OddsDeleteInBetslip"))).click();
			System.out.println("Remove odds market is Clicked\n");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC98-Tanzania_Login",
					"Verify user can check presence of Login button on register pop up window",
					"user cannot check presence of Login button on register pop up window", "Fail");
			System.out.println("Login Button is not Clicked :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-99 (Tanzania_Login) AS66528//
//check user able to close Sign up pop up window by clicking on it
	public boolean TZLogin_CloseIconOnSignupPopup(Mobile_HTML_Report report) {
		try {

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("OddsClickTZ"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("OddsClickTZ"))).click();
			System.out.println("Odds market is Clicked\n");
			Thread.sleep(1000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("SynapseBetnow"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("SynapseBetnow"))).click();
			System.out.println("Betnow Button is Clicked\n");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			System.out.println("Close Button of LoginPopup is Clicked\n");
			Thread.sleep(1000);

			report.detailsAppend("TC99-Tanzania_Login",
					"check user able to close Sign up pop up window by clicking on it",
					"checked user able to click on closebutton on Signup popup window", "Pass");

			log.debug("Switch to default tab");
			Thread.sleep(1000);
			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("OddsDeleteInBetslip"))).isDisplayed());
			webdriver.findElement(By.xpath(xpathMap.get("OddsDeleteInBetslip"))).click();
			System.out.println("Remove odds market is Clicked\n");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC99-Tanzania_Login",
					"check user able to close Sign up pop up window by clicking on it",
					"user not able to click on close button on Signup popup window", "Fail");
			System.out.println("Close Button is not Clicked :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-105 (TanzaniaLogin) PD69988//
//To check "Login" button should present on BW Jackpot page.
	public boolean TZBetwayJackpotsLogin(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("Bwjackpot"))).isDisplayed());
			System.out.print(" Bwjackpot Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Bwjackpot"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInBWJackpot")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			report.detailsAppend("TC105-TanzaniaLogin", "User is able see Login button in bw Jackpots",
					"Checked User is able see Login button in bw Jackpots", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC105-TanzaniaLogin", "User is able see Login button in bw Jackpots",
					"Checked User is able see Login button in bw Jackpots", "Fail");
			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

//TC-106 (TanzaniaLogin) PD69988//
//To check presence of Login button on "Log into your account" pop up window
	public boolean TZBetwayJackpotsLoginClick(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("Bwjackpot"))).isDisplayed());
			System.out.print(" Bwjackpot Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Bwjackpot"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInBWJackpot")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			webdriver.findElement(By.xpath(xpathMap.get("LoginInBWJackpot"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC106-TanzaniaLogin",
					"User is able see Login button in bw Jackpots Login pop up window",
					"Checked User is able see Login button in bw Jackpots Login pop up window", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC106-TanzaniaLogin",
					"User is able see Login button in bw Jackpots Login pop up window",
					"Checked User is able see Login button in bw Jackpots Login pop up window", "Fail");
			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

//TC-107 (TanzaniaLogin) PD69988//
//To check user able to close Login pop up window by clicking on it
	public boolean TZBetwayJackpotsLoginClose(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("Bwjackpot"))).isDisplayed());
			System.out.print(" Bwjackpot Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Bwjackpot"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInBWJackpot")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			webdriver.findElement(By.xpath(xpathMap.get("LoginInBWJackpot"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC107-TanzaniaLogin", "User is able click close in  Login pop up window",
					"Checked User is able click close in  Login pop up window", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC107-TanzaniaLogin", "User is able click close in  Login pop up window",
					"Checked User is able click close in  Login pop up window", "Fail");
			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

//TC-108 (TanzaniaLogin) PD69988//
//To check presence of Login button on register pop up window
	public boolean TZBetwayJackpotsLogininSignup(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("Bwjackpot"))).isDisplayed());
			System.out.print(" Bwjackpot Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Bwjackpot"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInBWJackpot")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			webdriver.findElement(By.xpath(xpathMap.get("LoginInBWJackpot"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			Thread.sleep(2000);
			WebElement odds1 = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action1 = new Actions(webdriver);
			action1.moveToElement(odds1).perform();
			report.detailsAppend("TC108-TanzaniaLogin", "User is able to see Login in Signup pop up window",
					"Checked User is able to see Login in Signup pop up window", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC108-TanzaniaLogin", "User is able to see Login in Signup pop up window",
					"Checked User is able to see Login in Signup pop up window", "Fail");
			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

//TC-109 (TanzaniaLogin) PD69988//
//To check presence of Login button on register pop up window
	public boolean TZBetwayJackpotsSignupClose(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("Bwjackpot"))).isDisplayed());
			System.out.print(" Bwjackpot Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("Bwjackpot"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("LoginInBWJackpot")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			webdriver.findElement(By.xpath(xpathMap.get("LoginInBWJackpot"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			Thread.sleep(2000);
			WebElement odds1 = webdriver.findElement(By.xpath(xpathMap.get("LoginInSignup")));
			Actions action1 = new Actions(webdriver);
			action1.moveToElement(odds1).perform();
			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignup"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC109-TanzaniaLogin", "User is able to Close Signup pop up window",
					"Checked User is able to Close Signup pop up window", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC109-TanzaniaLogin", "User is able to Close Signup pop up window",
					"Checked User is able to Close Signup pop up window", "Fail");
			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

//TC-110 (TanzaniaLogin) PD69988//
//To check user able to see login button on login pop up window on clicking Bet
//now button of the betlip from Esport section.
	public boolean TZEsportsLogin(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZEsports"))).isDisplayed());
			System.out.print(" TZEsports Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZEsports"))).click();
			Thread.sleep(2000);
			WebElement odds = webdriver.findElement(By.xpath(xpathMap.get("OddsClickTZ")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			webdriver.findElement(By.xpath(xpathMap.get("OddsClickTZ"))).click();
			Thread.sleep(2000);
			String Text1 = "Bet Now";
			String xpath1 = "//*[contains(normalize-space(text()), '" + Text1 + "')]";
			webdriver.findElement(By.xpath(xpath1)).click();
			Thread.sleep(2000);
			report.detailsAppend("TC110-TanzaniaLogin", "User is able to see Login pop up window opened",
					"Checked User is able to see Login pop up window opened", "Pass");
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC110-TanzaniaLogin", "User is able to see Login pop up window opened",
					"Checked User is able to see Login pop up window opened", "Fail");
			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

//TC-111 (TanzaniaLogin) PD69988//
//To check presence of Login button on "Log into your account" pop up window
	public boolean TZEsportsLoginClick(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZEsports"))).isDisplayed());
			System.out.print(" TZEsports Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZEsports"))).click();
			Thread.sleep(2000);
			String Text1 = "Bet Now";
			String xpath1 = "//*[contains(normalize-space(text()), '" + Text1 + "')]";
			webdriver.findElement(By.xpath(xpath1)).click();
			Thread.sleep(2000);
			report.detailsAppend("TC111-TanzaniaLogin", "User is able to see Login button Login pop up window opened",
					"Checked User is able to see Login button Login pop up window opened", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC111-TanzaniaLogin", "User is able to see Login button Login pop up window opened",
					"Checked User is able to see Login button Login pop up window opened", "Fail");
			return false;
		}

		return true;
	}

//TC-112 (TanzaniaLogin) PD69988//
//To check presence of Login button on "Log into your account" pop up window
	public boolean TZEsportsLoginClose(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZEsports"))).isDisplayed());
			System.out.print(" TZEsports Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZEsports"))).click();
			Thread.sleep(2000);
			String Text1 = "Bet Now";
			String xpath1 = "//*[contains(normalize-space(text()), '" + Text1 + "')]";
			webdriver.findElement(By.xpath(xpath1)).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC112-TanzaniaLogin", "User is able to close Login pop up window opened",
					"Checked User is able to close Login pop up window opened", "Pass");
			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(xpathMap.get("OddsRemoveTZ"))).click();
			Thread.sleep(2000);
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC112-TanzaniaLogin", "User is able to close Login pop up window opened",
					"Checked User is able to close Login pop up window opened", "Fail");
			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

//TC-113 (TanzaniaLogin) PD69988//
//To check presence of Login button on "Log into your account" pop up window
	public boolean TZEsportsSignup(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZEsports"))).isDisplayed());
			System.out.print(" TZEsports Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZEsports"))).click();
			Thread.sleep(2000);
			String Text1 = "Bet Now";
			String xpath1 = "//*[contains(normalize-space(text()), '" + Text1 + "')]";
			webdriver.findElement(By.xpath(xpath1)).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC113-TanzaniaLogin", "User is able to open Signup from Login pop up window",
					"Checked User is able to open Signup from Login pop up window", "Pass");
			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(xpathMap.get("OddsRemoveTZ"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC113-TanzaniaLogin", "User is able to open Signup from Login pop up window",
					"Checked User is able to open Signup from Login pop up window", "Fail");
			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

//TC-114 (TanzaniaLogin) PD69988//
//To check presence of Login button on "Log into your account" pop up window
	public boolean TZEsportsSignupClose(Mobile_HTML_Report report) {

		try {

			Assert.assertTrue(webdriver.findElement(By.xpath(xpathMap.get("TZEsports"))).isDisplayed());
			System.out.print(" TZEsports Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("TZEsports"))).click();
			Thread.sleep(2000);
			String Text1 = "Bet Now";
			String xpath1 = "//*[contains(normalize-space(text()), '" + Text1 + "')]";
			webdriver.findElement(By.xpath(xpath1)).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("SignupInLogin"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(xpathMap.get("CloseInSignup"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC114-TanzaniaLogin", "User is able to Close Signup pop up window",
					"Checked User is able to Close Signup pop up window", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC114-TanzaniaLogin", "User is able to Close Signup pop up window",
					"Checked User is able to Close Signup pop up window", "Fail");
			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

}
