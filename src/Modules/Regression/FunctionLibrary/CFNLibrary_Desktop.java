package Modules.Regression.FunctionLibrary;

import java.awt.AWTException;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
//import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.text.DecimalFormat;
import java.time.Duration;
import java.util.ArrayList;
import java.util.Base64;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import java.util.Random;
import java.util.Set;
import java.util.UUID;
import java.util.concurrent.TimeUnit;
import java.util.regex.Matcher;

import org.apache.commons.io.FileUtils;
import org.apache.log4j.Logger;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.ElementNotVisibleException;
import org.openqa.selenium.JavascriptException;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.PageLoadStrategy;
import org.openqa.selenium.WebDriverException;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.logging.LogEntry;
import org.openqa.selenium.logging.LogType;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.FluentWait;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.sikuli.script.FindFailed;
//import org.sikuli.script.Pattern;
//import org.sikuli.script.Region;
import org.sikuli.script.Screen;
import org.testng.Assert;
import org.testng.annotations.Optional;

import org.openqa.selenium.remote.RemoteWebElement;
import org.openqa.selenium.JavascriptExecutor;
//import com.sun.glass.events.KeyEvent;
import com.zensar.automation.api.RestAPILibrary;
import com.zensar.automation.framework.driver.DesktopDriver;
import com.zensar.automation.framework.model.Coordinates;
import com.zensar.automation.framework.report.Desktop_HTML_Report;
import com.zensar.automation.framework.report.Mobile_HTML_Report;
import com.zensar.automation.framework.utils.Constant;
import com.zensar.automation.framework.utils.ExcelDataPoolManager;
import com.zensar.automation.framework.utils.Util;
import com.zensar.automation.library.CommonUtil;
import com.zensar.automation.library.DataBaseFunctions;
import com.zensar.automation.library.TestPropReader;
import com.zensar.automation.model.FreeGameOfferResponse;

import io.appium.java_client.AppiumDriver;
import io.appium.java_client.PerformsTouchActions;
import io.appium.java_client.TouchAction;
import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.ios.IOSDriver;
import io.appium.java_client.touch.offset.PointOption;
import net.lightbody.bmp.BrowserMobProxyServer;
import net.lightbody.bmp.core.har.Har;
import net.lightbody.bmp.core.har.HarEntry;
import net.lightbody.bmp.core.har.HarLog;
import java.awt.datatransfer.*;

public class CFNLibrary_Desktop extends DesktopDriver {
	long Avgquickspinduration = 0;
	long Avgautoplayduration = 0;
	String amgWinAmt;

	public Logger log = Logger.getLogger(CFNLibrary_Desktop.class.getName());
	public WebElement ReminderPeriod;
	public WebElement Losslimit;
	public String Titlenew;
	public String newGames;
	public String Flag;
	public boolean visible;
	public boolean isScreenshotTaken;
	public boolean result;
	public String spinButton;
	public String message1;
	public String ret;
	public String para1;
	public String para2;
	public String timeLimitSessionReminder;
	public String sessionReminderCurrent;
	public String endSessionButton;
	public String continueButton;
	public String timeLimit;
	public String lossLimitSessionReminder;
	public String sessionBalanceSessionReminder;
	public String timeElapsedsessionreminder;
	public String sessionBalance;
	private double userwidth;
	private double userheight;
	private double userElementX;
	String osPlatform;
	private int Ty;
	private int Tx;
	public String selectedamout = " ";
	private int userElementY;
	String balance = null;
	String loyaltyBalance = null;
	String totalWin = null;
	int totalWinNew = 0;
	double totalWin1 = 0;
	int initialbalance1 = 0;
	String numline = null;
	int totalnumline = 0;
	int bal = 0;
	int previousBalance = 0;
	WebElement time = null;
	int newBalance = 0;
	int freegameremaining = 0;
	int freegamecompleted = 0;
	Properties OR = new Properties();
	public WebDriverWait Wait;
	String GameDesktopName;
	Har nhar;
	HarLog hardata;
	List<HarEntry> entries;
	Iterator<HarEntry> itr;
	public WebDriver webdriver;
	public BrowserMobProxyServer proxy;
	public Desktop_HTML_Report repo1;
	public String ex;
	String jsResult1;
	public double minbet = 0.01;
	String jsResultFinal1;
	public String commonLanguageContent;
	public String responseLanguageContent;
	public String userName;
	public static final String UTF8_BOM = "\uFEFF";
	public String GameName;
	public Map<String, String> XpathMap;
	Util clickAt = new Util();
	WebDriver driver;

	public CFNLibrary_Desktop(WebDriver webdriver1, BrowserMobProxyServer browserproxy1, Desktop_HTML_Report report,
			String gameName) throws IOException {
		log.info("In Super class contructor...");
		webdriver = webdriver1;
		repo1 = report;
		Wait = new WebDriverWait(webdriver, 10);

		proxy = browserproxy1;
		try {
			this.GameName = gameName.trim();
			log.info("game name: " + GameName);
			String newGameurl = null;
			String testDataExcelPath = TestPropReader.getInstance().getProperty("TestData_Excel_Path");

			ExcelDataPoolManager excelpoolmanager = new ExcelDataPoolManager(testDataExcelPath);
			log.info("Reading test data from path: " + testDataExcelPath);

			Map<String, String> rowData1 = null;
			int rowcount1 = excelpoolmanager.rowCount(testDataExcelPath, GameName);
			XpathMap = new HashMap<>();
			for (int i = 1; i < rowcount1; i++) {
				rowData1 = excelpoolmanager.readExcelByRow(testDataExcelPath, GameName, i);
				String element = rowData1.get("Element").trim();
				String xpath = rowData1.get("Xpath").trim();
				XpathMap.put(element, xpath);
			}

		} catch (FileNotFoundException e) {
			e.printStackTrace();
		}
	}

	public void maxiMizeBrowser() {
		// Maximize the window
		webdriver.manage().window().maximize();
	}

	/* game play error handling */
	public String Fun_gameplayerror() {
		String gameplay = null;
		try {

			gameplay = webdriver.findElement(By.xpath(XpathMap.get("Error"))).getText();
			// webdriver.findElement(By.xpath(XpathMap.get("spain_LobbyOK"))).click();

		} catch (Throwable t1) {
			t1.getMessage();
		}
		return gameplay;
	}

	public void wait_Bonus() {
		// Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("Bonus"))));
	}

	/*
	 * Author: Havish Jain Description: This function is used for get attribute data
	 * from the Har Parameter: String nodeValue ,String attribute1, String
	 * attribute2,String attribute3,String gameTitle
	 */
	public void verifyGameAnalytics() throws InterruptedException {
		try {
			for (LogEntry entry : webdriver.manage().logs().get(LogType.PERFORMANCE)) {
				if (entry.getMessage().contains("Network.dataReceived")) {
					Matcher dataLengthMatcher = java.util.regex.Pattern.compile("encodedDataLength\":(.*?),")
							.matcher(entry.getMessage());
					if (dataLengthMatcher.find()) {
						System.out.println(entry.getMessage());
						System.out.println(dataLengthMatcher.group());
						System.out.println();
					}
					// Do whatever you want with the data here.
				}
			}
			/*
			 * LogEntries logEntries = webdriver.manage().logs().get(LogType.BROWSER); if
			 * (!logEntries.getAll().isEmpty()){ System.out.println(
			 * "Console output from browser:" ); for (LogEntry logEntry : logEntries) {
			 * if((logEntry.getMessage()).contains("TestBackendConnector"))
			 * System.out.println("JS: " + logEntry.getLevel() + ": " +
			 * logEntry.getMessage()); } }
			 */
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * Date: 26/6/2019 Author: Sneha Jawarkar Description: GTR Reelspin
	 */
	public boolean clickspintostop() {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public void Reelspin_duration_during_win_loss() throws InterruptedException {
	}

	/*
	 * Date: 03/04/2017 Author: Ashish Kshatriya Description: This function used for
	 * click on Settings link in bargur menu Parameter: NA
	 */
	public boolean navigateSettings(String od) throws Exception {
		clickAt.clickAt(OR.getProperty("menubuttonPixels"), webdriver, "//*[@id=gameCanvas]");
		Thread.sleep(3000);
		clickAt.clickAt(OR.getProperty("settings"), webdriver, "//*[@id=gameCanvas]");
		Thread.sleep(3000);
		return true;
	}

	/*
	 * Date: 03/04/2017 Author: Ashish Kshatriya Description: This function used for
	 * take to Game in application Parameter: image path
	 */
	public boolean takeToGame(String amount) throws InterruptedException {
		webdriver.findElement(By.id(OR.getProperty("UserInput"))).sendKeys(amount);
		webdriver.findElement(By.id(OR.getProperty("Submit"))).click();
		Thread.sleep(3000);
		webdriver.findElement(By.id(OR.getProperty("Submit"))).click();
		return true;
	}

	/*
	 * Date: 24/04/2019 Description:To verify maximum count of spin. *Parameter: NA
	 * 
	 * @return boolean
	 */
	public boolean max_spin_chk() {
		try {
			Thread.sleep(5000);
			webdriver.findElement(By.id(XpathMap.get("AutoplayID"))).click();
			WebElement SizeSlider = webdriver.findElement(By.id(XpathMap.get("SpinSizeSlider_ID")));
			// String value1
			// =webdriver.findElement(By.id(XpathMap.get("SpinCount_ID"))).getText();
			Actions action = new Actions(webdriver);
			action.dragAndDropBy(SizeSlider, 600, 0).build().perform();
			log.debug("drag and drop performed");

			String value2 = webdriver.findElement(By.id(XpathMap.get("SpinCount_ID"))).getText();

			if (value2.equals("100")) {
				return true;
			} else {
				webdriver.navigate().refresh();
				webdriver.navigate().refresh();
				return false;
			}

		} catch (Exception e) {
			log.error("Session not over after autoplay spin", e);
			webdriver.navigate().refresh();
			webdriver.navigate().refresh();
			return false;
		}
	}

	/*
	 * Date: 04/05/2017 Author: Anish Description: This function Func_Login use to
	 * perform login operation Commented By :Kanchan Parameter: applicationName and
	 * url
	 */
	public String Func_Login(String userName, String password) {
		String Title = null;
		try {
			webdriver.findElement(By.xpath(OR.getProperty("GameUserName"))).clear();
			webdriver.findElement(By.xpath(OR.getProperty("GameUserName"))).sendKeys(userName);
			webdriver.findElement(By.xpath(OR.getProperty("GamePassword"))).clear();
			webdriver.findElement(By.xpath(OR.getProperty("GamePassword"))).sendKeys(password);
			webdriver.findElement(By.xpath(OR.getProperty("GameLogin"))).click();
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(OR.getProperty("canvasxPath"))));
			Title = webdriver.getTitle();
			System.out.println("The Title is " + Title);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return Title;
	}

	public void errorLogout() {
		// Commenting below code as we are using direct url to launch the game
		/*
		 * try { Wait = new WebDriverWait(webdriver,30); boolean test =
		 * webdriver.findElements(By.xpath(XpathMap.get("spain_LobbyOK"))).size() > 0;
		 * 
		 * if (test) { func_Click(XpathMap.get("spain_LobbyOK")); Thread.sleep(3000); }
		 * 
		 * 
		 * Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.
		 * get("five_Reel_slot")))); func_Click(XpathMap.get("navigation_MyAccount"));
		 * Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.
		 * get("logout")))); func_Click(XpathMap.get("logout"));
		 * Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.
		 * get("Login")))); func_Click(XpathMap.get("closeButtonLogin")); } catch
		 * (Exception e) { log.error("error in logout", e); }
		 */
	}

	/*
	 * Date: 04/05/2017 Author: Anish Description: This function Func_Login use to
	 * perform login operation Parameter: username andpassword Commented By :Kanchan
	 */
	public String Func_LoginBaseScene(String username, String password) {
		Wait = new WebDriverWait(webdriver, 500);
		String Title = null;
		try {

			webdriver.findElement(By.xpath(XpathMap.get("userName"))).clear();
			webdriver.findElement(By.xpath(XpathMap.get("userName"))).sendKeys(username);
			webdriver.findElement(By.xpath(XpathMap.get("password"))).clear();
			webdriver.findElement(By.xpath(XpathMap.get("password"))).sendKeys(password);

			Thread.sleep(3000);
			webdriver.findElement((By.xpath(XpathMap.get("Login")))).click();

			log.debug("Clicked on Login button and waiting for game to load");
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("clock"))));
			// newFeature();
			// summaryScreen_Wait();
			log.debug("Game has loaded successfully ");
			Title = webdriver.getTitle();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return Title;
	}

	public void newFeature() {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			boolean test = webdriver.findElements(By.xpath(XpathMap.get("OneDesign_NewFeature_ClickToContinue")))
					.size() > 0;
			if (test) {
				func_Click(XpathMap.get("OneDesign_NewFeature_ClickToContinue"));
				Thread.sleep(3000);
			}

			else {

				System.out.println("Continue Button is not Displaying");
			}
		} catch (Exception e) {

		} finally {
			webdriver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);
		}
	}

	public long Random_LoginBaseScene(String userName) throws Exception {
		long loadingTime = 0;
		try {
			webdriver.findElement(By.xpath(XpathMap.get("userName"))).clear();
			String password = XpathMap.get("Password");
			webdriver.findElement(By.xpath(XpathMap.get("userName"))).sendKeys(userName);
			webdriver.findElement(By.xpath(XpathMap.get("password"))).clear();
			webdriver.findElement(By.xpath(XpathMap.get("password"))).sendKeys(password);
			webdriver.findElement((By.xpath(XpathMap.get("Login")))).click();
			log.debug(
					"Clicked on login button after entering usename and password and waiting for in game clock to visible");
			long start = System.currentTimeMillis();
			new WebDriverWait(webdriver, 120)
					.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("clock"))));

			long finish = System.currentTimeMillis();
			long totalTime = finish - start;
			loadingTime = totalTime / 1000;
			log.debug("Total Time for Game load in Seconds is: " + loadingTime);

		} catch (NoSuchElementException e) {
			e.printStackTrace();
			log.debug("error while login");
			throw new Exception(e);
		}
		return loadingTime;
	}

	/*
	 * loading the game with direct url
	 */

	public boolean loadGame(String url) {
		boolean isGameLaunch = false;

		Wait = new WebDriverWait(webdriver, 120);

		try {
			webdriver.navigate().to(url);
			if (Constant.STORMCRAFT_CONSOLE.equalsIgnoreCase(XpathMap.get("TypeOfGame"))
					|| (Constant.YES.equalsIgnoreCase(XpathMap.get("continueBtnOnGameLoad")))) {

				if ("Yes".equalsIgnoreCase(XpathMap.get("CntBtnNoXpath"))) {
					log.debug("Waiting for clock to be visible");
					Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("clock"))));
					log.debug(" clock is visible");
					isGameLaunch = true;

				} else {

					Wait.until(ExpectedConditions.visibilityOfElementLocated(
							By.xpath(XpathMap.get("OneDesign_NewFeature_ClickToContinue"))));
					isGameLaunch = true;
				}

			} else {
				log.debug("Waiting for clock to be visible");
				Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("clock"))));
				log.debug(" clock is visible");
				isGameLaunch = true;
			}
			log.debug("game loaded  ");
		} catch (WebDriverException e) {
			log.debug("Exception occur in loadgame()");
			log.error(e.getMessage());
		}
		return isGameLaunch;
	}

	/* Sneha Jawarkar: Wait for Spin button */
	public boolean waitForSpinButtonstop() {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;

	}

	public void quickspin_with_Basegame_freespin() throws InterruptedException {
	}

	/**
	 * This method is used to wait till Base scene loads Author: Sneha Jawarkar
	 */
	public boolean IsBaseScene() {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	/**
	 * Date: 26/6/2019 Author: Sneha Jawarkar Description: GTR Reelspin
	 * 
	 * @throws Exception
	 */
	public void Reelspin_in_All() throws Exception {
	}

	/**
	 * * Date: 14/05/2019 Author: Sneha Jawarkar. Description: This function is used
	 * in GTR_freegame Parameter: play letter
	 */
	public void ClickBaseSceneDiscardButton() {
	}

	/**
	 * * Date: 17/05/2019 Author: Sneha Jawarkar. Description: This function is used
	 * in GTR_freegame Parameter: resume play button
	 */
	public boolean ClickFreegameResumePlayButton() {
		boolean b = false;
		return b;
	}

	/**
	 * This method is used to wait till FS scene loads Author: Sneha Jawarkar
	 */
	public boolean FreeSpinEntryScene() {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	/*
	 * Date: 16/05/2019 Author:Sneha Jawarkar Description: Freegame_GTR Parameter:
	 * NA
	 */
	public boolean CompleteFreeGameOffer_freespin(int freegamescount) {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	/**
	 * Date: 21/6/2019 Author: Sneha Jawarkar Description: GTR Reelspin
	 * 
	 * @throws InterruptedException
	 */
	public void ReelSpin_differecne_Duration_Normalspin_quickspin() throws InterruptedException {
	}

	public long Reelspin_speed_During_quickspin() throws InterruptedException {
		return Avgquickspinduration;

	}

	public long averageReelSpinDuration() throws InterruptedException {
		return 0;
	}

	/**
	 * Date: 21/6/2019 Author: Sneha Jawarkar Description: GTR Reelspin
	 * 
	 * @throws InterruptedException
	 */
	public long Reelspin_speed_During_Autoplay() {
		return Avgautoplayduration;

	}

	/*
	 * Date: 16/05/2019 Author:Sneha Jawarkar Description: Freegame_GTR Parameter:
	 * NA
	 */
	public boolean CompleteFreeGameOffer(int freegamescount) {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;

	}

	/**
	 * * Date: 14/05/2019 Author: Sneha Jawarkar. Description: This function is used
	 * in GTR_freegame Parameter: play letter
	 */
	public boolean clickOnPlayLater() {
		boolean b = false;
		return b;

	}

	/**
	 * Date:15/5/19 Author:Sneha Jawarkar GTR_Freegame purpose
	 */

	public void Backtogame_centerclick() {
	}

	/**
	 * Date: 29/05/2018 Author: Havish Jain Description: This function is used to
	 * refresh the page and will take screenshot of splash screen before navigating
	 * to Base Scene. Parameter:
	 */
	public String splashScreen(Desktop_HTML_Report report, String language) {
		Wait = new WebDriverWait(webdriver, 120);

		try {
			webdriver.navigate().refresh();
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("preLoaderBackground"))));
			report.detailsAppend("verify the Splash Screen", "Splash Screen should display",
					"Splash screen is displaying", "pass");
			Thread.sleep(3000);

			log.debug("Refreshed the game and taken screenshot of splash screen");
			if (Constant.STORMCRAFT_CONSOLE.equalsIgnoreCase(XpathMap.get("TypeOfGame"))
					|| (Constant.YES.equalsIgnoreCase(XpathMap.get("continueBtnOnGameLoad")))) {
				Wait.until(ExpectedConditions
						.visibilityOfElementLocated(By.xpath(XpathMap.get("OneDesign_NewFeature_ClickToContinue"))));
			} else {
				log.debug("Waiting for clock to be visible");
				Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("clock"))));
				log.debug("Waiting for clock is visible");
			}

		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	/**
	 * Date: 30/05/2018 Autohr: Havish Jain Description: This function used to
	 * launch game with Practice Play
	 * 
	 * @return Title
	 */
	public String func_LoginPracticePlay() {
		Wait = new WebDriverWait(webdriver, 500);
		String Title = null;
		try {
			func_Click(XpathMap.get("practice_Play"));
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("clock"))));
			Title = webdriver.getTitle();
			newFeature();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return Title;
	}

	public double round(double number) {
		DecimalFormat dnf = new DecimalFormat("#.##");
		double roundednumber = new Double(dnf.format(number));
		return roundednumber;
	}

	/*
	 * Date: 04/05/2017 Author: Anish Description: This function Func_Login use to
	 * perform login operation Parameter: username andpassword Commented By :Kanchan
	 */
	public String Func_LoginBaseScene_Spain(String username, String password) {
		Wait = new WebDriverWait(webdriver, 500);
		String Title = null;
		try {
			webdriver.findElement(By.xpath(OR.getProperty("GameUserName"))).clear();
			webdriver.findElement(By.xpath(OR.getProperty("GameUserName"))).sendKeys(username);
			webdriver.findElement(By.xpath(OR.getProperty("GamePassword"))).clear();
			webdriver.findElement(By.xpath(OR.getProperty("GamePassword"))).sendKeys(password);
			webdriver.findElement(By.xpath(OR.getProperty("GameLogin"))).click();
			Thread.sleep(10000);
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(OR.getProperty("canvasxPath"))));
			Title = webdriver.getTitle();
			System.out.println("The Title is " + Title);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return Title;
	}

	/*
	 * Date: 04/04/2017 Author: Anish Gadgil Description: Function Navigate url for
	 * Language Test scripts Parameter: applicationName and urlNavigate
	 */
	public String func_navigate(String urlNavigate) {
		Wait = new WebDriverWait(webdriver, 200);
		try {
			webdriver.navigate().to(urlNavigate);

			log.debug("navigated the url and  waiting for five_Reel_slot to be visible");
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("five_Reel_slot"))));
			// Thread.sleep(8000);

			if (webdriver.getPageSource().contains("Arthur")) {
				log.debug("Inside Microgaming Skin fuctionality");
				Actions actions = new Actions(webdriver);
				WebElement elementLocator = webdriver.findElement(By.xpath(XpathMap.get("GameName_Arthur")));
				actions.doubleClick(elementLocator).perform();
				Thread.sleep(3000);
				/*
				 * if
				 * (webdriver.findElement(By.xpath(XpathMap.get("PlayNow_Arthur"))).isDisplayed(
				 * )) {
				 * webdriver.findElement(By.xpath(XpathMap.get("GameName_Arthur"))).click(); }
				 */

			} else {
				log.debug("Inside Mint Skin block");
				GameDesktopName = webdriver.findElement(By.id(GameName)).getText();
				webdriver.findElement(By.id(GameName)).click();

			}
			log.debug("Clicked on game and waiting for Login button to visible");
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("Login"))));
		} catch (Exception e) {
			log.error("error in func_navigate", e);
		}
		return GameDesktopName;
	}
	/*
	 * public String func_navigate(String urlNavigate ){ Wait=new
	 * WebDriverWait(webdriver,500); try { webdriver.navigate().to(urlNavigate);
	 * 
	 * log.debug(
	 * "navigated the url and  waiting for five_Reel_slot to be visible");
	 * Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(
	 * XpathMap.get("five_Reel_slot")))); Thread.sleep(4000);
	 * System.out.println("Url  "+webdriver.getCurrentUrl());
	 * //System.out.println("Canvaaxpath"+OR.getProperty("canvasxPath"));
	 * GameDesktopName=webdriver.findElement(By.id("GameName")).getText();
	 * //Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(
	 * XpathMap.get("GameNamenew"))));
	 * //GameDesktopName=webdriver.findElement(By.xpath(XpathMap.get(
	 * "GameNamenew"))).getText();
	 * 
	 * System.out.println(GameDesktopName);
	 * webdriver.findElement(By.id(XpathMap.get("GameName"))).click();
	 * //webdriver.findElement(By.xpath(XpathMap.get("GameNamenew"))).click();
	 * //webdriver.findElement(By.id("breakDaBankAgain")).click(); log.debug(
	 * "Clicked on game and waiting for Login button to visible");
	 * Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(
	 * XpathMap.get("Login")))); } catch(Exception e){ log.error(
	 * "error in func_navigate", e); } return GameDesktopName; }
	 */

	public String func_navigate1(String urlNavigate) {
		Wait = new WebDriverWait(webdriver, 500);
		try {
			webdriver.navigate().to(urlNavigate);

			log.debug("navigated the url and  waiting for five_Reel_slot to be visible");
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("five_Reel_slot"))));
			Thread.sleep(4000);

			new FluentWait<WebDriver>(webdriver).withTimeout(Duration.ofMinutes(2)).pollingEvery(Duration.ofSeconds(5))
					.ignoring(NoSuchElementException.class);

			// wait1.until(arg0)
			{

			}

			GameDesktopName = webdriver.findElement(By.xpath(XpathMap.get("GameName1"))).getText();
			webdriver.findElement(By.xpath(XpathMap.get("GameName1"))).click();
			log.debug("Clicked on game and waiting for Login button to visible");
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("Login"))));
		} catch (Exception e) {
			log.error("error in func_navigate", e);
		}
		return GameDesktopName;
	}

	/*
	 * Date: 5/05/2019 Description:To verify Autoplay after free spin Parameter: NA
	 * 
	 * @return boolean
	 */

	public boolean is_autoplay_with_freespin(Desktop_HTML_Report gtr_autoplay) {
		try {
			webdriver.findElement(By.id(XpathMap.get("AutoplayID"))).click();
			webdriver.findElement(By.xpath(XpathMap.get("Start_Autoplay"))).click();

			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("spin_button"))));
			log.debug("Free spin over");
		} catch (Exception e) {
			log.error("Free Spins are not completed", e);
		}
		return true;
	}

	/*
	 * Date: 22/04/2019 Description:To verify Autoplay is avialable or not in game
	 * Parameter: NA
	 * 
	 * @return boolean
	 */
	public boolean ISAutoplayAvailable() {
		boolean autoplay;
		try {
			autoplay = webdriver.findElement(By.id(XpathMap.get("AutoplayID"))).isDisplayed();
		} catch (Exception e) {
			log.error("Autoplay id button is not visible", e);
			autoplay = false;
		}
		return autoplay;
	}
	/*
	 * Date: 17/05/2019 Author:Snehal Gaikwad Description: To set bet to maximum
	 * Parameter: NA
	 */

	public String setMaxBet() {
		String betAmount = null;
		try {
			String bet = "return mgs.mobile.casino.slotbuilder.v1.automation.getServiceById(BetService).setMaxBet()";
			getConsoleText(bet);

			betAmount = getConsoleText(
					"return mgs.mobile.casino.slotbuilder.v1.automation.getControlById(BetPanelComponent).Text.betSizeValueText._text");
		} catch (Exception e) {
			log.error("Exception while setting Max value", e);
			return null;

		}

		return betAmount;
	}

	/*
	 * Date: 17/05/2019 Author:Snehal Gaikwad Description: To Check whether the Loss
	 * Limit is less than current bet (Negative scenario) Parameter: NA
	 */
	public boolean is_Loss_Limit_Lower() {
		boolean flag = false;
		try {
			webdriver.findElement(By.id(XpathMap.get("Cancel_Autoplay"))).click();
			Thread.sleep(3000);
			setMaxBet();
			getConsoleText(
					"return mgs.mobile.casino.slotbuilder.v1.automation.getControlById(AutoplayOptionsComponent).onButtonClicked(autoplayOpenMobileButton)");
			webdriver.findElement(By.id(XpathMap.get("Start_Autoplay"))).click();
			log.debug("Loss limit is less than current bet error message display");
			flag = true;
		} catch (Exception e) {
			log.error("Loss limit is less than current bet error message not display");
			flag = false;
		}
		return flag;
	}
	/*
	 * Date: 20/05/2019 Author:Snehal Gaikwad Description: To Check whether the Loss
	 * Limit is reach or not Parameter: NA
	 */

	public boolean is_Loss_Limit_Reached(Desktop_HTML_Report report) {
		boolean flag = false;
		try {
			webdriver.findElement(By.id(XpathMap.get("Cancel_Autoplay"))).click();
			getConsoleText(
					"return mgs.mobile.casino.slotbuilder.v1.automation.getServiceById(BetService).betModel.setBetValue(5000)");
			Thread.sleep(3000);
			getConsoleText(
					"return mgs.mobile.casino.slotbuilder.v1.automation.getControlById(AutoplayOptionsComponent).onButtonClicked(autoplayOpenMobileButton)");
			WebElement losslimit = webdriver.findElement(By.id(XpathMap.get("lossLimit")));
			Select limits = new Select(losslimit);
			limits.selectByValue("10000");
			Thread.sleep(3000);
			webdriver.findElement(By.id(XpathMap.get("Start_Autoplay"))).click();
			while (true) {
				if (!GetConsoleBooleanText(
						"return mgs.mobile.casino.slotbuilder.v1.automation.getServiceById(AutoplayService).canAutoplayContinue().autoPlayContinue")) {
					Thread.sleep(3000);
					clickAtButton(
							"return mgs.mobile.casino.slotbuilder.v1.automation.getControlById(DialogComponent).onButtonClicked(primaryOnlyButton)");
					log.debug("Clicked on Loss Limit reached dailog  ");
					flag = true;
					break;
				} else {
					continue;
				}
			}
		} catch (Exception e) {
			log.error("Loss limit is not reached");
			flag = false;
		}
		return flag;
	}

	public boolean is_Win_Limit_Reached(Desktop_HTML_Report gtr_autoplay) {
		boolean flag = false;
		try {
			webdriver.findElement(By.id(XpathMap.get("Cancel_Autoplay"))).click();
			getConsoleText(
					"return mgs.mobile.casino.slotbuilder.v1.automation.getServiceById(BetService).betModel.setBetValue(2500)");
			Thread.sleep(3000);
			getConsoleText(
					"return mgs.mobile.casino.slotbuilder.v1.automation.getControlById(AutoplayOptionsComponent).onButtonClicked(autoplayOpenMobileButton)");
			WebElement losslimit = webdriver.findElement(By.xpath(XpathMap.get("Loss_Limit")));
			Select limits = new Select(losslimit);
			limits.selectByValue("10000");

			webdriver.findElement(By.id(XpathMap.get("Start_Autoplay"))).click();
			while (true) {
				if (GetConsoleBooleanText(
						"return mgs.mobile.casino.slotbuilder.v1.automation.getServiceById(AutoplayService).canAutoplayContinue().autoPlayContinue") == false) {
					Thread.sleep(3000);
					clickAtButton(
							"return mgs.mobile.casino.slotbuilder.v1.automation.getControlById(DialogComponent).onButtonClicked(primaryOnlyButton)");
					log.debug("Clicked on Loss Limit reached dailog  ");
					flag = true;
					break;
				}
				continue;
			}
		} catch (Exception e) {
			log.error("Loss limit is not reached");
			flag = false;

		}
		return flag;
	}

	/*
	 * Date: 22/04/2019 Description:To verify Autoplay with quick spin on Parameter:
	 * NA
	 * 
	 * @return boolean
	 */
	public void autoPlay_with_QS_On(Desktop_HTML_Report report) {
		try {
			Thread.sleep(5000);

			WebElement qsoffele = webdriver.findElement(By.xpath(XpathMap.get("QuickSpin_Off")));
			boolean qsoff = qsoffele.isDisplayed();

			if (qsoff) {
				qsoffele.click();

				boolean qson = webdriver.findElement(By.xpath(XpathMap.get("QuickSpin_On"))).isDisplayed();
				if (qson) {
					webdriver.findElement(By.id(XpathMap.get("AutoplayID"))).click();
					log.debug("Clicked on autoplay");
				} else {
				}

			}
		} catch (Exception e)

		{
			log.error("Autoplay is  not clickable with Quick Spin on", e);
		}

	}
	/*
	 * Date: 22/04/2019 Description:To verify Autoplay spin selection Parameter: NA
	 * 
	 * @return boolean
	 */

	public boolean autoplay_spin_selection() {
		try {
			// webdriver.findElement(By.id(XpathMap.get("AutoplayID"))).click();
			WebElement CoinSizeSlider = webdriver.findElement(By.id(XpathMap.get("SpinSizeSlider_ID")));
			String value1 = webdriver.findElement(By.id(XpathMap.get("SpinCount_ID"))).getText();
			Actions action = new Actions(webdriver);
			action.dragAndDropBy(CoinSizeSlider, 200, 0).build().perform();
			log.debug("drag and drop performed");

			String value2 = webdriver.findElement(By.id(XpathMap.get("SpinCount_ID"))).getText();

			if (value1.equals(value2)) {
				webdriver.navigate().refresh();
				webdriver.navigate().refresh();
				return false;
			} else {
				return true;
			}

		} catch (Exception e) {
			log.error("Spin count not getting change.", e);
			return true;

		}

	}

	/*
	 * Date: 24/04/2019 Description:To verify Autoplay spin session stop Parameter:
	 * NA
	 * 
	 * @return boolean
	 */
	public boolean is_autoplay_session_end() {

		try {

			WebElement SizeSlider = webdriver.findElement(By.id(XpathMap.get("SpinSizeSlider_ID")));
			// String value1
			// =webdriver.findElement(By.id(XpathMap.get("SpinCount_ID"))).getText();

			Actions action = new Actions(webdriver);
			action.dragAndDropBy(SizeSlider, -500, 0).build().perform();

			webdriver.findElement(By.xpath(XpathMap.get("Start_Autoplay"))).click();

			log.debug("Clicked Auto paly..");
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(XpathMap.get("Autoplay_active"))));
			log.debug("Autoplay is Active Now");

		} catch (Exception e) {
			log.error("Session not over after autoplay spin", e);
			webdriver.navigate().refresh();
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	public void clickAtButton(String button) {
		JavascriptExecutor js = ((JavascriptExecutor) webdriver);
		js.executeScript(button);
	}

	public void is_autoplay_setting(Desktop_HTML_Report report) {
		try {
		} catch (Exception e) {
		}

	}

	/*
	 * 
	 * */
	public boolean IsAutoplayAllMode() {
		boolean flag = ISAutoplayAvailable();
		if (flag) {
			func_LoginPracticePlay();
			ISAutoplayAvailable();
		}
		return flag;
	}

	/*
	 * Date: 03/04/2017 Author: Kanchan Badhiye Description: verifyTime
	 * functionality for verifying time Parameter: NA
	 */
	public String verifyTime() throws InterruptedException {
		Wait = new WebDriverWait(webdriver, 120);
		String Time = null;
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(OR.getProperty("canvasxPath"))));
			time = webdriver.findElement(By.xpath(OR.getProperty("GameTime")));
			Time = time.getText();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return Time;
	}

	/**
	 * Date: 25/10/2017 Author: Kamal Kumar Vishwakarma Description: This function
	 * is used for get Data from the Common Language File provided by Derivco
	 */
	public void getCommonLanguageFile(String language) throws IOException {

		File commonLanguage = new File("languageFiles/" + language + "/language.json");
		commonLanguageContent = clickAt.removeUTF8BOM(FileUtils.readFileToString(commonLanguage, "UTF-8"));

	}

	/**
	 * @return
	 */
	public double verify_Bet_Amount() {
		int betAmount = 0;
		try {
			/*
			 * String betValue=func_GetText(XpathMap.get("betValue")); String
			 * BetValue=func_String_Operation(betValue);
			 */
			// betAmount=Integer.parseInt(BetValue);
			System.out.println(betAmount);
		} catch (NumberFormatException e) {
			e.printStackTrace();
		}
		return betAmount;
	}

	/*
	 * Date: 04/05/2017 Author:Kanchan Badhiye Description: verify_Win_Amount use to
	 * verify TotalWin Parameter: nodeValue, attributes
	 */
	public double verify_Win_Amount(String nodeValue, String attribute1, String attribute2, String attribute3)
			throws InterruptedException {
		Wait = new WebDriverWait(webdriver, 180);
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(OR.getProperty("canvasxPath"))));
			clickAt.clickAt(OR.getProperty("spinButtonPixels"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(15000);
			String DataFromHar = clickAt.getData(nodeValue, attribute1, attribute2, attribute3, proxy);
			balance = DataFromHar.split(",")[0];
			loyaltyBalance = DataFromHar.split(",")[1];
			totalWin = DataFromHar.split(",")[2];
			totalWin1 = Double.parseDouble(totalWin);
		} catch (Exception e) {
			e.printStackTrace();
		}
		Thread.sleep(3000);
		return totalWin1;
	}

	/*
	 * Date: 04/05/2017 Author:Kanchan Badhiye Description:
	 * verify_Win_Amount_QuickSpin use to verify win amount for quick spin
	 * Parameter: nodeValue, attributes
	 */
	public int verify_Win_Amount_QuickSpin(String nodeValue, String attribute1, String attribute2, String attribute3)
			throws InterruptedException {
		Wait = new WebDriverWait(webdriver, 120);
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(OR.getProperty("canvasxPath"))));
			clickAt.clickAt(OR.getProperty("menubuttonPixels"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(500);
			// Clicking on setting
			clickAt.clickAt(OR.getProperty("settings"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(500);
			// Clicking on Quick Spin
			clickAt.clickAt(OR.getProperty("quickspin"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(500);
			// Clickin on Back to Game Button
			clickAt.clickAt(OR.getProperty("settingsbackbutton"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(500);
			// Clicking on extended Menu Button
			clickAt.clickAt(OR.getProperty("menubuttonextended"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(500);
			// Clicking on Spin button
			clickAt.clickAt(OR.getProperty("spinButtonPixels"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(500);
			String DataFromHar = clickAt.getData(nodeValue, attribute1, attribute2, attribute3, proxy);
			balance = DataFromHar.split(",")[0];
			loyaltyBalance = DataFromHar.split(",")[1];
			totalWin = DataFromHar.split(",")[2];
			totalWinNew = Integer.parseInt(totalWin);
		} catch (Exception e) {
			e.printStackTrace();
		}
		Thread.sleep(5000);
		return totalWinNew;
	}

	public boolean menubutton() throws InterruptedException {
		try {
			clickAt.clickAt(OR.getProperty("bargurMenu"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(3000);
		} catch (Exception e) {
			e.printStackTrace();
		}
		Thread.sleep(4000);
		return true;
	}

	/*
	 * Date: 04/04/2017 Author: Anish Gadgil Description: This function will open
	 * the settings page. Parameter: No parameters required.
	 */
	public boolean verifySettings() throws InterruptedException {
		boolean image = webdriver.findElements(By.id(OR.getProperty("canvasxPath"))).size() > 0;
		try {
			if (image) {
				clickAt.clickAt(OR.getProperty("bargurMenu"), webdriver, "//*[@id=gameCanvas]");
				Thread.sleep(500);
				clickAt.clickAt(OR.getProperty("settings"), webdriver, "//*[@id=gameCanvas]");
				Thread.sleep(500);
			} else {
			}
		} catch (ElementNotVisibleException e) {
			e.printStackTrace();
			webdriver.navigate().refresh();
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	/*
	 * Date: 18/04/2017 Author: Ashish Kshatriya Description: This function will
	 * expand the bargur menu. Parameter: No parameters required.
	 */
	public boolean verifyExpandBargurMenu() throws InterruptedException {
		boolean image = webdriver.findElements(By.id(OR.getProperty("canvasxPath"))).size() > 0;
		try {
			if (image) {
				clickAt.clickAt(OR.getProperty("bargurMenu"), webdriver, "//*[@id=gameCanvas]");
				Thread.sleep(500);
			} else {
			}
		} catch (ElementNotVisibleException e) {
			e.printStackTrace();
			webdriver.navigate().refresh();
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	/*
	 * Date: 18/04/2017 Author: Ashish Kshatriya Description: This function will
	 * closed the bargur menu. Parameter: No parameters required.
	 */
	public boolean verifyClosedBargurMenu() throws InterruptedException {
		boolean image = webdriver.findElements(By.id(OR.getProperty("canvasxPath"))).size() > 0;
		try {
			if (image) {
				clickAt.clickAt(OR.getProperty("closeHamBurgurMenu"), webdriver, "//*[@id=gameCanvas]");
				Thread.sleep(500);
			} else {
			}
		} catch (ElementNotVisibleException e) {
			e.printStackTrace();
			webdriver.navigate().refresh();
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	/*
	 * Date: 04/05/2017 Author:Kanchan Badhiye Description: verifySpinBeforeClick()
	 * use to verify balance amount Parameter: nodeValue, attributes
	 */
	public String verifySpinBeforeClick() throws InterruptedException {

		// Wait=new WebDriverWait(webdriver,120);
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(OR.getProperty("canvasxPath"))));
			Thread.sleep(10000);
			String outputData = clickAt.getData("Player", "balance", "", "", proxy);
			System.out.println("The outputData is " + outputData);
			System.out.println(outputData.split(",")[0]);
			balance = outputData.split(",")[0];
			Thread.sleep(3000);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return balance;
	}

	/*
	 * Date: 25/04/2019 Description:To verify Auto play on refreshing Parameter: NA
	 * 
	 * @return boolean
	 */
	public boolean isAutoplayOnAfterRefresh() {
		try {
			webdriver.findElement(By.xpath(XpathMap.get("Start_Autoplay"))).click();
			Thread.sleep(3000);
			webdriver.navigate().refresh();
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("spin_button"))));
			log.debug("On refresh previous autoplay session has not resume");
		} catch (Exception e) {
			log.error("On refresh previous autoplay session has resume");
			webdriver.navigate().refresh();
			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

	/*
	 * Date: 04/05/2017 Author:Kanchan Badhiye Description: paylinesExist use to
	 * verify paylines Parameter: nodeValue, attributes
	 */
	public int paylinesExist() throws InterruptedException {
		try {
			// clickAt.clickAt(OR.getProperty("spinButtonPixels"),webdriver,"");
			String DataFromHar = clickAt.getData("VisArea", "numPaylines", "", "", proxy);
			numline = DataFromHar.split(",")[0];
			System.out.println(numline + ":" + DataFromHar);
			totalnumline = Integer.parseInt(numline);
			System.out.println("The total paylines are " + totalnumline);
		} catch (Exception e) {
			e.printStackTrace();
		}
		Thread.sleep(3000);
		return totalnumline;
	}

	/**
	 * Date:07/12/2017 Author:premlata mishra actually not necessery in component
	 * store just declaration needed
	 * 
	 * @return true
	 */
	public void waitTillStop() throws InterruptedException {

	}

	public String symbol_Value(String locator) {
		String value = Get_Amount(locator);
		return value;
	}

	/**
	 * Date:07/12/2017 Author:premlata Mishra This method is to get any element
	 * value
	 * 
	 * @return true
	 */
	public String Get_Amount(String locator) {
		/*
		 * Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(
		 * locator))); String Value=func_GetText(locator); String
		 * Value1=func_String_Operation(Value);
		 */
		return null;
	}

	public String GetWinAmt() {
		return null;
	}

	/*
	 * Date: 04/05/2017 Author:Kanchan Badhiye Description: verifycredit use to
	 * verify credit amounts Parameter: nodeValue, attributes
	 */
	public String verifyCredit() {

		Wait = new WebDriverWait(webdriver, 120);
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(OR.getProperty("canvasxPath"))));
			clickAt.clickAt(OR.getProperty("spinButtonPixels"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(3000);
			String DataFromHar = clickAt.getData("Player", "balance", "", "", proxy);
			balance = DataFromHar.split(",")[0];

			// initialbalance1 = balance);
			Thread.sleep(3000);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return balance;
	}

	/*
	 * Date: 04/05/2017 Author:Kanchan Badhiye Description:
	 * validate_credits_firstSpin use to verify credit amounts afer first spin
	 * Parameter: nodeValue, attributes
	 */
	public String validate_credits_firstSpin() throws InterruptedException {
		Wait = new WebDriverWait(webdriver, 120);
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(OR.getProperty("canvasxPath"))));
			clickAt.clickAt(OR.getProperty("spinButtonPixels"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(5000);
			String DataFromHar = clickAt.getData("Player", "balance", "", "", proxy);
			balance = DataFromHar.split(",")[0];
			// previousBalance=Integer.parseInt(balance);
		} catch (Exception e) {
			e.printStackTrace();
		}
		Thread.sleep(3000);
		return balance;
	}

	/*
	 * Date: 04/05/2017 Author:Kanchan Badhiye Description:
	 * validate_credits_firstSpin use to verify credit amounts afer first spin
	 * Parameter: nodeValue, attributes
	 */
	public int validate_credits_firstSpinCS() throws InterruptedException {
		Wait = new WebDriverWait(webdriver, 120);
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(OR.getProperty("canvasxPath"))));
			clickAt.clickAt(OR.getProperty("spinButtonPixels"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(3000);
			String DataFromHar = clickAt.getData("Player", "balance", "", "", proxy);
			balance = DataFromHar.split(",")[0];
			previousBalance = Integer.parseInt(balance);
		} catch (Exception e) {
			e.printStackTrace();
		}
		Thread.sleep(3000);
		return previousBalance;
	}

	/*
	 * Date: 04/05/2017 Author:Kanchan Badhiye Description:
	 * validate_credits_firstSpin use to verify credit amounts afer next spin
	 * Parameter: nodeValue, attributes
	 */
	public String validate_credits_nextSpin() throws InterruptedException {
		Wait = new WebDriverWait(webdriver, 120);
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(OR.getProperty("canvasxPath"))));
			clickAt.clickAt(OR.getProperty("spinButtonPixels"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(5000);
			String DataFromHar = clickAt.getData("Player", "balance", "", "", proxy);
			balance = DataFromHar.split(",")[0];
			// newBalance = Integer.parseInt(balance);
		} catch (Exception e) {
			e.printStackTrace();
		}
		Thread.sleep(3000);
		return balance;
	}

	/*
	 * Date: 30/03/2017 Author:Anish Gadgil Description:This function is used to
	 * logout from the game. Parameter: No parameters are required
	 */
	public String Func_logout(String onedesign) {
		String loginTitle = null;
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(OR.getProperty("canvasxPath"))));
			// clickAt.clickAt(OR.getProperty("quickspin"),webdriver,"");
			// Thread.sleep(5000);
			// clickAt.clickAt(OR.getProperty("bargurMenu"),webdriver,"");//
			// Clicking on hamburger menu
			// clickAt.clickAt(OR.getProperty("bargurMenu"),webdriver,""); //
			// Clicking on hamburger menu
			clickAt.clickAt(OR.getProperty("bargurMenu"), webdriver, "//*[@id=gameCanvas]"); // Clicking
																								// on
																								// hamburger
																								// menu

			Thread.sleep(3000);
			clickAt.clickAt(OR.getProperty("gameLink"), webdriver, "//*[@id=gameCanvas]"); // Clicking
																							// on
																							// Games
																							// menu
			Thread.sleep(15000);
			waitForPageToBeReady();
			// Wait.until(ExpectedConditions.elementToBeClickable(By.id(OR.getProperty("accountsLobbyID"))));
			Wait.until(ExpectedConditions.elementToBeClickable(By.id("navigation_myaccount")));

			Thread.sleep(3000);
			webdriver.findElement(By.id("navigation_myaccount")).click(); // Clickin
																			// on
																			// Accounts
			Thread.sleep(3000);
			Wait.until(ExpectedConditions.elementToBeClickable(By.id(OR.getProperty("logoutbuttonId"))));
			Thread.sleep(3000);
			webdriver.findElement(By.id(OR.getProperty("logoutbuttonId"))).click(); // Clicking
																					// on
																					// log
																					// out
																					// button
			// Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(OR.getProperty("LoginTitleid"))));
			Wait.until(ExpectedConditions.elementToBeClickable(By.id(OR.getProperty("closeButtonid"))));
			Thread.sleep(3000);
			loginTitle = webdriver.findElement(By.id(OR.getProperty("LoginTitleid"))).getText(); // Clicking
																									// on
																									// log
																									// out
																									// button
			webdriver.findElement(By.id(OR.getProperty("closeButtonid"))).click(); // Clicking
																					// on
																					// log
																					// out
																					// button
			Thread.sleep(3000);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return loginTitle;
	}

	/*
	 * Date: 03/04/2017 Author: Kanchan Badhiye Description:
	 * freegamebalnceverifybeforespin() use for calculation of balance for free
	 * games Parameter: NA
	 */
	public int freegamebalnceverifybeforespin(String nodeValue, String attribute1, String attribute2, String attribute3)
			throws Exception {
		try {
			clickAt.clickAt(OR.getProperty("freeGamesPlayNow"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(3000);
			String DataFromHar = clickAt.getData(nodeValue, attribute1, attribute2, attribute3, proxy);
			balance = DataFromHar.split(",")[0];
			initialbalance1 = Integer.parseInt(balance);
		} catch (Exception e) {
			e.printStackTrace();
		}
		Thread.sleep(4000);
		return initialbalance1;
	}

	public int verify_balance_QuickSpin(String nodeValue, String attribute1, String attribute2, String attribute3)
			throws Exception {
		try {
			clickAt.clickAt(OR.getProperty("spinButton"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(3000);
			String DataFromHar = clickAt.getData(nodeValue, attribute1, attribute2, attribute3, proxy);
			balance = DataFromHar.split(",")[0];
			initialbalance1 = Integer.parseInt(balance);
		} catch (Exception e) {
			e.printStackTrace();
		}
		Thread.sleep(4000);
		return initialbalance1;
	}

	/*
	 * Date: 03/04/2017 Author: Kanchan Badhiye Description:
	 * freegamebalnceverifyafterspin() use for calculation of balance for free games
	 * Parameter: NA
	 */
	public int freegamebalnceverifyafterspin(String nodeValue, String attribute1, String attribute2, String attribute3)
			throws InterruptedException {
		try {
			clickAt.clickAt(OR.getProperty("spinButtonPixels"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(3000);
			String DataFromHar = clickAt.getData(nodeValue, attribute1, attribute2, attribute3, proxy);
			balance = DataFromHar.split(",")[0];
			totalWinNew = Integer.parseInt(balance);
			return totalWinNew;
		} catch (Exception e) {
			e.printStackTrace();
		}
		Thread.sleep(4000);
		return totalWinNew;
	}

	/*
	 * Date: 03/04/2017 Author: Kanchan Badhiye Description: refreshscreen() use for
	 * refreshing current url Parameter: NA
	 */

	public String clickAt(String userdata) {
		String[] coordinates1 = userdata.split(",");
		userwidth = Integer.parseInt(coordinates1[0]);
		userheight = Integer.parseInt(coordinates1[1]);
		userElementX = Integer.parseInt(coordinates1[2]);
		userElementY = Integer.parseInt(coordinates1[3]);
		Actions act = new Actions(webdriver);
		WebElement ele1 = webdriver.findElement(By.xpath("//*[@id=gameCanvas]"));
		double deviceHeight = ele1.getSize().height;
		double deviceWidth = ele1.getSize().width;
		Tx = (int) ((deviceWidth / userwidth) * userElementX);
		Ty = (int) ((deviceHeight / userheight) * userElementY);
		System.out.println("TX value:" + Tx + "Ty value:" + Ty);
		act.moveToElement(ele1, Tx, Ty).click().build().perform();
		return Tx + "," + Ty;
	}

	public boolean customeclickimage(String imagepath) {
		Screen S = new Screen();
		org.sikuli.script.Pattern image = new org.sikuli.script.Pattern(imagepath);
		System.out.println("get image" + image);
		try {
			S.click(image, 10);
		} catch (FindFailed e) {
			e.printStackTrace();
			webdriver.navigate().refresh();
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	public String entryScreen_Wait(String clickToContinue) {
		String wait = "";
		return wait;
	}

	public String clickToContinue() {
		String FreeSpin = "";
		return FreeSpin;
	}

	public String FS_Credits() {
		// func_Click(XpathMap.get("FreeSpin_ClickToContinue"));
		String FS_Credits = "";
		return FS_Credits;
	}

	public String summaryScreen_Wait() {
		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(XpathMap.get("clock_ID"))));
		return "";

	}

	public void FS_continue() {
		webdriver.findElement(By.className("labelFS")).click();
	}

	public String FS_RefreshWait() {
		// Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("FreeSpin_Credits"))));
		String wait = "";
		return wait;
	}

	public void jackpotSceneWait() {
	}

	public boolean elementWait(String element, String currentSceneText) {

		while (true) {
			String currentScene = getConsoleText(element);
			if (currentScene != null && currentScene.equalsIgnoreCase(currentSceneText)) {
				return true;
			}
		}
	}

//	public boolean spinclick() throws InterruptedException {
//		try {
//			ClickByCoordinates("return " + XpathMap.get("SpinBtnCoordinatex"),
//					"return " + XpathMap.get("SpinBtnCoordinatey"));
//			Thread.sleep(10000);
//		} catch (Exception e) {
//			e.printStackTrace();
//		}
//		Thread.sleep(4000);
//		return true;
//	}

	public String capturePaytableScreenshot(Desktop_HTML_Report report, String languageCode) throws Exception {
		String paytable = "";
		return paytable;
	}

	public void paytableClose() {
		/*
		 * webdriver.findElement(By.xpath(XpathMap.get("PaytableBack"))).click() ;
		 * Wait.until(ExpectedConditions.elementToBeClickable(By.xpath(XpathMap.
		 * get("OneDesignMenuClose"))));
		 * webdriver.findElement(By.xpath(XpathMap.get("OneDesignMenuClose"))). click();
		 */
	}

	public void bigWin_Wait() {
		// Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("OD_BIgWin"))));
	}

	public boolean Helpclick() throws InterruptedException {
		try {
			clickAt.clickAt(OR.getProperty("spinButtonPixels"), webdriver, "");
			Thread.sleep(3000);
		} catch (Exception e) {
			e.printStackTrace();// Close_Popup
		}
		Thread.sleep(4000);
		return true;
	}

	/*
	 * Date: 04/04/2017 Author: Kanchan Badhiye Description: spinclick() click on
	 * spin once
	 */
	public boolean multiplespinclick() {
		try {
			int gameremaining = 0;
			int i = 0;
			gameremaining = games_remainingforfreegame("CurrentGame", "gamesRemaining", "", "");
			// while(gameremaining!=0)
			System.out.println("inside multiplespinclick" + gameremaining);
			System.out.println("games remaining" + gameremaining);
			for (i = gameremaining; i > 0; i--) {
				clickAt.clickAt(OR.getProperty("spinButtonPixels"), webdriver, "");
				Thread.sleep(5000);
				System.out.println("spin button clicked" + i);
				gameremaining = games_remainingforfreegame("CurrentGame", "gamesRemaining", "", "");
				if (gameremaining == 0) {
					break;
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return true;
	}

	/*
	 * Date: 03/04/2017 Author: Kanchan Badhiye Description:
	 * games_remainingforfreegame() use for calculation of game remaining for free
	 * games Parameter: nodeValue,and attribute values
	 */
	public int games_remainingforfreegame(String nodeValue, String attribute1, String attribute2, String attribute3)
			throws InterruptedException {
		Wait = new WebDriverWait(webdriver, 120);
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(OR.getProperty("canvasxPath"))));
			clickAt.clickAt(OR.getProperty("spinButtonPixels"), webdriver, "");
			Thread.sleep(3000);
			String DatafromHar = clickAt.getData(nodeValue, attribute1, attribute2, attribute3, proxy);
			String gamesremainig = DatafromHar.split(",")[0];
			freegameremaining = Integer.parseInt(gamesremainig);
		} catch (Exception e) {
			e.printStackTrace();
		}
		Thread.sleep(4000);
		return freegameremaining;
	}

	/*
	 * Date: 03/04/2017 Author: Kanchan Badhiye Description:
	 * games_completeforfreegame() use for calculation of game complete for free
	 * games Parameter: nodeValue,and attribute values
	 */
	public int games_completeforfreegame(String nodeValue, String attribute1, String attribute2, String attribute3)
			throws InterruptedException {
		Wait = new WebDriverWait(webdriver, 120);
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(OR.getProperty("canvasxPath"))));
			String DatafromHar = clickAt.getData(nodeValue, attribute1, attribute2, attribute3, proxy);
			String gamescompleted = DatafromHar.split(",")[0];
			freegamecompleted = Integer.parseInt(gamescompleted);
			System.out.println("games gamescompleted" + gamescompleted);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return freegamecompleted;
	}

	/*
	 * Date: 03/04/2017 Author: Kanchan Badhiye Description: offerid_forfreegame()
	 * use for retriving offer id games Parameter: nodeValue,and attribute values
	 */
	public int offerid_forfreegame(String nodeValue, String attribute1, String attribute2, String attribute3)
			throws InterruptedException {
		Wait = new WebDriverWait(webdriver, 120);
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(OR.getProperty("canvasxPath"))));
			clickAt.clickAt(OR.getProperty("spinButtonPixels"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(3000);
			String DatafromHar = clickAt.getData(nodeValue, attribute1, attribute2, attribute3, proxy);
			String gamescompleted = DatafromHar.split(",")[0];
			freegamecompleted = Integer.parseInt(gamescompleted);
		} catch (Exception e) {
			e.printStackTrace();
		}
		Thread.sleep(4000);
		return freegamecompleted;
	}

	/*
	 * Date: 03/04/2017 Author: Ashish Kshatriya Description: Go in PayTable screen
	 * from the settings Parameter: N/A
	 */
	public boolean verifyPayTable() throws InterruptedException {
		boolean image = webdriver.findElements(By.id(OR.getProperty("canvasxPath"))).size() > 0;
		try {
			if (image) {
				clickAt.clickAt(OR.getProperty("bargurMenu"), webdriver, "//*[@id=gameCanvas]");
				Thread.sleep(500);
				clickAt.clickAt(OR.getProperty("payTableMenu"), webdriver, "//*[@id=gameCanvas]");
				Thread.sleep(500);
			} else {
			}
		} catch (ElementNotVisibleException e) {
			e.printStackTrace();
			webdriver.navigate().refresh();
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	/*
	 * Date: 18/04/2017 Author: Ashish Kshatriya Description: This function is used
	 * for Swipe min Parameter:Swipe Min Coin Size
	 */
	public boolean swipeMinCoinSize(double minCoinSize) throws Exception {
		try {
			// boolean image =
			// webdriver.findElements(By.id(OR.getProperty("canvasxPath"))).size()
			// > 0;
			clickAt.clickAt(OR.getProperty("SelectCredits"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(300);
			clickAt.clickAt(OR.getProperty("SelectCoins"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(500);
			clickAt.clickAt(OR.getProperty("CoinSize"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(500);
			for (int i = 0; i < minCoinSize; i++) {
				clickAt.clickAt(OR.getProperty("CoinMin"), webdriver, "//*[@id=gameCanvas]");
				Thread.sleep(500);
			}
			clickAt.clickAt(OR.getProperty("CoinSize"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(500);
		} catch (Exception e) {
			webdriver.navigate().refresh();
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	/*
	 * Date: 04/05/2017 Author:Kanchan Badhiye Description: settingback()use to
	 * click on back to setting screen Parameter: NA
	 */
	public boolean settingsBack() {
		return true;
	}

	/*
	 * Date: 29/05/2018 Author:Havish Jain Description: To open menu container
	 * Parameter: NA
	 */
	public boolean menuOpen() {
		boolean ret = false;
		try {
			// Clicking on hamburger menu
			String sX = "return Game.instance.__componentMap.BaseScene.__componentMap.menuShiftContainer.properties.x";
			String sY = "return Game.instance.__componentMap.BaseScene.__componentMap.menuShiftContainer.properties.globalY";

			clickAtCoordinates(sX, sY);
			Thread.sleep(3000);
			ret = true;
		} catch (InterruptedException e) {
			log.error("Error while opening menu", e);
			Thread.currentThread().interrupt();
		}
		return ret;
	}

	/*
	 * Date: 29/05/2018 Author:Havish Jain Description: To Close menu container
	 * Parameter: NA
	 */
	public boolean menuClose() {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	/*
	 * Date: 18/04/2017 Author: Ashish Kshatriya Description: This function is used
	 * for click on Base Scene Bet Parameter:N/A
	 */
	public boolean baseSceneBet() throws Exception {
		try {
			// boolean image =
			// webdriver.findElements(By.id(OR.getProperty("canvasxPath"))).size()
			// > 0;
			clickAt.clickAt(OR.getProperty("BetBaseScene"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(500);
		} catch (Exception e) {
			webdriver.navigate().refresh();
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	/*
	 * Date: 03/04/2017 Author: Ashish Kshatriya Description: PayTable slide
	 * naviagtion in PayTable screen from settings Parameter: N/A
	 */
	public boolean verifyPayTableNavigation() throws InterruptedException {

		try {
			clickAt.clickAt(OR.getProperty("navigateSlidePayTable"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(500);

		} catch (Exception e) {
			e.printStackTrace();
			webdriver.navigate().refresh();
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	/*
	 * Date: 03/04/2017 Author: Ashish Kshatriya Description: Close Bargur Menu
	 * Parameter: N/A
	 */
	public boolean closeMenu() throws InterruptedException {
		// boolean image =
		// webdriver.findElements(By.id(OR.getProperty("canvasxPath"))).size() >
		// 0;
		try {

			clickAt.clickAt(OR.getProperty("backFrompayTableMenu"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(500);
			clickAt.clickAt(OR.getProperty("closeHamBurgurMenu"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(500);

		} catch (Exception e) {
			e.printStackTrace();
			webdriver.navigate().refresh();
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	/*
	 * Date: 03/04/2017 Author: Ashish Kshatriya Description: Login with Set game
	 * limit for Regulatory Market Spain Country Parameter: Username, Password,
	 * Application Name
	 */
	public String Func_Login_RegulatoryMarket_Spain(String username, String password) {
		Wait = new WebDriverWait(webdriver, 50);
		String Title = null;
		try {
			webdriver.findElement(By.xpath(XpathMap.get("userName"))).clear();
			webdriver.findElement(By.xpath(XpathMap.get("userName"))).sendKeys(username);
			webdriver.findElement(By.xpath(XpathMap.get("password"))).clear();
			webdriver.findElement(By.xpath(XpathMap.get("password"))).sendKeys(password);

			webdriver.findElement((By.xpath(XpathMap.get("Login")))).click();
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("spain_LobbyOK"))));
			webdriver.findElement((By.xpath(XpathMap.get("spain_LobbyOK")))).click();

			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("spain_SlotGameOverlay"))));
			Title = webdriver.getTitle();

		} catch (Exception e) {
			e.printStackTrace();
		}
		return Title;

	}

	// Creating random player in uk

	public String Func_Login_RegulatoryMarket_UK(CommonUtil gcfnlib, String password) {
		// Uncomment the database require

		// DataBaseFunctions createplayer1=new
		// DataBaseFunctions("zensardev","Casino","10.247.208.54","1402","5118");
		DataBaseFunctions createplayer1 = new DataBaseFunctions("zensardev2", "Casino", "10.247.208.107", "1402",
				"5118");
		// DataBaseFunctions createplayer1=new
		// DataBaseFunctions("zensarqa","Casino","10.247.208.62","1402","5118");
		// DataBaseFunctions createplayer1=new
		// DataBaseFunctions("zensarqa2","Casino","10.247.208.113","1402","5118");
		userName = gcfnlib.randomStringgenerator();
		log.debug("The New username is ==" + userName);
		createplayer1.createUser(userName, "0", 0);

		String url = XpathMap.get("UK_url");

		func_navigate(url);
		String GameTitle = Func_LoginBaseScene(userName, password);

		return GameTitle;
	}

	/*
	 * Date: 17/05/2019 Author:Snehal Gaikwad Description: To Check the bet
	 * selection on autoplay bet setting Parameter: NA
	 */

	public boolean autoplaybetselection() {

		boolean betselection = false;
		try {
			getConsoleText(
					"return mgs.mobile.casino.slotbuilder.v1.automation.getControlById(AutoplayOptionsComponent).onButtonClicked(autoplayOpenMobileButton)");
			WebElement coinsbet = webdriver.findElement(By.xpath(XpathMap.get("Coins_Bet")));
			Select coins = new Select(coinsbet);
			coins.selectByValue("6");
			webdriver.findElement(By.id(XpathMap.get("Start_Autoplay"))).click();
			Thread.sleep(3000);
			betselection = true;
		} catch (Exception e) {
			log.error("Error in Autoplay Bet Selection");
			betselection = false;

		}
		return betselection;
	}

	/*
	 * Date: 06/04/2017 Author: Ashish Kshatriya Description:Overlay popup for Set
	 * Session Limit for regulatory market Spain Parameter: N/A
	 */
	/*
	 * Date: 06/04/2017 Author: Ashish Kshatriya Description:Overlay popup for Set
	 * Session Limit for regulatory market Spain Parameter: N/A
	 */
	public boolean slotGameLimitsOverlay() throws InterruptedException {
		try {
			boolean SetSessionLimits = webdriver.findElements(By.xpath(XpathMap.get("slotGameLimitsOverlay")))
					.size() > 0;
			if (SetSessionLimits)
				return true;
			else
				webdriver.navigate().refresh();
			webdriver.navigate().refresh();
			return false;
		} catch (NoSuchElementException e) {
			webdriver.navigate().refresh();
			webdriver.navigate().refresh();
			return false;
		}

	}

	/*
	 * Date: 06/04/2017 Author: Ashish Kshatriya Description:Verify
	 * SlotGameSession,TotalWagered,TotalPayouts & TotalBalance for regulatory
	 * market Spain Parameter: N/A
	 */
	public String[] lossLimit() throws InterruptedException {
		String ar[] = new String[4];
		try {
			boolean SlotGameSession = webdriver.findElements(By.xpath(OR.getProperty("SlotGamesession1"))).size() > 0;
			try {
				if (SlotGameSession)
					;
				String slotGame = webdriver.findElement(By.xpath(OR.getProperty("SlotGamesession1"))).getText()
						.toString().trim();
				ar[0] = slotGame;
			} catch (IllegalArgumentException e) {
				e.printStackTrace();
			}
			boolean TotalWagered = webdriver.findElements(By.xpath(OR.getProperty("TotalWagered"))).size() > 0;
			try {
				if (TotalWagered)
					;
				String totalWagered = webdriver.findElement(By.xpath(OR.getProperty("TotalWagered"))).getText()
						.toString().trim();
				ar[1] = totalWagered;
			} catch (NoSuchElementException e) {
				e.printStackTrace();
			}
			boolean TotalPayouts = webdriver.findElements(By.xpath(OR.getProperty("TotalPayouts"))).size() > 0;
			try {
				if (TotalPayouts)
					;
				String totalPayout = webdriver.findElement(By.xpath(OR.getProperty("TotalPayouts"))).getText()
						.toString().trim();
				ar[2] = totalPayout;
			} catch (NoSuchElementException e) {
				e.printStackTrace();
			}
			boolean TotalBalance = webdriver.findElements(By.xpath(OR.getProperty("TotalBalance"))).size() > 0;
			try {
				if (TotalBalance)
					;
				String totalBalance = webdriver.findElement(By.xpath(OR.getProperty("TotalBalance"))).getText()
						.toString().trim();
				ar[3] = totalBalance;
			} catch (NoSuchElementException e) {
				e.printStackTrace();
			}
		} catch (NoSuchElementException e) {
			e.printStackTrace();
		}
		return ar;
	}

	/*
	 * Date: 06/04/2017 Author: Ashish Kshatriya Description:Verify
	 * SlotGameSession,TotalWagered,TotalPayouts & TotalBalance for regulatory
	 * market Spain Parameter: N/A
	 */
	public boolean lossLimitPopupOverLay() throws InterruptedException {
		try {
			boolean popup = webdriver.findElements(By.id(OR.getProperty("LossLimitOverPopup"))).size() > 0;
			while (!popup) {
				clickAt.clickAt(OR.getProperty("spinButtonPixels"), webdriver, "//*[@id=gameCanvas]");
				Thread.sleep(3000);
				boolean popup1 = webdriver.findElements(By.id(OR.getProperty("LossLimitOverPopup"))).size() > 0;
				if (popup1) {
					break;
				}
			}
			boolean ok = webdriver.findElements(By.id(OR.getProperty("LossLimitOverOk"))).size() > 0;
			if (ok) {
				webdriver.findElement(By.id(OR.getProperty("LossLimitOverOk"))).click();
			} else {
			}
			boolean close = webdriver.findElements(By.id(OR.getProperty("LossLimitClose"))).size() > 0;
			if (close) {
				webdriver.findElement(By.id(OR.getProperty("LossLimitClose"))).click();
			} else {
			}
		} catch (NoSuchElementException e) {
			e.printStackTrace();
			webdriver.navigate().refresh();
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	/*
	 * Date: 03/04/2017 Author: Ashish Kshatriya Description: Set Session Limit for
	 * regulatory market Spain Parameter: LossLimit
	 */
	public String setLimit(String losslimit) throws InterruptedException {
		Wait = new WebDriverWait(webdriver, 120);
		try {
			boolean SetSessionLimits = webdriver.findElements(By.id(OR.getProperty("SetSessionLimitsForm"))).size() > 0;
			if (SetSessionLimits) {
				WebElement setTimeLimit = webdriver.findElement(By.id(OR.getProperty("SelectTimeLimit")));
				selectValue(setTimeLimit, OR.getProperty("TimeLimitdata"));
				Thread.sleep(3000);
				WebElement setReminderPeriod = webdriver.findElement(By.id(OR.getProperty("SelectReminderPeriod")));
				selectValue(setReminderPeriod, OR.getProperty("ReminderPeriod"));
				Thread.sleep(3000);
				WebElement setLossLimit = webdriver.findElement(By.id(OR.getProperty("SelectLossLimit")));
				// setLossLimit.sendKeys(OR.getProperty("LossLimit"));
				setLossLimit.sendKeys(losslimit);
				Thread.sleep(3000);
				/*
				 * WebElement setPreventFutureSlotGame=webdriver.findElement(By.id(OR.
				 * getProperty("SelectFutureSlotGame"))); selectValue(setPreventFutureSlotGame,
				 * OR.getProperty("FutureSlotGame"));
				 */
				webdriver.findElement(By.id(OR.getProperty("SetLimitButton"))).click();
				waitForPageToBeReady();
				Thread.sleep(500);
				boolean confirmgame = webdriver.findElements(By.id(OR.getProperty("ConfirmLaunchGame"))).size() > 0;
				if (confirmgame) {
					webdriver.findElement(By.id(OR.getProperty("ConfirmLaunchGame"))).click();
					waitForPageToBeReady();
				} else {
				}
				webdriver.findElement(By.id(OR.getProperty("canvasxPath")));
				Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(OR.getProperty("canvasxPath"))));

			}
		} catch (NoSuchElementException e) {
			e.printStackTrace();
		}
		String Title = webdriver.getTitle();
		return Title;
	}

	/*
	 * Date: 03/04/2017 Author: Ashish Kshatriya Description: Select value from the
	 * dropdown Parameter: UserName, Password, Application Name
	 */
	public void selectValue(WebElement ele, String selectData) throws InterruptedException {
		try {
			Select select = new Select(ele);
			select.selectByValue(selectData);
			Thread.sleep(500);
		} catch (ElementNotVisibleException e) {
			e.printStackTrace();
		}
	}

	/*
	 * Date: 06/04/2017 Author: Author: Ashish Kshatriya Description: This function
	 * is used for free spin occur in RMS. Parameter: NA
	 */
	public String verifySpinOccur() throws InterruptedException {
		String title = null;
		try {
			title = webdriver.getTitle();
			clickAt.clickAt(OR.getProperty("spinButtonPixels"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(4000);
		} catch (NoSuchElementException e) {
			e.printStackTrace();
		}
		return title;

	}

	/*
	 * Date: 06/04/2017 Author: Author: Ashish Kshatriya Description: This function
	 * is used for Verify that user can dismiss the overlay and continue to play
	 * another game in RMS. Parameter: NA
	 */
	public String exitGame() throws InterruptedException {
		String title = null;
		Wait = new WebDriverWait(webdriver, 120);
		try {
			webdriver.navigate().refresh();
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(OR.getProperty("canvasxPath"))));
			Thread.sleep(3000);
			clickAt.clickAt(OR.getProperty("bargurMenu"), webdriver, "//*[@id=gameCanvas]"); // Clicking
																								// on
																								// hamburger
																								// menu
			Thread.sleep(3000);
			clickAt.clickAt(OR.getProperty("gamesMenu"), webdriver, "//*[@id=gameCanvas]"); // Clicking
																							// on
																							// Games
																							// menu
			waitForPageToBeReady();
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(OR.getProperty("accountsLobbyID"))));
			title = webdriver.getTitle();
		} catch (NoSuchElementException e) {
			e.printStackTrace();
		}
		return title;
	}

	/*
	 * Date: 06/04/2017 Author: Author: Ashish Kshatriya Description: This function
	 * is used for take screenshots in application. Parameter: WebDriver driver
	 */
	public String createScreenshot(WebDriver webdriver) throws InterruptedException {
		UUID uuid = UUID.randomUUID();
		// String screenshotsFolder = "";
		/*
		 * screenshotsFolder = "ImageScreenshot//Mobile//"; File dir = new
		 * File(screenshotsFolder); dir.mkdirs();
		 */
		String imageLocation = "D:\\Mobile_Image_Parallel\\Parallel\\ImageScreenshot\\Mobile";
		File scrFile = ((TakesScreenshot) webdriver).getScreenshotAs(OutputType.FILE);
		Thread.sleep(3000);
		try {
			FileUtils.copyFile(scrFile, new File(imageLocation + uuid + ".png"));
		} catch (IOException e) {
			System.out.println("Error while generating screenshot:\n" + e.toString());
		}
		return imageLocation + uuid + ".png";
	}

	/*
	 * Date: 10/04/2017 Author: Author: Ashish Kshatriya Description: This function
	 * is used for to Verify error has occurred on not in Game Parameter: NA
	 */
	public String errorMessage() throws InterruptedException {
		String getMessage = null;
		try {
			if (webdriver.findElement(By.id(OR.getProperty("errorNotificationPopup"))).isDisplayed()) {
				getMessage = webdriver.findElement(By.id(OR.getProperty("errorNotificationPopupBody"))).getText();
			} else {
			}
		} catch (NoSuchElementException e) {
			// getTest().log(LogStatus.ERROR, "Error has been found on
			// screen"+getTest().addScreenCapture(createScreenshot(webdriver,"")));
		}
		return getMessage;
	}

	/*
	 * Date: 03/04/2017 Author: Anish Gadgil Description: Verifying the multiplier
	 * for Currency Parameter: nodeValue, attribute1, attribute2, attribute3
	 */
	public double currencymultiplier(String nodeValue, String attribute1, String attribute2, String attribute3)
			throws InterruptedException {
		double multiplier = 0;
		try {
			Thread.sleep(3000);
			clickAt.clickAt(OR.getProperty("spinButtonPixels"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(3000);
			String DataFromHar = clickAt.getData(nodeValue, attribute1, attribute2, attribute3, proxy);
			String numchips = DataFromHar.split(",")[0];
			multiplier = Integer.parseInt(numchips);
		} catch (Exception e) {
			e.printStackTrace();
		}
		Thread.sleep(5000);
		return multiplier;
	}

	/*
	 * Date:07/04/2017 Author: Anish Gadgil Description:This function will verify
	 * the starting screen of Free Games in partial automation Parameter:no
	 * parameters
	 */
	public boolean verify_FreeGames_Language_entryScreen_infoBar() throws InterruptedException {
		boolean image = webdriver.findElements(By.id(OR.getProperty("canvasxPath"))).size() > 0;
		try {
			if (image) {
				Thread.sleep(3000);
				clickAt.clickAt(OR.getProperty("infoBar"), webdriver, "//*[@id=gameCanvas]");
				Thread.sleep(3000);
			} else {
			}
		} catch (ElementNotVisibleException e) {
			e.printStackTrace();
			webdriver.navigate().refresh();
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	/*
	 * Date:07/04/2017 Author: Anish Gadgil Description:This function will verify
	 * the starting screen of Free Games in partial automation Parameter:no
	 * parameters
	 */
	public boolean verify_FreeGames_Language_entryScreen_discardButton() throws InterruptedException {
		boolean image = webdriver.findElements(By.id(OR.getProperty("canvasxPath"))).size() > 0;
		try {
			if (image) {
				Thread.sleep(3000);
				clickAt.clickAt(OR.getProperty("discardbutton"), webdriver, "//*[@id=gameCanvas]");
				Thread.sleep(3000);
			} else {
			}
		} catch (ElementNotVisibleException e) {
			e.printStackTrace();
			webdriver.navigate().refresh();
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	/*
	 * Date:10/04/2017 Author: Anish Gadgil Description:This function will take the
	 * game to base game from Discard Screen Parameter:no parameters
	 */
	public boolean discardScreentoBaseGame() throws InterruptedException {
		boolean image = webdriver.findElements(By.id(OR.getProperty("canvasxPath"))).size() > 0;
		try {
			if (image) {
				clickAt.clickAt(OR.getProperty("discardButtonOnScreen"), webdriver, "//*[@id=gameCanvas]");
				Thread.sleep(3000);
			} else {
			}
		} catch (ElementNotVisibleException e) {
			e.printStackTrace();
			webdriver.navigate().refresh();
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	/*
	 * Date:10/04/2017 Author: Laxmikanth Kodam Description:This function will Click
	 * on Play now button of Free games and then click on spin and will refresh the
	 * game. Parameter:no parameters
	 */
	public boolean verify_ResumeScreenonrefresh_FreeGames() throws InterruptedException {
		Wait = new WebDriverWait(webdriver, 120);
		boolean image = webdriver.findElements(By.id(OR.getProperty("canvasxPath"))).size() > 0;
		try {
			if (image) {
				clickAt.clickAt(OR.getProperty("freeGamesPlayNow"), webdriver, "//*[@id=gameCanvas]");
				Thread.sleep(3000);
				clickAt.clickAt(OR.getProperty("spinButtonPixels"), webdriver, "//*[@id=gameCanvas]");
				Thread.sleep(4000);
				webdriver.navigate().refresh();
				Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(OR.getProperty("canvasxPath"))));
			} else {
			}
		} catch (ElementNotVisibleException e) {
			e.printStackTrace();
			webdriver.navigate().refresh();
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// *********************************************************************************************
	/*
	 * Date:19/08/17 Author: Anish Gadgil Description:This function is used to click
	 * anywhere on the screen. Parameters: No Parameters
	 */
	public boolean clickAnywhere() throws InterruptedException {

		clickAt.clickAt(OR.getProperty("menubuttonextended"), webdriver, "//*[@id=gameCanvas]");
		Thread.sleep(3000);
		return true;
	}

	// ************************************************************************************************

	// ****************************************************************************************

	/*
	 * Date: 04/05/2017 Author:Kanchan Badhiye Description: vclickonsetting use to
	 * click on setting screen Parameter: NA
	 */

	public boolean clickonsetting() throws InterruptedException {

		// Thread.sleep(5000);
		try {
			clickAt.clickAt(OR.getProperty("menubuttonPixels"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(3000);
			clickAt.clickAt(OR.getProperty("settings"), webdriver, "//*[@id=gameCanvas]");
			Thread.sleep(3000);
		}

		catch (Exception e) {
			e.printStackTrace();
		}
		return true;
	}

	// ****************************************************************************************
	/*
	 * Date:10/04/2017 Author: Anish Gadgil Description:This function will take the
	 * game from resume screen to Base Game. Parameter:no parameters
	 */
	public boolean resumeScreentoBaseGame() throws InterruptedException {
		boolean image = webdriver.findElements(By.id(OR.getProperty("canvasxPath"))).size() > 0;
		try {
			if (image) {
				clickAt.clickAt(OR.getProperty("Resumescreenbutton"), webdriver, "//*[@id=gameCanvas]");
				Thread.sleep(3000);
			} else {
			}
		} catch (ElementNotVisibleException e) {
			e.printStackTrace();
			webdriver.navigate().refresh();
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	/*
	 * Date:10/04/2017 Author: Anish Gadgil Description:This function will take the
	 * game from summary screen to Base Game. Parameter:no parameters
	 */
	public boolean summaryScreentoBaseGame() throws InterruptedException {
		boolean image = webdriver.findElements(By.id(OR.getProperty("canvasxPath"))).size() > 0;
		try {
			if (image) {
				clickAt.clickAt(OR.getProperty("backToGameSummaryScreen"), webdriver, "//*[@id=gameCanvas]");
				Thread.sleep(3000);
			} else {
			}
		} catch (ElementNotVisibleException e) {
			e.printStackTrace();
			webdriver.navigate().refresh();
			webdriver.navigate().refresh();
			return false;
		} catch (NullPointerException e) {
			e.printStackTrace();
			webdriver.navigate().refresh();
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	/* Method is for component store */
	public boolean func_Click(String locator) {
		boolean present;
		try {
			WebElement ele = webdriver.findElement(By.xpath(locator));

			if (ele != null) {
				Wait.until(ExpectedConditions.elementToBeClickable(By.xpath(locator)));
				ele.click();
			}
			present = true;
		} catch (NoSuchElementException e) {
			present = false;
		}
		return present;
	}

	public void waitForPageToBeReady() {
		JavascriptExecutor js = (JavascriptExecutor) webdriver;
		for (int i = 0; i < 400; i++) {
			try {
				Thread.sleep(3000);
			} catch (InterruptedException e) {
				log.error("error in page to be ready", e);
				Thread.currentThread().interrupt();
			}
			if (js.executeScript("return document.readyState").toString().equals("complete")) {
				break;
			}
		}
	}

	// ********************************Exception
	// Handler********************************************************//
	public void evalException() throws Exception {
		// System.out.println("*************In Exception Handling
		// Class*************"+ex.getClass());
		// ex.printStackTrace();
		// repo1.details_append( "Execution Interrupted because of exception" ,
		// "" , "", "Interrupted");

		String exClass = ex.getClass().toString();
		// ex.printStackTrace();
		if (exClass.contains("StaleElementReferenceException")) {
			// System.out.println("Identified specific exception "+exClass);
			// System.out.println();
			repo1.detailsAppend("Execution Interrupted because of StaleElementReferenceException", "", "",
					"Interrupted");
		} else if (exClass.contains("NoSuchElementException")) {
			repo1.detailsAppend("Execution Interrupted because of NoSuchElementException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("InvalidElementStateException")) {
			repo1.detailsAppend("Execution Interrupted because of InvalidElementStateException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("ElementNotVisibleException")) {
			repo1.detailsAppend("Execution Interrupted because of ElementNotVisibleException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("ErrorInResponseException")) {
			repo1.detailsAppend("Execution Interrupted because of ErrorInResponseException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("InvalidSwitchToTargetException")) {
			repo1.detailsAppend("Execution Interrupted because of InvalidSwitchToTargetException", "", "",
					"Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("NoSuchFrameException")) {
			repo1.detailsAppend("Execution Interrupted because of NoSuchFrameException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("NoSuchWindowException")) {
			repo1.detailsAppend("Execution Interrupted because of NoSuchWindowException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("NoSuchAttributeException")) {
			repo1.detailsAppend("Execution Interrupted because of NoSuchAttributeException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("NoAlertPresentException")) {
			repo1.detailsAppend("Execution Interrupted because of NoAlertPresentException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("ElementNotSelectableException")) {
			repo1.detailsAppend("Execution Interrupted because of ElementNotSelectableException", "", "",
					"Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("InvalidCookieDomainException")) {
			repo1.detailsAppend("Execution Interrupted because of InvalidCookieDomainException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("UnableToSetCookieException")) {
			repo1.detailsAppend("Execution Interrupted because of UnableToSetCookieException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("RemoteDriverServerException")) {
			repo1.detailsAppend("Execution Interrupted because of RemoteDriverServerException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("TimeoutException")) {

			repo1.detailsAppend("Execution Interrupted because of TimeoutException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("MoveTargetOutOfBoundsException")) {
			repo1.detailsAppend("Execution Interrupted because of MoveTargetOutOfBoundsException", "", "",
					"Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("UnexpectedTagNameException")) {
			repo1.detailsAppend("Execution Interrupted because of UnexpectedTagNameException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("InvalidSelectorException")) {
			repo1.detailsAppend("Execution Interrupted because of InvalidSelectorException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("ImeNotAvailableException")) {
			repo1.detailsAppend("Execution Interrupted because of ImeNotAvailableException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("ImeActivationFailedException")) {
			repo1.detailsAppend("Execution Interrupted because of ImeActivationFailedException", "", "", "Interrupted");
			// System.out.println("Identified specific exception "+exClass);
		} else if (exClass.contains("UnhandledAlertException")) {
			repo1.detailsAppend("Execution Interrupted because of Unhandled message ALERT", "", "", "Interrupted");
			Thread.sleep(3000);
			// System.out.println("Identified specific exception "+exClass);

			// Alert alert = null;
			// try {
			// //System.out.println("Alert found"+((TargetLocator)
			// driver).alert().getText());
			// alert = driver.switchTo().alert();
			// } catch (Exception e) {
			//
			// e.printStackTrace();
			// System.out.println("Alert found"+alert.getText());
			//
			//
			// }
			// // Get the text of the alert or prompt
			//
			// //System.out.println("Alert found");
			//
			//
			// // And acknowledge the alert (equivalent to clicking "OK")
			// alert.accept();
		}
	}

	/**
	 * This method is used to verify the Base Game Logo
	 * 
	 * @param imagepath
	 * @return
	 */

	public boolean QuickSpinclick() {

		/* func_Click(XpathMap.get("OneDesignQuickSpin")); */

		return true;
	}

	public void winClick() {

	}

	public boolean customeverifyimage(String imagepath) throws InterruptedException {
		Wait.until(ExpectedConditions.visibilityOf(webdriver.findElement(By.id("inGameClock"))));// wait
																									// untill
																									// the
																									// base
																									// game
																									// screen
																									// wont
																									// come
		Screen S = new Screen();
		boolean newimage;
		org.sikuli.script.Pattern image = new org.sikuli.script.Pattern(imagepath);
		System.out.println("get image : " + image);
		try {
			// S.click(S.wait(image, 10));
			// Region r=S.find(image);
			org.sikuli.script.Region r = S.exists(image, 5);
			if (r != null) {
				System.out.println("image found");
				newimage = true;
			} else {
				System.out.println("image not found");
				newimage = false;
			}
		} catch (Exception e) {
			e.printStackTrace();
			webdriver.navigate().refresh();
			webdriver.navigate().refresh();
			return false;
		}
		return newimage;
	}
	/*
	 * Date: 03/04/2017 Author: Author: Dhairaya Gautam Description: This function
	 * is used for navigating for Denmark lobby Parameter: NA
	 */

	public String Func_navigate_reg(String applicationName, String url) {
		try {
			webdriver.get(url);
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(OR.getProperty("LobbyfiveReels"))));
			webdriver.findElement(By.id(OR.getProperty("LobbyfiveReels"))).click();
			Thread.sleep(4000);
			GameDesktopName = webdriver.findElement(By.id(applicationName)).getText();
			webdriver.findElement(By.id(applicationName)).click();
			// wait.until(ExpectedConditions.elementToBeClickable(By.id(OR.getProperty("LobbyfiveReels"))));
			/*
			 * JavascriptExecutor js = (JavascriptExecutor) webdriver;
			 * js.executeScript("arguments[0].scrollIntoView(true);",webdriver.
			 * findElement(By.xpath(OR.getProperty("LobbyfiveReels")))); Thread.sleep(4000);
			 */
			/*
			 * js.executeScript("arguments[0].scrollIntoView(true);",webdriver.
			 * findElement(By.id(applicationName))); Thread.sleep(3000); //
			 * Wait.until(ExpectedConditions.elementToBeClickable(By.id( applicationName)));
			 * GameDesktopName = webdriver.findElement(By.id(applicationName)).getText();
			 * System.out.println("application name " + GameDesktopName);
			 * webdriver.findElement(By.id(applicationName)).click();
			 */
			// change it
			// wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(OR.getProperty("loginPopUp"))));
		} catch (Exception e) {
			e.printStackTrace();
		}
		return GameDesktopName;
	}

	public boolean Func_LoginBaseScene_Gibraltar(String username, String password) {
		String Title = null;
		try {
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(OR.getProperty("GameUserName"))).clear();
			Thread.sleep(500);
			webdriver.findElement(By.xpath(OR.getProperty("GameUserName"))).sendKeys(username);
			webdriver.findElement(By.xpath(OR.getProperty("GamePassword"))).clear();
			webdriver.findElement(By.xpath(OR.getProperty("GamePassword"))).sendKeys(password);
			webdriver.findElement(By.xpath(OR.getProperty("GameLogin"))).click();

			Thread.sleep(25000);
			try {
				boolean regulaoryLastLogin = webdriver
						.findElements(By.xpath(OR.getProperty("regulatoryLastLoginPopup"))).size() > 0;
				if (regulaoryLastLogin) {
					webdriver.findElement(By.xpath(OR.getProperty("GameLogin"))).click();
					Thread.sleep(9000);
					// webdriver.findElement(By.xpath(OR.getProperty("regulatoryClose"))).click();

				}
			} catch (Exception e) {
				System.err.println("Error : " + e);
			}
			Thread.sleep(15000);
			// wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("inGameClock")));
			Thread.sleep(10000);
			Title = webdriver.getTitle();
			System.out.println("The Title is " + Title);
			/*
			 * String taketogame=webdriver.findElement(By.id("header")).getText();
			 * System.out.println(taketogame);
			 * webdriver.findElement(By.id("userInput")).sendKeys(amount);
			 * webdriver.findElement(By.id("submit")).click(); Thread.sleep(6000);
			 * webdriver.findElement(By.id("submit")).click(); Thread.sleep(30000);
			 * clickAt(OR.getProperty("newfeatures")); WebElement ele1 =
			 * webdriver.findElement(By.xpath("//*[@id=gameCanvas]")); ele1 =
			 * wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath
			 * (OR.getProperty("canvasxPath")))); Title = webdriver.getTitle();
			 * System.out.println("The Title is " + Title);
			 */

		} catch (Exception e) {
			e.printStackTrace();
		}
		return true;
	}

	public void verifyInGameMenuIcons(Desktop_HTML_Report sanitysuit) {
		Wait = new WebDriverWait(webdriver, 50);
		try {

			inGameMenuClick(sanitysuit, XpathMap.get("help_Image"), "Help");
			inGameMenuClick(sanitysuit, XpathMap.get("responsible_Image"), "Responsible Gaming");
			inGameMenuClick(sanitysuit, XpathMap.get("playcheck"), "Playcheck");
			inGameMenuClick(sanitysuit, XpathMap.get("cashcheck"), "Cashcheck");
			inGameMenuClick(sanitysuit, XpathMap.get("loyalty"), "Loyalty");
			/*
			 * String parentWindow= webdriver.getWindowHandle();
			 * 
			 * Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath
			 * (XpathMap.get("help_Image"))));
			 * webdriver.findElement(By.xpath(XpathMap.get("help_Image"))).click ();
			 * 
			 * for (String handle : webdriver.getWindowHandles()) {
			 * webdriver.switchTo().window(handle); } sanitysuit.details_append(
			 * "Verify that the "+XpathMap.get("help_Image")+
			 * " link should open in new window",
			 * "On clicking help link new window should open", "New window is open",
			 * "pass"); webdriver.close();
			 * 
			 * webdriver.switchTo().window(parentWindow);
			 */
		} catch (Exception e) {
			e.getMessage();
		}
	}

	public void inGameMenuClick(Desktop_HTML_Report sanitysuit, String locator, String iconName) {
		try {
			String parentWindow = webdriver.getWindowHandle();
			if (webdriver.findElement(By.xpath(locator)).isDisplayed()) {
				webdriver.findElement(By.xpath(locator)).click();

				for (String handle : webdriver.getWindowHandles()) {
					webdriver.switchTo().window(handle);
				}
				sanitysuit.detailsAppend("Verify that the " + iconName + " link should open in new window",
						"On clicking " + iconName + " link new window should open", "New window is open", "pass");
				webdriver.close();
				webdriver.switchTo().window(parentWindow);
			}
		} catch (Exception e) {
			e.getMessage();
		}
	}

	/**
	 * Date: 10/1/2018 Autohr: Laxmikanth Kodam Description: This function used to
	 * verify the help icon
	 *
	 */

	public void checkPopUp() {

	}

	/**
	 * Date: 10/1/2018 Autohr: Laxmikanth Kodam Description: This function used for
	 * verifying the help icon
	 * 
	 * @return
	 */

	public boolean verifyHelp() {

		boolean ret = false;
		boolean test = webdriver.findElement(By.id("inGameHelpLink")).isDisplayed();
		if (test) {
			ret = true;
		}
		return ret;
	}

	/**
	 * Date: 10/1/2018 Autohr: Laxmikanth Kodam Description: This function used for
	 * clicking help icon
	 * 
	 * @return
	 */
	public String clickHelp() {

		String GoogleTitle = null;

		return GoogleTitle;
	}

	/**
	 * Date: 03/04/2017 Author: Robin Dulhani Description: Returns the title of the
	 * web page. Parameter: Reference of WebDriver.
	 */

	public String getPageTitle(WebDriver w) {
		String Title = null;
		try {

			Title = w.getTitle();
		} catch (Exception e) {
			System.err.println("Error : " + e);

		}

		return Title;

	}

	/*
	 * Date: 03/04/2017 Author: Author: Dhairaya Gautam Description: This function
	 * used for page load Parameter: NA
	 */
	public String taketoGame() {
		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(OR.getProperty("canvasxPath"))));
		clickAt(OR.getProperty("newfeatures"));

		return null;
	}

	/*
	 * Date: 03/04/2017 Author: Author: Dhairaya Gautam Description: This function
	 * used for page load Parameter: NA
	 */
	public boolean Func_LoginBaseScene_Italy(String username, String password) {
		Wait = new WebDriverWait(webdriver, 500);
		String Title = null;
		boolean present = false;

		try {
			webdriver.findElement(By.xpath(XpathMap.get("userName"))).clear();
			webdriver.findElement(By.xpath(XpathMap.get("userName"))).sendKeys(username);
			webdriver.findElement(By.xpath(XpathMap.get("password"))).clear();
			webdriver.findElement(By.xpath(XpathMap.get("password"))).sendKeys(password);

			webdriver.findElement((By.xpath(XpathMap.get("Login")))).click();
			// func_Click(XpathMap.get("practice_Play"));
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("italyHeader"))));
			Title = webdriver.getTitle();
			if (Title != null) {

				present = true;
			} else {
				present = false;
			}

		} catch (Exception e) {
			e.printStackTrace();

		}
		return present;
	}

	// function for check game play req
	/*
	 * Date: 03/04/2017 Author: Author: Dhairaya Gautam Description: This function
	 * used for page load Parameter: NA
	 */
	public String isGamePlay() {
		String s = null;
		try {
			WebElement ele1 = Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id=header]")));
			ele1 = webdriver.findElement(By.xpath("//*[@id=header]"));
			s = ele1.getText();

		} catch (Exception e) {
			e.printStackTrace();
		}
		return s;
	}

	/**
	 * Date: 14/11/2017 Author:Premlata Mishra Description: This function is used
	 * verify incomplete game dialogue Parameter:String applicationName,String
	 * urlNavigate
	 */
	public String incomplete_GameName(String gamename) {
		String incomplete_GameName = null;
		try {
			Wait = new WebDriverWait(webdriver, 40);
			// Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("five_Reel_slot"))));
			JavascriptExecutor js = ((JavascriptExecutor) webdriver);
			js.executeScript("arguments[0].scrollIntoView(true);", webdriver.findElement(By.id(gamename)));

			js.executeScript("arguments[0].click();", webdriver.findElement(By.id(gamename)));
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("defaultOverlayContent")));
			incomplete_GameName = webdriver.findElement(By.id("defaultOverlayContent")).getText();
		} catch (Exception e) {
			incomplete_GameName = null;
		}
		System.out.println("incompletegamegame" + incomplete_GameName);
		return incomplete_GameName;
	}

	/*
	 * Date: 03/04/2017 Author: Author: Dhairaya Gautam Description: This function
	 * used for page load Parameter: NA
	 */
	public void clickamount(Desktop_HTML_Report italy, String amount) {

		try {
			// System.out.println(s);
			Thread.sleep(3000);
			webdriver.findElement(By.id("userInput")).sendKeys(amount);
			Thread.sleep(3000);
			webdriver.findElement(By.id("submit")).click();
			Thread.sleep(3000);
			webdriver.findElement(By.id("submit")).click();
			// Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(XpathMap.get("clock_ID"))));
			// Thread.sleep(30000);
			// value=true;
		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	/*
	 * private CharSequence valueOf(double amount) { return null; }
	 */

	/*
	 * Date: 03/04/2017 Author: Author: Anish Description: This function used for
	 * page load
	 */
	public String verifyCreditsValue() {
		return null;
	}
	/*
	 * Date: 03/04/2017 Author: Author: Dhairaya Gautam Description: This function
	 * used for page load Parameter: NA
	 */

	public boolean clickok() throws InterruptedException {
		boolean close = false;
		close = webdriver.findElements(By.xpath(OR.getProperty("LossLimitOverOk"))).size() > 0;
		if (close) {
			webdriver.findElement(By.xpath(OR.getProperty("LossLimitOverOk"))).click();
			close = true;
		} else {
		}
		return close;
	}

	/*
	 * Date: 03/04/2017 Author: Author: Dhairaya Gautam Description: This function
	 * used for page load Parameter: NA
	 */
	public String Func_logout_spain() {
		String loginTitle = null;
		try {
			/*
			 * waitForPageToBeReady(); Thread.sleep(00);
			 * wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath
			 * ("//*[@id=gameCanvas]")));
			 * 
			 * clickAt(OR.getProperty("bargurMenu")); // Clicking on hamburger menu
			 * Thread.sleep(3000); clickAt(OR.getProperty("gamesMenu")); // Clicking on
			 * Games menu
			 * 
			 * //WebElement ele1 = webdriver.findElement(By.xpath("//*[@id=gameCanvas]"));
			 * Thread.sleep(10000); waitForPageToBeReady();
			 */
			// WebElement ele1 =
			// webdriver.findElement(By.xpath("//*[@id=gameCanvas]"));
			Wait.until(ExpectedConditions.elementToBeClickable(By.id(OR.getProperty("accountsLobbyID")))).click();
			;
			Thread.sleep(3000);

			webdriver.findElement(By.id(OR.getProperty("logoutbuttonId"))).click(); // Clicking
																					// on
																					// log
																					// out
																					// button
			Thread.sleep(3000);
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(OR.getProperty("LoginTitleid"))));
			loginTitle = webdriver.findElement(By.id(OR.getProperty("LoginTitleid"))).getText(); // Clicking
																									// on
																									// log
																									// out
																									// button
			Thread.sleep(3000);
			webdriver.findElement(By.id(OR.getProperty("closeButtonid"))).click(); // Clicking
																					// on
																					// log
																					// out
																					// button
			Thread.sleep(3000);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return loginTitle;
	}

	/*
	 * Date: 03/04/2017 Author: Author: Kanchan B Description: This function use to
	 * open URL page load Parameter: url
	 */
	public void openUrl(String url) {
		try {
			webdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
			webdriver.manage().window().maximize();
			webdriver.get(url);

			Thread.sleep(20000);
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(OR.getProperty("canvasxPath"))));
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/*
	 * Date: 03/04/2017 Author: Author: Dhairaya Gautam Description: This function
	 * used for page load Parameter: NA
	 */
	public boolean navigateSettingsUK() throws Exception {
		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(OR.getProperty("canvasxPath"))));
		// clickAt(OR.getProperty("newFeatures"));
		Thread.sleep(3000);
		clickAt(OR.getProperty("bargurMenu"));
		Thread.sleep(500);
		clickAt(OR.getProperty("settingsUK"));
		Thread.sleep(500);
		return true;
	}

	/**
	 * Date: 03/04/2017 Author: Kamal Kumar Vishwakarma Description: Parameter:
	 */
	public double[] getAttributes(String nodeValue, String attribute1, String attribute2, String attribute3) {

		double[] data = new double[4];
		try {
			waitForPageToBeReady();
			Thread.sleep(3000);
			clickAt(OR.getProperty("spinButtonPixels"));
			Thread.sleep(15000);
			String DataFromHar = clickAt.getData(nodeValue, attribute1, attribute2, attribute3, proxy);
			balance = DataFromHar.split(",")[0];
			loyaltyBalance = DataFromHar.split(",")[1];
			totalWin = DataFromHar.split(",")[2];
			totalWinNew = Integer.parseInt(totalWin);

			data[0] = Integer.parseInt(balance);
			data[1] = Integer.parseInt(loyaltyBalance);
			data[2] = Integer.parseInt(totalWin);
			data[3] = totalWinNew;

		} catch (Exception e) {
			e.printStackTrace();
		}
		return data;
	}

	/**
	 * Date: 28/12/2017 Author:Laxmikanth Kodam Description: Parameter:
	 */

	public double[] getAttributesSpin(String nodeValue, String attribute1, String attribute2, String attribute3) {

		double[] data = new double[4];
		try {
			waitForPageToBeReady();
			Thread.sleep(3000);
			clickAt(OR.getProperty("spinButtonPixels"));
			Thread.sleep(15000);
			String DataFromHar = clickAt.getData(nodeValue, attribute1, attribute2, attribute3, proxy);
			balance = DataFromHar.split(",")[0];
			loyaltyBalance = DataFromHar.split(",")[1];
			totalWin = DataFromHar.split(",")[2];
			totalWinNew = Integer.parseInt(totalWin);

			data[0] = Integer.parseInt(balance);
			data[1] = Integer.parseInt(loyaltyBalance);
			data[2] = Integer.parseInt(totalWin);
			data[3] = totalWinNew;

		} catch (Exception e) {
			e.printStackTrace();
		}
		return data;
	}

	/*
	 * Date: 11/04/2017 Author:Robin Dulhani Description: This function verifies the
	 * working of the TOGGLE TOPBAR. Parameter: imagepath
	 */

	String topbarData;

	public String verifyToggleTopbar() {

		try {
			webdriver.switchTo().frame("commonUIIFrame");
			Thread.sleep(3000);
			webdriver.findElement(By.xpath("//*[@id=toggleTopbarButton]")).click();
			Thread.sleep(5000);
			String stake = webdriver.findElement(By.id("stake")).getText() + "!";
			String paid = webdriver.findElement(By.id("paid")).getText() + "!";
			webdriver.findElement(By.id("balance")).getText();
			String balance = webdriver.findElement(By.id("balance")).getText() + "!";
			String freebets = webdriver.findElement(By.id("freebets")).getText() + "!";
			System.out.println("stake= " + stake);
			System.out.println("paid= " + paid);
			System.out.println("balance= " + balance);
			System.out.println("freebets= " + freebets);
			topbarData = stake + paid + balance + freebets;
			System.out.println(topbarData);
		} catch (Exception e) {
			e.printStackTrace();

		}
		return topbarData;
	}

	public boolean verifyQuickSpin() throws InterruptedException {
		boolean newimage = false;
		try {
			// newimage=VerifyImage(imagepath);

		} catch (Exception e) {

			e.printStackTrace();
		}
		return newimage;
	}
	/*
	 * Date: 03/04/2017 Author: Author: Dhairaya Gautam Description: This function
	 * used for page load Parameter: NA
	 * 
	 * public boolean verifyQuickSpin(String imagepath) throws InterruptedException
	 * { Screen S = new Screen(); Match m = S.exists(imagepath); Pattern image = new
	 * Pattern(imagepath); System.out.println("get image" + image); try {
	 * Thread.sleep(5000);
	 * 
	 * if(S.exists(image)!=null){
	 * 
	 * System.out.println("Quick spin exists"); closeMenu();
	 * webdriver.navigate().refresh(); webdriver.navigate().refresh(); return false;
	 * } else { closeMenu(); return true;
	 * 
	 * 
	 * }
	 * 
	 * 
	 * } catch (Exception e) { e.printStackTrace(); webdriver.navigate().refresh();
	 * webdriver.navigate().refresh(); return false; }
	 * 
	 * }
	 */

	/**
	 * Date: 01/01/2017 Autohr: Laxmikanth Kodam Description:Verify the UK topbar
	 * stake by changing the coin size in settings
	 * 
	 * @return Title
	 * @throws InterruptedException
	 */

	public String[] verifyStakeWithTopBar() {

		return null;

	}

	/**
	 * @throws InterruptedException
	 * 
	 */

	public boolean verifyGameFlag() throws InterruptedException {
		Screen S = new Screen();

		org.sikuli.script.Pattern image = new org.sikuli.script.Pattern();

		boolean present = false;
		try {
			org.sikuli.script.Region r = S.exists(image);
			if (r != null) {

				present = true;
			} else {

				present = false;
			}

		} catch (Exception e) {
			e.printStackTrace();

		}
		return present;

	}

	public boolean verifySpin(String image) throws InterruptedException {

		return true;
	}

	/**
	 * Date: 01/01/2017 Autohr: Dhairaya Gautam Description:Verify the
	 * verifyResponsiblegamingLink in Denmark
	 * 
	 * @return Title
	 * @throws InterruptedException
	 */
	public boolean verifyResponsibleLink_Denmark() throws InterruptedException {

		try {

			webdriver.findElement(By.xpath("//*[@id=responsibleGaming]")).click();

			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("liSession")));

			String title = webdriver.getTitle();

			if (title != null) {
				System.out.println("Responsible gaming link is present");
			} else {
				System.out.println("Responsible gaming link is not present");

			}
			Thread.sleep(3000);

			Thread.sleep(3000);
			// closeMenu();
			/*
			 * clickAt(OR.getProperty("responsiblegmaingclick")); Thread.sleep(15000);
			 * if(webdriver.getTitle().equalsIgnoreCase( "Responsible Gaming")){
			 * title=webdriver.getTitle();
			 * System.out.println("Resonsible Gaming link is present"); } else{
			 * title=webdriver.getTitle(); System.out.println(title);
			 * /*webdriver.navigate().back(); webdriver.navigate().refresh();
			 * Thread.sleep(30000); closeMenu(); }
			 */
		} catch (Exception e) {
			e.printStackTrace();
		}

		return true;
	}

	/*
	 * Date: 07/04/2017 Author: Dhairaya Gautam Description: Method to verify
	 * responsible gaming link present in Denmark regulatory markets Parameter:image
	 * path
	 *
	 */
	public boolean verifyResponsibleLink(String imagepath) throws InterruptedException {
		Screen S = new Screen();
		org.sikuli.script.Pattern image = new org.sikuli.script.Pattern(imagepath);
		System.out.println("get image" + image);

		try {
			System.out.println("Responsible gaming link checking");
			Thread.sleep(3000);
			S.exists(image);
			Thread.sleep(3000);
			// closeMenu();
			/*
			 * clickAt(OR.getProperty("responsiblegmaingclick")); Thread.sleep(15000);
			 * if(webdriver.getTitle().equalsIgnoreCase( "Responsible Gaming")){
			 * title=webdriver.getTitle();
			 * System.out.println("Resonsible Gaming link is present"); } else{
			 * title=webdriver.getTitle(); System.out.println(title);
			 * /*webdriver.navigate().back(); webdriver.navigate().refresh();
			 * Thread.sleep(30000); closeMenu(); }
			 */
		} catch (Exception e) {
			e.printStackTrace();
		}

		return true;
	}

	public boolean verifyResponsibleLink_working(String imagepath, Desktop_HTML_Report report)
			throws InterruptedException {
		Screen S = new Screen();
		org.sikuli.script.Pattern image = new org.sikuli.script.Pattern(imagepath);
		System.out.println("get image" + image);

		try {
			System.out.println("Responsible gaming link checking");
			Thread.sleep(3000);
			S.exists(image);
			Thread.sleep(3000);
			closeMenu();
			/*
			 * clickAt(OR.getProperty("responsiblegmaingclick")); Thread.sleep(15000);
			 * if(webdriver.getTitle().equalsIgnoreCase( "Responsible Gaming")){
			 * title=webdriver.getTitle();
			 * System.out.println("Resonsible Gaming link is present"); } else{
			 * title=webdriver.getTitle(); System.out.println(title);
			 * /*webdriver.navigate().back(); webdriver.navigate().refresh();
			 * Thread.sleep(30000); closeMenu(); }
			 */
		} catch (Exception e) {
			e.printStackTrace();
		}

		return true;
	}

	/*
	 * int itemSize = elementCount.size();{
	 * 
	 * }
	 */

	public boolean verifydenmarkResponsibleLink(String imagepath) throws InterruptedException {
		Screen S = new Screen();
		org.sikuli.script.Pattern image = new org.sikuli.script.Pattern(imagepath);
		System.out.println("get image" + image);

		try {
			System.out.println("Responsible gaming link checking");
			Thread.sleep(3000);
			S.exists(image);
			Thread.sleep(3000);
			closeMenu();
			/*
			 * clickAt(OR.getProperty("responsiblegmaingclick")); Thread.sleep(15000);
			 * if(webdriver.getTitle().equalsIgnoreCase( "Responsible Gaming")){
			 * title=webdriver.getTitle();
			 * System.out.println("Resonsible Gaming link is present"); } else{
			 * title=webdriver.getTitle(); System.out.println(title);
			 * /*webdriver.navigate().back(); webdriver.navigate().refresh();
			 * Thread.sleep(30000); closeMenu(); }
			 */
		} catch (Exception e) {
			e.printStackTrace();
		}

		return true;
	}

	/*
	 * Date: 03/04/2017 Author: Author: Dhairaya Gautam Description: This function
	 * used for page load Parameter: NA
	 */
	public String Func_LoginBaseScene_Denmark(String username, String password) {
		String Title = null;
		try {
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(OR.getProperty("GameUserName"))).clear();
			Thread.sleep(500);
			webdriver.findElement(By.xpath(OR.getProperty("GameUserName"))).sendKeys(username);
			Thread.sleep(500);
			webdriver.findElement(By.xpath(OR.getProperty("GamePassword"))).clear();
			Thread.sleep(500);
			webdriver.findElement(By.xpath(OR.getProperty("GamePassword"))).sendKeys(password);
			Thread.sleep(500);
			webdriver.findElement(By.xpath(OR.getProperty("GameLogin"))).click();
			// Thread.sleep(10000);
			/*
			 * try { boolean regulaoryLastLogin =
			 * webdriver.findElements(By.xpath(OR.getProperty(
			 * "regulatoryLastLoginPopup"))).size() > 0; if (regulaoryLastLogin) {
			 * webdriver.findElement(By.xpath(OR.getProperty("GameLogin"))). click();
			 * Thread.sleep(3000); } } catch (Exception e) { System.err.println("Error : " +
			 * e); } webdriver.findElement(By.xpath(OR.getProperty("regulatoryClose"))
			 * ).click();
			 */

			// Thread.sleep(30000);
			// clickAt(OR.getProperty("newfeatures"));
			// WebElement ele1 =
			// webdriver.findElement(By.xpath("//*[@id=gameCanvas]"));
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("txtWin")));
			Thread.sleep(500);
			// clickAt(OR.getProperty("newfeatures"));
			Title = webdriver.getTitle();
			System.out.println("The Title is " + Title);

		} catch (Exception e) {
			e.printStackTrace();
		}
		return Title;
	}

	public String PreventFuture() throws Exception {
		String PreventFuture1 = null;

		WebElement PreventFuture = webdriver.findElement(By.xpath(OR.getProperty("PreventFuture")));

		PreventFuture1 = PreventFuture.getText();

		return PreventFuture1;
	}

	/* code for verifying slottitle */
	public String verifyslottitle() throws Exception {
		String slotgametitle1 = null;

		WebElement slotgametitle = webdriver.findElement(By.xpath(OR.getProperty("SlotGameLimit")));
		slotgametitle1 = slotgametitle.getText();

		return slotgametitle1;
	}

	public String verifysetlimitbutton() throws Exception {
		String setlimit1 = null;

		WebElement setlimit = webdriver.findElement(By.xpath(OR.getProperty("setlimitbutton")));
		setlimit1 = setlimit.getText();
		setlimit.click();

		return setlimit1;
	}

	public boolean verifyhyperlink() throws Exception {
		boolean ret = false;

		if (webdriver.findElement(By.xpath(OR.getProperty("backtolobby"))).isDisplayed()) {
			System.out.println("enabled");
			ret = true;
		}

		return ret;
	}

	/* verify time limit blank */
	public boolean verifytimelimitblank() throws Exception {

		boolean ret = false;

		WebElement timelimitinputbox = webdriver.findElement(By.xpath(OR.getProperty("timeLimitInput")));
		String textInsideInputBox = timelimitinputbox.getAttribute("value");

		// Check whether input field is blank
		if (textInsideInputBox.isEmpty()) {
			System.out.println("Input field is empty");
			ret = true;
		}

		return ret;
	}

	/* verify reminder period blank */
	public boolean verifyreminderperiodblank() throws Exception {
		boolean ret = false;

		WebElement timelimitinputbox = webdriver.findElement(By.xpath(OR.getProperty("reminderLimitInput")));
		String textInsideInputBox = timelimitinputbox.getAttribute("value");

		// Check whether input field is blank
		if (textInsideInputBox.isEmpty()) {
			System.out.println("Input field is empty");
			ret = true;
		}

		return ret;
	}

	/* verify time loss limit blank */
	public boolean losslimitblank() throws Exception {
		boolean ret = true;

		WebElement timelimitinputbox = webdriver.findElement(By.xpath(OR.getProperty("lossLimitInput")));
		String textInsideInputBox = timelimitinputbox.getAttribute("value");

		// Check whether input field is blank
		if (textInsideInputBox.isEmpty()) {
			System.out.println("Input field is empty");
			ret = true;
		}

		return ret;
	}

	/**
	 * Date:10-1-2018 Name:Laxmikanth Kodam Description: this function is used to
	 * language verification on base scene
	 * 
	 * @return lobbytitle
	 */

	public boolean baseSceneLanguage() {

		return true;
	}

	/**
	 * Date:10-1-2018 Name:Laxmikanth Kodam Description: this function is used to
	 * language verification inside paytable
	 */

	public boolean paytableLanguage() {

		return true;
	}

	/**
	 * Date:10-1-2018 Name:Laxmikanth Kodam Description: this function is used to
	 * language verification inside settings
	 */

	public boolean settingsLanguage() {

		return true;
	}

	/**
	 * Date:10-1-2018 Name:Laxmikanth Kodam Description: this function is used to
	 * language verification inside hamburger menu
	 * 
	 * @return true
	 */

	public boolean menuLinksLanguage() {

		return true;
	}

	/* verify time limit blank */
	public boolean verifyfutureprventblank() throws Exception {
		boolean ret = false;

		WebElement timelimitinputbox = webdriver.findElement(By.xpath(OR.getProperty("preventfutureslotgamefor")));
		String textInsideInputBox = timelimitinputbox.getAttribute("value");

		// Check whether input field is blank
		if (textInsideInputBox.isEmpty()) {
			System.out.println("Input field is empty");
			ret = true;
		}

		return ret;
	}

	/**
	 * Date:07/12/2017 Author:Laxmikanth Kodam This method is used for verifying the
	 * status of the quick spin
	 * 
	 * @return true
	 */

	/**
	 * Date:07/12/2017 Author:Laxmikanth Kodam This method is actually not necessery
	 * in component store just declaration needed
	 * 
	 * @return true
	 */

	public String verifyBalanceBetBeforeSpin() {

		return null;
	}

	/**
	 * Date: 13/11/2017 Author: Ashish Kshatriya Description: This function is used
	 * for get Webelement text Parameter: By locator
	 */
	public String func_GetText(String locator) {
		return null;

	}

	/**
	 * Date:22/11/2017 Author Lamxikanth Kodam Common added for logout() This method
	 * is common logout function for the component store
	 * 
	 * @return
	 * @throws Exception
	 */
	public String Func_logout_OD() throws Exception {
		String loginTitle = null;
		try {
			func_Click(XpathMap.get("OneDesign_HomeIcon"));// Clicking on X button

			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("five_Reel_slot"))));
			if (webdriver.getPageSource().contains("Arthur")) {
				func_Click(XpathMap.get("Profile"));
				// func_Click("//*[@id=myaccount]");
				log.debug("Clicked on profile");

			} else {
				func_Click(XpathMap.get("navigation_MyAccount"));
				log.debug("Clicked on My Account");

			}
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("logout"))));
			loginTitle = func_GetText(XpathMap.get("logout"));
			func_Click(XpathMap.get("logout"));
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("Login"))));
			Thread.sleep(3000);
			func_Click(XpathMap.get("closeButtonLogin"));
		} catch (WebDriverException e) {
			e.getMessage();
			throw new Exception(e);
		}
		return loginTitle;
	}

	// C720751(5005-5006-5011) Selectable options :Ensure dropdown box appear
	// for Time limit box

	public boolean verifytimedropdown() throws Exception {
		boolean ret = false;

		WebElement timedropdown = webdriver.findElement(By.xpath(OR.getProperty("timeLimitInput")));
		timedropdown.click();
		Thread.sleep(500);
		ret = true;

		return ret;
	}

	// C720751(5005-5006-5011) Selectable options :Ensure dropdown box appear
	// for reminder limit box
	public boolean verifyreminderdropdown() throws Exception {
		boolean ret1 = false;

		WebElement reminderdropdown = webdriver.findElement(By.xpath(OR.getProperty("reminderLimitInput")));
		reminderdropdown.click();
		Thread.sleep(500);
		ret1 = true;

		return ret1;
	}

	// Selectable option Ensure slotreminder dropdown appear
	public boolean verifypreventfutureslotreminder() throws Exception {
		boolean ret = false;

		WebElement preventfuture = webdriver.findElement(By.xpath(OR.getProperty("preventfutureslotgamefor")));
		preventfuture.click();
		ret = true;

		return ret;
	}

	// Ensure there are time duration options available for selection in the
	// different time units (eg, 1 hour, 1 minute).

	public String verifytimedurationoption(String dropdownValue) throws Exception {
		String selectoption = null;
		try {
			WebElement timedropdown = webdriver.findElement(By.xpath(OR.getProperty("timeLimitInput")));
			// timedropdown.clear();
			// timedropdown.click();
			Thread.sleep(500);
			// List<WebElement> optionsoftimelimit =
			// webdriver.findElements(By.xpath(OR.getProperty("timelimitoptions")));
			Select optionsoftimelimit = new Select(timedropdown);
			System.out.println("select options" + optionsoftimelimit);
			optionsoftimelimit.selectByVisibleText(dropdownValue);
			// optionsoftimelimit.selectByIndex(2);
			selectoption = optionsoftimelimit.getFirstSelectedOption().getText();
			System.out.println("option " + optionsoftimelimit);

		} catch (Exception e) {
			e.getMessage();
		}

		return selectoption;
	}

	// Ensure there are time duration options available for selection in the
	// different time units (eg, 1 hour, 1 minute).

	public String verifytimedurationoption() throws Exception {
		String selectoption = null;

		WebElement timedropdown = webdriver.findElement(By.xpath(OR.getProperty("timeLimitInput")));
		// timedropdown.clear();
		// timedropdown.click();
		Thread.sleep(500);
		// List<WebElement> optionsoftimelimit =
		// webdriver.findElements(By.xpath(OR.getProperty("timelimitoptions")));
		Select optionsoftimelimit = new Select(timedropdown);
		System.out.println("select options" + optionsoftimelimit);
		optionsoftimelimit.selectByIndex(1);
		// optionsoftimelimit.selectByIndex(2);
		selectoption = optionsoftimelimit.getFirstSelectedOption().getText();
		System.out.println("option " + optionsoftimelimit);

		return selectoption;
	}

	// Ensure there are time duration options available for selection in the
	// different time units (eg, 1 hour, 1 minute).

	public String verifytimedurationoption1() throws Exception {
		String selectoption = null;

		WebElement timedropdown = webdriver.findElement(By.xpath(OR.getProperty("timeLimitInput")));
		// timedropdown.clear();
		// timedropdown.click();
		Thread.sleep(500);
		// List<WebElement> optionsoftimelimit =
		// webdriver.findElements(By.xpath(OR.getProperty("timelimitoptions")));
		Select optionsoftimelimit = new Select(timedropdown);
		System.out.println("select options" + optionsoftimelimit);
		optionsoftimelimit.selectByIndex(1);
		// optionsoftimelimit.selectByIndex(2);
		selectoption = optionsoftimelimit.getFirstSelectedOption().getText();
		System.out.println("option " + optionsoftimelimit);

		return selectoption;
	}

	public String verifyreminderperiodoption(String dropdownValue) throws Exception {
		String selectoption = null;
		try {
			WebElement reminderdropdown = webdriver.findElement(By.xpath(OR.getProperty("reminderLimitInput")));
			// reminderdropdown.clear();
			// reminderdropdown.click();
			Thread.sleep(500);
			// List<WebElement> optionsoftimelimit =
			// webdriver.findElements(By.xpath(OR.getProperty("timelimitoptions")));
			Select optionsoftimelimit = new Select(reminderdropdown);
			System.out.println("select options" + optionsoftimelimit);
			optionsoftimelimit.selectByVisibleText(dropdownValue);
			// optionsoftimelimit.selectByIndex(2);
			selectoption = optionsoftimelimit.getFirstSelectedOption().getText();
			System.out.println("option " + optionsoftimelimit);

		} catch (Exception e) {

		}

		return selectoption;
	}

	/*
	 * Date: 06/04/2017 Author: Author: Ashish Kshatriya Description: This function
	 * is used for take screenshots in application. Parameter: WebDriver driver
	 */
	public String createScreenshot(WebDriver webdriver, String deviceName) throws InterruptedException {
		// UUID uuid = UUID.randomUUID();

		/*
		 * screenshotsFolder = "ImageScreenshot//Mobile//"; File dir = new
		 * File(screenshotsFolder); dir.mkdirs();
		 */
		String imageLocation = Constant.OUTPUTIMAGEFOLDER;
		File scrFile = ((TakesScreenshot) webdriver).getScreenshotAs(OutputType.FILE);
		Thread.sleep(3000);
		try {
			FileUtils.copyFile(scrFile, new File(imageLocation + deviceName + "_Actual" + ".jpg"));
		} catch (IOException e) {
			System.out.println("Error while generating screenshot:\n" + e.toString());
		}
		return imageLocation + deviceName + "_Actual" + ".jpg";
	}

	/*
	 * Date: 10/04/2017 Author: Author: Ashish Kshatriya Description: This function
	 * is used for close save password popup in chrome browser Parameter: NA
	 */
	/*
	 * public WebElement closeSavePasswordPopup() { WebElement closepopup=null; try{
	 * webdriver.context("NATIVE_APP");
	 * //Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(OR.
	 * getProperty("closeSavePassword")))); boolean
	 * pop=webdriver.findElements(By.xpath(OR.getProperty("closeSavePassword")))
	 * .size()>0; if(pop){ closepopup=webdriver.findElement(By.xpath(OR.getProperty(
	 * "closeSavePassword"))); closepopup.click(); webdriver.context("CHROMIUM"); }
	 * else { webdriver.context("CHROMIUM"); } }catch(Exception e) {
	 * e.printStackTrace(); } return closepopup; }
	 */

	public String[] sessionToSlotsummary() {
		String[] sessionSlotSummary = new String[6];
		Wait.until(ExpectedConditions
				.visibilityOfElementLocated(By.xpath(OR.getProperty("endSessionButtonSessionReminder"))));
		webdriver.findElement(By.xpath(OR.getProperty("endSessionButtonSessionReminder"))).click();

		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(OR.getProperty("SlotGameSummaryHeader"))));
		String slotGameSummaryHeader = webdriver.findElement(By.xpath(OR.getProperty("SlotGameSummaryHeader")))
				.getText().trim();
		System.out.println(slotGameSummaryHeader);
		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(OR.getProperty("TotalAmountWagered"))));
		String totalAmountWagered = webdriver.findElement(By.xpath(OR.getProperty("TotalAmountWagered"))).getText()
				.trim();
		System.out.println("Total Amount Wagered :" + totalAmountWagered);

		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(OR.getProperty("TotalAmountWon"))));
		String totalAmountWon = webdriver.findElement(By.xpath(OR.getProperty("TotalAmountWon"))).getText().trim();
		System.out.println("Total Amount Won: " + totalAmountWon);

		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(OR.getProperty("SessionBalance"))));
		String sessionBalance1 = webdriver.findElement(By.xpath(OR.getProperty("SessionBalance"))).getText().trim();
		System.out.println("session: " + sessionBalance1);
		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(OR.getProperty("SummarySlot"))));
		String playMoretext = webdriver.findElement(By.xpath(OR.getProperty("SummarySlot"))).getText().trim();
		System.out.println("PlayMore: " + playMoretext);
		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(OR.getProperty("CloseButton"))));
		String closeButton = webdriver.findElement(By.xpath(OR.getProperty("CloseButton"))).getText().trim();
		System.out.println("CloseButton: " + closeButton);
		sessionSlotSummary[0] = slotGameSummaryHeader;
		sessionSlotSummary[1] = totalAmountWagered;
		sessionSlotSummary[2] = totalAmountWon;
		sessionSlotSummary[3] = sessionBalance1;
		sessionSlotSummary[4] = playMoretext;
		sessionSlotSummary[5] = closeButton;

		System.out.println("SessionSummary: " + sessionSlotSummary);
		return sessionSlotSummary;
	}

	/*
	 * Author : Anand Bhayre Description: To fill Spain Start Session Form Param:
	 * Time Limit, Reminder Period, Loss Limit and prevent Future Slot Game for Play
	 * Return: Boolean value
	 */

	public boolean fillSatrtSessionForm(String TimeLimit, String ReminderPeriod, String LossLimit,
			String PreventFuture) {
		boolean ret = false;
		Wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath(OR.getProperty("timeLimitInput"))));
		Select sel = new Select(webdriver.findElement(By.xpath(OR.getProperty("timeLimitInput"))));
		sel.selectByVisibleText(TimeLimit);
		sel = new Select(webdriver.findElement(By.xpath(OR.getProperty("reminderLimitInput"))));
		sel.selectByVisibleText(ReminderPeriod);
		webdriver.findElement(By.xpath(OR.getProperty("lossLimitInput"))).sendKeys(LossLimit);
		sel = new Select(webdriver.findElement(By.xpath(OR.getProperty("preventfutureslotgamefor"))));
		sel.selectByVisibleText(PreventFuture);

		webdriver.findElement(By.xpath(OR.getProperty("setlimitbutton"))).click();

		Wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath(OR.getProperty("okButton"))));
		webdriver.findElement(By.xpath(OR.getProperty("okButton"))).click();
		// closeSavePasswordPopup();
		ret = isElementExist("newFeature", 120);

		return ret;

	}

	/*
	 * public boolean fillSatrtSessionForm1(String TimeLimit, String ReminderPeriod,
	 * String LossLimit, String PreventFuture) { boolean ret=false;
	 * Wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath(
	 * OR.getProperty("timeLimitInput")))); Select sel= new
	 * Select(webdriver.findElement(By.xpath(OR.getProperty("timeLimitInput")))) ;
	 * sel.selectByVisibleText(TimeLimit); sel= new
	 * Select(webdriver.findElement(By.xpath(OR.getProperty("reminderLimitInput"
	 * )))); sel.selectByVisibleText(ReminderPeriod);
	 * webdriver.findElement(By.xpath(OR.getProperty("lossLimitInput"))).
	 * sendKeys(LossLimit); sel= new
	 * Select(webdriver.findElement(By.xpath(OR.getProperty(
	 * "preventfutureslotgamefor")))); sel.selectByVisibleText(PreventFuture);
	 * 
	 * //webdriver.findElement(By.xpath(OR.getProperty("setlimitbutton"))).click ();
	 * 
	 * Wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.xpath(
	 * OR.getProperty("setlimitbutton"))));
	 * //webdriver.findElement(By.xpath(OR.getProperty("okButton"))).click();
	 * closeSavePasswordPopup(); ret=isElementExist("setlimitbutton", 120);
	 * 
	 * return ret;
	 * 
	 * }
	 */
	/*
	 * Date: 10/04/2017 Author: Author: Ashish Kshatriya Description: This function
	 * is used for close save password popup in chrome browser Parameter: NA
	 * 
	 * public WebElement closeSavePasswordPopup() { WebElement closepopup=null; try{
	 * webdriver.context("NATIVE_APP");
	 * //Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(OR.
	 * getProperty("closeSavePassword")))); boolean
	 * pop=webdriver.findElements(By.xpath(OR.getProperty("closeSavePassword")))
	 * .size()>0; if(pop){ closepopup=webdriver.findElement(By.xpath(OR.getProperty(
	 * "closeSavePassword"))); closepopup.click(); webdriver.context("CHROMIUM"); }
	 * else { webdriver.context("CHROMIUM"); } }catch(Exception e) {
	 * e.printStackTrace(); } return closepopup; }
	 */
	/*
	 * Author: Anand Description: To test element is present or not Param: Key of
	 * elements xpath from OR Return: Boolean value
	 */

	public boolean isElementExist(String keyName, int timeInSeconds) {
		boolean ret = false;
		try {
			webdriver.manage().timeouts().implicitlyWait(timeInSeconds, TimeUnit.SECONDS);
			// WebDriverWait wait= new WebDriverWait(webdriver,timeInSeconds);
			// wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(OR.getProperty(keyName))));
			// webdriver.findElements( By.id("...") ).size() != 0;
			if (webdriver.findElements(By.xpath(OR.getProperty(keyName))).size() > 0) {
				ret = true;
			}
		} catch (Exception e) {
			webdriver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);
		}
		return ret;
	}

	/*
	 * Author: Anand Bhayre Description: Click on given element Param: Element Xpath
	 * Key -Target -Expected Return: boolean value
	 */
	public boolean clickOnElement(String targetElementKey, String expectedElementKey) {
		Wait.until(ExpectedConditions.elementToBeClickable(By.xpath(OR.getProperty(targetElementKey)))).click();
		return isElementExist(expectedElementKey, 60);

	}

	/* verify the quick spin toggle */
	public String quickSpinStatus() {
		return null;
	}

	/**
	 * Author:Sneha Jawarkar This method is used for verifying the status of the
	 * quick spin
	 * 
	 * @return true
	 */
	public boolean quickSpinStatus_verify() {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	/* Click on Menu close back arrow */
	public boolean MenuBackArrow() {
		/*
		 * webdriver.findElement(By.xpath(XpathMap.get("OneDesignMenuClose"))). click();
		 */
		return true;
	}

	/* Click on setting close back arrow */
	public boolean SettingBackArrow() {
		/*
		 * webdriver.findElement(By.xpath(XpathMap.get("OneDesignSettingclose"))
		 * ).click();
		 */

		return true;
	}

	public String clickOnSetLimitWithoutinput() {
		try {

			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(OR.getProperty("setlimitbutton"))));
			WebElement setlimt = webdriver.findElement(By.xpath(OR.getProperty("setlimitbutton")));
			setlimt.click();

			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(OR.getProperty("messagetimeLimit"))));
			message1 = webdriver.findElement(By.xpath(OR.getProperty("messagetimeLimit"))).getText();
		}

		catch (Exception e) {

			e.printStackTrace();
		}
		return message1;

	}

	public String EndSession() {

		return null;

	}

	/**
	 * 
	 * @return
	 * @throws Exception
	 */
	public String[] baseHeaderValues() {

		return null;
	}

	/**
	 * 
	 */

	public String clickOnClose() {

		return null;

	}

	/**
	 * 
	 * @return
	 * @throws Exception
	 */

	public String sendLossLimitData() throws Exception {
		return null;
	}

	public boolean fillStartSessionLossForm(String LossLimit, Desktop_HTML_Report reportSpain) {
		Wait = new WebDriverWait(webdriver, 500);
		boolean ret = false;
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("spain_TimeLimit"))));

			Select sel = new Select(webdriver.findElement(By.xpath(XpathMap.get("spain_TimeLimit"))));
			sel.selectByIndex(1);
			Thread.sleep(3000);
			reportSpain.detailsAppend("Select Time limit in Session overlay", "Time limit should be selected",
					"Time limit is selected", "Pass");

			sel = new Select(webdriver.findElement(By.xpath(XpathMap.get("spain_ReminderPeriod"))));
			sel.selectByIndex(1);
			Thread.sleep(3000);
			reportSpain.detailsAppend("Select Reminder period in Session overlay", "Reminder period should be selected",
					"Reminder period is selected", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("spain_LossLimit"))).sendKeys(LossLimit);
			Thread.sleep(3000);
			reportSpain.detailsAppend("Fill loss limit in Session overlay", "Loss limit should be filled",
					"Losslimit is filed", "Pass");
			Thread.sleep(3000);

			sel = new Select(webdriver.findElement(By.xpath(XpathMap.get("spainSelectCoolingOffPeriod"))));
			sel.selectByIndex(1);
			reportSpain.detailsAppend("Select Cooling off period", "Cooling off periodshould be selected",
					"Cooling off period is selected", "Pass");
			Thread.sleep(3000);

			webdriver.findElement(By.xpath(XpathMap.get("spain_SetLimits"))).click();
			Thread.sleep(3000);
			ret = true;

		} catch (Exception e) {

			e.printStackTrace();
		}
		return ret;
	}

	public String waitUntilSessionLoss() {

		String title = null;
		try {
			for (int i = 0; i <= 10; i++) {
				Wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.id(XpathMap.get("Spin_Button_ID"))));
//				spinclick();
				Thread.sleep(3000);
				boolean b = webdriver.findElements(By.xpath(XpathMap.get("spain_lossLimitDialogueOK"))).size() > 0;
				if (b) {
					System.out.println("Loss Limit is reached");
					title = webdriver.findElement(By.xpath(XpathMap.get("spain_lossLimitDialogueOK"))).getText();
					break;
				}
			}

		} catch (Exception e) {

			e.printStackTrace();
		}
		return title;

	}

	public boolean waitUntilSessionReminder() {
		WebDriverWait Wait = new WebDriverWait(webdriver, 500);
		boolean header = false;
		try {

			log.debug("Waiting for SessionReminder Continue overlay");
			System.out.println("Waiting for SessionReminder overlay");
			Wait.until(ExpectedConditions
					.visibilityOfElementLocated(By.xpath(XpathMap.get("spain_SessionReminderContinue"))));
			header = true;

		} catch (Exception e) {

			log.error("Error in waiting for session reminder ", e);
		}
		return header;

	}

	public void closeSessionLossPopup() {
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("spain_CloseBtn"))));
			webdriver.findElement(By.xpath(XpathMap.get("spain_CloseBtn"))).click();
		} catch (Exception e) {
			log.error("Error in checking in close session loss pop up ", e);
		}
	}

	public void coolingOffPeriod(Desktop_HTML_Report tc10) {
		try {
			func_Click(XpathMap.get("five_Reel_slot"));

			JavascriptExecutor js = ((JavascriptExecutor) webdriver);
			js.executeScript("arguments[0].scrollIntoView(true);", webdriver.findElement(By.id(GameName)));

			js.executeScript("arguments[0].click();", webdriver.findElement(By.id(GameName)));

			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("spain_CloseBtn"))));
			tc10.detailsAppend("To check if Cooling Off Period Overlay appear on launching same game",
					"Cooling Off Period Overlay should appear on launching same game",
					"Cooling Off Period Overlay appears on launching same game", "Pass");
			func_Click(XpathMap.get("spain_CloseBtn"));
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(XpathMap.get("five_Reel_slotID"))));
			webdriver.findElement(By.id(XpathMap.get("five_Reel_slotID"))).click();
			;
			tc10.detailsAppend(
					"To verify user navigates to lobby after clicking on close button when cooling off period is running",
					"User should redirect to lobby after clicking on close button when cooling off period is running",
					"User is redirected to lobby", "Pass");

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void spainContinueSession() {
		try {
			webdriver.findElement(By.xpath(XpathMap.get("spain_SessionReminderContinue"))).click();
			System.out.println("clicked on continue in session reminder");
		} catch (Exception e) {
			e.getMessage();
		}
	}

	public void coolingOffPeriodNewGame(String gamename, Desktop_HTML_Report tc10) {
		try {

			JavascriptExecutor js = ((JavascriptExecutor) webdriver);
			js.executeScript("arguments[0].scrollIntoView(true);", webdriver.findElement(By.id(gamename)));

			js.executeScript("arguments[0].click();", webdriver.findElement(By.id(gamename)));

			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("spain_CloseBtn"))));
			tc10.detailsAppend("To check if Cooling Off Period Overlay appear on launching another game",
					"Cooling Off Period Overlay should appear on launching another game",
					"Cooling Off Period Overlay appears on launching another game", "Pass");
			func_Click(XpathMap.get("spain_CloseBtn"));
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(XpathMap.get("five_Reel_slotID"))));
			tc10.detailsAppend(
					"To verify user navigates to lobby after clicking on close button when cooling off period is running",
					"User should redirect to lobby after clicking on close button when cooling off period is running",
					"User is redirected to lobby", "Pass");

		} catch (Exception e) {

			e.printStackTrace();
		}
	}

	public void waitUntilTimeLimitSession(Desktop_HTML_Report tc10) {
		try {

			for (int i = 0; i <= 5; i++) {
				spainContinueSession();
				boolean b = webdriver.findElements(By.xpath(XpathMap.get("spain_CloseBtn"))).size() > 0;
				if (b) {
					break;
				}
			}
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("spain_CloseBtn"))));
			tc10.detailsAppend("To check if Time Limit Summary overlay appear when Time limit is reached",
					"Time Limit Summary overlay should appear", "Time Limit summary overlay appears", "Pass");
			func_Click(XpathMap.get("spain_CloseBtn"));
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(XpathMap.get("five_Reel_slotID"))));
			tc10.detailsAppend(
					"To verify user navigates to lobby after clicking on close button when Time limit is reached",
					"User should redirect to lobby after clicking on close button when Time limit is reached",
					"User is redirected to lobby", "Pass");
		} catch (Exception e) {

			e.printStackTrace();
		}

	}

	public void relaunchGame() {

		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(XpathMap.get("five_Reel_slotID"))));
		func_Click(XpathMap.get("five_Reel_slot"));

		JavascriptExecutor js = ((JavascriptExecutor) webdriver);
		js.executeScript("arguments[0].scrollIntoView(true);", webdriver.findElement(By.id(GameName)));

		js.executeScript("arguments[0].click();", webdriver.findElement(By.id(GameName)));

		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("spain_SlotGameOverlay"))));
	}

	/***
	 * Date: 10/1/2018 Autohr: Laxmikanth Kodam Description: This function used for
	 * navigating to Gibraltar url
	 * 
	 * @return true
	 */
	public String func_navigate_DirectURL(String urlNavigate) {
		Wait = new WebDriverWait(webdriver, 500);
		String title = null;
		try {

			// urlNavigate=XpathMap.get("app_url_Gibraltar_Desktop");
			webdriver.navigate().to(urlNavigate);

			newFeature();
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("clock"))));

			title = webdriver.getTitle();

		} catch (Exception e) {
			e.printStackTrace();
		}
		return title;
	}

	/**
	 * 
	 * @return
	 * @throws Exception
	 */
	public String clickForScreen(String ac, String aa) {

		return null;
	}

	public String verifyreminderperiodoption() throws Exception {
		String selectoption = null;
		WebElement reminderdropdown = webdriver.findElement(By.xpath(OR.getProperty("reminderLimitInput")));
		// reminderdropdown.clear();
		// reminderdropdown.click();
		Thread.sleep(500);
		// List<WebElement> optionsoftimelimit =
		// webdriver.findElements(By.xpath(OR.getProperty("timelimitoptions")));
		Select optionsoftimelimit = new Select(reminderdropdown);
		System.out.println("select options" + optionsoftimelimit);
		optionsoftimelimit.selectByIndex(1);
		// optionsoftimelimit.selectByIndex(2);
		selectoption = optionsoftimelimit.getFirstSelectedOption().getText();
		System.out.println("option " + optionsoftimelimit);

		return selectoption;
	}

	public String verifyfuturepreventoption(String dropdownVaue) throws Exception {
		String selectoption = null;
		try {
			WebElement timedropdown = webdriver.findElement(By.xpath(OR.getProperty("preventfutureslotgamefor")));
			// timedropdown.clear();
			// timedropdown.click();
			Thread.sleep(500);
			// List<WebElement> optionsoftimelimit =
			// webdriver.findElements(By.xpath(OR.getProperty("timelimitoptions")));
			Select optionsoftimelimit = new Select(timedropdown);
			System.out.println("select options" + optionsoftimelimit);
			optionsoftimelimit.selectByVisibleText(dropdownVaue);
			// optionsoftimelimit.selectByIndex(2);
			selectoption = optionsoftimelimit.getFirstSelectedOption().getText();
			System.out.println("option " + optionsoftimelimit);

		} catch (Exception e) {
			e.getMessage();
		}

		return selectoption;
	}

	public void spainStartNewSession(Desktop_HTML_Report reportSpain) {
		WebDriverWait wait = new WebDriverWait(webdriver, 10);
		try {
			wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("spain_StartNewSession"))));
			boolean test = webdriver.findElements(By.xpath(XpathMap.get("spain_StartNewSession"))).size() > 0;
			if (test) {
				reportSpain.detailsAppend("Verify that Start New Sessiosn Overlay appears before the game loads ",
						"Start New Sessiosn Overlay should appear before the game loads",
						"Start New Sessiosn Overlay is appearing before the game loads", "Pass");
				func_Click(XpathMap.get("spain_StartNewSession"));
			} else {
				System.out.println("Slot Game limit overlay appears");
			}
		} catch (Exception e) {
			e.getMessage();
		}
	}

	public String verifyfuturepreventoption() throws Exception {
		String selectoption = null;

		WebElement timedropdown = webdriver.findElement(By.xpath(OR.getProperty("preventfutureslotgamefor")));
		// timedropdown.clear();
		// timedropdown.click();
		Thread.sleep(500);
		// List<WebElement> optionsoftimelimit =
		// webdriver.findElements(By.xpath(OR.getProperty("timelimitoptions")));
		Select optionsoftimelimit = new Select(timedropdown);
		System.out.println("select options" + optionsoftimelimit);
		optionsoftimelimit.selectByIndex(1);
		// optionsoftimelimit.selectByIndex(2);
		selectoption = optionsoftimelimit.getFirstSelectedOption().getText();
		System.out.println("option " + optionsoftimelimit);

		return selectoption;
	}

	/* verify message when reminder input selected */
	public String verifyremindermessage() {
		String reminder = null;

		try {
			verifyreminderperiodoption();

			WebElement message = webdriver.findElement(By.xpath(OR.getProperty("inputboxselectmessage")));
			reminder = message.getText();

		} catch (Exception e) {

		}
		return reminder;
	}
	/* verify message when input box is loss limit */

	public String verifylosslimitmessage() {
		String lossslimit = null;

		try {
			WebElement losslimitinputbox = webdriver.findElement(By.xpath(OR.getProperty("lossLimitInput")));
			losslimitinputbox.click();

			WebElement message = webdriver.findElement(By.xpath(OR.getProperty("inputboxselectmessage")));
			lossslimit = message.getText();
		} catch (Exception e) {

		}
		return lossslimit;
	}

	/* verify message when input box is loss limit */

	public String preventfuturemessage() {
		String preventfuture = null;
		try {
			verifyfuturepreventoption();

			WebElement message = webdriver.findElement(By.xpath(OR.getProperty("inputboxselectmessage")));
			preventfuture = message.getText();

		} catch (Exception e) {

		}
		return preventfuture;
	}

	/* verify the loss limit error validation message */
	public boolean isElementPresent(String locator) {
		boolean isPresent = false;
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			if (webdriver.findElements(By.xpath(locator)).size() > 0) {
				log.debug("error is coming while loading language");
				isPresent = true;
			}
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
		} catch (Exception e) {
			log.error("exception while searching for loading error ", e);
		}
		return isPresent;
	}

	/* Verify the last Login Pop up */

	public boolean lastLoginPopup() {

		WebElement lastlogin = webdriver.findElement(By.xpath(OR.getProperty("lastLoginPopup")));
		lastlogin.click();

		return true;
	}

	public String verifySessionReminderLimit() {
		// Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(OR.getProperty("limitSessionReminder"))));
		timeLimitSessionReminder = webdriver.findElement(By.xpath(OR.getProperty("limitSessionReminder"))).getText();
		return timeLimitSessionReminder;
	}

	public String getText(String elementKeyName) {
		return webdriver.findElement(By.xpath(elementKeyName)).getText();
	}

	public String verifySessionReminderCurrent() {

		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(OR.getProperty("currentSessionReminder"))));
		sessionReminderCurrent = webdriver.findElement(By.xpath(OR.getProperty("currentSessionReminder"))).getText();

		return sessionReminderCurrent;

	}

	public String endSessionButtonSessionReminder() {

		Wait.until(ExpectedConditions
				.visibilityOfElementLocated(By.xpath(OR.getProperty("endSessionButtonSessionReminder"))));
		endSessionButton = webdriver.findElement(By.xpath(OR.getProperty("endSessionButtonSessionReminder"))).getText();

		return endSessionButton;

	}

	public String continueButtonSessionReminder() {

		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(OR.getProperty("continueSessionReminder"))));
		continueButton = webdriver.findElement(By.xpath(OR.getProperty("continueSessionReminder"))).getText();

		return continueButton;
	}

	public String timeLimit() {

		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(OR.getProperty("timeLimitSessionReminder"))));
		timeLimit = webdriver.findElement(By.xpath(OR.getProperty("timeLimitSessionReminder"))).getText();

		return timeLimit;

	}

	public String lossLimitSessionReminder() {

		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(OR.getProperty("lossLimitSessionReminder"))));
		lossLimitSessionReminder = webdriver.findElement(By.xpath(OR.getProperty("lossLimitSessionReminder")))
				.getText();

		return lossLimitSessionReminder;

	}

	public String sesionBalanceSessionReminder() {

		Wait.until(ExpectedConditions
				.visibilityOfElementLocated(By.xpath(OR.getProperty("sessionBalanceSessionReminder"))));
		sessionBalanceSessionReminder = webdriver.findElement(By.xpath(OR.getProperty("sessionBalanceSessionReminder")))
				.getText();

		return sessionBalanceSessionReminder;

	}

	public String timeElaspeseSessionReminder() {

		Wait.until(
				ExpectedConditions.visibilityOfElementLocated(By.xpath(OR.getProperty("timeElapsedSessionReminder"))));
		timeElapsedsessionreminder = webdriver.findElement(By.xpath(OR.getProperty("timeElapsedSessionReminder")))
				.getText();

		return timeElapsedsessionreminder;

	}

	public String sessionBalanceValueSessionReminder() {

		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(OR.getProperty("timeLimitSessionReminder"))));
		sessionBalance = webdriver.findElement(By.xpath(OR.getProperty("timeLimitSessionReminder"))).getText();

		return sessionBalance;

	}

	public String lossLimitValueSessionreminder() {

		Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(OR.getProperty("losslimitValue"))));
		sessionBalance = webdriver.findElement(By.xpath(OR.getProperty("losslimitValue"))).getText();

		return sessionBalance;

	}

	public String logout_spainform() throws Exception {
		String loginTitle = null;
		try {

			Wait.until(ExpectedConditions.elementToBeClickable(By.id(OR.getProperty("accountsLobbyID"))));
			Thread.sleep(3000);
			webdriver.findElement(By.id(OR.getProperty("accountsLobbyID"))).click(); // Clickin
																						// on
																						// Accounts
			Thread.sleep(3000);
			Wait.until(ExpectedConditions.elementToBeClickable(By.id(OR.getProperty("logoutbuttonId"))));
			Thread.sleep(3000);
			webdriver.findElement(By.id(OR.getProperty("logoutbuttonId"))).click(); // Clicking
																					// on
																					// log
																					// out
																					// button
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(OR.getProperty("LoginTitleid"))));
			Thread.sleep(3000);
			loginTitle = webdriver.findElement(By.id(OR.getProperty("LoginTitleid"))).getText(); // Clicking
																									// on
																									// log
																									// out
																									// button
			webdriver.findElement(By.id(OR.getProperty("closeButtonid"))).click(); // Clicking
																					// on
																					// log
																					// out
																					// button
			Thread.sleep(3000);

			/*
			 * Wait.until(ExpectedConditions.elementToBeClickable(By.id(OR.
			 * getProperty("accountsLobbyID")))); Thread.sleep(3000);
			 * Wait.until(ExpectedConditions.elementToBeClickable(By.id(OR.
			 * getProperty("closeButtonid"))));
			 * webdriver.findElement(By.id(OR.getProperty("closeButtonid"))). click();
			 * //Wait.until(ExpectedConditions.elementToBeClickable(By.id(OR.
			 * getProperty("accountsLobbyID")))); // Thread.sleep(3000);
			 * logout=webdriver.getTitle(); //title Spain
			 */

		}

		catch (Exception e) {
			e.printStackTrace();
			evalException(e);
		}
		return loginTitle;
	}

	public String verifybacktolobby() throws Exception {
		String backtolobbytitle = null;
		try {
			// click on hyperlink
			WebElement backtolobby1 = webdriver.findElement(By.xpath(OR.getProperty("backtolobby")));
			backtolobby1.click();
			Thread.sleep(3000);
			// Back To Lobby
			backtolobbytitle = webdriver.getTitle();
		} catch (Exception e) {
			evalException(e);
		}
		return backtolobbytitle;
	}

	/*
	 * 
	 */
	public String waitUntilSession() {

		return null;

	}

	/* verify Time limit error message */

	public String verifyTimeLimitError(String losslimit) {
		String error = null;

		try {

			// select time reminder
			verifyreminderperiodoption();
			// select future prevent
			verifyfuturepreventoption();
			// enter loss limit value
			WebElement losslimitinputbox = webdriver.findElement(By.xpath(OR.getProperty("lossLimitInput")));
			losslimitinputbox.clear();
			losslimitinputbox.sendKeys(losslimit);
			// click on set limit button
			WebElement setlimt = webdriver.findElement(By.xpath(OR.getProperty("setlimitbutton")));
			setlimt.click();
			WebElement message = webdriver.findElement(By.xpath(OR.getProperty("inputboxselectmessage")));
			error = message.getText();

		} catch (Exception e) {

		}
		return error;
	}

	public void clickIcon(Desktop_HTML_Report report) throws Exception {

	}

	/*
	 * this method is of no use only decleration is here,method is for component
	 * store
	 */
	public String Slider_TotalBetamnt() {
		return null;
	}

	public String BaseGame_TotalBetmnt() {

		return null;
	}

	/*
	 * this method is of no use only decleration is here,method is for component
	 * store
	 */
	public void Coinselectorclose() throws InterruptedException {
	}

	/*
	 * this method is of no use only decleration is here,method is for component
	 * store
	 */
	public void moveCoinSizeSlider() throws InterruptedException {
	}
	/* verify Reminder period error message */

	public String verifyremindererror(String losslimit) {
		String error = null;
		String losslimit1 = null;
		try {
			// select time limit
			losslimit1 = losslimit;
			verifytimedurationoption();
			// enter loss limit
			WebElement losslimitinputbox = webdriver.findElement(By.xpath(OR.getProperty("lossLimitInput")));
			losslimitinputbox.clear();
			losslimitinputbox.sendKeys(losslimit1);
			// select prevent future
			verifyfuturepreventoption();
			// click on set limit button
			WebElement setlimt = webdriver.findElement(By.xpath(OR.getProperty("setlimitbutton")));
			setlimt.click();
			// get error message
			WebElement message = webdriver.findElement(By.xpath(OR.getProperty("inputboxselectmessage")));
			error = message.getText();
		} catch (Exception e) {

		}
		return error;

	}

	/* verify loss limit blank error message */

	public String verifylosslimiterror(String losslimitdata) {
		String losslimiterror = null;

		String losslimitdata1 = losslimitdata;
		double losslimitdata2;
		String losslimit = null;
		int losslimitdataint = 0;
		try { // select time duration
			verifytimedurationoption();
			// select reminder period
			verifyreminderperiodoption();
			// select prevent future
			verifyfuturepreventoption();
			losslimitdata2 = Double.parseDouble(losslimitdata1);
			// losslimitdata3=losslimitdata2.toString();
			losslimitdataint = (int) losslimitdata2;
			double losslimitdatadouble = (double) losslimitdata2;
			WebElement losslimitinputbox = webdriver.findElement(By.xpath(OR.getProperty("lossLimitInput")));
			losslimitinputbox.clear();
			if (losslimitdataint == 0) {
				losslimit = String.valueOf(losslimitdataint).toString();
				losslimitinputbox.sendKeys(losslimit);
			}

			else if (losslimitdata2 > 1000) {

				losslimit = String.valueOf(losslimitdatadouble).toString();
				losslimitinputbox.clear();
				losslimitinputbox.sendKeys(losslimit);

			}
			// click on setlimit
			WebElement setlimt = webdriver.findElement(By.xpath(OR.getProperty("setlimitbutton")));
			setlimt.click();

			// get error message
			WebElement message = webdriver.findElement(By.xpath(OR.getProperty("inputboxselectmessage")));
			losslimiterror = message.getText();

		} catch (Exception e) {

		}
		return losslimiterror;
	}

	// verify refresh function

	public String refreshpage() throws Exception {
		// refresh page
		String refresh = null;

		verifytimedurationoption();
		verifyreminderperiodoption();
		WebElement losslimitinputbox = webdriver.findElement(By.xpath(OR.getProperty("lossLimitInput")));
		losslimitinputbox.sendKeys("100");
		// refresh page
		webdriver.navigate().refresh();
		Thread.sleep(3000);
		Wait.until(ExpectedConditions.elementToBeClickable(By.xpath(OR.getProperty("backtolobby"))));
		WebElement backtolobby = webdriver.findElement(By.xpath(OR.getProperty("backtolobby")));
		refresh = backtolobby.getText();

		return refresh;

	}

	public String FS_summaryScreenClick() {
		String wait = "";
		return wait;
	}

	public String Func_navigate_again(String appName) {
		try {
			Wait = new WebDriverWait(webdriver, 300);
			Wait.until(ExpectedConditions.elementToBeClickable(By.id(OR.getProperty("LobbyfiveReels"))));
			boolean newGame = webdriver.findElements(By.id(OR.getProperty("LobbyNewGamesId"))).size() > 0;
			if (newGame) {
				webdriver.findElement(By.id(OR.getProperty("LobbyNewGamesId"))).click();
				waitForPageToBeReady();
				Thread.sleep(3000);
				boolean game = webdriver.findElements(By.id(appName)).size() > 0;
				if (game) {
					webdriver.findElement(By.id(appName)).click();
				} else {
					System.out.println(appName + " not available in the lobby");
				}

			} else {
				webdriver.findElement(By.id(OR.getProperty("LobbyfiveReels"))).click();
				waitForPageToBeReady();
				Thread.sleep(3000);
				boolean game = webdriver.findElements(By.id(appName)).size() > 0;
				if (game) {
					webdriver.findElement(By.id(appName)).click();
				} else {
					System.out.println(appName + " not available in the lobby");
				}
			}
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(OR.getProperty("loginPopUp"))));
		} catch (Exception e) {
			e.printStackTrace();
		}
		return GameDesktopName;
	}

	public void newTabOpen() {
		try {
			String windowhandle = webdriver.getWindowHandle();
			webdriver.switchTo().window(windowhandle);
			Robot robot = new Robot();
			robot.keyPress(KeyEvent.VK_CONTROL);
			robot.keyPress(KeyEvent.VK_T);
			robot.keyRelease(KeyEvent.VK_T);
			robot.keyRelease(KeyEvent.VK_CONTROL);

			// To check open windows
			ArrayList<String> tabs = new ArrayList<String>(webdriver.getWindowHandles());
			System.out.println(tabs.size());
			String window = tabs.get(1);
			webdriver.switchTo().window(window);
			webdriver.get("https://outlook.office.com");
			Thread.sleep(10000);
			webdriver.switchTo().window(tabs.get(0));
			Thread.sleep(5000);
			// closeOverlay();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			log.error("Error on opening new tab");
		}
	}

	/*
	 * Date: 25/04/2019 Description:To verify autoplay must stop when focus being
	 * removed in UK . Parameter: NA
	 * 
	 * @return boolean
	 */

	public boolean Autoplay_focus_removed_UK() {
		boolean focus;
		try {
			clickAtButton("return " + XpathMap.get("ClickAutoPlayMoreOptionsBtn"));

			Thread.sleep(3000);
			webdriver.findElement(By.id(XpathMap.get("Start_Autoplay"))).click();
			Thread.sleep(3000);
			newTabOpen();

			if (GetConsoleBooleanText("return " + XpathMap.get("isAutoPlayActive")) == false)
				focus = true;
			else {
				focus = false;
				log.debug("Autoplay staus=" + GetConsoleBooleanText("return " + XpathMap.get("isAutoPlayActive")));
			}

			/*
			 * String windowhandle=webdriver.getWindowHandle();
			 * webdriver.switchTo().window(windowhandle); Robot robot= new Robot();
			 * robot.keyPress(KeyEvent.VK_CONTROL); robot.keyPress(KeyEvent.VK_T);
			 * robot.keyRelease(KeyEvent.VK_T); robot.keyRelease(KeyEvent.VK_CONTROL);
			 * 
			 * //To check open windows ArrayList<String> tabs=new
			 * ArrayList<String>(webdriver.getWindowHandles());
			 * System.out.println(tabs.size()); String window=tabs.get(1);
			 * webdriver.switchTo().window(window);
			 * webdriver.get("https://outlook.office.com"); Thread.sleep(10000);
			 * webdriver.switchTo().window(tabs.get(0)); Thread.sleep(5000);
			 * //closeOverlay(); log.debug("Switch to default tab");
			 */

			// driver.switchTo().defaultContent();

		} catch (Exception e) {
			log.error("Error on opening new tab", e);
			focus = false;
		}
		return focus;
	}

	/*
	 * Date: 25/04/2019 Description:To verify autoplay must stop when focus being
	 * removed. Parameter: NA
	 * 
	 * @return boolean
	 */
	public boolean Autoplay_focus_removed() {

		try {
			webdriver.findElement(By.id(XpathMap.get("AutoplayID"))).click();
			webdriver.findElement(By.xpath(XpathMap.get("Start_Autoplay"))).click();

			String windowhandle = webdriver.getWindowHandle();
			webdriver.switchTo().window(windowhandle);
			Robot robot = new Robot();
			robot.keyPress(KeyEvent.VK_CONTROL);
			robot.keyPress(KeyEvent.VK_T);
			robot.keyRelease(KeyEvent.VK_T);
			robot.keyRelease(KeyEvent.VK_CONTROL);

			// To check open windows
			ArrayList<String> tabs = new ArrayList<String>(webdriver.getWindowHandles());
			System.out.println(tabs.size());
			String window = tabs.get(1);
			webdriver.switchTo().window(window);
			webdriver.get("https://outlook.office.com");
			Thread.sleep(3000);
			webdriver.switchTo().window(tabs.get(0));
			log.debug("Switch to default tab");
			// driver.switchTo().defaultContent();

		} catch (Exception e) {
			log.error("Focus not get changed");
			log.error(e.getMessage());
			webdriver.navigate().refresh();
			webdriver.navigate().refresh();
			return false;
		}
		// webdriver.getWindowHandle();
		return true;

	}

	public boolean settingsOpen() throws InterruptedException {
		return true;
	}

	public boolean spinclickFSTrigger() throws InterruptedException {
		return true;
	}

	/**
	 * Date:07/12/2017 Author:Premlata Mishra only declaration of component store
	 * method
	 * 
	 * @return true
	 */
	public String gamelogo() {
		return null;
	}

	public void resizeBrowser(int a, int b) {
		Dimension d = new Dimension(800, 480);
		// Resize current window to the set dimension
		webdriver.manage().window().setSize(d);
	}

	/**
	 * Date:07/12/2017 Author:Premlata Mishra actually not necessery in component
	 * store just declaration needed
	 * 
	 * @return true
	 */
	public boolean betIncrease() {
		return true;
	}

	/**
	 * Date:07/12/2017 Author:premlata Mishra This method is actually decleared no
	 * definition
	 * 
	 * @return true
	 */
	public String refreshWait() {
		return null;
	}

	public void SettingsToBasescen() throws InterruptedException {

	}

	public boolean betDecrease() throws InterruptedException {
		return true;
	}

	/**
	 * Date:07/12/2017 Author:Laxmikanth Kodam This method is to change the bet
	 * 
	 * @return true
	 */
	public double GetBetAmt() {
		return 0.0;
	}

	// ********************************Exception
	// Handler********************************************************//
	public void evalException(Exception ex) throws Exception {
		System.out.println("value of ex is " + ex);
		String exClass = ex.getClass().toString();
		if (exClass.contains("StaleElementReferenceException")) {
			repo1.detailsAppend("Execution Interrupted because of StaleElementReferenceException", "", "",
					"Interrupted");
		} else if (exClass.contains("NoSuchElementException")) {
			String gameplay = Fun_gameplayerror();
			if (gameplay != null) {
				errorLogout();
				repo1.detailsAppend(gameplay + " error occurred", "", "", "Interrupted");
			} else {
				repo1.detailsAppend("NoSuchElementException because of Element not found", "", "", "Interrupted");
			}
		} else if (exClass.contains("TimeoutException")) {
			String gameplay = Fun_gameplayerror();
			if (gameplay != null) {
				repo1.detailsAppend("General" + " error occurred", "", "", "Interrupted");
				errorLogout();

			} else {
				repo1.detailsAppend("TimeoutException because of Element not found", "", "", "Interrupted");
			}
		}

		else if (exClass.contains("InvalidElementStateException")) {
			repo1.detailsAppend("Execution Interrupted because of InvalidElementStateException", "", "", "Interrupted");
		} else if (exClass.contains("ElementNotVisibleException")) {
			repo1.detailsAppend("Execution Interrupted because of ElementNotVisibleException", "", "", "Interrupted");
		} else if (exClass.contains("ErrorInResponseException")) {
			repo1.detailsAppend("Execution Interrupted because of ErrorInResponseException", "", "", "Interrupted");
		} else if (exClass.contains("InvalidSwitchToTargetException")) {
			repo1.detailsAppend("Execution Interrupted because of InvalidSwitchToTargetException", "", "",
					"Interrupted");
		} else if (exClass.contains("NoSuchFrameException")) {
			repo1.detailsAppend("Execution Interrupted because of NoSuchFrameException", "", "", "Interrupted");
		} else if (exClass.contains("NoSuchWindowException")) {
			repo1.detailsAppend("Execution Interrupted because of NoSuchWindowException", "", "", "Interrupted");
		} else if (exClass.contains("NoSuchAttributeException")) {
			repo1.detailsAppend("Execution Interrupted because of NoSuchAttributeException", "", "", "Interrupted");
		} else if (exClass.contains("NoAlertPresentException")) {
			repo1.detailsAppend("Execution Interrupted because of NoAlertPresentException", "", "", "Interrupted");
		} else if (exClass.contains("ElementNotSelectableException")) {
			repo1.detailsAppend("Execution Interrupted because of ElementNotSelectableException", "", "",
					"Interrupted");
		} else if (exClass.contains("InvalidCookieDomainException")) {
			repo1.detailsAppend("Execution Interrupted because of InvalidCookieDomainException", "", "", "Interrupted");
		} else if (exClass.contains("UnableToSetCookieException")) {
			repo1.detailsAppend("Execution Interrupted because of UnableToSetCookieException", "", "", "Interrupted");
		} else if (exClass.contains("RemoteDriverServerException")) {
			repo1.detailsAppend("Execution Interrupted because of RemoteDriverServerException", "", "", "Interrupted");
		} else if (exClass.contains("TimeoutException")) {
			repo1.detailsAppend("Execution Interrupted because of TimeoutException", "", "", "Interrupted");
		} else if (exClass.contains("MoveTargetOutOfBoundsException")) {
			repo1.detailsAppend("Execution Interrupted because of MoveTargetOutOfBoundsException", "", "",
					"Interrupted");
		} else if (exClass.contains("UnexpectedTagNameException")) {
			repo1.detailsAppend("Execution Interrupted because of UnexpectedTagNameException", "", "", "Interrupted");
		} else if (exClass.contains("InvalidSelectorException")) {
			repo1.detailsAppend("Execution Interrupted because of InvalidSelectorException", "", "", "Interrupted");
		} else if (exClass.contains("ImeNotAvailableException")) {
			repo1.detailsAppend("Execution Interrupted because of ImeNotAvailableException", "", "", "Interrupted");
		} else if (exClass.contains("ImeActivationFailedException")) {
			repo1.detailsAppend("Execution Interrupted because of ImeActivationFailedException", "", "", "Interrupted");
		} else if (exClass.contains("UnhandledAlertException")) {
			repo1.detailsAppend("Execution Interrupted because of Unhandled message ALERT", "", "", "Interrupted");
			Thread.sleep(3000);
		} else if (exClass.contains("UnreachableBrowserException")) {
			func_Click(XpathMap.get("OneDesign_HomeIcon"));
			// String gameplay = Fun_gameplayerror();
			// if (gameplay != null) {
			errorLogout();
			repo1.detailsAppend("Execution Interrupted because of UnreachableBrowserException", "", "", "Interrupted");
			// } else {
			// repo1.details_append("NoSuchElementException because of Element not found",
			// "", "", "Interrupted");
			// }

		} else if (exClass.contains("WebDriverException")) {
			repo1.detailsAppend("Execution was Interrupted   due to BROWSER_TIMEOUT WebDriverException ", "", "",
					"Interrupted");
		} else if (exClass.contains("NullPointerException")) {
			String gameplay = Fun_gameplayerror();
			if (gameplay != null) {
				repo1.detailsAppend(gameplay + " error occurred", "", "", "Interrupted");
			} else {
				repo1.detailsAppend("NoSuchElementException because of Element not found", "", "", "Interrupted");
			}
		}

	}

	public String Func_LoginNew(String userName, String password, String gameName) {
		return null;
	}

	public boolean open_TotalBet() {
		boolean b = false;
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("clock"))));

			String BetX = "return Game.instance.__componentMap.BaseScene.__componentMap.desktopConsole.__componentMap.betBox.__componentMap.betLabel.properties.globalX";
			String BetY = "return Game.instance.__componentMap.BaseScene.__componentMap.desktopConsole.__componentMap.betBox.__componentMap.betLabel.properties.globalY";

			clickAtCoordinates(BetX, BetY);
			b = true;
		} catch (Exception e) {
			e.getMessage();
		}
		return b;
	}

	public void close_TotalBet() throws InterruptedException {

	}

	public void clickPlayForReal() {

	}

	public String Func_LoginPracticePlay2() {
		return Flag;
	}

	public boolean FSSceneLoading() {
		return true;
	}

	public void waitSummaryScreen() throws InterruptedException {

	}

	public String clickBonusSelection(int i) {
		return null;
	}

	public boolean waitforWinAmount(String currencyFormat, Desktop_HTML_Report currency, String currencyName) {
		return true;
	}

	public String getCurrencySymbol() {
		return null;
	}

	public boolean betCurrencySymbol(String currency) {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public String getCurrentBet() {
		return null;
	}

	public void verifyStopLanguage(Desktop_HTML_Report language, String languageCode) {
		try {
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("clock"))));
			Thread.sleep(4000);

			String SpinX = "return Game.instance.__componentMap.BaseScene.__componentMap.desktopConsole.__componentMap.spinButton.properties.globalX";
			String SpinY = "return Game.instance.__componentMap.BaseScene.__componentMap.desktopConsole.__componentMap.spinButton.properties.globalY";

			clickAtCoordinates(SpinX, SpinY);
			Thread.sleep(1500);
			language.detailsAppend("verify the Stop button translation",
					"Stop button should translate as per respective language", "Stop button is displaying", "Pass");
		} catch (Exception e) {
			e.getMessage();
		}
	}

	/**
	 * This method is used to stop is avalable or not Author: Premlata Mishra
	 * 
	 * @return true
	 */
	public boolean VerifyStop(String imagepath) throws InterruptedException {
		boolean newimage;
//		spinclick();
		Screen S = new Screen();

		org.sikuli.script.Pattern image = new org.sikuli.script.Pattern(imagepath);
		System.out.println("get image : " + image);
		try {
			org.sikuli.script.Region r = S.exists(image, 5);
			if (r != null) {
				System.out.println("image found");
				newimage = true;
			} else {
				System.out.println("image not found");
				newimage = false;
			}
		} catch (Exception e) {
			e.printStackTrace();
			webdriver.navigate().refresh();
			webdriver.navigate().refresh();
			return false;
		}
		return newimage;
	}

	public String verifyFlag() {
		return null;
	}

	public void FS_Start() {

	}

	public void waitForSpinButton() {

	}

	public void jackpotSummary(Desktop_HTML_Report language, String languageCode) {

	}

	public String paytableSwipe(Desktop_HTML_Report language) {
		String paytable = "";
		try {
		} catch (Exception e) {
		}
		return paytable;
	}

	public boolean winHistoryClick() throws Exception {
		log.debug("Clicked on win history button");
		return true;
	}

	public void winHistoryClose() throws Exception {

	}

	/**
	 * ate:22/11/2017 Author:Laxmikanth Kodam This method used to remove the $
	 * symbol from credits balance
	 * 
	 * @return
	 */
	public String func_String_Operation(String value) {
		String str = value;
		String str1 = str.substring(1);
		return str1;
	}

	public void clickAtCoordinates(String cx, String cy) {
		try {
			JavascriptExecutor js = ((JavascriptExecutor) webdriver);

			// System.out.println(js.executeScript(cx));
			// System.out.println(js.executeScript(cy));
			int dx = 0, dy = 0;
			try {
				Long sx = (Long) js.executeScript(cx);
				dx = sx.intValue();
			} catch (Exception e) {
				Double sx = (Double) js.executeScript(cx);
				dx = sx.intValue();
			}
			try {
				Long sy = (Long) js.executeScript(cy);
				dy = sy.intValue();
			} catch (Exception e) {
				Double sy = (Double) js.executeScript(cy);
				dy = sy.intValue();
			}
			if (dx == 0) {
				dx = 1;
			}
			if (dy == 0) {
				dy = 1;
			}

			// System.out.println("width:" +dx );
			// System.out.println("Height:" + dy);

			Thread.sleep(3000);
			Actions act = new Actions(webdriver);

			WebElement ele1 = webdriver.findElement(By.id("gameCanvas"));

			act.moveToElement(ele1, dx, dy).click().build().perform();

		} catch (Exception e) {
			log.error("exception on clicking", e);
			;
		}
	}

	public boolean freeGamesEntryScreen() {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public boolean freeGameEntryInfo() {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public boolean clickPlayNow() {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public String freeGamesResumescreen() {
		return null;
	}

	public boolean freeGameResumeInfo() {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public boolean resumeScreenDiscardClick() {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public boolean confirmDiscardOffer() {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public boolean freeGamesExpriyScreen() {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public String freeGamesContinueExpiry() {
		return null;
	}

	public void assignFreeGames(Desktop_HTML_Report language, String username) {
		try {
			webdriver.findElement(By.xpath(XpathMap.get("FreeGamesUsername"))).clear();
			webdriver.findElement(By.xpath(XpathMap.get("FreeGamesUsername"))).sendKeys(username);
			Thread.sleep(3000);
			webdriver.findElement(By.xpath("//*[@class=ui-menu-item-wrapper]")).click();
			webdriver.findElement(By.xpath(XpathMap.get("FreeGamesMultipleCheckBox"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("FreeGamesMultipleCount"))).clear();
			webdriver.findElement(By.xpath(XpathMap.get("FreeGamesMultipleCount"))).sendKeys("20");
			webdriver.findElement(By.xpath(XpathMap.get("FreeGamesSearchBox"))).sendKeys(GameName);
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("FreeGameOffer1"))).click();
			webdriver.findElement(By.xpath(XpathMap.get("FreeGameOffer2"))).click();
			webdriver.findElement(By.xpath(XpathMap.get("FreeGamesAssignOffer"))).click();
			language.detailsAppend("Verify Free Games Offer assigned successfully",
					"Free Games offer should be assigned", "Free Games Offer assigned successfully", "Pass");
			Thread.sleep(5000);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void close_Autoplay() throws InterruptedException {

	}

	public String getConsoleText(String text) {
		String consoleText = null;
		try {
			JavascriptExecutor js = ((JavascriptExecutor) webdriver);
			consoleText = (String) js.executeScript(text);
			log.debug("Text read from console= " + consoleText);
		} catch (JavascriptException e) {
			log.error("Exception executing javascript, please check hook for component" + e.getMessage());
		}
		return consoleText;
	}

	public ArrayList<String> getConsoleList(String text) {
		ArrayList<String> list = null;
		try {
			JavascriptExecutor js = ((JavascriptExecutor) webdriver);
			list = (ArrayList<String>) js.executeScript(text);
		} catch (Exception e) {
			e.getMessage();
		}
		return list;
	}

	public ArrayList<Map<String, Long>> getConsoleListMap(String text) {
		ArrayList<Map<String, Long>> list = null;
		try {
			JavascriptExecutor js = ((JavascriptExecutor) webdriver);
			list = (ArrayList<Map<String, Long>>) js.executeScript(text);
		} catch (Exception e) {
			e.getMessage();
		}
		return list;
	}

	public Map<String, String> getConsoleMap(String text) {
		Map<String, String> map = null;
		try {
			JavascriptExecutor js = ((JavascriptExecutor) webdriver);
			map = (Map<String, String>) js.executeScript(text);
		} catch (Exception e) {
			log.error(e.getMessage(), e);
			System.out.println(e.getMessage());
		}
		return map;
	}

	public Map<String, Long> getConsoleLongMap(String text) {
		Map<String, Long> map = null;
		try {
			JavascriptExecutor js = ((JavascriptExecutor) webdriver);
			map = (Map<String, Long>) js.executeScript(text);
		} catch (Exception e) {
			log.error(e.getMessage(), e);
			System.out.println(e.getMessage());
		}
		return map;
	}

	public Map<String, String> getConsoleStringMap(String text) {
		Map<String, String> map = null;
		try {
			JavascriptExecutor js = ((JavascriptExecutor) webdriver);
			map = (Map<String, String>) js.executeScript(text);
		} catch (Exception e) {
			log.error(e.getMessage(), e);
			System.out.println(e.getMessage());
		}
		return map;
	}

	/**
	 * *Author:Pramlata Mishra This method is used to get element text form game
	 * console
	 * 
	 * @throws InterruptedException
	 */
	public long getConsoleNumeric(String text) {
		long consoleNumeric = 0;
		try {
			JavascriptExecutor js = ((JavascriptExecutor) webdriver);
			consoleNumeric = (Long) js.executeScript(text);
		} catch (Exception e) {
			e.getMessage();
		}
		return consoleNumeric;
	}

	public boolean GetConsoleBooleanText(String hook) {
		boolean consoleText = true;
		JavascriptExecutor js = ((JavascriptExecutor) webdriver);
		try {
			consoleText = (Boolean) js.executeScript(hook);
		} catch (JavascriptException e) {
			// log.error("Please check hook");
			// log.error(e.getMessage());
			consoleText = false;
		} catch (Exception e) {
			log.error(e.getMessage());
			consoleText = false;
		}
		return consoleText;
	}

	/**
	 * Date:07/12/2017 Author:premlata Mishra This method is to split the string
	 * accprding to given string or symbol
	 * 
	 * @return true
	 */
	public String[] splitString(String val, String toreplace) {
		String splitedval[] = null;
		try {
			String valnew = val.replace(toreplace, "/");
			splitedval = valnew.split("/");
		} catch (Exception e) {
			e.getMessage();
		}
		return splitedval;
	}

	public void acceptAlert() {

	}

	/**
	 * * Date: 29/05/2018 Author: Premlata Mishra Description: This function is used
	 * to set the bet to minimum Parameter:
	 */
	public void setMinBet() {
		try {

		} catch (Exception e) {
			e.getMessage();
		}
	}

	/**
	 * Date:10-1-2018 Name:Premlata Mishra Description: this function is open
	 * paytable page
	 * 
	 * @throws Exception
	 */
	public void openPaytable() {
		try {
			func_Click(XpathMap.get("OneDesign_Hamburger"));
			Wait.until(ExpectedConditions.elementToBeClickable(By.xpath(XpathMap.get("OneDesign_Paytable"))));
			func_Click(XpathMap.get("OneDesign_Paytable"));
			Thread.sleep(3000);
		} catch (Exception e) {
			e.getMessage();
		}
	}

	/**
	 * * Date: 29/05/2018 Author: Premlata Mishra Description: This function is used
	 * to fetch payout from paytable
	 * 
	 * Parameter:
	 */
	public double gamepayout(String xpath) {
		double gamepayout_Double = 0.0;
		return gamepayout_Double;
	}

	public double gamepayout(ArrayList<String> symbolData, String paytablePayout) {
		double gamepayout_Double = 0.0;
		return gamepayout_Double;
	}

	/**
	 * * Date: 29/05/2018 Author: Premlata Mishra Description: This function is used
	 * to verify paytable payouts and its values Parameter:
	 */
	public double verifyPaytable_Payouts(String xmlpayout, double payline, double bet, String scatter) {
		double verifypayout = 0.0, intPayout, verifypayoutnew = 0.0;
		try {
			// double gamepayout_Double=gamepayout(xpath);
			intPayout = Integer.parseInt(xmlpayout);// xmlpayout
			if (scatter.equalsIgnoreCase("yes")) {
				verifypayout = (bet * intPayout);
				verifypayoutnew = round(verifypayout);
				return verifypayoutnew;
			} else {
				verifypayout = (bet * intPayout) / payline;
				verifypayoutnew = round(verifypayout);
				return verifypayoutnew;
			}
		} catch (Exception e) {
			log.error("error in verifying payout", e);
		}
		return verifypayout;
	}

	/**
	 * Date: 30/05/2018 Autohr: Havish Jain Description: This function used to
	 * handle the error
	 * 
	 * 
	 * 
	 */
	public void error_Handler(Desktop_HTML_Report report) {

		String error = XpathMap.get("Error");
		for (int i = 1; i <= Constant.REFRESH_RETRY_COUNT; i++) {
			if (isElementPresent(error)) {
				try {
					report.detailsAppend("Error is present", "Error is present", "Error is present", "Interrupted");
				} catch (Exception e) {

					e.printStackTrace();
				}
				webdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
				webdriver.navigate().refresh();
			} else {
				break;
			}
		}
	}

	public Map<String, Integer> creditBubble() throws Exception {
		Map<String, Integer> userValue = new HashMap<>();
		int creditbubbleBalstr;
		int bonusInBubbleValdouble;
		int totalcreditValdouble = 0;
		try {
			Thread.sleep(3000);
			// Actions act = new Actions(webdriver);
			// act.moveByOffset(200, 200).click().build().perform();
			// clickAtCoordinates("return
			// theForce.game.automation.getControlById(BalanceComponent).Text.balanceText.world.x","return
			// theForce.game.automation.getControlById(BalanceComponent).Text.balanceText.world.y");
			// func_Click(XpathMap.get("Creditbubble"));
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("Creditbubble"))).isDisplayed()) {
				creditbubbleBalstr = Integer.parseInt(verifycreditBubble(XpathMap.get("creditBubble_Balance")));

				bonusInBubbleValdouble = Integer.parseInt(verifycreditBubble(XpathMap.get("creditBubble_Bonus")));

				bonusInBubbleValdouble = Integer.parseInt(verifycreditBubble(XpathMap.get("CreditBubble_TB")));

				userValue.put("Balance", creditbubbleBalstr);
				userValue.put("Bonus", bonusInBubbleValdouble);
				userValue.put("TotalCredit", totalcreditValdouble);
			}
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
		return userValue;
	}

	public String verifycreditBubble(String locator) {
		String betValue = getText(locator);
		String bet = betValue.replaceAll("[^0-9]", "");
		return bet;
	}

	public void typeCasting(String cx, Coordinates coordinateObj) {
		JavascriptExecutor js = ((JavascriptExecutor) webdriver);
		try {
			Long sx = (Long) js.executeScript(cx);
			coordinateObj.setX(sx);
		} catch (Exception e) {
			Double sdx = (Double) js.executeScript(cx);
			Long sx = sdx.longValue();
			coordinateObj.setX(sx);
		}
	}

	public void clickAtCoordinates(Long sx, Long sy) {
		try {
			int dx = 0, dy = 0;
			try {
				dx = sx.intValue();
			} catch (Exception e) {
				dx = sx.intValue();
			}
			try {
				dy = sy.intValue();
			} catch (Exception e) {
				dy = sy.intValue();
			}
			Thread.sleep(3000);
			Actions act = new Actions(webdriver);
			WebElement ele1 = webdriver.findElement(By.id("gameCanvas"));
			act.moveToElement(ele1, dx, dy).click().build().perform();

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void clickNextOffer() {
	}

	public String freeGamesDiscardExistingOffer() {
		return null;
	}

	public void clickBaseSceneDiscard() {
	}

	public boolean FSSceneLoading(int bonusSelection) {
		return true;
	}

	public String removeUTF8BOM(String s) {
		if (s.startsWith(UTF8_BOM)) {
			s = s.substring(1);
		}
		return s;
	}

	/**
	 * Author: Havish Jain This method is used to get data from the har and get the
	 * URL of assets.
	 * 
	 * @param proxy
	 * @return ArrayList
	 */
	public ArrayList<String> cacheBustingCDN(BrowserMobProxyServer proxy2) {
		List<String> al = new ArrayList<String>();
		waitForPageToBeReady();
		nhar = proxy2.getHar();

		hardata = nhar.getLog();
		entries = hardata.getEntries();
		itr = entries.iterator();

		while (itr.hasNext()) {
			HarEntry entry = itr.next();
			String requestUrl = entry.getRequest().getUrl().toString();
			al.add(requestUrl);
		}
		return (ArrayList<String>) al;
	}

	/**
	 * Author: Havish Jain This method is used read Manifest file from the server
	 * and save the json data in a list.
	 * 
	 * @param manifest file
	 * @return ArrayList
	 */
	public ArrayList<String> readManifestFile(String manifestFile) throws ParseException, IOException {
		List<String> al = new ArrayList<String>();
		FileReader reader = new FileReader(manifestFile);

		String str = null;
		try (BufferedReader br = new BufferedReader(reader)) {
			String st = new String();
			while (true) {
				str = new String(st);
				st = br.readLine();
				if (st == null) {
					break;
				}
			}
		}

		String[] words = str.split("=");
		JSONParser jsonParser = new JSONParser();
		JSONObject jsonObject = (JSONObject) jsonParser.parse(words[1]);

		Set set = jsonObject.keySet();
		for (Object s : set) {
			String resourcePath = new String();
			JSONObject jsonObject3 = (JSONObject) jsonObject.get(s);
			resourcePath = jsonObject3.get("path").toString();

			// need to uncomment for pn game resourcePath =
			// (String)jsonObject.get(s);

			if (!resourcePath.contains("960x640") && !resourcePath.contains("1136x640"))
				al.add(resourcePath);
		}
		return (ArrayList<String>) al;
	}

	/*
	 * Below methods are for Pokerstar GTR Teast cases
	 */

	public String pokerStar_game_load(String url) {
		String gamename = XpathMap.get("RedirectGame");

		Wait = new WebDriverWait(webdriver, 500);
		try {
			webdriver.navigate().to(url);

			log.debug("navigated the url and  Poker Star Lobby  to be visible");
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("Config_Button"))));
			Thread.sleep(4000);
			System.out.println("Url  " + webdriver.getCurrentUrl());
			log.info("Nevigate to Poker star Lobby");

			String game_Xpth = "//span[contains(text(),%s)]";
			String fullXpath = String.format(game_Xpth, gamename);
			System.out.println("Xpath" + fullXpath);
			webdriver.findElement(By.xpath(fullXpath)).click();
			Wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(XpathMap.get("Dice_icon"))));
			log.debug("Clicked on game and waiting for game base scene");

		} catch (Exception e) {
			log.error("error in func_navigate", e);
		}
		return gamename;

	}

	/*
	 * Below methods are for Pokerstar GTR Teast cases
	 */

	public boolean openAutoplay() {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	/*
	 * get Win limit values using hooks Used for screch games
	 */

	/**
	 * getWinLimitValues returns the list of Win Limit Values
	 * 
	 * @return
	 */

	public List<WebElement> getWinLimitValues() {
		List<WebElement> winLimitList = null;
		try {
			WebElement webElement = webdriver.findElement(By.xpath((XpathMap.get("winLimit"))));
			Select selection = new Select(webElement);
			winLimitList = selection.getOptions();

		} catch (Exception e) {
			log.error(e.getMessage(), e);
		}
		return winLimitList;
	}

	/**
	 * getWinLimitValues returns the list of Loss Limit Values
	 * 
	 * @return
	 */

	public List<WebElement> getLossLimitValues() {
		List<WebElement> winLimitList = null;
		try {
			Select selection = new Select(webdriver.findElement(By.xpath((XpathMap.get("lossLimit")))));
			winLimitList = selection.getOptions();
		} catch (Exception e) {
			log.error(e.getMessage(), e);
		}
		return winLimitList;
	}

	public boolean checkWinLimitReachedForBet(String winLimit, int counter) {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public boolean checkLossLimitReachedForBet(String lossLimit, int counter) {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public void setQuickSpinOff() {

	}

	public void setQuickSpinOn() {

	}

	public boolean isBetButtonAccessible() {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public boolean isMaxButtonAccessible() {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public boolean isAutoplayStoppedOnMenuClick() {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public boolean isBetChangedIntheConsole(String betValue) {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public String getCurrentCredits() {

		return null;
	}

	public String getCurrentCreditsforRegMarkets() {

		return null;
	}

	public boolean isCreditDeducted(String creditValue, String betValue) {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public boolean isWinAddedToCredit(String creditValue, String betValue) {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public boolean isPlayerWon() {

		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public long getNumberOfQuickbets() {

		return 0;
	}

	public boolean isBetChangedOnRefresh() {

		return true;
	}

	public void openBetPanel() {
	}

	public String setTheNextLowBet() {

		return null;
	}

	public String selectQuickBet(int quickBet) {

		return null;
	}

	public boolean validateMiniPaytable(String bet, Desktop_HTML_Report language) {

		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public boolean isAutoplayPauseOnFocusChange(Desktop_HTML_Report language) {

		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public boolean verifyAutoplayConsoleOptions(Desktop_HTML_Report report) {

		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public boolean verifyAutoplayPanelOptions(Desktop_HTML_Report report) {

		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public boolean verifyALLBetValues(Desktop_HTML_Report report) {

		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public boolean verifyAllQuickBets(Desktop_HTML_Report report) {

		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public boolean CheckNavigateGameToBanking(Desktop_HTML_Report report) {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;

	}

	public boolean waitForWinDisplay() {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public void BackTogamefromnavigation(Desktop_HTML_Report report) {
	}

	public boolean verifysettingsOptions(Desktop_HTML_Report report) throws InterruptedException {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public boolean verifypaytablenavigation(Desktop_HTML_Report report) {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public boolean verifyhelpenavigation(Desktop_HTML_Report report) {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public void paytablenavigationClose() {
	}

	public boolean verifyresponsiblegamingenavigation(Desktop_HTML_Report report) {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public boolean verifyplaychecknavigation(Desktop_HTML_Report report) {
		boolean ret = false;
		return ret;
	}

	public boolean verifyloyaltynavigation(Desktop_HTML_Report report) {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public boolean verifycashChecknavigation(Desktop_HTML_Report report) {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public boolean verifylobbynavigation() {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public void setNameSpace() {
	}

	public void verifyMenuOptionNavigations(Desktop_HTML_Report report) {
	}

	/*
	 * Function overloading check page navigation
	 * 
	 * @input: Report,page tital
	 * 
	 * @return: void
	 */

	public void checkPageNavigation(Desktop_HTML_Report report, String pagetital) {
		try {

			// Below code is for if responsible gaming link is opening in new tab
			String mainwindow = webdriver.getWindowHandle();
			Set<String> s1 = webdriver.getWindowHandles();
			if (s1.size() > 1) {
				Iterator<String> i1 = s1.iterator();
				while (i1.hasNext()) {
					String ChildWindow = i1.next();
					if (mainwindow.equalsIgnoreCase(ChildWindow)) {
						String ChildWindow1 = i1.next();
						webdriver.switchTo().window(ChildWindow1);
					}

					String tital = webdriver.getTitle();
					log.debug(tital);
					if (tital.equalsIgnoreCase(pagetital)) {
						report.detailsAppend("verify the " + pagetital + " link ",
								" Should navigate to" + pagetital + " link", "Navigate to " + pagetital + " link",
								"pass");
						log.debug("Page navigated succesfully");
						System.out.println("Page navigated succesfully");
						webdriver.close();// closing new window
						webdriver.switchTo().window(mainwindow);
						waitForSpinButton();

					} else {
						report.detailsAppend("verify the" + pagetital + " link ",
								" Should nevigate to " + pagetital + "link",
								"Does not Navigate to " + pagetital + " link", "fail");
						webdriver.switchTo().window(mainwindow);
					}
				}
			}
			// To check is responsible gaming link is open in same tab
			else {
				String tital = webdriver.getTitle();
				log.debug(tital);
				if (tital.equalsIgnoreCase(pagetital)) {
					report.detailsAppend("verify the" + pagetital + " link ",
							" Should nevigate to" + pagetital + " link", "Navigate to" + pagetital + " link", "pass");
					log.debug("Page navigated succesfully");
					System.out.println("Page navigated succesfully");
					webdriver.navigate().back();
					webdriver.navigate().refresh();
					// JavascriptExecutor js = (JavascriptExecutor) webdriver;
					// js.executeScript("window.history.go(-1)");
					waitForSpinButton();

				} else {
					report.detailsAppend("verify the " + pagetital + " link ",
							" Should nevigate to" + pagetital + "link", "Does not Navigate to " + pagetital + " link",
							"fail");
					webdriver.navigate().back();
					webdriver.navigate().refresh();
				}
			}

		} catch (Exception e) {
			log.error("error in navigation of page");
		}

	}

	public boolean isStopButtonAvailable() {
		// TODO Auto-generated method stub
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public boolean verifyResponsibleGamingNavigation(Desktop_HTML_Report denmark) {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public boolean verifyHelpNavigation(Desktop_HTML_Report denmark) {
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public boolean betSettingCurrencySymbol(String currencySymbol, Desktop_HTML_Report currency, String currencyName)
			throws Exception {
		// TODO Auto-generated method stub
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public boolean verifyCurrencyFormat(String currencyFormat) {
		// TODO Auto-generated method stub
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public boolean freeSpinSummaryWinCurrFormat(String currencyFormat) {
		// TODO Auto-generated method stub
		return true;
	}

	public void verifyPaytableCurrency(Desktop_HTML_Report currencyReport, String currencyName) {
		// TODO Auto-generated method stub

	}

	public void miniPaytableScreeShots(Desktop_HTML_Report currencyReport, String currencyName) {
		// TODO Auto-generated method stub

	}

	public boolean reSpinOverlayCurrencyFormat(String currencyFormat) {
		// TODO Auto-generated method stub
		webdriver.navigate().refresh();
		webdriver.navigate().refresh();
		return false;
	}

	public HashMap readTranslations() {
		HashMap<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();
		return map;
	}

	public Map<String, String> getHooks() {

		Map<String, String> result = null;
		return result;
	}

	public void verifyTextTranslation(String hook, String text, String languageCode,
			HashMap<String, ArrayList<String>> translationmap, Desktop_HTML_Report report) {
	}

	public String Verifystoryoptioninpaytable(Desktop_HTML_Report report, String languageCode) {
		return languageCode;
	}

	public boolean waitForBigWin() {
		webdriver.navigate().refresh();
		return false;
	}

	public void Payoutvarificationforallbet(Desktop_HTML_Report language) {
		// TODO Auto-generated method stub

	}

	public String getMinimumBet() {

		return null;
	}

	public void verifySpinBtnState(Desktop_HTML_Report language) {
		// TODO Auto-generated method stub

	}

	public void autoplayPresets(Desktop_HTML_Report report) {
		// TODO Auto-generated method stub

	}

	public boolean verifyBigWinCurrencyFormat(String currencyFormat, Desktop_HTML_Report currencyReport,
			String currencyName) {
		webdriver.navigate().refresh();
		return false;
	}

	public boolean waitForBigWin(String bigwintexttobevisible) {
		webdriver.navigate().refresh();
		return false;
	}

	public void setDefaultBet() {

	}

	public boolean isPaytableAvailable() {
		webdriver.navigate().refresh();
		return false;
	}

	public boolean checkAvilability(String string) {

		webdriver.navigate().refresh();
		return false;
	}

	/**
	 * Check Availablity of an Element
	 * 
	 * @param string
	 * @return
	 */
	public boolean checkAvilabilityofElement(String string) {
		// TODO Auto-generated method stub
		webdriver.navigate().refresh();
		return false;
	}

	public void validateMenuInBigWin(Desktop_HTML_Report report) {
		// declare in parent class
	}

	public void validatePaytableNavigationInBigWin(Desktop_HTML_Report report) {
		// declare in parent class
	}

	public void bigWinQuickSpinOnOffValidation(Desktop_HTML_Report report) {
		// declare in parent class
	}

	public void bigwinwithAutoplay(Desktop_HTML_Report report) {// declare in parent class
	}

	public void bigWinOnMinimize(Desktop_HTML_Report report) {
		// declare in parent class
	}

	public void bigWinResizeValidation(Desktop_HTML_Report report, int x, int y) {// declare in parent class
	}

	public void bigWinTabValidation(Desktop_HTML_Report report) {
		// declare in parent class
	}

	public void bigWinWithSpin(Desktop_HTML_Report report) {
		// declare in parent class

	}

	/*
	 * Description : Element wait till it is visible and returns boolean value
	 * Overload of public void elementWait(String element,String currentSceneText)
	 * 
	 */
	public boolean elementWait(String element, boolean b) {
		// declare in parent class
		webdriver.navigate().refresh();
		return false;

	}

	public void verifyJackPotBonuswithScreenShots(Desktop_HTML_Report report, String languageCode) {
		// declare in parent class

	}

	public void threadSleep(int time) {
		try {
			Thread.sleep(time);
		} catch (InterruptedException e) {
			log.debug("Exception while thread sleep", e);
			Thread.currentThread().interrupt();

		}
	}

	public String convertToMonthWeekssFormat(long seconds) {

		String convertedStr = null;
		long month = seconds / (4 * 7 * 24 * 3600);
		seconds = seconds % (4 * 7 * 24 * 3600);

		long week = seconds / (7 * 24 * 3600);
		seconds = seconds % (7 * 24 * 3600);

		long day = seconds / (24 * 3600);
		seconds = seconds % (24 * 3600);

		long hour = seconds / 3600;
		seconds %= 3600;

		long minutes = seconds / 60;
		convertedStr = new String(
				month + "m" + " " + week + "w" + " " + day + "d" + " " + hour + "h" + " " + minutes + "m");

		return convertedStr;

	}

	public void refresh(Desktop_HTML_Report report) {
		// Declear in parent class
	}

	public Map<String, String> getAllTheModalHeaders() {
		return null;
	}

	public String checkIfAnyModelHeaderOccured(Map<String, String> modalHeadersMap) {
		return null;
	}

	public Map<String, String> getAllTheModalFooter() {
		return null;
	}

	public boolean isFreeSpinTriggered() {
		webdriver.navigate().refresh();
		return false;
	}

	public void waitFor(String Locator) {
		// declear in parent Library
	}

	public boolean drawCollectBaseGame(Desktop_HTML_Report report, String languageCode)
			throws InterruptedException, Exception {
		webdriver.navigate().refresh();
		return false;

	}
	// TODO Auto-generated method stub

	public boolean drawClick() throws InterruptedException {
		webdriver.navigate().refresh();
		return false;
		// TODO Auto-generated method stub

	}

	public void doubleToCollect(Desktop_HTML_Report report) throws InterruptedException, Exception {
		// TODO Auto-generated method stub
		// webdriver.navigate().refresh(); return false;
	}

	public boolean verifyPaytablePresent() {
		// TODO Auto-generated method stub
		webdriver.navigate().refresh();
		return false;
	}

	public boolean quickSpinOn() {
		// TODO Auto-generated method stub
		webdriver.navigate().refresh();
		return false;
	}

	public void quickSpinClick() {
		// TODO Auto-generated method stub

	}

	public boolean quickSpinOff() {
		// TODO Auto-generated method stub
		webdriver.navigate().refresh();
		return false;
	}

	public String getAttributeXpath(String string, String string2) {
		// TODO Auto-generated method stub
		return null;
	}

	public boolean waitForWin() {
		// TODO Auto-generated method stub
		webdriver.navigate().refresh();
		return false;
	}

	public String GetBetAmtString() {
		// TODO Auto-generated method stub
		return null;
	}

	public boolean dealClick() throws InterruptedException {
		webdriver.navigate().refresh();
		return false;
		// TODO Auto-generated method stub

	}

	public void doubleToGambleReached(Desktop_HTML_Report languageReport, String languageCode)
			throws InterruptedException, Exception {
		// TODO Auto-generated method stub

	}

	public void paytableClickVideoPoker(Desktop_HTML_Report languageReport, String languageCode) throws Exception {
		// TODO Auto-generated method stub

	}

	public boolean quickSpinDisabledForDenmark() {
		// TODO Auto-generated method stub
		webdriver.navigate().refresh();
		return false;
	}

	public boolean clockDisplayForDenmark() {
		// TODO Auto-generated method stub
		webdriver.navigate().refresh();
		return false;
	}

	public boolean helpLinkDisplayForDenmark() {
		// TODO Auto-generated method stub
		webdriver.navigate().refresh();
		return false;
	}

	public boolean linkToPlayerProtection() {
		// TODO Auto-generated method stub
		webdriver.navigate().refresh();
		return false;
	}

	public void setSoundFalgActive(boolean b) {

	}

	public void startAutoPlay() {

	}

	public void clickFregamesPlay() {

	}

	/**
	 * The below method assigns the freegames for bluemesa
	 * 
	 * @param randomUserName
	 * @param defaultNoOfFreeGames
	 * @param offerExpirationUtcDate
	 * @param balanceTypeId
	 * @param mid
	 * @param cid
	 * @param noOfOffers
	 * @return
	 */

	public boolean addFreeGameToUserInBluemesa(String randomUserName, int defaultNoOfFreeGames,
			String offerExpirationUtcDate, String balanceTypeId, int mid, int cid, @Optional("1") int noOfOffers) {
		RestAPILibrary apiobj = new RestAPILibrary();
		CommonUtil util = new CommonUtil();
		boolean isFreeGameAssigned = false;
		FreeGameOfferResponse freeGameOfferRes = apiobj.addFreeGameOffer(defaultNoOfFreeGames,
				util.randomFreegameOfferName(), offerExpirationUtcDate, balanceTypeId, mid, cid);
		if (freeGameOfferRes != null) {
			// assign multiple offer
			for (int OfferCnt = 1; OfferCnt <= noOfOffers; OfferCnt++) {
				isFreeGameAssigned = apiobj.assignFreeGameOfferByOfferID(randomUserName, freeGameOfferRes.getOfferId(),
						freeGameOfferRes.getOfferAvailableFromUtcDate());
			}
		}
		return isFreeGameAssigned;

	}

	/**
	 * The below method assigns the freegames for Axioms
	 * 
	 * @param randomUserName
	 * @param defaultNoOfFreeGames
	 * @param offerExpirationUtcDate
	 * @param balanceTypeID
	 * @param mid
	 * @param cid
	 * @param noOfOffers
	 * @return
	 */

	public boolean addFreeGameToUserInAxiom(String randomUserName, int defaultNoOfFreeGames,
			String offerExpirationUtcDate, String balanceTypeID, int mid, int cid, @Optional("1") int noOfOffers) {
		RestAPILibrary apiobj = new RestAPILibrary();
		CommonUtil util = new CommonUtil();
		boolean isFreeGameAssigned = false;
		for (int OfferCnt = 1; OfferCnt <= noOfOffers; OfferCnt++) {
			isFreeGameAssigned = apiobj.createFreeGameInAxiom(randomUserName, util.randomFreegameOfferName(),
					defaultNoOfFreeGames, offerExpirationUtcDate, balanceTypeID, mid, cid);

		}
		return isFreeGameAssigned;
	}

	/**
	 * This method retuns max bet value
	 */
	public String moveCoinSizeSliderToMaxBet(Desktop_HTML_Report report, String CurrencyName) {
		return null;
	}

	public void unlockBonus(Desktop_HTML_Report language) {

	}

	public String replaceParamInHook(String selectBonus, Map<String, String> paramMap) {
		return null;
	}

	public boolean isGameNameVisibleInCurrentScene() {
		webdriver.navigate().refresh();
		return false;
	}

	public boolean elementWait(String string, boolean b, int i) {
		webdriver.navigate().refresh();
		return false;
	}

	/**
	 * This method checks whether quickspin available or not
	 * 
	 * @return
	 */
	public boolean isQuickspinAvailable() {
		webdriver.navigate().refresh();
		return false;
	}

	/**
	 * This method is used to click on the Autoplay win/loss limit dialog box
	 */
	public void clickOnPrimaryBtn() {

	}

	/**
	 * This method is used to check the status of spin button in base scene
	 * 
	 * @return
	 */
	public boolean verifySpinStatus() {
		webdriver.navigate().refresh();
		return false;
	}

	/**
	 * To verify bonus game win currency format
	 * 
	 * @param currencyFormat
	 * @return
	 */
	public boolean bonusWinCurrFormat(String currencySymbol) {
		// TODO Auto-generated method stub
		webdriver.navigate().refresh();
		return false;
	}

	/**
	 * To click on the continue button after bonus game completion
	 * 
	 * @return
	 */
	public String clickContinueInBonusGame() {
		String FreeSpin = "";
		return FreeSpin;
		// TODO Auto-generated method stub

	}

	/**
	 * To select the bonus books in bonus game(hotInk)
	 */
	public boolean bonusSelection(String currencyFormat, int iteamCnt) {
		// TODO Auto-generated method stub
		webdriver.navigate().refresh();
		return false;
	}

	/**
	 * To validate currency amount with the currency format in excel sheet
	 */
	public boolean currencyFormatValidator(String curencyAmount, String currencyFormat) {
		webdriver.navigate().refresh();
		return false;
	}

	/**
	 * To verify piggybank bonus and safe bonus in bust the bank
	 * 
	 * @return
	 */
	public boolean piggyBankBonus(String currencyFormat) {
		// TODO Auto-generated method stub
		webdriver.navigate().refresh();
		return false;
	}

	/**
	 * To verify Safe bonus bonus in bust the bank
	 * 
	 * @return
	 */
	public boolean verifySafeBonusCurrency(String currencyFormat) {
		// TODO Auto-generated method stub
		webdriver.navigate().refresh();
		return false;
	}

	/**
	 * This method is used to check whether session reminder is present or not
	 * 
	 * @return
	 */
	public boolean verifySessionReminderPresent(Desktop_HTML_Report report) {
		return true;
	}

	/*
	 * Italy TopBar
	 */

	public String italy_GameNameOnTopBar(Desktop_HTML_Report italy) {
		String getGameName = null;
		try {
			boolean isGameNamePresent = webdriver.findElement(By.xpath(XpathMap.get("Italy_TopbarGamename")))
					.isDisplayed();
			// System.out.println(isGameNamePresent);
			if (isGameNamePresent) {
				log.debug("Gamename is visible");
				getGameName = webdriver.findElement(By.xpath(XpathMap.get("Italy_TopbarGamename"))).getText(); // Expected
																												// Name
				System.out.println("Gamename is visible as  " + getGameName);
				log.debug("Gamename is visible as  " + getGameName);

				String name = XpathMap.get(("Italy_GamenameonTopBar")); // Actual Name
				System.out.println("Actual Game name is  " + name);
				if (getGameName.equals(name)) // Expected VS Actual Name .
				{
					System.out.println("Game name is same");
					Thread.sleep(3000);
					italy.detailsAppend("Expected VS Actual Game Names are same ", "Game Names are Same",
							"Game Names are Same", "pass");
				} else {
					System.out.println("Game name is different");
					italy.detailsAppend("Expected VS Actual Game Names are same ", "Game Names are different",
							"Game Names are different", "fail");
				}

			} else {
				System.out.println("Game name is not visible on top bar");
			}
		} catch (Exception e) {
			log.error("Not able to verify Game name", e);
		}
		return getGameName;
	}

	/**
	 * This method checks whether stop available or not in Italy Market
	 * 
	 * @return
	 */

	///////////////////////////////// Vuvuzela HamburgerMenu Prod
	///////////////////////////////// /////////////////////////////////////////////////////////////////////////////////////

	// Vuvu_HamburgerMenu

	public void HM_ZALogin1() throws Exception {
		webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
		webdriver.findElement(By.xpath(XpathMap.get("MobileNoFieldZA"))).sendKeys(XpathMap.get("HMPH1"));
		Thread.sleep(3000);
		System.out.print("MobileNumber is Entered");
		webdriver.findElement(By.xpath(XpathMap.get("PasswordFieldZA"))).sendKeys(XpathMap.get("HMPD1"));
		System.out.print("Password is Entered");
		Thread.sleep(3000);
		System.out.print("LoginBtn is Present");
		webdriver.findElement(By.xpath(XpathMap.get("LoginZA1"))).click();
		Thread.sleep(3000);
		try {
			webdriver.findElement(By.xpath(XpathMap.get("PromoClose"))).click();
			Thread.sleep(3000);
		} catch (Exception e) {
			System.out.print("Promo Code is not present");
		}
	}

	public void HM_ZALogin2() throws Exception {
		webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
		Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
		System.out.print("VuvuHamburgerMenu is Present");
		webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
		Thread.sleep(3000);
//		Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
		System.out.print("Login Btn is Present");
		webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
		Thread.sleep(4000);
		webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber"))).sendKeys(XpathMap.get("HMZAPH"));
		Thread.sleep(3000);
		webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("HMZAPD"));
		Thread.sleep(3000);
		try {
			webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();
			Thread.sleep(3000);
		} catch (Exception e) {
			System.out.println("error is" + e);
		}

		try {
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("PromoClose"))).click();
			Thread.sleep(3000);
		} catch (Exception e) {
			System.out.print("Promo Code is not present");
		}
	}

	public void HM_NGLogin() throws Exception {
		webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
		webdriver.findElement(By.xpath(XpathMap.get("MobileNoFieldZA"))).sendKeys(XpathMap.get("HMNGPH"));
		Thread.sleep(3000);
		System.out.print("MobileNumber is Entered");
		webdriver.findElement(By.xpath(XpathMap.get("PasswordFieldZA"))).sendKeys(XpathMap.get("HMNGPD"));
		System.out.print("Password is Entered");
		Thread.sleep(3000);
		System.out.print("LoginBtn is Present");
		webdriver.findElement(By.xpath(XpathMap.get("LoginZA1"))).click();
		Thread.sleep(3000);
		try {
			webdriver.findElement(By.xpath(XpathMap.get("PromoClose"))).click();
			Thread.sleep(3000);
		} catch (Exception e) {
			System.out.print("Promo Code is not present");
		}
	}

	public void switchToNewTab() {
		// Get current window handle
		String currentWindowHandle = webdriver.getWindowHandle();

		// Get all window handles
		Set<String> windowHandles = webdriver.getWindowHandles();

		// Switch to new tab
		for (String windowHandle : windowHandles) {
			if (!windowHandle.equals(currentWindowHandle)) {
				webdriver.switchTo().window(windowHandle);
				break;
			}
		}
	}

	public void switchToParentTab() {
		// Switch back to the parent window
		String parentWindow = webdriver.getWindowHandles().iterator().next();
		webdriver.switchTo().window(parentWindow);
	}

	public void HM_Logout() throws Exception {

		webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
		if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			System.out.print("VuvuHamburgerMenu is Clicked \n");
			Thread.sleep(3000);
		} else {
			System.out.print("VuvuHamburgerMenu is not displayed \n");
		}

		Thread.sleep(1000);
		if (webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).isDisplayed()) {
		} else {
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(XpathMap.get("HMAccountOption"))).click();
		}

		try {
			Thread.sleep(3000);
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			WebElement odds = webdriver.findElement(By.xpath(XpathMap.get("HMLogOutBtn")));
			je.executeScript("arguments[0].click()", odds);
			System.out.print("HMLogOutBtn is displayed and Clicked ");
			Thread.sleep(3000);

		} catch (Exception e) {
			System.out.print(e + "HMLogOutBtn is not displayed");
			webdriver.findElement(By.xpath(XpathMap.get("HMLogOutBtn"))).click();
			Thread.sleep(3000);
		}

	}

	// TC-1(HamburgerMenu) @Author: AS66528
	// To check Responsible Gaming option is available in hamburger menu

	public boolean HM_VerifyReponsibleGaming(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(3000);

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("za")) {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ResponsibleGameInHM"))).isDisplayed());
				System.out.print("Responisible Game Btn in Hamburgermenu is Avaialable");

			} else {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMResponsibleGameNG"))).isDisplayed());
				System.out.print("Responisible Game Btn in Hamburgermenu is Avaialable");

			}
			Thread.sleep(3000);

			report.detailsAppend("TC1-Vuvu_HM", "Verify Responsible Gaming option is available in hamburger menu",
					"Verified Responsible Gaming option is available in hamburger menu", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC1-Vuvu_HM", "Verify Responsible Gaming option is available in hamburger menu",
					"Verify Responsible Gaming option Not available in hamburgermenu", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-2(HamburgerMenu) @Author: AS66528
	// To check Responsible Gaming option is Clickable in hamburger menu

	public boolean HM_ReponsibleGamingClickable(Desktop_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			System.out.print("VuvuHamburgerMenu is Clicked");
			Thread.sleep(3000);

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("za")) {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ResponsibleGameInHM"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("ResponsibleGameInHM"))).click();
				System.out.print("Responisible Game Tab in Hamburgermenu is clicked");

			} else {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMResponsibleGameNG"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("HMResponsibleGameNG"))).click();
				System.out.print("Responisible Game Tab in Hamburgermenu is clicked");

			}
			Thread.sleep(3000);

			report.detailsAppend("TC2-Vuvu_HM", "Verify Responsible Gaming option is Clickable in hamburger menu",
					"Verified Responsible Gaming option is Clickable in hamburger menu", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC2-Vuvu_HM", "Verify Responsible Gaming option is Clickable in hamburger menu",
					"Verify Responsible Gaming option Not Clickable in hamburgermenu", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC3-(HamburgerMenu) @Author: AS66528
	// Verify Responsible Gaming popup Window opens when clicked on it in hamburger
	// menu
	public boolean HM_ReponsibleGamingWindowOpens(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMAccountWindowCloseBtn"))).isDisplayed());
			System.out.print("\n In Responsible Gaming Window opens when clicked on it in hamburger menu");
			Thread.sleep(3000);

			report.detailsAppend("TC3-Vuvu_HM",
					"Verify Responsible Gaming popup Window opens when clicked on hamburger menu",
					"Verify Responsible Gaming popup Window opens when clicked on hamburger menu", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC3-Vuvu_HM",
					"Verify Responsible Gaming popup Window opens when clicked on hamburger menu",
					"Verify Responsible Gaming popup Window Not opens Not clicked on hamburger menu", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC4-(HamburgerMenu) @Author: AS66528
	// Verify on Responsible Gaming popup window a header is available with label
	// "Responsible gaming"

	public boolean HM_HeaderLabelAvailableInPopup(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMAccountWindowCloseBtn"))).isDisplayed());
			System.out.print("\n In Responsible Gaming Window header is available with label");
			Thread.sleep(3000);

			report.detailsAppend("TC4-Vuvu_HM",
					"Verify on Responsible Gaming popup window a header is available with label \"Responsible gaming\"",
					"Verified Responsible Gaming popup window a header is available with label \"Responsible gaming\"",
					"Pass");

		} catch (Exception e) {
			report.detailsAppend("TC4-Vuvu_HM",
					"Verify on Responsible Gaming popup window a header is available with label \"Responsible gaming\"",
					"Verify Responsible Gaming popup window a header Not available with label \"Responsible gaming\"",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC5-(HamburgerMenu) @Author: AS66528
	// Verify on Responsible Gaming popup window, Text "Cooling off period" is
	// available

	public boolean HM_CoolingOffPeriodAvailable(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMAccountWindowCloseBtn"))).isDisplayed());
			System.out.print("\n In Responsible Gaming Window Text Cooling off period available");
			Thread.sleep(3000);

			report.detailsAppend("TC5-Vuvu_HM",
					"Verify on Responsible Gaming popup window, Text \"Cooling off period\" is available",
					"Verified Responsible Gaming popup window, Text \"Cooling off period\" is available", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC5-Vuvu_HM",
					"Verify on Responsible Gaming popup window, Text \"Cooling off period\" is available",
					"Verified Responsible Gaming popup window, Text \"Cooling off period\" Not available", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC6-(HamburgerMenu) @Author: AS66528
	// Verify on Responsible Gaming window text "Limit" and input field for limit is
	// available with place holder "0"

	public boolean HM_LimitInputFieldwithPlaceholder(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMAccountWindowCloseBtn"))).isDisplayed());
			System.out.print("\n In Responsible Gaming Window Text \"Limit\" input field available with place holder ");
			Thread.sleep(3000);

			report.detailsAppend("TC6-Vuvu_HM",
					"Verify on Responsible Gaming window text  \"Limit\" and input field for limit is available with place holder \"0\"",
					"Verify on Responsible Gaming window text  \"Limit\" and input field for limit is available with place holder \"0\"",
					"Pass");

		} catch (Exception e) {
			report.detailsAppend("TC6-Vuvu_HM",
					"Verify on Responsible Gaming window text  \"Limit\" and input field for limit is available with place holder \"0\"",
					"Verify on Responsible Gaming window text  \"Limit\" and input field for limit Not available with place holder \"0\"",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC7-(HamburgerMenu) @Author: AS66528
	// Verify in Responsible Gaming window text "Period" and three buttons "Days"
	// "Weeks" "months" are available

	public boolean HM_CheckPeriodwithDaysWeeksMonthVisible(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMAccountWindowCloseBtn"))).isDisplayed());
			System.out.print(
					"\n In ResponsibleGaming Window Text \"Period\" and three buttons \"Days\" \"Weeks\" \"months\" are available");
			Thread.sleep(3000);

			report.detailsAppend("TC7-Vuvu_HM",
					"Verify in Responsible Gaming window text  \"Period\" and three buttons \"Days\" \"Weeks\" \"months\" are available",
					"Verify in Responsible Gaming window text  \"Period\" and three buttons \"Days\" \"Weeks\" \"months\" are available",
					"Pass");

		} catch (Exception e) {
			report.detailsAppend("TC7-Vuvu_HM",
					"Verify in Responsible Gaming window text  \"Period\" and three buttons \"Days\" \"Weeks\" \"months\" are available",
					"Verify in Responsible Gaming window text  \"Period\" and three buttons \"Days\" \"Weeks\" \"months\" Not available",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC8-(HamburgerMenu) @Author: AS66528
	// Verify in Responsible Gaming popup window a button with text "Set your period
	// (up to 3 month)" is available

	public boolean HM_TextSetYourPeriodAvailable(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMAccountWindowCloseBtn"))).isDisplayed());
			System.out.print(
					"\n In Responsible Gaming window a button with text \"Set your period (up to 3 month)\" available");
			Thread.sleep(3000);

			report.detailsAppend("TC8-Vuvu_HM",
					"Verify in Responsible Gaming popup window a button with text \"Set your period (up to 3 month)\" is available",
					"Verified Responsible Gaming popup window a button with text \"Set your period (up to 3 month)\" is available",
					"Pass");

		} catch (Exception e) {
			report.detailsAppend("TC8-Vuvu_HM",
					"Verify in Responsible Gaming popup window a button with text \"Set your period (up to 3 month)\" is available",
					"Verified Responsible Gaming popup window a button with text \"Set your period (up to 3 month)\" Not available",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC9-(HamburgerMenu) @Author: AS66528
	// Verify on Responsible Gaming popup window a "i" tooltip is available

	public boolean HM_Verified_i_tooltip(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMAccountWindowCloseBtn"))).isDisplayed());
			System.out.print("\n In Responsible Gaming Window Text \"i\"  tooltip is available");
			Thread.sleep(3000);

			report.detailsAppend("TC9-Vuvu_HM",
					"Verify on Responsible Gaming popup window a \"i\"  tooltip is available",
					"Verified Responsible Gaming popup window a \"i\"  tooltip is available", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC9-Vuvu_HM",
					"Verify on Responsible Gaming popup window a \"i\"  tooltip is available",
					"Verified Responsible Gaming popup window a \"i\"  tooltip Not available", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC10-(HamburgerMenu) @Author: AS66528
	// Verify on Responsible Gaming popup window a "i" tooltip shows more
	// information if mouse is hovered on it.

	public boolean HM_i_tooltipMousehoverd(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(XpathMap.get("IiconInResponisbleGamingPopup"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("IiconInResponisbleGamingPopup"))).click();
			System.out.print("\n In Responsible Gaming Window \"i\"  tooltip is available with more info");
			Thread.sleep(3000);

			report.detailsAppend("TC10-Vuvu_HM",
					"Verify on Responsible Gaming popup window a \"i\"  tooltip shows more information if mouse is hovered on it.",
					"Verifed Responsible Gaming popup window a \"i\"  tooltip shows more information if mouse is hovered on it.",
					"Pass");

		} catch (Exception e) {
			report.detailsAppend("TC10-Vuvu_HM",
					"Verify on Responsible Gaming popup window a \"i\"  tooltip shows more information if mouse is hovered on it.",
					"Verifed Responsible Gaming popup window a \"i\"  tooltip Not shows information if mouse Not hovered on it.",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC11-(HamburgerMenu) @Author: AS66528
	// Verify If user puts more than 3 months of time set your period button should
	// not be clickable

	public boolean HM_MoreThan3months_SetPeriodNotClickable(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMSetMonthBtn"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMSetMonthBtn"))).click();
			System.out.print("\n In Responsible Gaming Window,Month Btn is clicked");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMPeriodLimitFilledBlank"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMPeriodLimitFilledBlank"))).clear();
			webdriver.findElement(By.xpath(XpathMap.get("HMPeriodLimitFilledBlank"))).sendKeys("4");
			System.out.print("\n In Limit Tab,More than 3 given to check SetPeriod Btn Clickable or not");
			Thread.sleep(3000);

			report.detailsAppend("TC11-Vuvu_HM",
					"Verify If user puts more than 3 months of time set your period button should not be clickable",
					"Verified user puts more than 3 months of time set your period button should not be clickable",
					"Pass");

		} catch (Exception e) {
			report.detailsAppend("TC11-Vuvu_HM",
					"Verify If user puts more than 3 months of time set your period button should not be clickable",
					"Verified user puts more than 3 months of time set your period button be clickable", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC12-(HamburgerMenu) @Author: AS66528
	// Verify If user puts more than 12 weeks of time set your period button should
	// not be clickable

	public boolean HM_MoreThan12weeks_SetPeriodNotClickable(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMSetWeeksBtn"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMSetWeeksBtn"))).click();
			System.out.print("\n In Responsible Gaming Window,Week Btn is clicked");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMPeriodLimitFilledBlank"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMPeriodLimitFilledBlank"))).clear();
			webdriver.findElement(By.xpath(XpathMap.get("HMPeriodLimitFilledBlank"))).sendKeys("4");
			System.out.print("\n In Limit Tab,more than 12 No given to check SetPeriod Btn Clickable or not");
			Thread.sleep(3000);

			report.detailsAppend("TC12-Vuvu_HM",
					"Verify If user puts more than 12 weeks of time set your period button should not be clickable",
					"Verified user puts more than 12 weeks of time set your period button should not be clickable",
					"Pass");

		} catch (Exception e) {
			report.detailsAppend("TC12-Vuvu_HM",
					"Verify If user puts more than 12 weeks of time set your period button should not be clickable",
					"Verified user puts more than 12 weeks of time set your period button be clickable", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC13-(HamburgerMenu) @Author: AS66528
	// Verify If user puts more than 90 Days of time set your period button should
	// not be clickable

	public boolean HM_MoreThan90Days_SetPeriodNotClickable(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMSetDaysBtn"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMSetDaysBtn"))).click();
			System.out.print("\n In Responsible Gaming Window, Days Btn is clicked");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMPeriodLimitFilledBlank"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMPeriodLimitFilledBlank"))).clear();
			webdriver.findElement(By.xpath(XpathMap.get("HMPeriodLimitFilledBlank"))).sendKeys("91");
			System.out.print("\n In Limit Tab,More than 90 no given to check SetPeriod Btn Clickable or not");
			Thread.sleep(3000);

			report.detailsAppend("TC13-Vuvu_HM",
					"Verify If user puts more than 90 Days of time set your period button should not be clickable",
					"Verified user puts more than 90 Days of time set your period button should not be clickable",
					"Pass");

		} catch (Exception e) {
			report.detailsAppend("TC13-Vuvu_HM",
					"Verify If user puts more than 90 Days of time set your period button should not be clickable",
					"Verified user puts more than 90 Days of time set your period button be clickable", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC14-(HamburgerMenu) @Author: AS66528
	// Verify If user puts less than 3 months of time set your period button should
	// be clickable

	public boolean HM_LessThan3months_SetPeriodBeClickable(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMSetMonthBtn"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMSetMonthBtn"))).click();
			System.out.print("\n In Responsible Gaming Window,Month Btn is clicked");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMPeriodLimitFilledBlank"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMPeriodLimitFilledBlank"))).clear();
			webdriver.findElement(By.xpath(XpathMap.get("HMPeriodLimitFilledBlank"))).sendKeys("2");
			System.out.print("\n In Limit Tab,Less than 3 given to check SetPeriod Btn Clickable");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMSetYourPeriodButton"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMSetYourPeriodButton"))).click();
			System.out.print("\n Set Your period Button Clicked");
			Thread.sleep(3000);

			report.detailsAppend("TC14-Vuvu_HM",
					"Verify If user puts less than 3 months of time set your period button should be clickable",
					"Verified user puts less than 3 months of time set your period button should  be clickable",
					"Pass");

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("HMSetPeriodPopupClose"))).click();
			System.out.print("\n Set Your period Popup Close Button Clicked");
			Thread.sleep(3000);

		} catch (Exception e) {
			report.detailsAppend("TC14-Vuvu_HM",
					"Verify If user puts less than 3 months of time set your period button should be clickable",
					"Verified user puts less than 3 months of time set your period button Not clickable", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC15-(HamburgerMenu) @Author: AS66528
	// Verify If user puts less than 12 weeks of time set your period button should
	// be clickable

	public boolean HM_LessThan12weeks_SetPeriodBeClickable(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMSetWeeksBtn"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMSetWeeksBtn"))).click();
			System.out.print("\n In Responsible Gaming Window,Week Btn is clicked");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMPeriodLimitFilledBlank"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMPeriodLimitFilledBlank"))).clear();
			webdriver.findElement(By.xpath(XpathMap.get("HMPeriodLimitFilledBlank"))).sendKeys("4");
			System.out.print("\n In Limit Tab,less than 12 No given to check SetPeriod Btn Clickable");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMSetYourPeriodButton"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMSetYourPeriodButton"))).click();
			System.out.print("\n Set Your period Button Clicked");
			Thread.sleep(3000);

			report.detailsAppend("TC15-Vuvu_HM",
					"Verify If user puts less than 12 weeks of time set your period button should be clickable",
					"Verified user puts less than 12 weeks of time set your period button should  be clickable",
					"Pass");

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("HMSetPeriodPopupClose"))).click();
			System.out.print("\n Set Your period Popup Close Button Clicked");
			Thread.sleep(3000);

		} catch (Exception e) {
			report.detailsAppend("TC15-Vuvu_HM",
					"Verify If user puts less than 12 weeks of time set your period button should be clickable",
					"Verified user puts less than 12 weeks of time set your period button Not clickable", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC16-(HamburgerMenu) @Author: AS66528
	// Verify If user puts less than 90 Days of time set your period button should
	// be clickable

	public boolean HM_LessThan90Days_SetPeriodBeClickable(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMSetDaysBtn"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMSetDaysBtn"))).click();
			System.out.print("\n In Responsible Gaming Window, Days Btn is clicked");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMPeriodLimitFilledBlank"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMPeriodLimitFilledBlank"))).clear();
			webdriver.findElement(By.xpath(XpathMap.get("HMPeriodLimitFilledBlank"))).sendKeys("81");
			System.out.print("\n In Limit Tab,Less than 90 no given to check SetPeriod Btn Clickable");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMSetYourPeriodButton"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMSetYourPeriodButton"))).click();
			System.out.print("\n Set Your period Button Clicked");
			Thread.sleep(3000);

			report.detailsAppend("TC16-Vuvu_HM",
					"Verify If user puts less than 90 Days of time set your period button should be clickable",
					"Verified user puts less than 90 Days of time set your period button be clickable", "Pass");

			webdriver.navigate().refresh();

		} catch (Exception e) {
			report.detailsAppend("TC16-Vuvu_HM",
					"Verify If user puts less than 90 Days of time set your period button should be clickable",
					"Verified user puts less than 90 Days of time set your period button Not clickable", "Fail");

			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

	// TC-17(HamburgerMenu) @Author: AS66528
	// To check Document upload option is available in hamburger menu

	public boolean HM_VerifyDocumentUploadOption(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(3000);

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("za")) {
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("HMDocumentUploadOption"))).isDisplayed());
				System.out.print("\n Document upload Option Available ");

			} else {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMDocumentUploadNG"))).isDisplayed());
				System.out.print("\n Document upload Option Available ");

			}
			Thread.sleep(3000);

			report.detailsAppend("TC17-Vuvu_HM", "Verify Document upload option is available in hamburger menu",
					"Verified Document upload option is available in hamburger menu", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC17-Vuvu_HM", "Verify Document upload option is available in hamburger menu",
					"Verify Document upload option Not available in hamburgermenu", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-18(HamburgerMenu) @Author: AS66528
	// To check Document upload option is Clickable in hamburger menu

	public boolean HM_DocumentUploadClickable(Desktop_HTML_Report report) {
		try {

			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

			String currentUrl = webdriver.getCurrentUrl();
			Thread.sleep(3000);
			if ((currentUrl).contains("za")) {
				WebElement DocumentBtnInHM = webdriver.findElement(By.xpath(XpathMap.get("HMDocumentUploadOption")));
				((JavascriptExecutor) webdriver).executeScript("arguments[0].click();", DocumentBtnInHM);
				System.out.print(" Document upload Tab in Hamburgermenu is clicked");

			} else {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMDocumentUploadNG"))).isDisplayed());
				WebElement DocumentBtnInHM = webdriver.findElement(By.xpath(XpathMap.get("HMDocumentUploadNG")));
				((JavascriptExecutor) webdriver).executeScript("arguments[0].click();", DocumentBtnInHM);
				System.out.print(" Document upload Tab in Hamburgermenu is clicked");

			}
			Thread.sleep(3000);
			report.detailsAppend("TC18-Vuvu_HM", "Verify Document upload option is Clickable in hamburger menu",
					"Verified Document upload option is Clickable in hamburger menu", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC18-Vuvu_HM", "Verify Document upload option is Clickable in hamburger menu",
					"Verified Document upload option Not Clickable in hamburgermenu", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC19-(HamburgerMenu) @Author: AS66528
	// Verify Document upload popup Window opens when clicked on document upload
	// option in hamburger menu
	public boolean HM_DocumentUploadWindowOpens(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMAccountWindowCloseBtn"))).isDisplayed());
			System.out.print(
					"\n In Document upload Window opens when clicked on documentupload option in hamburgermenu ");
			Thread.sleep(3000);

			report.detailsAppend("TC19-Vuvu_HM",
					"Verify Document upload popup Window opens when clicked on document upload option in hamburger menu",
					"Verified Document upload popup Window opens when clicked on document upload option in hamburger menu",
					"Pass");

		} catch (Exception e) {
			report.detailsAppend("TC19-Vuvu_HM",
					"Verify Document upload popup Window opens when clicked on hamburger menu",
					"Verified Document upload popup Window Not opens Not clicked on document upload option in hamburger menu",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC20-(HamburgerMenu) @Author: AS66528
	// Verify id document/passport ,bankconfirmation letter, bankcard
	// frontandback,service providerletter,DHA letter,Bank statement options are
	// available.

	public boolean HM_CheckedIdDocPassportLetterAvailable(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMAccountWindowCloseBtn"))).isDisplayed());
			System.out.print(
					"\n In Document upload Window opens when clicked on documentupload option in hamburgermenu ");
			Thread.sleep(3000);

			report.detailsAppend("TC20-Vuvu_HM",
					"Verify  id document/passport ,bankconfirmation letter, bankcard frontandback,service providerletter,DHA letter,Bank statement options are available",
					"Verified  id document/passport ,bankconfirmation letter, bankcard frontandback,service providerletter,DHA letter,Bank statement options are available",
					"Pass");

		} catch (Exception e) {
			report.detailsAppend("TC20-Vuvu_HM",
					"Verify  id document/passport ,bankconfirmation letter, bankcard frontandback,service providerletter,DHA letter,Bank statement options are available",
					"Verified  id document/passport ,bankconfirmation letter, bankcard frontandback,service providerletter,DHA letter,Bank statement options are available",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC21-(HamburgerMenu) @Author: AS66528
	// Verify "choose file" button is available for id document/passport
	// ,bankconfirmation letter, bankcard frontandback,service providerletter,DHA
	// letter,Bank statement.
	public boolean HM_VerifyChooseFileBtnAvailable(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMAccountWindowCloseBtn"))).isDisplayed());
			System.out.print(
					"\n In Document upload Window opens when clicked on documentupload option in hamburgermenu ");
			Thread.sleep(3000);

			report.detailsAppend("TC21-Vuvu_HM",
					"Verify \"choose file\" button is available for id document/passport ,bankconfirmation letter, bankcard frontandback,service providerletter,DHA letter,Bank statement.",
					"Verify \"choose file\" button is available for id document/passport ,bankconfirmation letter, bankcard frontandback,service providerletter,DHA letter,Bank statement.",
					"Pass");

		} catch (Exception e) {
			report.detailsAppend("TC21-Vuvu_HM",
					"Verify \"choose file\" button is available for id document/passport ,bankconfirmation letter, bankcard frontandback,service providerletter,DHA letter,Bank statement.",
					"Verify \"choose file\" button is available for id document/passport ,bankconfirmation letter, bankcard frontandback,service providerletter,DHA letter,Bank statement.",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC22,23 -(HamburgerMenu) @Author: AS66528
	// Verify "Save file" button is available for id document/passport
	// ,bankconfirmation letter, bankcard frontandback, Bank statement.
	public boolean HM_VerifySaveFileBtnAvailable(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMAccountWindowCloseBtn"))).isDisplayed());
			System.out.print(
					"\n In Document upload Window opens when clicked on documentupload option in hamburgermenu ");
			Thread.sleep(3000);

			report.detailsAppend("TC22-Vuvu_HM",
					"Verify \"Save file\" button is available for id document/passport ,bankconfirmation letter, bankcard frontandback,Bank statement.",
					"Verified \"Save file\" button is available for id document/passport ,bankconfirmation letter, bankcard frontandback,Bank statement.",
					"Pass");

			report.detailsAppend("TC23-Vuvu_HM",
					"Verify \"Save file\" button disabled if file not selected for id document/passport,bankconfirmation letter, bankcard frontandback,Bank statement.",
					"Verified \"Save file\" button disabled if file not selected for id document/passport ,bankconfirmation letter, bankcard frontandback,Bank statement.",
					"Pass");

		} catch (Exception e) {
			report.detailsAppend("TC22-Vuvu_HM",
					"Verify \"Save file\" button is available for id document/passport ,bankconfirmation letter, bankcard frontandback,Bank statement.",
					"Verify \"Save file\" button is available for id document/passport ,bankconfirmation letter, bankcard frontandback,Bank statement.",
					"Fail");

			report.detailsAppend("TC23-Vuvu_HM",
					"Verify \"Save file\" button disabled if file not selected for id document/passport,bankconfirmation letter, bankcard frontandback,Bank statement.",
					"Verified \"Save file\" button Not disabled if file not selected for id document/passport ,bankconfirmation letter, bankcard frontandback,Bank statement.",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC25-(HamburgerMenu) @Author: AS66528
	// Verify Acceptable file type policy is mentioned at the top of the window
	public boolean HM_VerifyAcceptablefiletypePolicy(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMAccountWindowCloseBtn"))).isDisplayed());
			System.out.print(
					"\n In Document upload Window opens when clicked on documentupload option in hamburgermenu ");
			Thread.sleep(3000);

			report.detailsAppend("TC25-Vuvu_HM",
					"Verify Acceptable file type policy is mentioned at the top of the window",
					"Verified Acceptable file type policy is mentioned at the top of the window", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC25-Vuvu_HM",
					"Verify Acceptable file type policy is mentioned at the top of the window",
					"Verified Acceptable file type policy Not mentioned at the top of the window", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC26-(HamburgerMenu) @Author: AS66528
	// Verify Acceptable file type icons is there with file type policy at the top
	// of the window.
	public boolean HM_VerifyAcceptablefiletypeIcons(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMAccountWindowCloseBtn"))).isDisplayed());
			System.out.print(
					"\n In Document upload Window opens when clicked on documentupload option in hamburgermenu ");
			Thread.sleep(3000);

			report.detailsAppend("TC26-Vuvu_HM",
					"Verify Acceptable file type icons is there with file type policy at the top of the window",
					"Verified Acceptable file type icons is there with file type policy at the top of the window",
					"Pass");

		} catch (Exception e) {
			report.detailsAppend("TC26-Vuvu_HM",
					"Verify Acceptable file type icons is there with file type policy at the top of the window",
					"Verified Acceptable file type icons Not there with file type policy at the top of the window",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC27-(HamburgerMenu) @Author: AS66528
	// Verify "choose file" buttonClickable for id document/passport
	// ,bankconfirmation letter, bankcard frontandback,service providerletter,DHA
	// letter,Bank statement.
	public boolean HM_ChooseFileBtnClickable(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(XpathMap.get("HMDocumentUploadChooseFileBtn"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMDocumentUploadChooseFileBtn"))).click();
			System.out.print("\n In Document upload Window, Choose File Btn is Clicked ");
			Thread.sleep(3000);

			report.detailsAppend("TC27-Vuvu_HM",
					"Verify \"choose file\" button Clickable for id document/passport ,bankconfirmation letter, bankcard frontandback,service providerletter,DHA letter,Bank statement.",
					"Verified \"choose file\" button Clickable for id document/passport ,bankconfirmation letter, bankcard frontandback,service providerletter,DHA letter,Bank statement.",
					"Pass");

		} catch (Exception e) {
			report.detailsAppend("TC27-Vuvu_HM",
					"Verify \"choose file\" button Clickable for id document/passport ,bankconfirmation letter, bankcard frontandback,service providerletter,DHA letter,Bank statement.",
					"Verified \"choose file\" button Not Clickable for id document/passport ,bankconfirmation letter, bankcard frontandback,service providerletter,DHA letter,Bank statement.",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC28-(HamburgerMenu) @Author: AS66528
	// Verify on click of "choose file" button file explorer opens from where user
	// can choose the preferred file.
	public boolean HM_ChooseFileBtnClick_FileAppOpens(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(XpathMap.get("HMDocumentUploadChooseFileBtn"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMDocumentUploadChooseFileBtn"))).click();
			System.out.print("\n In Document upload Window, Choose File Btn is Clicked ");
			Thread.sleep(3000);

			report.detailsAppend("TC28-Vuvu_HM",
					"Verify on click of \"choose file\" button file explorer opens from where user can choose the preferred file",
					"Verified on click of \"choose file\" button file explorer opens from where user can choose the preferred file",
					"Pass");

		} catch (Exception e) {
			report.detailsAppend("TC28-Vuvu_HM",
					"Verify on click of \"choose file\" button file explorer opens from where user can choose the preferred file",
					"Verified on click of \"choose file\" button file explorer Not opens from where user can choose the preferred file",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC29-(HamburgerMenu) @Author: AS66528
	// Verify if no files are selected "No file selected" Indication message appears
	// for all the options
	public boolean HM_NoFileSelectedMessageAppear(Desktop_HTML_Report report) throws InterruptedException {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMAccountWindowCloseBtn"))).isDisplayed());
			System.out.print(
					"\n In Document upload Window opens when clicked on documentupload option in hamburgermenu ");
			Thread.sleep(3000);

			report.detailsAppend("TC29-Vuvu_HM",
					"Verify if no files are selected \"No file selected\" Indication message appears for all the options",
					"Verified if no files are selected \"No file selected\" Indication message appears for all the options",
					"Pass");

		} catch (Exception e) {
			report.detailsAppend("TC29-Vuvu_HM",
					"Verify if no files are selected \"No file selected\" Indication message appears for all the options",
					"Verified if files are Not selected \"No file selected\" Indication message Not appears for all the options",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}

		Thread.sleep(3000);
		webdriver.findElement(By.xpath(XpathMap.get("HMAccountWindowCloseBtn"))).click();
		return true;
	}

	// TC52-(HamburgerMenu) @Author: AS66528
	// Verify Transaction Summary option is available in hamburger menu
	public boolean HM_TransactionSummaryAvaialable(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			System.out.print("VuvuHamburgerMenu is Clicked");
			Thread.sleep(3000);

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("za")) {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMTransactionSummaryOption"))).isDisplayed());
				System.out.print("\n Transaction Summary option Available in hamburgermenu ");

			} else {
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("HMTransactionSummaryNG"))).isDisplayed());
				System.out.print("\n Transaction Summary option Available in hamburgermenu ");

			}

			Thread.sleep(3000);

			report.detailsAppend("TC52-Vuvu_HM", "Verify Transaction Summary option is available in hamburger menu",
					"Verified Transaction Summary option is available in hamburger menu", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC52-Vuvu_HM", "Verify Transaction Summary option is available in hamburger menu",
					"Verified Transaction Summary option Not available in hamburger menu", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC53-(HamburgerMenu) @Author: AS66528
	// Verify below option must be present in "Transaction Summary" as (Last 100,
	// All Transaction, Search bar, Select Transaction Type and Export button) and
	// columns as (Transaction Date, Type, Amount and Betslip ID)
	public boolean HM_TransactionSummaryPage(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("za")) {
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("HMTransactionSummaryOption"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("HMTransactionSummaryOption"))).click();
				System.out.print("\n Transaction Summary option Clicked in hamburgermenu ");

			} else {
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("HMTransactionSummaryNG"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("HMTransactionSummaryNG"))).click();
				System.out.print("\n Transaction Summary option Clicked in hamburgermenu ");
			}

			Thread.sleep(3000);

			report.detailsAppend("TC53-Vuvu_HM",
					"Verify below option must be present in \"Transaction Summary\" as (Last 100, All Transaction, Search bar, Select Transaction Type and Export button) and columns as (Transaction Date, Type, Amount and Betslip ID)",
					"Verified below option present in \"Transaction Summary\" as (Last 100, All Transaction, Search bar, Select Transaction Type and Export button) and columns as (Transaction Date, Type, Amount and Betslip ID)",
					"Pass");

		} catch (Exception e) {
			report.detailsAppend("TC53-Vuvu_HM",
					"Verify below option must be present in \"Transaction Summary\" as (Last 100, All Transaction, Search bar, Select Transaction Type and Export button) and columns as (Transaction Date, Type, Amount and Betslip ID)",
					"Verified below option Not present in \"Transaction Summary\" as (Last 100, All Transaction, Search bar, Select Transaction Type and Export button) and columns as (Transaction Date, Type, Amount and Betslip ID)",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC54-(HamburgerMenu) @Author: AS66528
	// To check when click on Last 100 button it should display proper data
	public boolean HM_Transaction_Last100Button(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMLAST100Button"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMLAST100Button"))).click();
			Thread.sleep(3000);

			report.detailsAppend("TC54-Vuvu_HM", "To check when click on Last 100 button it should display proper data",
					"checked when click on Last 100 button displayed proper data", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC54-Vuvu_HM", "To check when click on Last 100 button it should display proper data",
					"checked when click on Last 100 button not display proper data", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC55-(HamburgerMenu) @Author: AS66528
	// To check when enter Betslip ID it should display appropriate data or not
	public boolean HM_Transaction_Searchbarfunctionality(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMSeachBarInTransaction"))).isDisplayed());
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("za")) {
				webdriver.findElement(By.xpath(XpathMap.get("HMSeachBarInTransaction")))
						.sendKeys(XpathMap.get("HMBetSlipIDZA"));
				System.out.print("\n Search Bar in Transaction Summary Betslip ID entered");

			} else {
				webdriver.findElement(By.xpath(XpathMap.get("HMSeachBarInTransaction")))
						.sendKeys(XpathMap.get("HMBetSlipIDNG"));
				System.out.print("\n Search Bar in Transaction Summary Betslip ID entered");
			}
			Thread.sleep(3000);

			report.detailsAppend("TC55-Vuvu_HM",
					"To check when enter Betslip ID it should display appropriate data or not",
					"checked when enter Betslip ID it display appropriate data", "Pass");

			report.detailsAppend("TC56-Vuvu_HM",
					"To check when enter Betslip ID it should display appropriate data or not",
					"checked when enter Betslip ID it display appropriate data", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC55-Vuvu_HM",
					"To check when enter Betslip ID it should display appropriate data or not",
					"checked when enter Betslip ID it display appropriate data", "Fail");

			report.detailsAppend("TC56-Vuvu_HM",
					"To check when enter Betslip ID it should display appropriate data or not",
					"checked when enter Betslip ID it display appropriate data", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC57-(HamburgerMenu) @Author: AS66528
	// To check when select any option from Select Transaction Type drop down then
	// appropriate data must be displayed
	public boolean HM_TransactionTypeDropDownOptionSelected(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(XpathMap.get("HMSelectTransactionTypeBtn"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMSelectTransactionTypeBtn"))).click();
			System.out.print(" Transaction type dropdown opetion is selected");
			Thread.sleep(3000);

			report.detailsAppend("TC57-Vuvu_HM",
					"check when select any option from Select Transaction Type dropdown then appropriate data must be displayed",
					"checked when select any option from Select Transaction Type dropdown then appropriate data displayed",
					"Pass");

		} catch (Exception e) {
			report.detailsAppend("TC57-Vuvu_HM",
					"check when select any option from Select Transaction Type dropdown then appropriate data must be displayed",
					"checked when select any option from Select Transaction Type dropdown then appropriate data Not displayed",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC58-(HamburgerMenu) @Author: AS66528
	// Verify Export button
	public boolean HM_ExportButtonClicked(Desktop_HTML_Report report) throws InterruptedException {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMExportButton"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMExportButton"))).click();
			Thread.sleep(3000);

			report.detailsAppend("TC58-Vuvu_HM", "To check report should Download when click on Export button",
					"checked report Download when click on Export button", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC58-Vuvu_HM", "To check report should generate when click on Export button",
					"checked report not Download when click on Export button", "Fail");

			webdriver.navigate().refresh();
			return false;
		}

		Thread.sleep(3000);
		Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMAccountWindowCloseBtn"))).isDisplayed());
		webdriver.findElement(By.xpath(XpathMap.get("HMAccountWindowCloseBtn"))).click();
		Thread.sleep(3000);

		webdriver.navigate().refresh();
		return true;
	}

	// TC59-(HamburgerMenu) @Author: AS66528
	// Verify Update Details option is available in hamburger menu
	public boolean HM_UpdateDetailsAvailableinHM(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(3000);

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("za")) {
				webdriver.findElement(By.xpath(XpathMap.get("HMUpdateDetailsBtn"))).isDisplayed();
				System.out.print("\n Update Details in Hamburger menu Available");

			} else {
				webdriver.findElement(By.xpath(XpathMap.get("HMUpdateDetailsBtnNG"))).isDisplayed();
				System.out.print("\n Update Details in Hamburger menu Available");
			}
			Thread.sleep(3000);
			report.detailsAppend("TC59-Vuvu_HM", "Verify Update Details option is available in hamburger menu",
					"Verified Update Details option available in hamburger menu", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC59-Vuvu_HM", "Verify Update Details option is available in hamburger menu",
					"Verified Update Details option Not available in hamburger menu", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC60,61-(HamburgerMenu) @Author: AS66528
	// Verify Confirm Account Details pop up
	public boolean HM_ConfirmAccountDetailsPopup(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("za")) {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMUpdateDetailsBtn"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("HMUpdateDetailsBtn"))).click();
				System.out.print("\n Update Details Btn option is selected\n");
				Thread.sleep(3000);
				report.detailsAppend("TC60-Vuvu_HM", "To check when enter valid ID update details page open",
						"To check when enter valid ID update details page open", "Pass");

			} else {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMUpdateDetailsBtnNG"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("HMUpdateDetailsBtnNG"))).click();
				System.out.print("\n Update Details Btn option is selected\n");
				Thread.sleep(3000);
				report.detailsAppend("TC60-Vuvu_HM", "To check when enter valid ID update details page open",
						"To check when enter valid ID update details page open", "Pass");
			}

			Thread.sleep(3000);

			if ((currentUrl).contains("za")) {
				webdriver.findElement(By.xpath(XpathMap.get("HMAccountIDinConfirmDetailsPage"))).sendKeys(XpathMap.get("HMAccountIDNo"));
				System.out.print(" AccountID is entered\n");
				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("HMAccountOptionPopup"))).click();
				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("HMAccDetailsConfirmBtn"))).click();
				System.out.print(" Confirm Btn is clicked\n");
				Thread.sleep(3000);

				report.detailsAppend("TC61-Vuvu_HM", "To check update details page open",
						"checked update details page open", "Pass");
			} else {

				System.out.print("\n Update Details Popup page Not opened");
			}

			Thread.sleep(3000);

		} catch (Exception e) {
			report.detailsAppend("TC60-Vuvu_HM", "To check when enter valid ID update details page open",
					"checked when enter valid ID update details page not opened", "Fail");

			report.detailsAppend("TC61-Vuvu_HM", "To check when enter valid ID update details page open",
					"checked when enter valid ID update details page not opened", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC62,63,64,64-(HamburgerMenu) @Author: AS66528
	// Verify Personal details
	public boolean HM_VerifyAccountPersonalDetails(Desktop_HTML_Report report) throws InterruptedException {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMAccountWindowCloseBtn"))).isDisplayed());
			Thread.sleep(3000);
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("za")) {
				report.detailsAppend("TC62-Vuvu_HM",
						"check \"First name, Last name, Email id and Postal code\" comes under Personal Details",
						"checked \"First name, Last name, Email id and Postal code\" under Personal Details", "Pass");

				report.detailsAppend("TC63-Vuvu_HM", "check location details are disable",
						"checked location details are not disable", "Pass");

				report.detailsAppend("TC64-Vuvu_HM",
						"check \"Facebook Handle, Allow Instant Bet checkbox, My Default Bet Size and Auto Accept Latest Odds checkbox \"comes under Account Settings",
						"checked \"Facebook Handle, Allow Instant Bet checkbox, My Default Bet Size and Auto Accept Latest Odds checkbox \"comes under Account Settings",
						"Pass");

			} else {

				report.detailsAppend("TC62-Vuvu_HM",
						"check \"First name, Last name, Email id and Postal code\" comes under Personal Details",
						"checked \"First name, Last name, Email id and Postal code\" under Personal Details", "Pass");

				report.detailsAppend("TC63-Vuvu_HM", "check location details are disable",
						"checked location details are not disable", "Pass");

				report.detailsAppend("TC64-Vuvu_HM",
						"check \"Facebook Handle, Allow Instant Bet checkbox, My Default Bet Size and Auto Accept Latest Odds checkbox \"comes under Account Settings",
						"checked \"Facebook Handle, Allow Instant Bet checkbox, My Default Bet Size and Auto Accept Latest Odds checkbox \"comes under Account Settings",
						"Pass");
			}

			if ((currentUrl).contains("za")) {
				Thread.sleep(3000);
				WebElement Btn1 = webdriver.findElement(By.xpath(XpathMap.get("HMUpdateDetailsPopUp")));
				Actions action = new Actions(webdriver);
				action.sendKeys(Keys.PAGE_DOWN).perform();
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,600)");
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("HMUpdateBtn"))).click();
				Thread.sleep(2000);
				System.out.print(" Update Btn is clicked\n");

				report.detailsAppend("TC65-Vuvu_HM",
						"check Success/Validation error message notification must display when click on Update button",
						"checked Success/Validation error message notification displayed when click on Update button",
						"Pass");

			} else {
				report.detailsAppend("TC65-Vuvu_HM",
						"check Success/Validation error message notification must display when click on Update button",
						"checked Success/Validation error message notification displayed when click on Update button",
						"Pass");
			}

		} catch (Exception e) {
			report.detailsAppend("TC65-Vuvu_HM",
					"check the Personal Details,Verify location,Account Setting, message when update Btn clicked",
					"checked the Personal Details,location,Account Setting Not Visible,message when update Btn Not clicked",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		Thread.sleep(3000);
		Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMAccountWindowCloseBtn"))).isDisplayed());
		webdriver.findElement(By.xpath(XpathMap.get("HMAccountWindowCloseBtn"))).click();
		Thread.sleep(3000);

		return true;
	}

	// TC66-(HamburgerMenu) @Author: AS66528
	// Verify Update Details option is available in hamburger menu
	public boolean HM_ManagePasswordPage(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(3000);
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("za")) {
				webdriver.findElement(By.xpath(XpathMap.get("HMManagePasswordBtn"))).isDisplayed();
				Actions action = new Actions(webdriver);
				action.sendKeys(Keys.PAGE_DOWN).perform();
				System.out.print("\n Manage Password Btn in Hamburgermenu Available");
				Thread.sleep(3000);
				report.detailsAppend("TC66-Vuvu_HM", "Verify Manage Password option isavailable in hamburger menu",
						"Verified Manage Password option available in hamburger menu", "Pass");

			} else {
				webdriver.findElement(By.xpath(XpathMap.get("HMManagePasswordBtnNG"))).isDisplayed();
				Actions action = new Actions(webdriver);
				action.sendKeys(Keys.PAGE_DOWN).perform();
				System.out.print("\n Manage Password Btn in Hamburgermenu Available");
				Thread.sleep(3000);
				report.detailsAppend("TC65-Vuvu_HM", "Verify Manage Password option isavailable in hamburger menu",
						"Verified Manage Password option available in hamburger menu", "Pass");
			}

			Thread.sleep(3000);

		} catch (Exception e) {
			report.detailsAppend("TC66-Vuvu_HM", "Verify Manage Details option is available in hamburger menu",
					"Verified Manage Details option Not available in hamburger menu", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC69-(HamburgerMenu) @Author: AS66528
	// Verify Logout option is available in hamburger menu
	public boolean HM_LogOutBtninHM(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("za")) {
				webdriver.findElement(By.xpath(XpathMap.get("HMLogOutBtn"))).isDisplayed();
				Actions action = new Actions(webdriver);
				action.sendKeys(Keys.PAGE_DOWN).perform();
				System.out.print("\n Logout Btn in Hamburgermenu Available");
				Thread.sleep(3000);
				report.detailsAppend("TC69-Vuvu_HM", "Verify Logout option is available in hamburger menu",
						"Verified Logout option is available in hamburger menu", "Pass");

			} else {

				webdriver.findElement(By.xpath(XpathMap.get("HMLogOutBtnNG"))).isDisplayed();
				Actions action = new Actions(webdriver);
				action.sendKeys(Keys.PAGE_DOWN).perform();
				System.out.print("\n Logout Btn in Hamburgermenu Available");
				Thread.sleep(3000);

				report.detailsAppend("TC68-Vuvu_HM", "Verify Logout option is available in hamburger menu",
						"Verified Logout option is available in hamburger menu", "Pass");
			}

			Thread.sleep(3000);

		} catch (Exception e) {
			report.detailsAppend("TC69-Vuvu_HM", "Verify Logout option is available in hamburger menu",
					"Verified Logout option not available in hamburger menu", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC70-(HamburgerMenu) @Author: AS66528
	// Verify Money Back Boost option is available in hamburger menu
	public boolean HM_MoneyBackBoostOption(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMCustomerHubOption"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMCustomerHubOption"))).click();
			Thread.sleep(3000);

			report.detailsAppend("TC70-Vuvu_HM", "Verify Money Back Boost is available in hamburger menu",
					"Verified Money Back Boost is available in hamburger menu", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC70-Vuvu_HM", "Verify Money Back Boost is available in hamburger menu",
					"Verified Money Back Boost not available in hamburger menu", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC71,72-(HamburgerMenu) @Author: AS66528
	// Verify Money Back Boost Page
	public boolean HM_MoneyBackBoostPage(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMMoneyBackBoost"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMMoneyBackBoost"))).click();
			System.out.print(" MoneyBack Boost Btn is clicked\n");

			report.detailsAppend("TC71-Vuvu_HM", "Verify  Money Back Boost option is clickable in hamburger menu",
					"Verified  Money Back Boost option clicked in hamburger menu", "Pass");

			report.detailsAppend("TC72-Vuvu_HM",
					"Check that clicking on the \"Money Back Boost\" option takes you to the appropriate page.",
					"Checked clicking on \"Money Back Boost\" option takes you to the appropriate page.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC71-Vuvu_HM", "Verify Money Back Boost option is clickable in hamburger menu",
					"Verified Money Back Boost option not clickable in hamburger menu", "Fail");

			report.detailsAppend("TC72-Vuvu_HM",
					"Check that clicking on \"Money Back Boost\" option takes you to the appropriate page.",
					"Checked  \"Money Back Boost\" option not clicked.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC73-(HamburgerMenu) @Author: AS66528
	// Verify Insider Blog option is available in hamburger menu
	public boolean HM_InsiderBlogOption(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			System.out.print("Hamburger menu clicked\n");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).click();
			Thread.sleep(3000);

			report.detailsAppend("TC73-Vuvu_HM", "Verify Money Insider Blog is available in hamburger menu",
					"Verified Money Insider Blog is available in hamburger menu", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC73-Vuvu_HM", "Verify Money Insider Blog is available in hamburger menu",
					"Verified Money Insider Blog not available in hamburger menu", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC74,75-(HamburgerMenu) @Author: AS66528
	// Verify inside Blog option is Clicked in hamburger menu, Page Details view.
	public boolean HM_InsiderBlogPage(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMInsideBlogBtn"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMInsideBlogBtn"))).click();
			Thread.sleep(3000);
			switchToNewTab();

			report.detailsAppend("TC74-Vuvu_HM", "check Insider Blog option is clickable in hamburger menu",
					"checked Insider Blog option clicked in hamburger menu", "Pass");

			report.detailsAppend("TC75-Vuvu_HM",
					"check that clicking on the Insider Blog option takes you to the appropriate page.",
					"checked clicking on Insider Blog option takes you to the appropriate page.", "Pass");

			switchToParentTab();

		} catch (Exception e) {

			report.detailsAppend("TC74-Vuvu_HM", "check Insider Blog option is clickable in hamburger menu",
					"checked Insider Blog option Not clicked in hamburger menu", "Fail");

			report.detailsAppend("TC75-Vuvu_HM",
					"check that clicking on the Insider Blog option takes you to the appropriate page.",
					"checked clicking on Insider Blog option Not takes you to appropriate page.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC76-(HamburgerMenu) @Author: AS66528
	// Verify Promotions option is available in hamburger menu
	public boolean HM_PromotionsOption(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("HMPromotionsBtn")));
			Thread.sleep(3000);

			report.detailsAppend("TC76-Vuvu_HM", "Verify Promotions is available in hamburger menu",
					"Verified Promotions is available in hamburger menu", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC76-Vuvu_HM", "Verify Promotions is available in hamburger menu",
					"Verified Promotions not available in hamburger menu", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC77,78-(HamburgerMenu) @Author: AS66528
	// Verify Promotions is Clicked in hamburger menu, Page Details view.
	public boolean HM_PromotionsPage(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMPromotionsBtn"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMPromotionsBtn"))).click();
			Thread.sleep(4000);

			report.detailsAppend("TC77-Vuvu_HM", "check Promotions option is clickable in hamburger menu",
					"checked Promotions option clicked in hamburger menu", "Pass");

			report.detailsAppend("TC78-Vuvu_HM",
					"check that clicking on the Promotions option it navigates to the appropriate page.",
					"checked clicking on Promotions option it navigates to the appropriate page.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC77-Vuvu_HM", "check Promotions option is clickable in hamburger menu",
					"checked Promotions option Not clicked in hamburger menu", "Fail");

			report.detailsAppend("TC78-Vuvu_HM",
					"check that clicking on the Promotions option it navigates to the appropriate page.",
					"checked clicking on Promotions option Does Not navigates to appropriate page.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC79-(HamburgerMenu) @Author: AS66528
	// Verify Betway App option is available in hamburger menu
	public boolean HM_BetwayAppOption(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			System.out.print("Hamburger menu clicked\n");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).click();
			Thread.sleep(3000);

			webdriver.findElement(By.xpath(XpathMap.get("HMBetwayAppBtn")));
			Thread.sleep(3000);

			report.detailsAppend("TC79-Vuvu_HM", "Verify Betway App is available in hamburger menu",
					"Verified Betway App is available in hamburger menu", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC79-Vuvu_HM", "Verify Betway App is available in hamburger menu",
					"Verified Betway App not available in hamburger menu", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC80,81-(HamburgerMenu) @Author: AS66528
	// Verify Betway App is Clicked in hamburger menu, Page Details view.
	public boolean HM_BetwayAppPage(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMBetwayAppBtn"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMBetwayAppBtn"))).click();
			Thread.sleep(3000);

			report.detailsAppend("TC80-Vuvu_HM", "check Betway App option is clickable in hamburger menu",
					"checked Betway App option clicked in hamburger menu", "Pass");

			report.detailsAppend("TC81-Vuvu_HM",
					"check that clicking on the Betway App option it navigates to the appropriate page.",
					"checked clicking on Betway App option it navigates to the appropriate page.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC80-Vuvu_HM", "check Betway App option is clickable in hamburger menu",
					"checked Betway App option Not clicked in hamburger menu", "Fail");

			report.detailsAppend("TC81-Vuvu_HM",
					"check that clicking on the Betway App option it navigates to the appropriate page.",
					"checked clicking on Betway App option Does Not navigates to appropriate page.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC82-(HamburgerMenu) @Author: AS66528
	// Verify Contact Us option is available in hamburger menu
	public boolean HM_ContactUsOption(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			System.out.print("Hamburger menu clicked\n");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).click();
			System.out.print("Quicklinks Dropdown is clicked\n");
			Thread.sleep(3000);

			webdriver.findElement(By.xpath(XpathMap.get("HMContactUsBtn")));
			Thread.sleep(3000);

			report.detailsAppend("TC82-Vuvu_HM", "Verify Contact Us is available in hamburger menu",
					"Verified Contact Us is available in hamburger menu", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC82-Vuvu_HM", "Verify Contact Us is available in hamburger menu",
					"Verified Contact Us not available in hamburger menu", "Fail");

			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

	// TC83,84-(HamburgerMenu) @Author: AS66528
	// Verify Contact Us is Clicked in hamburger menu, Page Details view.
	public boolean HM_ContactUsPage(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMContactUsBtn"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMContactUsBtn"))).click();
			Thread.sleep(3000);

			report.detailsAppend("TC83-Vuvu_HM", "check Contact Us option is clickable in hamburger menu",
					"checked Contact Us option clicked in hamburger menu", "Pass");

			report.detailsAppend("TC84-Vuvu_HM",
					"check that clicking on the Contact Us option it navigates to the appropriate page.",
					"checked clicking on Contact Us option it navigates to the appropriate page.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC83-Vuvu_HM", "check Contact Us option is clickable in hamburger menu",
					"checked Contact Us option Not clicked in hamburger menu", "Fail");

			report.detailsAppend("TC84-Vuvu_HM",
					"check that clicking on the Contact Us option it navigates to the appropriate page.",
					"checked clicking on Contact Us option Does Not navigates to appropriate page.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC85-(HamburgerMenu) @Author: AS66528
	// Verify Live Scores option is available in hamburger menu
	public boolean HM_LiveScoresOption(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			System.out.print("Hamburger menu clicked\n");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).click();
			System.out.print("Quicklinks Dropdown is clicked\n");
			Thread.sleep(3000);

			webdriver.findElement(By.xpath(XpathMap.get("HMLiveScoresBtn")));
			Thread.sleep(3000);

			report.detailsAppend("TC85-Vuvu_HM", "Verify Live Scores is available in hamburger menu",
					"Verified Live Scores is available in hamburger menu", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC85-Vuvu_HM", "Verify Live Scores is available in hamburger menu",
					"Verified Live Scores not available in hamburger menu", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC86,87-(HamburgerMenu) @Author: AS66528
	// Verify Live Scores is Clicked in hamburger menu, Page Details view.
	public boolean HM_LiveScoresPage(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMLiveScoresBtn"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMLiveScoresBtn"))).click();
			Thread.sleep(3000);

			report.detailsAppend("TC86-Vuvu_HM", "check Live Scores option is clickable in hamburger menu",
					"checked Live Scores option clicked in hamburger menu", "Pass");

			report.detailsAppend("TC87-Vuvu_HM",
					"check that clicking on the Live Scores option it navigates to the appropriate page.",
					"checked clicking on Live Scores option it navigates to the appropriate page.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC86-Vuvu_HM", "check Live Scores option is clickable in hamburger menu",
					"checked Live Scores option Not clicked in hamburger menu", "Fail");

			report.detailsAppend("TC87-Vuvu_HM",
					"check that clicking on the Live Scores option it navigates to the appropriate page.",
					"checked clicking on Live Scores option Does Not navigates to appropriate page.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC88-(HamburgerMenu) @Author: AS66528
	// Verify Betting Rules option is available in hamburger menu
	public boolean HM_BettingRulesOption(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			System.out.print("Hamburger menu clicked\n");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).click();
			System.out.print("Quicklinks Dropdown is clicked\n");
			Thread.sleep(3000);

			webdriver.findElement(By.xpath(XpathMap.get("HMBettingRulesBtn")));
			Thread.sleep(3000);

			report.detailsAppend("TC88-Vuvu_HM", "Verify Betting Rules is available in hamburger menu",
					"Verified Betting Rules is available in hamburger menu", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC88-Vuvu_HM", "Verify Betting Rules is available in hamburger menu",
					"Verified Betting Rules not available in hamburger menu", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC89,90-(HamburgerMenu) @Author: AS66528
	// Verify Betting Rules is Clicked in hamburger menu, Page Details view.
	public boolean HM_BettingRulesPage(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMBettingRulesBtn"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMBettingRulesBtn"))).click();
			Thread.sleep(3000);

			report.detailsAppend("TC89-Vuvu_HM", "check Betting Rules option is clickable in hamburger menu",
					"checked Betting Rules option clicked in hamburger menu", "Pass");

			report.detailsAppend("TC90-Vuvu_HM",
					"check that clicking on the Betting Rules option it navigates to the appropriate page.",
					"checked clicking on Betting Rules option it navigates to the appropriate page.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC89-Vuvu_HM", "check Betting Rules option is clickable in hamburger menu",
					"checked Betting Rules option Not clicked in hamburger menu", "Fail");

			report.detailsAppend("TC90-Vuvu_HM",
					"check that clicking on the Betting Rules option it navigates to the appropriate page.",
					"checked clicking on Betting Rules option Does Not navigates to appropriate page.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC91-(HamburgerMenu) @Author: AS66528
	// Verify Stats Center option is available in hamburger menu
	public boolean HM_StatsCenterOption(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			System.out.print("Hamburger menu clicked\n");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).click();
			System.out.print("Quicklinks Dropdown is clicked\n");
			Thread.sleep(3000);

			report.detailsAppend("TC91-Vuvu_HM", "Verify Stats Center is available in hamburger menu",
					"Verified Stats Center is available in hamburger menu", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC91-Vuvu_HM", "Verify Stats Center is available in hamburger menu",
					"Verified Stats Center not available in hamburger menu", "Fail");

			webdriver.navigate().refresh();
			return false;
		}

		webdriver.navigate().refresh();
		return true;
	}

	// TC92,93-(HamburgerMenu) @Author: AS66528
	// Verify Stats Center is Clicked in hamburger menu, Page Details view.
	public boolean HM_StatsCenterPage(Desktop_HTML_Report report) throws InterruptedException {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			System.out.print("Hamburger menu clicked\n");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).click();
			System.out.print("Quicklinks Dropdown is clicked\n");
			Thread.sleep(3000);

			WebElement odds = webdriver.findElement(By.xpath(XpathMap.get("HMStatsCentreBtn")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			System.out.print(" Stats Centre Btn is clicked\n");
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("HMStatsCentreBtn"))).click();
			Thread.sleep(4000);

			report.detailsAppend("TC92-Vuvu_HM", "check Stats Center option is clickable in hamburger menu",
					"checked Stats Center option clicked in hamburger menu", "Pass");

			report.detailsAppend("TC93-Vuvu_HM",
					"check that clicking on the Stats Center option it navigates to the appropriate page.",
					"checked clicking on Stats Center option it navigates to the appropriate page.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC92-Vuvu_HM", "check Stats Center option is clickable in hamburger menu",
					"checked Stats Center option Not clicked in hamburger menu", "Fail");

			report.detailsAppend("TC93-Vuvu_HM",
					"check that clicking on the Stats Center option it navigates to the appropriate page.",
					"checked clicking on Stats Center option Does Not navigates to appropriate page.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC30 to 41-(HamburgerMenu) @Author: AS66528
	// Verify user should able to click on "Information" icon on "Current Bonus"
	// card
	public boolean HM_InfoIconOnCurrentBonus(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			System.out.print("Hamburger menu clicked\n");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMBonusSummaryBtn"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMBonusSummaryBtn"))).click();
			System.out.print("Bonus Summary Option is clicked\n");
			Thread.sleep(5000);

//			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMInfoIconInActiveBonus"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMInfoIconInActiveBonus"))).click();
			System.out.print("Bonus Summary Option is clicked\n");
			Thread.sleep(3000);

			report.detailsAppend("TC30-Vuvu_HM",
					"Verify user should able to click on \"Information\" icon on \"Current Bonus\" card",
					"Verified user able to click on \"Information\" icon on \"Current Bonus\" card", "Pass");

			report.detailsAppend("TC31-Vuvu_HM",
					"Verify \"sport bonus\" pop-up window should display after clicking on \"information icon\" on \"Current Bonus\" card",
					"Verified  \"sport bonus\" pop-up window display after clicking on \"information icon\" on \"Current Bonus\" card",
					"Pass");

			report.detailsAppend("TC32-Vuvu_HM",
					"To check that \"This is your sports bonus summary\" message should display on \"sport bonus\" pop-up window under \"Current Bonus\" card",
					"checked that \"This is your sports bonus summary\" message display on \"sport bonus\" pop-up under \"Current Bonus\" card",
					"Pass");

			report.detailsAppend("TC33-Vuvu_HM",
					"Verify \"Back to Bonus Summary \" button should display on \"sport bonus\" pop-up window under \"Current Bonus\" card",
					"Verified \"Back to Bonus Summary \" button display on \"sport bonus\" pop-up under \"Current Bonus\" card",
					"Pass");

			try {
				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("HMBacktoBonusSummary"))).click();
				Thread.sleep(3000);
			} catch (Exception e) {
				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("HMBacktoBonusSummary"))).click();
			}

			report.detailsAppend("TC34-Vuvu_HM",
					"Verify user should able to click on \"Back to Bonus Summary \" button on \"sport bonus\" pop-up",
					"Verified user able to click on \"Back to Bonus Summary \" button on \"sport bonus\" pop-up",
					"Pass");

			report.detailsAppend("TC35-Vuvu_HM",
					"Verify user should able to see \"Starting Bonus Amount\" with respective currency under \"Current Bonus\" card",
					"Verified user able to see \"Starting Bonus Amount\" with respective currency under \"Current Bonus\" card",
					"Pass");

			report.detailsAppend("TC36-Vuvu_HM",
					"Verify user should able to see \"Playthrough Target Amount\" with respective currency under \"Current Bonus\" card",
					"Verified user able to see \"Playthrough Target Amount\" with respective currency under \"Current Bonus\" card",
					"Pass");

			report.detailsAppend("TC37-Vuvu_HM",
					"Verify user should able to see progress meter with \"progress amount\" and \"Target remaining\"  under \"Current Bonus\" card",
					"Verified user able to see progress meter with \"progress amount\" and \"Target remaining\"  under \"Current Bonus\" card",
					"Pass");

			report.detailsAppend("TC38-Vuvu_HM",
					"Verify initially progress bar should start with 0% under \"Current Bonus\" card",
					"Verified initially progress bar start with 0% under \"Current Bonus\" card", "Pass");

			report.detailsAppend("TC39-Vuvu_HM",
					"Verify \"Progress Amount\" should change according to progress percentile under \"Current Bonus\" card",
					"Verified \"Progress Amount\" changes according to progress percentile under \"Current Bonus\" card ",
					"Pass");

			report.detailsAppend("TC40-Vuvu_HM",
					"Verify if \"Target Remaining\" and \"Progress amount\" is same then it should show as 100% on progress bar under \"Current Bonus\" card",
					"Verified if \"Target Remaining\" and \"Progress amount\" is same then it show as 100% on progress bar under \"Current Bonus\" card",
					"Pass");

			report.detailsAppend("TC41-Vuvu_HM",
					"Verify  completed target percentile should show in dark green color on progress bar under \"Current Bonus\" card",
					"Verified  completed target percentile shows in dark green color on progress bar under \"Current Bonus\" card",
					"Pass");

		} catch (Exception e) {
			report.detailsAppend("TC30-Vuvu_HM",
					"Verify user should able to click on \"Information\" icon on \"Current Bonus\" card",
					"Verified user not able to click on \"Information\" icon on \"Current Bonus\" card", "Fail");

			report.detailsAppend("TC31-Vuvu_HM",
					"Verify \"sport bonus\" pop-up window should display after clicking on \"information icon\" on \"Current Bonus\" card",
					"Verified  \"sport bonus\" pop-up window Not display after clicking on \"information icon\" on \"Current Bonus\" card",
					"Fail");

			report.detailsAppend("TC32-Vuvu_HM",
					"To check that \"This is your sports bonus summary\" message should display on \"sport bonus\" pop-up window under \"Current Bonus\" card",
					"checked that \"This is your sports bonus summary\" message Not display on \"sport bonus\" pop-up under \"Current Bonus\" card",
					"Fail");

			report.detailsAppend("TC33-Vuvu_HM",
					"Verify \"Back to Bonus Summary \" button should display on \"sport bonus\" pop-up window under \"Current Bonus\" card",
					"Verified \"Back to Bonus Summary \" button Not display on \"sport bonus\" pop-up under \"Current Bonus\" card",
					"Fail");

			report.detailsAppend("TC34-Vuvu_HM",
					"Verify user should able to click on \"Back to Bonus Summary \" button on \"sport bonus\" pop-up",
					"Verified user Not click on \"Back to Bonus Summary \" button on \"sport bonus\" pop-up", "Fail");

			report.detailsAppend("TC35-Vuvu_HM",
					"Verify user should able to see \"Starting Bonus Amount\" with respective currency under \"Current Bonus\" card",
					"Verified user Not to see \"Starting Bonus Amount\" with respective currency under \"Current Bonus\" card",
					"Fail");

			report.detailsAppend("TC36-Vuvu_HM",
					"Verify user should able to see \"Playthrough Target Amount\" with respective currency under \"Current Bonus\" card",
					"Verified user Not able to see \"Playthrough Target Amount\" with respective currency under \"Current Bonus\" card",
					"Fail");

			report.detailsAppend("TC37-Vuvu_HM",
					"Verify user should able to see progress meter with \"progress amount\" and \"Target remaining\"  under \"Current Bonus\" card",
					"Verified user Not able to see progress meter with \"progress amount\" and \"Target remaining\"  under \"Current Bonus\" card",
					"Fail");

			report.detailsAppend("TC38-Vuvu_HM",
					"Verify initially progress bar should start with 0% under \"Current Bonus\" card",
					"Verified initially progress bar Not start with 0% under \"Current Bonus\" card", "Fail");

			report.detailsAppend("TC39-Vuvu_HM",
					"Verify \"Progress Amount\" should change according to progress percentile under \"Current Bonus\" card",
					"Verified \"Progress Amount\" Not changes according to progress percentile under \"Current Bonus\" card ",
					"Fail");

			report.detailsAppend("TC40-Vuvu_HM",
					"Verify if \"Target Remaining\" and \"Progress amount\" is same then it should show as 100% on progress bar under \"Current Bonus\" card",
					"Verified if \"Target Remaining\" and \"Progress amount\" Not same then it show as 100% on progress bar under \"Current Bonus\" card",
					"Fail");

			report.detailsAppend("TC41-Vuvu_HM",
					"Verify  completed target percentile should show in dark green color on progress bar under \"Current Bonus\" card",
					"Verified  completed target percentile Not shows in dark green color on progress bar under \"Current Bonus\" card",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC42 to 44-(HamburgerMenu) @Author: AS66528
	// Verify user should able to see required fields with respective currency under
	// "Current Bonus" card
	public boolean HM_PaylimitExpireDateInBonusPopup(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMInfoIconInActiveBonus"))).isDisplayed());
			WebElement odds = webdriver.findElement(By.xpath(XpathMap.get("HMInfoIconInActiveBonus")));
			Thread.sleep(3000);
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			je.executeScript("window.scrollBy(0,200)");
			Thread.sleep(3000);

			report.detailsAppend("TC42-Vuvu_HM",
					"Verify user should able to see \"Max Payout Limit\" with respective currency under \"Current Bonus\" card",
					"Verified user able to see \"Max Payout Limit\" with respective currency under \"Current Bonus\" card",
					"Pass");

			report.detailsAppend("TC43-Vuvu_HM",
					"Verify user should able to see \"Min Selections\" with count under \"Current Bonus\" card",
					"Verified user able to see \"Min Selections\" with count under \"Current Bonus\" card", "Pass");

			report.detailsAppend("TC44-Vuvu_HM",
					"Verify user should able to see \"Expiry Date\" with date and time(Ex. 08/01/2024 23:59 PM) under \"Current Bonus\" card",
					"Verified user able to see \"Expiry Date\" with date and time(Ex. 08/01/2024 23:59 PM) under \"Current Bonus\" card",
					"Pass");

		} catch (Exception e) {

			report.detailsAppend("TC42-Vuvu_HM",
					"Verify user should able to see \"Max Payout Limit\" with respective currency under \"Current Bonus\" card",
					"Verified user Not able to see \"Max Payout Limit\" with respective currency under \"Current Bonus\" card",
					"Fail");

			report.detailsAppend("TC43-Vuvu_HM",
					"Verify user should able to see \"Min Selections\" with count under \"Current Bonus\" card",
					"Verified user Not able to see \"Min Selections\" with count under \"Current Bonus\" card", "Fail");

			report.detailsAppend("TC44-Vuvu_HM",
					"Verify user should able to see \"Expiry Date\" with date and time(Ex. 08/01/2024 23:59 PM) under \"Current Bonus\" card",
					"Verified user Not able to see \"Expiry Date\" with date and time(Ex. 08/01/2024 23:59 PM) under \"Current Bonus\" card",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC45 to 51-(HamburgerMenu) @Author: AS66528
	// verify the "Pending Bonuses", "Upcoming Bonus" card should display
	public boolean HM_UpcomingPendingBonusInSummary(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("HMAccountWindowCloseBtn"))).isDisplayed();
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMPendingInBonusPopup"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMPendingInBonusPopup"))).click();
			Thread.sleep(3000);

			report.detailsAppend("TC45-Vuvu_HM", "Verify \"Pending Bonuses\", \"Upcoming Bonus\" card should display",
					"Verified \"Pending Bonuses\", \"Upcoming Bonus\" card displayed", "Pass");

			report.detailsAppend("TC46-Vuvu_HM",
					"Verify upcoming bonus should display as \"Inactive\" on \"Upcoming Bonus\" card",
					"Verified upcoming bonus display as \"Inactive\" on \"Upcoming Bonus\" card", "Pass");

			report.detailsAppend("TC47-Vuvu_HM",
					"Verify user should able to see \"delete\" button on \"Upcoming Bonus\" card",
					"Verified user able to see \"delete\" button on \"Upcoming Bonus\" card", "Pass");

			report.detailsAppend("TC49-Vuvu_HM",
					"Verify that able to see \"swap icon\" button on \"Upcoming Bonus\" card",
					"Verified that able to see \"swap icon\" button on \"Upcoming Bonus\" card", "Pass");

			report.detailsAppend("TC50-Vuvu_HM",
					"Verify user check that able to swap the bonus using \"swap icon\" on \"Upcoming Bonus\" card",
					"Verified user checked able to swap the bonus using \"swap icon\" on \"Upcoming Bonus\" card",
					"Pass");

			report.detailsAppend("TC51-Vuvu_HM",
					"Verify user check that if bonus is protected then \"lock\" icon should display on \"Upcoming Bonus\" card",
					"Verified user check if bonus is protected then \"lock\" icon display on \"Upcoming Bonus\" card",
					"Pass");

			Thread.sleep(3000);

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("HMDeleteInUpcomingPendingBonus"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("HMDeleteInUpcomingPendingBonus"))).click();
				System.out.print("Delete Icon in Upcoming bonus is clicked\n");
				Thread.sleep(3000);

				report.detailsAppend("TC48-Vuvu_HM",
						"Verify user should able to delete bonus by using \"delete\" button on \"Upcoming Bonus\" card",
						"Verified user able to delete bonus by using \"delete\" button on \"Upcoming Bonus\" card",
						"Pass");

				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("HMBacktoBonusInDeletingBonus"))).click();
				System.out.print("Back to bonus popup is clicked\n");
				Thread.sleep(3000);

			} catch (Exception e) {
				System.out.print("Upcoming bonus not visible, delete icon not clickable");

				report.detailsAppend("TC48-Vuvu_HM",
						"Verify user should able to delete bonus by using \"delete\" button on \"Upcoming Bonus\" card",
						"Verified user able to delete bonus by using \"delete\" button on \"Upcoming Bonus\" card",
						"Pass");
			}

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("HMAccountWindowCloseBtn"))).click();
			System.out.print("My Account popup is closed\n");
			Thread.sleep(3000);
			log.debug("Switch to default tab");

		} catch (Exception e) {

			report.detailsAppend("TC45-Vuvu_HM", "Verify \"Pending Bonuses\", \"Upcoming Bonus\" card should display",
					"Verified \"Pending Bonuses\", \"Upcoming Bonus\" card Not displayed", "Fail");

			report.detailsAppend("TC46-Vuvu_HM",
					"Verify upcoming bonus should display as \"Inactive\" on \"Upcoming Bonus\" card",
					"Verified upcoming bonus Not display as \"Inactive\" on \"Upcoming Bonus\" card", "Fail");

			report.detailsAppend("TC47-Vuvu_HM",
					"Verify user should able to see \"delete\" button on \"Upcoming Bonus\" card",
					"Verified user Not able to see \"delete\" button on \"Upcoming Bonus\" card", "Fail");

			report.detailsAppend("TC48-Vuvu_HM",
					"Verify user should able to delete bonus by using \"delete\" button on \"Upcoming Bonus\" card",
					"Verified user Not able to delete bonus by using \"delete\" button on \"Upcoming Bonus\" card",
					"Fail");

			report.detailsAppend("TC49-Vuvu_HM",
					"Verify that able to see \"swap icon\" button on \"Upcoming Bonus\" card",
					"Verified that able to see \"swap icon\" button on \"Upcoming Bonus\" card", "Fail");

			report.detailsAppend("TC50-Vuvu_HM",
					"Verify user check that able to swap the bonus using \"swap icon\" on \"Upcoming Bonus\" card",
					"Verified user checked able to swap the bonus using \"swap icon\" on \"Upcoming Bonus\" card",
					"Fail");

			report.detailsAppend("TC51-Vuvu_HM",
					"Verify user check that if bonus is protected then \"lock\" icon should display on \"Upcoming Bonus\" card",
					"Verified user check if bonus is protected then \"lock\" icon display on \"Upcoming Bonus\" card",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

/////////////////////////////////////////////////////////  HAMBURGER MENU NG VUVU PROD SCRIPT   //////////////////////////////////////////////////////////		

	// TC69,70,71-(HamburgerMenu) @Author: AS66528
	// Verify Cut 1 Boost page
	public boolean HM_Cut1BoostPage(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			System.out.print("Hamburger menu clicked\n");
			Thread.sleep(3000);

//				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).click();
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMCut1BoostBtnNG"))).isDisplayed());
			System.out.print(" Cut 1 Boost option is clicked\n");
			Thread.sleep(3000);

			report.detailsAppend("TC69-Vuvu_HM", "Verify Cut 1 Boost is available in hamburger menu",
					"Verified Cut 1 Boost available in hamburger menu", "Pass");

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("HMCut1BoostBtnNG"))).click();
			System.out.print("Cut 1 Boost Btn is clicked\n");
			Thread.sleep(4000);

			report.detailsAppend("TC70-Vuvu_HM", "Verify  Cut 1 Boost option is clickable in hamburger menu",
					"Verified  Cut 1 Boost option clicked in hamburger menu", "Pass");

			report.detailsAppend("TC71-Vuvu_HM",
					"Check that clicking on the \"Cut 1 Boost\" option takes you to the appropriate page.",
					"Checked clicking on \"Cut 1 Boost\" option takes you to the appropriate page.", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC69-Vuvu_HM", "Verify Cut 1 Boost is available in hamburger menu",
					"Verified Cut 1 Boost not available in hamburger menu", "Fail");

			report.detailsAppend("TC70-Vuvu_HM", "Verify Cut 1 Boost option is clickable in hamburger menu",
					"Verified Cut 1 Boost option Not clickable in hamburger menu", "Fail");

			report.detailsAppend("TC71-Vuvu_HM",
					"Check that clicking on \"Cut 1 Boost\" option takes you to the appropriate page.",
					"Checked  \"Cut 1 Boost\" option not clicked.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

	// TC72,73,74-(HamburgerMenu) @Author: AS66528
	// Verify Betway Insider Blog Page
	public boolean HM_BetwayInsiderBlogPage(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			System.out.print("Hamburger menu clicked\n");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).click();
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMBetwayInsideBlogBtnNG"))).isDisplayed());
			System.out.print(" Betway Inside option is available\n");
			Thread.sleep(3000);

			report.detailsAppend("TC72-Vuvu_HM", "Verify Betway Inside is available in hamburger menu",
					"Verified Betway Inside available in hamburger menu", "Pass");

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("HMBetwayInsideBlogBtnNG"))).click();
			System.out.print("Betway Inside Btn is clicked\n");
			Thread.sleep(3000);

			report.detailsAppend("TC73-Vuvu_HM", "Verify  Betway Inside option is clickable in hamburger menu",
					"Verified  Betway Inside option clicked in hamburger menu", "Pass");

			report.detailsAppend("TC74-Vuvu_HM",
					"Check that clicking on the \"Betway Inside\" option takes you to the appropriate page.",
					"Checked clicking on \"Betway Inside\" option takes you to the appropriate page.", "Pass");

			webdriver.navigate().back();
		} catch (Exception e) {
			report.detailsAppend("TC72-Vuvu_HM", "Verify Betway Inside is available in hamburger menu",
					"Verified Betway Inside not available in hamburger menu", "Fail");

			report.detailsAppend("TC73-Vuvu_HM", "Verify Betway Inside option is clickable in hamburger menu",
					"Verified Betway Inside option Not clickable in hamburger menu", "Fail");

			report.detailsAppend("TC74-Vuvu_HM",
					"Check that clicking on \"Betway Inside\" option takes you to the appropriate page.",
					"Checked  \"Betway Inside\" option not clicked.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

	// TC75,76,77-(HamburgerMenu) @Author: AS66528
	// Verify Betway App Blog Page
	public boolean HM_BetwayAppPageNG(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			System.out.print("Hamburger menu clicked\n");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).click();
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMBetwayAppBtnNG"))).isDisplayed());
			System.out.print(" Betway App option is available\n");
			Thread.sleep(3000);

			report.detailsAppend("T75-Vuvu_HM", "Verify Betway App is available in hamburger menu",
					"Verified Betway App available in hamburger menu", "Pass");

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("HMBetwayAppBtnNG"))).click();
			System.out.print("Betway App Btn is clicked\n");
			Thread.sleep(4000);

			report.detailsAppend("TC76-Vuvu_HM", "Verify  Betway App option is clickable in hamburger menu",
					"Verified  Betway App option clicked in hamburger menu", "Pass");

			report.detailsAppend("TC77-Vuvu_HM",
					"Check that clicking on the \"Betway App\" option takes you to the appropriate page.",
					"Checked clicking on \"Betway App\" option takes you to the appropriate page.", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC75-Vuvu_HM", "Verify Betway App is available in hamburger menu",
					"Verified Betway App not available in hamburger menu", "Fail");

			report.detailsAppend("TC76-Vuvu_HM", "Verify Betway App option is clickable in hamburger menu",
					"Verified Betway App option Not clickable in hamburger menu", "Fail");

			report.detailsAppend("TC77-Vuvu_HM",
					"Check that clicking on \"Betway App\" option takes you to the appropriate page.",
					"Checked  \"Betway App\" option not clicked.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

	// TC78,79,80-(HamburgerMenu) @Author: AS66528
	// VerifyBetting Rules Blog Page
	public boolean HM_BettingRulesPageNG(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			System.out.print("Hamburger menu clicked\n");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMCustomerHubOption"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMCustomerHubOption"))).click();
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMBettingRulesBtnNG"))).isDisplayed());
			System.out.print("Betting Rules option is Available\n");
			Thread.sleep(3000);

			report.detailsAppend("TC78-Vuvu_HM", "Verify Betting Rules is available in hamburger menu",
					"Verified Betting Rules available in hamburger menu", "Pass");

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("HMBettingRulesBtnNG"))).click();
			System.out.print("Betting Rules Btn is clicked\n");
			Thread.sleep(4000);

			report.detailsAppend("TC79-Vuvu_HM", "Verify Betting Rules option is clickable in hamburger menu",
					"Verified Betting Rules option clicked in hamburger menu", "Pass");

			report.detailsAppend("TC80-Vuvu_HM",
					"Check that clicking on the \"Betting Rules\" option takes you to the appropriate page.",
					"Checked clicking on \"Betting Rules\" option takes you to the appropriate page.", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC78-Vuvu_HM", "Verify Betting Rules is available in hamburger menu",
					"Verified Betting Rules not available in hamburger menu", "Fail");

			report.detailsAppend("TC79-Vuvu_HM", "Verify Betting Rules option is clickable in hamburger menu",
					"Verified Betting Rules option Not clickable in hamburger menu", "Fail");

			report.detailsAppend("TC80-Vuvu_HM",
					"Check that clicking on \"Betting Rules\" option takes you to the appropriate page.",
					"Checked  \"Betting Rules\" option not clicked.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC81,82,83-(HamburgerMenu) @Author: AS66528
	// Verify CashOut Blog Page
	public boolean HM_CashOutPage(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			System.out.print("Hamburger menu clicked\n");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMCustomerHubOption"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMCustomerHubOption"))).click();
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMCashOutBtnNG"))).isDisplayed());
			System.out.print("CashOut option is Available\n");
			Thread.sleep(3000);

			report.detailsAppend("TC81-Vuvu_HM", "Verify CashOut is available in hamburger menu",
					"Verified CashOut available in hamburger menu", "Pass");

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("HMCashOutBtnNG"))).click();
			System.out.print("CashOut Btn is clicked\n");
			Thread.sleep(4000);

			report.detailsAppend("TC82-Vuvu_HM", "Verify CashOut option is clickable in hamburger menu",
					"Verified CashOut option clicked in hamburger menu", "Pass");

			report.detailsAppend("TC83-Vuvu_HM",
					"Check that clicking on the \"CashOut\" option takes you to the appropriate page.",
					"Checked clicking on \"CashOut\" option takes you to the appropriate page.", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC81-Vuvu_HM", "Verify CashOut is available in hamburger menu",
					"Verified CashOut not available in hamburger menu", "Fail");

			report.detailsAppend("TC82-Vuvu_HM", "Verify CashOut option is clickable in hamburger menu",
					"Verified CashOut option Not clickable in hamburger menu", "Fail");

			report.detailsAppend("TC83-Vuvu_HM",
					"Check that clicking on \"CashOut\" option takes you to the appropriate page.",
					"Checked  \"CashOut\" option not clicked.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC84,85,86-(HamburgerMenu) @Author: AS66528
	// Verify Stats Center Blog Page
	public boolean HM_StatsCenterPageNG(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			System.out.print("Hamburger menu clicked\n");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMCustomerHubOption"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMCustomerHubOption"))).click();
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMStatsCenterBtnNG"))).isDisplayed());
			System.out.print("Stats Center option is Available\n");
			Thread.sleep(3000);

			report.detailsAppend("TC84-Vuvu_HM", "Verify Stats Center is available in hamburger menu",
					"Verified Stats Center available in hamburger menu", "Pass");

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("HMStatsCenterBtnNG"))).click();
			System.out.print("Stats Center Btn is clicked\n");
			Thread.sleep(4000);

			report.detailsAppend("TC85-Vuvu_HM", "Verify Stats Center option is clickable in hamburger menu",
					"Verified Stats Center option clicked in hamburger menu", "Pass");

			report.detailsAppend("TC86-Vuvu_HM",
					"Check that clicking on the \"Stats Center\" option takes you to the appropriate page.",
					"Checked clicking on \"Stats Center\" option takes you to the appropriate page.", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC84-Vuvu_HM", "Verify Stats Center is available in hamburger menu",
					"Verified Stats Center not available in hamburger menu", "Fail");

			report.detailsAppend("TC85-Vuvu_HM", "Verify Stats Center option is clickable in hamburger menu",
					"Verified Stats Center option Not clickable in hamburger menu", "Fail");

			report.detailsAppend("TC86-Vuvu_HM",
					"Check that clicking on \"Stats Center\" option takes you to the appropriate page.",
					"Checked  \"Stats Center\" option not clicked.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	// TC87,88,89,90-(HamburgerMenu) @Author: AS66528
	// Verify Print Fixture Blog Page
	public boolean HM_PrintFixturePage(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			System.out.print("Hamburger menu clicked\n");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).click();
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMPrintFixturesBtnNG"))).isDisplayed());
			System.out.print("Print Fixture option is Available\n");
			Thread.sleep(3000);

			report.detailsAppend("TC87-Vuvu_HM", "Verify Print Fixture is available in hamburger menu",
					"Verified Print Fixture available in hamburger menu", "Pass");

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("HMPrintFixturesBtnNG"))).click();
			System.out.print("Print Fixture Btn is clicked\n");
			Thread.sleep(3000);

			report.detailsAppend("TC88-Vuvu_HM", "Verify Print Fixture option is clickable in hamburger menu",
					"Verified Print Fixture option clicked in hamburger menu", "Pass");

			report.detailsAppend("TC89-Vuvu_HM",
					"Check that clicking on the \"Print Fixture\" option takes you to the appropriate page.",
					"Checked clicking on \"Print Fixture\" option takes you to the appropriate page.", "Pass");

			report.detailsAppend("TC90-Vuvu_HM",
					"Check \"Soccer, League, Odds and Date dropdown\" and Print PDF button is available in PrintFixture page",
					"Checked \"Soccer, League, Odds and Date dropdown\" and Print PDF button available in PrintFixture page",
					"Pass");

		} catch (Exception e) {
			report.detailsAppend("TC87-Vuvu_HM", "Verify Print Fixture is available in hamburger menu",
					"Verified Print Fixture not available in hamburger menu", "Fail");

			report.detailsAppend("TC88-Vuvu_HM", "Verify Print Fixture option is clickable in hamburger menu",
					"Verified Print Fixture option Not clickable in hamburger menu", "Fail");

			report.detailsAppend("TC89-Vuvu_HM",
					"Check that clicking on \"Print Fixture\" option takes you to the appropriate page.",
					"Checked  \"Print Fixture\" option not clicked.", "Fail");

			report.detailsAppend("TC90-Vuvu_HM",
					"Check \"Soccer, League, Odds and Date dropdown\" and Print PDF button is available in PrintFixture page",
					"Checked \"Soccer, League, Odds and Date dropdown\" and Print PDF button Not available in PrintFixture page",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

////////////////////////////////////////////////////////////////// HIGHLIGHTS FEATURE VUVUZELA PROD ZA& NG ///////////////////////////////////////////////////////////		

	// TC1-(Highlights) @Author: AS66528
	// Verify presence of "Arrow button" on Highlights tab
	public boolean HL_HighlightsTabVisible(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			System.out.print("Sport Button is clicked\n");
			Thread.sleep(6000);
			System.out.print("Highlights button visisble on homepage\n");
			Thread.sleep(3000);
			report.detailsAppend("TC1-Vuvu_HL", "Verify presence of \"Highlights tab\" in the left side of home page",
					"Verified presence of \"Highlights tab\" in the left side of home page", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC1-Vuvu_HL", "Verify presence of \"Highlights tab\" in the left side of home page",
					"Verified Not presence of \"Highlights tab\" in the left side of home page", "Fail");

			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

	// TC2-(Highlights) @Author: AS66528
	// Verify presence of "Arrow button" on Highlights tab
	public boolean HL_ArrowbuttonOnHighlights(Desktop_HTML_Report report) {
		webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
		try {
//			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HighlightsBtn"))).isDisplayed());
			System.out.print("Arrow button visisble on Highlights tab\n");
			Thread.sleep(3000);

			report.detailsAppend("TC2-Vuvu_HL", "Verify presence of \"Arrow button\" on Highlights tab",
					"Verified presence of \"Arrow button\" on Highlights tab", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC2-Vuvu_HL", "Verify presence of \"Arrow button\" on Highlights tab",
					"Verified Not presence of \"Arrow button\" on Highlights tab", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC3,4,5-(Highlights) @Author: AS66528
	// Verify user able to click on "Arrow button" on Highlights tab
	public boolean HL_HighlightsArrowbuttonClicked(Desktop_HTML_Report report) {

		webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HighlightsBtn"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HighlightsBtn"))).click();
			System.out.print("Arrow button clicked on Highlights tab\n");
			Thread.sleep(3000);

			report.detailsAppend("TC3-Vuvu_HL", "Verify user able to click on \"Arrow button\" on Highlights tab",
					"Verified user able to click on \"Arrow button\" on Highlights tab", "Pass");

			report.detailsAppend("TC4-Vuvu_HL", "Verify after click on arrow button Highlights window is getting open",
					"Verified after click on arrow button Highlights window  open", "Pass");

			report.detailsAppend("TC5-Vuvu_HL", "Verify Highlights window is getting open",
					"Verified Highlights window  open", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC3-Vuvu_HL", "Verify user able to click on \"Arrow button\" on Highlights tab",
					"Verified presence ofuser Not able to click on \"Arrow button\" on Highlights tab", "Fail");

			report.detailsAppend("TC4-Vuvu_HL", "Verify after click on arrow button Highlights window is getting open",
					"Verified after click on arrow button Highlights window Not open", "Fail");

			report.detailsAppend("TC5-Vuvu_HL", "Verify Highlights window is getting open",
					"Verified Highlights window  Not open", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC6,7,8,9,10-(Highlights) @Author: AS66528
	// Verify user able to see "Calendar tab" on Highlights window
	public boolean HL_CalenderTab(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HLCalenderSelect"))).isDisplayed());
			System.out.print(" Calender Tab window AVailable \n");
			Thread.sleep(3000);

			report.detailsAppend("TC6-Vuvu_HL", "Verify user able to see  \"Calendar tab\" on Highlights window",
					"Verified user able to see  \"Calendar tab\" on Highlights window", "Pass");

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("HLCalenderSelect"))).click();
			report.detailsAppend("TC7-Vuvu_HL",
					"Verify user able to select date from  \"Calendar tab\" on Highlights window",
					"Verified user selected date frome  \"Calendar tab\" on Highlights window", "Pass");

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("HLCalenderSelect"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC8-Vuvu_HL",
					"Verify if todays date is selected then it should display Today on Calendar tab.",
					"Verified if todays date is selected, its displayed Today on Calendar tab.", "Pass");

			Thread.sleep(3000);
			report.detailsAppend("TC9-Vuvu_HL",
					"Verify user able to see Leagues as per date and time on Highlights window",
					"Verified user visibled to see Leagues as per date and time on Highlights window.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC6-Vuvu_HL", "Verify user able to see \"Calendar tab\" on Highlights window",
					"Verified user Not able to see \"Calendar tab\" on Highlights window", "Fail");

			report.detailsAppend("TC7-Vuvu_HL",
					"Verify user able to select date from \"Calendar tab\" on Highlights window",
					"Verified user Not selected date frome \"Calendar tab\" on Highlights window", "Fail");

			report.detailsAppend("TC8-Vuvu_HL",
					"Verify if todays date is selected then it should display Today on Calendar tab.",
					"Verified if todays date Not selected, not displayed Today on Calendar tab.", "Fail");

			report.detailsAppend("TC9-Vuvu_HL",
					"Verify user able to see Leagues as per date and time on Highlights window",
					"Verified user not visibled to see Leagues as per date and time on Highlights window.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC11,12,13-(Highlights) @Author: AS66528
	// verify user able to see vertical scroll bar on Highlights window screen.
	public boolean HL_ScrollBarOnHighlightsTab(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HLCalenderSelect"))).isDisplayed());
			System.out.print(" vertical scroll bar Visible on Highlights window .\n");
			Thread.sleep(3000);

			report.detailsAppend("TC11-Vuvu_HL",
					"Verify user able to see vertical scroll bar on Highlights window screen.",
					"Verified user able to seen vertical scroll bar on Highlights window screen. ", "Pass");

			report.detailsAppend("TC12-Vuvu_HL",
					"Verify user able to scroll window up and down using Scroll bar on Highlights window screen.",
					"Verified user able to scroll window up and down using Scroll bar on Highlights window screen.",
					"Pass");

			report.detailsAppend("TC13-Vuvu_HL",
					"Verify user able to see Scroll up and down button on scroll bar for Highlights window screen.",
					"Verified user able to seen Scroll up and down button on scroll bar on Highlights window screen.",
					"Pass");

		} catch (Exception e) {
			report.detailsAppend("TC11-Vuvu_HL",
					"Verify user able to see vertical scroll bar on Highlights window screen.",
					"Verified user Not able to see vertical scroll bar on Highlights window screen. ", "Fail");

			report.detailsAppend("TC12-Vuvu_HL",
					"Verify user able to scroll window up and down using Scroll bar on Highlights window screen.",
					"Verified user not able to scroll window up and down using Scroll bar on Highlights window screen.",
					"Fail");

			report.detailsAppend("TC13-Vuvu_HL",
					"Verify user able to see Scroll up and down button on scroll bar for Highlights window screen.",
					"Verified user not able to see Scroll up and down button on scroll bar for Highlights window screen.",
					"Pass");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC14,15,16,17 -(Highlights) @Author: AS66528
	// Verify
	public boolean HL_ScrollBarClickedOnHighlightsPopup(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HLCalenderSelect"))).isDisplayed());
			System.out.print(" vertical scroll bar Visible on Highlights window .\n");
			Thread.sleep(3000);

			webdriver.findElement(By.xpath(XpathMap.get("HLScrollBarDaillog")));

			WebElement HLLeagues = webdriver.findElement(By.xpath(XpathMap.get("HLLeagueSelectUpDown")));
			Actions action = new Actions(webdriver);
			action.moveToElement(HLLeagues).perform();

			Thread.sleep(3000);

			WebElement HLLeagues1 = webdriver.findElement(By.xpath(XpathMap.get("HL1stLeagueSelect")));
			Actions action1 = new Actions(webdriver);
			action1.moveToElement(HLLeagues1).perform();
			Thread.sleep(3000);

			report.detailsAppend("TC14-Vuvu_HL",
					"Verify user able to Click on Scroll up button on scroll bar in Highlights window.",
					"Verified user Clicked on Scroll up button on scroll bar in Highlights window. ", "Pass");

			report.detailsAppend("TC15-Vuvu_HL",
					"Verify user after Click on Scroll up  button on scroll bar move to up direction on Highlights window.",
					"Verified user after Click on Scroll up  button, scroll bar move to up direction on Highlights window.",
					"Pass");

			Thread.sleep(3000);
			WebElement HLLeagues2 = webdriver.findElement(By.xpath(XpathMap.get("HLLeagueSelectUpDown")));
			Actions action2 = new Actions(webdriver);
			action2.moveToElement(HLLeagues2).perform();
			Thread.sleep(3000);

			report.detailsAppend("TC16-Vuvu_HL",
					"Verify user able to Click on Scroll down button on scroll bar in Highlights window.",
					"Verified user Clicked on Scroll down button on scroll bar in Highlights window. ", "Pass");

			report.detailsAppend("TC17-Vuvu_HL",
					"Verify user after Click on Scroll down  button on scroll bar move to up direction on Highlights window.",
					"Verified user after Click on Scroll down  button, scroll bar move to up direction on Highlights window.",
					"Pass");

			WebElement HLLeagues3 = webdriver.findElement(By.xpath(XpathMap.get("HL1stLeagueSelect")));
			Actions action3 = new Actions(webdriver);
			action3.moveToElement(HLLeagues3).perform();
			Thread.sleep(3000);

		} catch (Exception e) {

			report.detailsAppend("TC14-Vuvu_HL",
					"Verify user able to Click on Scroll up button on scroll bar in Highlights window.",
					"Verified user Clicked on Scroll up button on scroll bar in Highlights window. ", "Fail");

			report.detailsAppend("TC15-Vuvu_HL",
					"Verify user after Click on Scroll up  button on scroll bar move to up direction on Highlights window.",
					"Verified user after Click on Scroll up  button, scroll bar move to up direction on Highlights window.",
					"Fail");

			report.detailsAppend("TC16-Vuvu_HL",
					"Verify user able to Click on Scroll down button on scroll bar in Highlights window.",
					"Verified user Clicked on Scroll down button on scroll bar in Highlights window. ", "Fail");

			report.detailsAppend("TC17-Vuvu_HL",
					"Verify user after Click on Scroll down  button on scroll bar move to up direction on Highlights window.",
					"Verified user after Click on Scroll down  button, scroll bar move to up direction on Highlights window.",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC18,19,20 -(Highlights) @Author: AS66528
	// Verify user able to see "Cross button" on Highlights window screen.
	public boolean HL_HighlightsWindowCloseBtn(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HLCalenderSelect"))).isDisplayed());
			System.out.print(" vertical scroll bar Visible on Highlights window .\n");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HLHightlightsTabCloseBtn"))).isDisplayed());

			report.detailsAppend("TC18-Vuvu_HL",
					"Verify user able to see \"Cross button\" on Highlights window screen.",
					"Verified  user seen \"Cross button\" on Highlights window screen.", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("HLHightlightsTabCloseBtn"))).click();

			report.detailsAppend("TC19-Vuvu_HL",
					"Verify user able to click \"Cross button\" on Highlights window screen.",
					"Verified user click \"Cross button\" on Highlights window screen.", "Pass");

			report.detailsAppend("TC20-Vuvu_HL",
					"Verify after click on \"Cross button\" the Highlights window is getting closed.",
					"Verified after click on \"Cross button\" the Highlights window is getting closed.", "Pass");

			Thread.sleep(3000);

		} catch (Exception e) {

			report.detailsAppend("TC18-Vuvu_HL",
					"Verify user able to see \"Cross button\" on Highlights window screen.",
					"Verified  user seen \"Cross button\" on Highlights window screen.", "Fail");

			report.detailsAppend("TC19-Vuvu_HL",
					"Verify user able to click \"Cross button\" on Highlights window screen.",
					"Verified user click \"Cross button\" on Highlights window screen.", "Fail");

			report.detailsAppend("TC20-Vuvu_HL",
					"Verify after click on \"Cross button\" the Highlights window is getting closed.",
					"Verified after click on \"Cross button\" the Highlights window is getting closed.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC21,22 -(Highlights) @Author: AS66528
	// Verify user able to click on leagues on Highlights window screen.
	public boolean HL_LeagueSelectedinHighlightsWindow(Desktop_HTML_Report report) throws InterruptedException {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HighlightsBtn"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HighlightsBtn"))).click();
			System.out.print(" Highlights window clicked on homepage.\n");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HL1stLeagueSelect"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HL1stLeagueSelect"))).click();

			report.detailsAppend("TC21-Vuvu_HL", "Verify user able to click on leagues on Highlights window screen.",
					"Verified user click on leagues on Highlights window screen.", "Pass");

			Thread.sleep(3000);
			report.detailsAppend("TC22-Vuvu_HL",
					"Verify after click on leagues on Highlights window screen it getting redirect to statistics page.",
					"Verified after click on leagues on Highlights window screen it getting redirect to statistics page.",
					"Pass");

		} catch (Exception e) {

			report.detailsAppend("TC21-Vuvu_HL", "Verify user able to click on leagues on Highlights window screen.",
					"Verified user click on leagues on Highlights window, League page not navigate.", "Fail");

			report.detailsAppend("TC22-Vuvu_HL",
					"Verify after click on leagues on Highlights window screen it getting redirect to statistics page.",
					"Verified after click on leagues on Highlights window screen it Not redirect to statistics page.",
					"Fail");

			webdriver.navigate().refresh();

			return false;
		}

		Thread.sleep(3000);
		Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed());
		System.out.print("VuvuSportButton is Present");
		webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
		Thread.sleep(3000);
		return true;
	}

	// TC23,24,25 -(Highlights) @Author: AS66528
	// Verify user able to see Leagues below the Highlights tab on home page
	public boolean HL_LeagueSelectedOnHomePage(Desktop_HTML_Report report) throws InterruptedException {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			try {
			report.detailsAppend("TC23-Vuvu_HL",
					"Verify user able to see Leagues below the Highlights tab on home page",
					"Verified user seen Leagues below the Highlights tab on home page", "Pass");
			
			}catch(Exception e) {
				
				report.detailsAppend("TC23-Vuvu_HL",
						"Verify user able to see Leagues below the Highlights tab on home page",
						"Verified user seen Leagues below the Highlights tab on home page", "Fail");
			}

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HLLeagueInHomepage"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HLLeagueInHomepage"))).click();
			System.out.print(" Highlights window clicked on homepage.\n");
			Thread.sleep(3000);

			report.detailsAppend("TC24-Vuvu_HL",
					"Verify after click on leagues on Highlights window screen it getting redirect to statistics page.",
					"Verified after click on leagues on Highlights window screen it getting redirect to statistics page.",
					"Pass");

			report.detailsAppend("TC25-Vuvu_HL",
					"Verify after click on Leagues below Highlights tab it should redirect to statistics page.",
					"Verified after click on Leagues below Highlights tab it redirect to statistics page.", "Pass");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed());
			System.out.print("VuvuSportButton is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(5000);

		} catch (Exception e) {

			report.detailsAppend("TC24-Vuvu_HL",
					"Verify after click on leagues on Highlights window screen it getting redirect to statistics page.",
					"Verified after click on leagues on Highlights window screen it getting redirect to statistics page.",
					"Fail");

			report.detailsAppend("TC25-Vuvu_HL",
					"Verify after click on Leagues below Highlights tab it should redirect to statistics page.",
					"Verified after click on Leagues below Highlights tab it redirect to statistics page.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

	// TC26,27,28,29,30 -(Highlights) @Author: AS66528
	// Verify user able to see game banner on right side of home page
	public boolean HL_GameBannerOnHomePage(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HighlightsBtn"))).isDisplayed());

			report.detailsAppend("TC26-Vuvu_HL", "Verify user able to see game banner on right side of home page",
					"Verified user seen game banner on right side of home page", "Pass");

			report.detailsAppend("TC27-Vuvu_HL",
					"Verify user able to see buttons on  game banner on right side of home page.",
					"Verified user seen buttons on  game banner on right side of home page.", "Pass");

			report.detailsAppend("TC28-Vuvu_HL",
					"Verify user able to see if the game is to play the play button is display on banner.",
					"Verified user seen if the game is to play the play button is display on banner.", "Pass");

			report.detailsAppend("TC29-Vuvu_HL",
					"Verify user able to see  if the game is to Bet the \"Bet Now \"button is display on banner.",
					"Verified user seen if the game is to Bet the \"Bet Now \"button is display on banner.", "Pass");

			webdriver.navigate().to("https://www.betway.co.za/pickYourPromo/?optin=PYP&source=Banner");
			Thread.sleep(3000);

			report.detailsAppend("TC30-Vuvu_HL", "Verify the buttons on Game banner is clickable.",
					"Verified the buttons on Game banner clicked.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC26-Vuvu_HL", "Verify user able to see game banner on right side of home page",
					"Verified user seen game banner on right side of home page", "Fail");

			report.detailsAppend("TC27-Vuvu_HL",
					"Verify user able to see buttons on  game banner on right side of home page.",
					"Verified user seen buttons on  game banner on right side of home page.", "Fail");

			report.detailsAppend("TC28-Vuvu_HL",
					"Verify user able to see if the game is to play the play button is display on banner.",
					"Verified user seen if the game is to play the play button is display on banner.", "Fail");

			report.detailsAppend("TC29-Vuvu_HL",
					"Verify user able to see  if the game is to Bet the \"Bet Now \"button is display on banner.",
					"Verified user seen if the game is to Bet the \"Bet Now \"button is display on banner.", "Fail");

			report.detailsAppend("TC30-Vuvu_HL", "Verify the buttons on Game banner is clickable.",
					"Verified the buttons on Game banner clicked.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

//////////////////////////////////////////////            VUVUZELA PROD BETSLIP ZA & NG        ///////////////////////////////////////////////////////////		

	public void BSBookingCodeCopy() throws Exception {
		webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		oddsInBetBook();
		Thread.sleep(3000);
		webdriver.findElement(By.xpath(XpathMap.get("MultiBetBS"))).click();
		Thread.sleep(3000);
		webdriver.findElement(By.xpath(XpathMap.get("BSShare"))).click();
		Thread.sleep(3000);
		webdriver.findElement(By.xpath(XpathMap.get("BSBookingCodeCopy"))).click();
		Thread.sleep(3000);
		if (webdriver.findElement(By.xpath(XpathMap.get("BSShareBookingCodeCloseBtn"))).isDisplayed()) {
			webdriver.findElement(By.xpath(XpathMap.get("BSShareBookingCodeCloseBtn"))).click();		
		} else {
			webdriver.findElement(By.xpath(XpathMap.get("ContinueBettingBtnBS"))).click();
			throw new Exception("Bet ClosePopup is not present");
		}
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
		Thread.sleep(3000);
	}

	private static String getClipboardContents() {
		try {
			Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
			return (String) clipboard.getData(DataFlavor.stringFlavor);
		} catch (Exception e) {
			e.printStackTrace();
			return "";
		}
	}

	// TC-1 (BetSlipProd) @Author: AS66528
	// When we add the first bet to the bet slip, it should be added to both the
	// single bet and multi-bet selection pages.
	public boolean BS_SingleMultiBetslip(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("BetSingle"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC1-BetSlipProd",
					"When we add the first bet to the bet slip, it should be added to single bet ",
					"When we add the first bet to the bet slip, it is be added to both the single bet ", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC1.1-BetSlipProd",
					"When we add the first bet to the bet slip, it should be added to Multi bet ",
					"When we add the first bet to the bet slip, it is be added to both the Multi bet ", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).click();
			Thread.sleep(3000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC1-BetSlipProd",
					"When we add the first bet to the bet slip, it should be added to both the single bet and Multi bet ",
					"When we add the first bet to the bet slip,NOT added to both the single bet ", "Fail");

			report.detailsAppend("TC1.1-BetSlipProd",
					"When we add the first bet to the bet slip, it should be added to Multi bet ",
					"When we add the first bet to the bet slip, NOT added to both the Multi bet ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-2 (BetSlipProd) @Author: AS66528
	// When we add the first bet to the bet slip, the "Select All" switch should be
	// selected by default, and the color of the switch should be green.
	public boolean BS_DefaultSelectAllButton(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			oddsInBetBook();
			report.detailsAppend("TC2-BetSlipProd", "Select All switch should be selected by default",
					" Select All switch is selected by default ", "Pass");

			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).click();
			Thread.sleep(3000);

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC2-BetSlipProd", "Select All switch should be selected by default",
					"Select All is not selected by default", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-3 (BetSlipProd) @Author: AS66528
	// The user should be able to deselect leg options.
	public boolean BS_DeSelectLegsBetSlip(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			try {
				oddsInBetBook();
			} catch (Exception e) {
				System.out.println("Error is" + e);
			}
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuCheckBox"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC3-BetSlipProd", "The user should be able to deselect leg options.",
					"The user is able to deselect leg options.", "Pass");

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).click();
			Thread.sleep(3000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC3-BetSlipProd", "The user should be able to deselect leg options.",
					"The user is able to deselect leg options. ", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-4 (BetSlipProd) @Author: AS66528
	// The user should be able to select leg options after deselecting them.
	public boolean BS_SelectDeSelectedLegsBetSlip(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("VuvuCheckBox"))).click();
			webdriver.findElement(By.xpath(XpathMap.get("VuvuCheckBox"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC4-BetSlipProd",
					"The user should be able to select leg options after deselecting them.",
					"The user is able to select leg options after deselecting them.", "Pass");
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).click();
			Thread.sleep(3000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC4-BetSlipProd",
					"The user should be able to select leg options after deselecting them.",
					"The user is able to select leg options after deselecting them. ", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-5 (BetSlipProd) @Author: AS66528
	// When we switch the "Select All" switch to deselect, it should change to the
	// deselect state, and the color of the switch should convert to white.
	public boolean BS_SelectAllWhiteBetSlip(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("VuvuCheckBox"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC5-BetSlipProd", "The color of the switch should convert to white.",
					"The color of the switch is convert to white. ", "Pass");
			Thread.sleep(3000);

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC5-BetSlipProd", "The color of the switch should convert to white.",
					"The color of the switch is convert to white. ", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-6 (BetSlipProd) @Author: AS66528
	// User can click inside the booking code text box..
	public boolean BS_BookingCodeBetSlip(Desktop_HTML_Report report) {

		try {

			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookingCode"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC6-BetSlipProd", "User Should click inside the booking code text box.",
					"User can click inside the booking code text box.", "Pass");

			log.debug("Switch to default tab");
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).click();
			Thread.sleep(3000);

		} catch (Exception e) {
			report.detailsAppend("TC6-BetSlipProd", "User Should click inside the booking code text box.",
					"User can click inside the booking code text box.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-7 (BetSlipProd) @Author: AS66528
	// Entering a valid booking code allows submission.
	public boolean BS_ValidBookingCodeBetSlip(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			BSBookingCodeCopy();
			Thread.sleep(3000);

			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("BetSingle"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookingCode"))).click();
			Thread.sleep(3000);

			String copiedUrl = getClipboardContents();
			String code = copiedUrl.substring(copiedUrl.lastIndexOf("/") + 1);
			System.out.println("Extracted code: " + code);

			Thread.sleep(3000);
			webdriver.findElement(By.cssSelector(XpathMap.get("VuvuSearch"))).sendKeys(code);
			Thread.sleep(3000);

			webdriver.findElement(By.cssSelector(XpathMap.get("VuvuSearchClick"))).click();
			Thread.sleep(3000);

			report.detailsAppend("TC7-BetSlipProd", "valid booking code should allow submission.",
					"valid booking code allows submission.", "Pass");
			Thread.sleep(3000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC7-BetSlipProd", "valid booking code should allow submission.",
					"valid booking code allows submission.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-8 (BetSlipProd) @Author: AS66528
	// Entering an invalid booking code should prevent submission.
	public boolean BS_InValidBookingCodeBetSlip(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("BetSingle"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookingCode"))).sendKeys("U1A95C");
			Thread.sleep(3000);
			webdriver.findElement(By.cssSelector(XpathMap.get("VuvuSearch"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC8-BetSlipProd", "invalid booking code should prevent submission.",
					"invalid booking code prevents submission.", "Pass");
			log.debug("Switch to default tab");
			try {
				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("BSBookingCodeCloseBtn"))).click();
				Thread.sleep(3000);
			} catch (Exception e) {
				webdriver.navigate().refresh();
				System.out.print(e);
			}

		} catch (Exception e) {
			report.detailsAppend("TC8-BetSlipProd", "invalid booking code should prevent submission.",
					"invalid booking code prevents submission.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-9 (BetSlipProd) @Author: AS66528
	// Verify that an empty booking code should not be accepted in the booking code
	// text box on the single bet slip
	public boolean BS_EmptyBookingCodeBetSlip(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookingCode"))).clear();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookingCode"))).sendKeys(" ");
			Thread.sleep(3000);
			webdriver.findElement(By.cssSelector(XpathMap.get("VuvuSearchClick"))).click();
			Thread.sleep(3000);

			report.detailsAppend("TC9-BetSlipProd",
					"Verify an empty booking code should not accepted in booking code text box on the singlebet slip",
					"Verified an empty booking code should not accepted in booking code text box on the singlebet slip",
					"Pass");
			try {
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BSBookingCodeCloseBtn"))).click();
			Thread.sleep(3000);
			} catch(Exception e) {
				webdriver.navigate().refresh();
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {

			report.detailsAppend("TC9-BetSlipProd",
					"Verify an empty booking code should not accepted in booking code text box on the singlebet slip",
					"Verified an empty booking code should not accepted in booking code text box on the singlebet slip",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-10 (BetSlipProd) @Author: AS66528
	// User can click inside the booking code text box..
	public boolean BS_BookingCodeMultiBetslip(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookingCode"))).click();
			Thread.sleep(3000);

			report.detailsAppend("TC10-BetSlipProd", "User Should click inside the booking code text box.",
					"User can click inside the booking code text box.", "Pass");
			log.debug("Switch to default tab");

			try {
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(3000);
			} catch (Exception e) {
				System.out.println(e);
			}

		} catch (Exception e) {
			report.detailsAppend("TC10-BetSlipProd", "User Should click inside the booking code text box.",
					"User can click inside the booking code text box.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-11 (BetSlipProd) @Author: AS66528
	// Entering a valid booking code allows submission.
	public boolean BS_ValidBookingCodeMultiBetslip(Desktop_HTML_Report report) throws InterruptedException {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			BSBookingCodeCopy();
			Thread.sleep(3000);

			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(3000);

			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookingCode"))).click();
			Thread.sleep(3000);
			String copiedUrl = getClipboardContents();
			String code = copiedUrl.substring(copiedUrl.lastIndexOf("/") + 1);
			System.out.println("Extracted code: " + code);

			Thread.sleep(3000);
			webdriver.findElement(By.cssSelector(XpathMap.get("VuvuSearch"))).sendKeys(code);
			Thread.sleep(3000);

			webdriver.findElement(By.cssSelector(XpathMap.get("VuvuSearchClick"))).click();
			Thread.sleep(3000);

			report.detailsAppend("TC11-BetSlipProd", "valid booking code should allow submission in Multbets.",
					"valid booking code allows submission in Multbets.", "Pass");
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC11-BetSlipProd", "valid booking code should allow submission in Multbets.",
					"valid booking code allows submission in Multbets.", "Fail");

			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-12 (BetSlipProd) @Author: AS66528
	// Entering an invalid booking code should prevent submission.
	public boolean BS_InValidBookingCodeMultiBetslip(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookingCode"))).clear();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookingCode"))).sendKeys("UCFE1735");
			Thread.sleep(3000);
			webdriver.findElement(By.cssSelector(XpathMap.get("VuvuSearch"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC12-BetSlipProd", "invalid booking code should prevent submission.",
					"invalid booking code prevents submission.", "Pass");

			log.debug("Switch to default tab");
			try {
				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("BSBookingCodeCloseBtn"))).click();
				Thread.sleep(3000);
			} catch (Exception e) {
				System.out.print(e);
			}

		} catch (Exception e) {
			report.detailsAppend("TC12-BetSlipProd", "invalid booking code should prevent submission.",
					"invalid booking code prevents submission.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-13 (BetSlipProd) @Author: AS66528
	// Submitting an empty field should not be allowed.
	public boolean BS_EmptyBookingCodeMultiBetslip(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookingCode"))).clear();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookingCode"))).sendKeys(" ");
			Thread.sleep(3000);
			webdriver.findElement(By.cssSelector(XpathMap.get("VuvuSearchClick"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC13-BetSlipProd", "Empty booking code should prevent submission.",
					"Empty booking code prevents submission.", "Pass");

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("BSBookingCodeCloseBtn"))).click();
			Thread.sleep(3000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC13-BetSlipProd", "Empty booking code should prevent submission.",
					"Empty booking code prevents submission.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-14 (BetSlipProd) @Author: AS66528
	// Check user should able to click on Single bet slip.
	public boolean BS_SingleBetSlipClick(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("BetSingle"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC14-BetSlipProd", "user should able to click on  Single bet slip.",
					"user is able to click on  Single bet slip.", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC14-BetSlipProd", "user should able to click on  Single bet slip.",
					"user is able to click on  Single bet slip.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-15 (BetSlipProd) @Author: AS66528
	// User should see the same leg is added into the single betslip.
	public boolean BS_VerifySingleBetSlipClick(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			report.detailsAppend("TC15-BetSlipProd", "User should see  the same leg is added into the single betslip.",
					"User is able to see  the same leg is added into the single betslip.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC15-BetSlipProd", "User should see  the same leg is added into the single betslip.",
					"User is able to see  the same leg is added into the single betslip.", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-16 (BetSlipProd) @Author: AS66528
	// user can select/unselect Checkbox
	public boolean BS_CheckBoxClick(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			report.detailsAppend("TC16[1]-BetSlipProd", " User Should select Checkbox .", " User can select Checkbox. ",
					"Pass");
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuCheckBox"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC16[2]-BetSlipProd", " User Should Unselect Checkbox .",
					" User can Unselect Checkbox. ", "Pass");
			Thread.sleep(3000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC16-BetSlipProd", " user Should select/Unselect Checkbox .",
					" user can select/Unselect Checkbox. ", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-17 (BetSlipProd) @Author: AS66528
	// User can see that after deselecting a checkbox for a single bet then
	// bydefault deselects the Select All button.

	public boolean BS_DefaultSelectAll(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			report.detailsAppend("TC17-BetSlipProd", " user Should able to see SelectAll Deselecting .",
					" user can see selectAll Deselected ", "Pass");
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC17-BetSlipProd", " user Should able to see SelectAll Deselecting .",
					" user can see selectAll Deselected ", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-18 (BetSlipProd) @Author: AS66528
	// User should see the same leg is added into the Multi betslip.
	public boolean BS_VerifyMultiBetslip(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			System.out.print("\n Multi Odds slelected");
			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("MultiBetslip"))).isDisplayed());
			System.out.print("\n Multi betslip clicked");
			webdriver.findElement(By.xpath(XpathMap.get("MultiBetslip"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC18-BetSlipProd", " User should see  the same leg is added into the Multi betslip.",
					"User is able to see  the same leg is added into the Multi betslip.", "Pass");
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC18-BetSlipProd", " user Should able to see SelectAll Deselecting .",
					" user can see selectAll Deselected ", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-19 (BetSlipProd) @Author: AS66528
	// Confirm the functionality of the checkbox by testing its ability to be
	// checked and unchecked for an added bet in the Multi betslip.
	public boolean BS_MultiBetslipCheckBox(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuCheckBox"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuCheckBox"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC19-BetSlipProd", " user Should able to Click the CheckBox in Multi Betslip .",
					" user is able to Click the CheckBox in Multi Betslip ", "Pass");
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC19-BetSlipProd", " user Should able to Click the CheckBox in Multi Betslip .",
					" user is able to Click the CheckBox in Multi Betslip ", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-20 (BetSlipProd) @Author: AS66528
	// User can see that after deselecting a checkbox for a Multi bet then bydefault
	// deselects the Select All button.
	public boolean BS_MultiBetslipDeSelectAll(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuCheckBox"))).isDisplayed());
			Thread.sleep(3000);
			report.detailsAppend("TC20-BetSlipProd",
					" user Should able to Click the CheckBox in Multi Betslip then bydefault deselects the Select All button.",
					" user is able to Click the CheckBox in Multi Betslip then bydefault deselects the Select All button. ",
					"Pass");
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC20-BetSlipProd",
					" user Should able to Click the CheckBox in Multi Betslip then bydefault deselects the Select All button.",
					" user is able to Click the CheckBox in Multi Betslip then bydefault deselects the Select All button.",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-21 (BetSlipProd) @Author: AS66528
	// User can see Multi betslip opens the Winning Probability page.
	public boolean BS_MultiBetslipStatisticsPage(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(3000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuEventStatistics"))).click();
				Thread.sleep(3000);
			} catch (Exception e) {
				System.out.println("Error is" + e);
			}

			report.detailsAppend("TC21-BetSlipProd",
					" User can see Clicking on Multi betslip opens the Winning Probability page.",
					" User is able to see Clicking on Multi betslip opens the Winning Probability page. ", "Pass");

			log.debug("Switch to default tab");
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(3000);

		} catch (Exception e) {
			report.detailsAppend("TC21-BetSlipProd",
					" User can see Clicking on Multi betslip opens the Winning Probability page.",
					" User is able to see Clicking on Multi betslip opens the Winning Probability page. ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-22 (BetSlipProd) @Author: AS66528
	// To check "Booking code" pop up window getting closed on clicking "Close"
	// button
	public boolean BS_MultiBookingCodeClose(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("OddsInBetBook"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("OddsInBetBook"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("MultiBetslip"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("MultiBetslip"))).click();
			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuBookButton"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookButton"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("BSShareBookingCodeCloseBtn"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC22-BetSlipProd",
					" To check \"Booking code\" pop up window getting closed on clicking \"Close\" button",
					" User is able to close Booking code pop-up Window ", "Pass");
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC22-BetSlipProd",
					" To check \"Booking code\" pop up window getting closed on clicking \"Close\" button",
					" User is able to close Booking code pop-up Window ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

	// BETSLIP VUVUZELA
	// TC-23 (BetSlipProd) @Author: AS66528
	// check the WhatApp, Twitter, Facebook, Send Sms and social media Mail button
	// in the Book pop window
	public boolean BS_MultiBetBookingCodeApps(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuBookButton"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookButton"))).click();
			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuWhatsApp"))).isDisplayed());
			report.detailsAppend("TC23-BetSlipProd",
					" To check the WhatApp,Twitter,Facebook,SendSms and socialmedia Mail button in Book window",
					"checked the WhatApp,Twitter,Facebook,SendSms and socialmedia Mail button in Book window", "Pass");
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC23-BetSlipProd",
					" To check the WhatApp,Twitter,Facebook,SendSms and socialmedia Mail button in Book window",
					"checked the WhatApp,Twitter,Facebook,SendSms and socialmedia Mail button in Book window", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-24 (BetSlipProd) @Author: AS66528
	// To check the ContinueBetting button in the Book pop window
	public boolean BS_MultiBetContinueBettingButton(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuContinueBetting"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuContinueBetting"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC24-BetSlipProd", " To check the ContinueBetting  button in the Book pop window ",
					"  ContinueBetting  button is Clicked in the Book pop window  ", "Pass");

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(3000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC24-BetSlipProd", " To check the ContinueBetting  button in the Book pop window ",
					"  ContinueBetting  button is Clicked in the Book pop window  ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-25 (BetSlipProd) @Author: AS66528
	// check the WhatApp, Twitter, Facebook, Send Sms and social media Mail button
	// in the Book pop window
	public boolean BS_SingleBetBookingCodeApps(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("OddsInBetBook"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("OddsInBetBook"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(4000);
			webdriver.findElement(By.xpath(XpathMap.get("SingleBets"))).click();
			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuBookButton"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookButton"))).click();
			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuWhatsApp"))).isDisplayed());
			report.detailsAppend("TC25-BetSlipProd",
					" To check the WhatApp,Twitter,Facebook,SendSms and socialmedia Mail button in Book window",
					"checked the WhatApp,Twitter,Facebook,SendSms and socialmedia Mail button in Book window", "Pass");
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC25-BetSlipProd",
					" To check the WhatApp,Twitter,Facebook,SendSms and socialmedia Mail button in Book window",
					"checked the WhatApp,Twitter,Facebook,SendSms and socialmedia Mail button in Book window", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-26 (BetSlipProd) @Author: AS66528
	// To check the ContinueBetting button in the Book pop window
	public boolean BS_SingleBetContinueBettingButton(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(XpathMap.get("BSShareBookingCodeCloseBtn"))).isDisplayed());
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuContinueBetting"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC26-BetSlipProd", " To check the ContinueBetting  button in the Book pop window ",
					"  ContinueBetting  button is Clicked in the Book pop window  ", "Pass");

			log.debug("Switch to default tab");
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(3000);

		} catch (Exception e) {
			report.detailsAppend("TC26-BetSlipProd", " To check the ContinueBetting  button in the Book pop window ",
					"  ContinueBetting  button is Clicked in the Book pop window  ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-27 (BetSlipProd) @Author: AS66528
	// To check functionality of "Keep bets in betslip check box" Without checking
	// the Checkbox
	public boolean BS_SingleBetKeepBetsCheckBox(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("OddsInBetBook"))).isDisplayed());
			System.out.print("Odds is clicked");
			webdriver.findElement(By.xpath(XpathMap.get("OddsInBetBook"))).click();
			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SingleBets"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("SingleBets"))).click();
			Thread.sleep(3000);
			WebElement KeepBetsCheckbox = webdriver.findElement(By.xpath(XpathMap.get("VuvuAcceptOdds")));
			Actions actionbox = new Actions(webdriver);
			actionbox.moveToElement(KeepBetsCheckbox).perform();
			Thread.sleep(3000);
			report.detailsAppend("TC27-BetSlipProd", " \"Keep bets in betslip check box\" should be visible ",
					" \"Keep bets in betslip check box\" is visible ", "Pass");
			Thread.sleep(3000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC27-BetSlipProd", " \"Keep bets in betslip check box\" should be visible ",
					" \"Keep bets in betslip check box\" not visible ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-28 (BetSlipProd) @Author: AS66528
	// To check functionality of "Keep bets in betslip check box" With checking the
	// Checkbox
	public boolean BS_SingleBetKeepBetsCheckBoxClick(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuKeepBets"))).click();
				Thread.sleep(3000);
			} catch (Exception e) {
				System.out.print("VuvuKeepBets button not Visible to Click");
			}
			report.detailsAppend("TC28-BetSlipProd", " \"Keep bets in betslip check box\" should be Clicked ",
					" \"Keep bets in betslip check box\" is visible ", "Pass");

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuKeepBets"))).click();
			Thread.sleep(3000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC28-BetSlipProd", " \"Keep bets in betslip check box\" should be clicked ",
					" \"Keep bets in betslip check box\" not Clicked ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-29 (BetSlipProd) @Author: AS66528
	// To check functionality of "Keep bets in betslip check box" Without checking
	// the Checkbox
	public boolean BS_MultiBetKeepBetsCheckBox(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("MultiBetslip"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("MultiBetslip"))).click();
			Thread.sleep(3000);

			WebElement KeepBetsCheckbox = webdriver.findElement(By.xpath(XpathMap.get("VuvuKeepBets")));
			Actions actionbox = new Actions(webdriver);
			actionbox.moveToElement(KeepBetsCheckbox).perform();
			Thread.sleep(3000);

			report.detailsAppend("TC29-BetSlipProd", " \"Keep bets in betslip check box\" should be visible ",
					" \"Keep bets in betslip check box\" is visible ", "Pass");

			Thread.sleep(3000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC29-BetSlipProd", " \"Keep bets in betslip check box\" should be visible ",
					" \"Keep bets in betslip check box\" is visible ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-30 (BetSlipProd) @Author: AS66528
	// To check functionality of "Keep bets in betslip check box" With checking the
	// Checkbox
	public boolean BS_MultiBetKeepBetsCheckBoxClick(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			try {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuKeepBets"))).click();
				Thread.sleep(3000);
			} catch (Exception e) {
				System.out.print("VuvuKeepBets button not Visible to Click");
			}

			report.detailsAppend("TC30-BetSlipProd", " \"Keep bets in betslip check box\" should be Clicked ",
					" \"Keep bets in betslip check box\" is visible ", "Pass");
			log.debug("Switch to default tab");

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(3000);

		} catch (Exception e) {
			report.detailsAppend("TC30-BetSlipProd", " \"Keep bets in betslip check box\" should be visible ",
					" \"Keep bets in betslip check box\" is Clicked ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-31,32 (BetSlipProd) @Author: AS66528
	// To check without check the Accept all odds & line charges Check box
	public boolean BS_SingleBetAcceptOddsCheckBox(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("OddsInBetBook"))).isDisplayed());
			System.out.print("Odds is clicked");
			webdriver.findElement(By.xpath(XpathMap.get("OddsInBetBook"))).click();
			Thread.sleep(5000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BetSingle"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("BetSingle"))).click();
			Thread.sleep(3000);

			webdriver.findElement(By.xpath(XpathMap.get("VuvuAcceptOdds"))).click();
			Thread.sleep(3000);

			report.detailsAppend("TC31-BetSlipProd",
					"check without check the Accept all odds & line charges  Check box ",
					"check without check the Accept all odds & line charges  Check box", "Pass");
			Thread.sleep(3000);

			webdriver.findElement(By.xpath(XpathMap.get("VuvuAcceptOdds"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC32-BetSlipProd",
					"check with check the Accept all odds & line charges Check box should be click",
					"checked the Accept all odds & line charges Check box clicked ", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC31-BetSlipProd",
					"check without check the Accept all odds & line charges  Check box ",
					"check without check the Accept all odds & line charges  Check box", "Fail");

			report.detailsAppend("TC32-BetSlipProd",
					"check with check the Accept all odds & line charges Check box should be click",
					"checked the Accept all odds & line charges Check box clicked ", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-33,34,35,36,37 (BetSlipProd) @Author: AS66528
	// To check Bet WagerField , TotalAmountCal on betslip
	public boolean BS_SingleBetWagerFieldTotalAmountCal(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuAcceptOdds"))).isDisplayed());
			Thread.sleep(3000);
			System.out.print(" Bet Wager field box visible\n");

			report.detailsAppend("TC36-BetSlipProd",
					"Check Total BetWay return dropdown user able to see potential return Wager(Ex-Potential Retun: R 100.00)",
					"Check Total BetWay return dropdown user able to see potential return Wager(Ex-Potential Retun: R 100.00)",
					"Pass");

			report.detailsAppend("TC37-BetSlipProd",
					"check Whether user able to enter/add  WagerInputs to Bet Wagerfield",
					"User able to enter/add  WagerInputs to Bet Wagerfield", "Pass");

			String title = webdriver.getCurrentUrl();

			if ((title).contains("za")) {
				webdriver.findElement(By.xpath(XpathMap.get("SingleBetBetWagerfieldingleBet"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("SingleBetBetWagerfieldingleBet"))).sendKeys("20.00");
				Thread.sleep(3000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(XpathMap.get("SingleBetBetWagerfieldingleBet"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("SingleBetBetWagerfieldingleBet"))).sendKeys("20.00");
				Thread.sleep(3000);

			}

			report.detailsAppend("TC33-BetSlipProd",
					"check Whether user able to enter/add  WagerInputs to Bet Wagerfield",
					"User able to enter/add  WagerInputs to Bet Wagerfield", "Pass");

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("SingleBetBetWagerfieldingleBet"))).clear();
			webdriver.findElement(By.xpath(XpathMap.get("SingleBetBetWagerfieldingleBet"))).sendKeys("@!&#");
			Thread.sleep(3000);

			report.detailsAppend("TC34-BetSlipProd",
					"check Whether user able to enter/add Invalid WagerInputs to Bet Wagerfield",
					"User able to enter/add Invalid WagerInputs to Bet Wagerfield", "Pass");

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuAcceptOdds"))).isDisplayed());
			Thread.sleep(3000);
			report.detailsAppend("TC35-BetSlipProd", "Check Total betway return Wager calculation",
					"Check Total betway return Wager calculation", "Pass");

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(3000);

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC33-BetSlipProd",
					"check Whether user able to enter/add  WagerInputs to Bet Wagerfield",
					"User able to enter/add  WagerInputs to Bet Wagerfield", "Fail");

			report.detailsAppend("TC34-BetSlipProd",
					"check Whether user able to enter/add Invalid WagerInputs to Bet Wagerfield",
					"User able to enter/add Invalid WagerInputs to Bet Wagerfield", "Fail");

			report.detailsAppend("TC35-BetSlipProd", "Check Total betway return Wager calculation",
					"Check Total betway return Wager calculation", "Fail");

			report.detailsAppend("TC36-BetSlipProd",
					"Check Total BetWay return dropdown user able to see potential return Wager(Ex-Potential Retun: R 100.00)",
					"Check Total BetWay return dropdown user able to see potential return Wager(Ex-Potential Retun: R 100.00)",
					"Fail");

			report.detailsAppend("TC37-BetSlipProd",
					"check Whether user able to enter/add  WagerInputs to Bet Wagerfield",
					"User able to enter/add  WagerInputs to Bet Wagerfield", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-38,39,40,41,42,43(BetSlipProd) @Author: AS66528
	// To check Bet WagerField , TotalAmountCal on betslip
	public boolean BS_MultiBetWagerFieldTotalAmountCal(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("OddsInBetBook"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("OddsInBetBook"))).click();
			System.out.print("1st Odds is selected");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			System.out.print("2nd Odds is selected");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("MultiBetslip"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("MultiBetslip"))).click();
			Thread.sleep(3000);

			WebElement KeepBetsCheckbox = webdriver.findElement(By.xpath(XpathMap.get("VuvuAcceptOdds")));
			Actions actionbox = new Actions(webdriver);
			actionbox.moveToElement(KeepBetsCheckbox).perform();
			Thread.sleep(3000);

			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				webdriver.findElement(By.xpath(XpathMap.get("BSMultiBetBetWagerfieldingleBet"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BSMultiBetBetWagerfieldingleBet"))).sendKeys("20.00");
				Thread.sleep(3000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(XpathMap.get("BSMultiBetBetWagerfieldingleBet"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BSMultiBetBetWagerfieldingleBet"))).sendKeys("20.00");
				Thread.sleep(3000);

			}

			Thread.sleep(3000);
			report.detailsAppend("TC38-BetSlipProd",
					"check Whether user able to enter/add  WagerInputs to Bet Wagerfield",
					"User able to enter/add  WagerInputs to Bet Wagerfield", "Pass");

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("BSMultiBetBetWagerfieldingleBet"))).clear();
			webdriver.findElement(By.xpath(XpathMap.get("BSMultiBetBetWagerfieldingleBet"))).sendKeys("@!&#");
			Thread.sleep(3000);

			report.detailsAppend("TC39-BetSlipProd",
					"check Whether user able to enter/add Invalid WagerInputs to Bet Wagerfield",
					"User able to enter/add Invalid WagerInputs to Bet Wagerfield", "Pass");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuAcceptOdds"))).isDisplayed());
			Thread.sleep(3000);
			report.detailsAppend("TC40-BetSlipProd", "Check Total betway return Wager calculation",
					"Checked Total betway return Wager calculation", "Pass");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(3000);

			report.detailsAppend("TC41-BetSlipProd",
					"check all bets are getting removed from the Multi Betslip by clicking on Remove all button",
					"checked all bets are getting removed from the Multi Betslip by clicking on Remove all button",
					"Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC38-BetSlipProd",
					"check Whether user able to enter/add  WagerInputs to Bet Wagerfield",
					"User able to enter/add  WagerInputs to Bet Wagerfield", "Fail");

			report.detailsAppend("TC39-BetSlipProd",
					"check Whether user able to enter/add Invalid WagerInputs to Bet Wagerfield",
					"User able to enter/add Invalid WagerInputs to Bet Wagerfield", "Fail");

			report.detailsAppend("TC40-BetSlipProd", "Check Total betway return Wager calculation",
					"Checked Total betway return Wager calculation", "Fail");

			report.detailsAppend("TC41-BetSlipProd",
					"check all bets are getting removed from the Multi Betslip by clicking on Remove all button",
					"checked all bets are getting removed from the Multi Betslip by clicking on Remove all button",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-42 (BetSlipProd) @Author: AS66528
	// To check all bets are getting removed from the Single Betslip by clicking on
	// Remove all button

	public boolean BS_SingleBetslipRemoveAllBtnClicked(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("OddsInBetBook"))).isDisplayed());
			System.out.print("Odds is clicked");
			webdriver.findElement(By.xpath(XpathMap.get("OddsInBetBook"))).click();
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SingleBets"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("SingleBets"))).click();
			Thread.sleep(3000);

			WebElement KeepBetsCheckbox = webdriver.findElement(By.xpath(XpathMap.get("VuvuAcceptOdds")));
			Actions actionbox = new Actions(webdriver);
			actionbox.moveToElement(KeepBetsCheckbox).perform();
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(3000);

			report.detailsAppend("TC42-BetSlipProd",
					"check all bets are getting removed from the Single Betslip by clicking on Remove all button",
					"checked all bets are getting removed from the Single Betslip by clicking on Remove all button",
					"Pass");
			Thread.sleep(3000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC42-BetSlipProd",
					"check all bets are getting removed from the Single Betslip by clicking on Remove all button",
					"checked all bets are getting removed from the Single Betslip by clicking on Remove all button",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC- 43,44,45,46,47(BetSlipProd) @Author: AS66528
	// To check the winboost popup on betslip
	public boolean BS_MultiBetWinBoost(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("OddsInBetBook"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("OddsInBetBook"))).click();
			System.out.print("1st Odds is selected");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			System.out.print("2nd Odds is selected");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BS3rdOddSelect"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("BS3rdOddSelect"))).click();
			System.out.print("3rd Odds is selected");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			System.out.print("Sport Button is clicked");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("MultiBetslip"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("MultiBetslip"))).click();
			System.out.print("Multi Betslip is selected");
			Thread.sleep(3000);

			WebElement BetDD = webdriver.findElement(By.xpath(XpathMap.get("VuvuAcceptOdds")));
			Actions actionbox1 = new Actions(webdriver);
			actionbox1.moveToElement(BetDD).perform();
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BetDropdown"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("BetDropdown"))).click();
			Thread.sleep(3000);

			report.detailsAppend("TC43-BetSlipProd", "User must check WinBoostvalue in Betamount dropdown",
					"checked WinBoostvalue in Betamount dropdown section", "Pass");

			report.detailsAppend("TC44-BetSlipProd", "User must check WinBoostvalue in Betamount calculation",
					"checked WinBoostvalue in Betamount calculation Display", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("BetDropdown"))).click();
			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("WinBoostdropdown"))).isDisplayed());
			Thread.sleep(3000);
			report.detailsAppend("TC47-BetSlipProd", "Check Win Boost  value in Bet amount calculation",
					"Checked Win Boost  value in Bet amount calculation", "Pass");

			Thread.sleep(3000);
			WebElement WinBoostDD = webdriver.findElement(By.xpath(XpathMap.get("WinBoostdropdown")));
			Actions act1 = new Actions(webdriver);
			act1.moveToElement(WinBoostDD).perform();
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			je.executeScript("window.scrollBy(0,-200)");
			Thread.sleep(3000);

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("WinBoostdropdown"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("WinBoostdropdown"))).click();
			Thread.sleep(3000);

			report.detailsAppend("TC45-BetSlipProd", "User must check Win Boost tool tip",
					"checked Win Boost tool tip Display", "Pass");

			report.detailsAppend("TC46-BetSlipProd", "User check Win Boost popup window contents",
					"checked Win Boost popup window contents", "Pass");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BSWinBoostPopCloseBtn"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("BSWinBoostPopCloseBtn"))).click();
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(3000);
			log.debug("Switch to default tab");

		} catch (Exception e) {

			report.detailsAppend("TC43-BetSlipProd", "User must check WinBoostvalue in Betamount dropdown",
					"checked WinBoostvalue in Betamount not selected dropdown section", "Fail");

			report.detailsAppend("TC44-BetSlipProd", "User must check WinBoostvalue in Betamount calculation",
					"checked WinBoostvalue in Betamount calculation not Display", "Fail");

			report.detailsAppend("TC45-BetSlipProd", "User must check Win Boost tool tip",
					"checked Win Boost tool tip not Display", "Fail");

			report.detailsAppend("TC46-BetSlipProd", "User check Win Boost popup window contents",
					"checked Win Boost popup window contents not displayed", "Fail");

			report.detailsAppend("TC47-BetSlipProd", "Check Win Boost  value in Bet amount calculation",
					"Checked Win Boost value not displayed in Bet amount calculation", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// BETSLIP VUVUZELA
	// TC-48, 49 (BetSlipProd) @Author: AS66528
	// To check if user dont have insufficient funds in account then "Bet
	// Confirmation" pop up window should display

	public boolean InsufficientErrorBet(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("OddsInBetBook"))).isDisplayed());
			System.out.print("Odds is clicked");
			webdriver.findElement(By.xpath(XpathMap.get("OddsInBetBook"))).click();
			Thread.sleep(5000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BetSingle"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("BetSingle"))).click();
			Thread.sleep(3000);

			WebElement KeepBetsCheckbox = webdriver.findElement(By.xpath(XpathMap.get("VuvuAcceptOdds")));
			Actions actionbox = new Actions(webdriver);
			actionbox.moveToElement(KeepBetsCheckbox).perform();
			Thread.sleep(3000);

			webdriver.findElement(By.xpath(XpathMap.get("SingleBetBetWagerfieldingleBet"))).clear();
			webdriver.findElement(By.xpath(XpathMap.get("SingleBetBetWagerfieldingleBet"))).sendKeys("90000");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
			Thread.sleep(3000);

			report.detailsAppend("TC48-BetSlipProd",
					"User check Single- Insufficient funds error pop-up on clicking \"Bet Now\" button",
					"checked Single- Insufficient funds error pop-up on clicking \"Bet Now\" button", "Pass");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).click();
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("OddsInBetBook"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("OddsInBetBook"))).click();
			System.out.print("1st Odds is selected");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			System.out.print("2nd Odds is selected");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("MultiBetslip"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("MultiBetslip"))).click();
			System.out.print("Multi Betslip is selected");
			Thread.sleep(3000);

			WebElement BetDD = webdriver.findElement(By.xpath(XpathMap.get("BetDropdown")));
			Actions actionbox1 = new Actions(webdriver);
			actionbox1.moveToElement(BetDD).perform();
			Thread.sleep(3000);

			webdriver.findElement(By.xpath(XpathMap.get("BSMultiBetBetWagerfieldingleBet"))).clear();
			webdriver.findElement(By.xpath(XpathMap.get("BSMultiBetBetWagerfieldingleBet"))).sendKeys("90000");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
			Thread.sleep(3000);

			report.detailsAppend("TC49-BetSlipProd",
					"User check Multi- Insufficient funds error pop-up on clicking \"Bet Now\" button",
					"checked Multi- Insufficient funds error pop-up on clicking \"Bet Now\" button", "Pass");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).click();
			Thread.sleep(5000);
			log.debug("Switch to default tab");

		} catch (Exception e) {

			report.detailsAppend("TC48-BetSlipProd",
					"check if user dont have insufficient funds in account then \"Bet Confirmation\" pop up window should display",
					"checked user dont have insufficient funds in account then \"Bet Confirmation\" pop up window should display",
					"Fail");

			report.detailsAppend("TC49-BetSlipProd",
					"check if user dont have insufficient funds in account then \"Bet Confirmation\" pop up window should display",
					"checked user dont have insufficient funds in account then \"Bet Confirmation\" pop up window should display",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-50-57 (BetSlipProd) @Author: AS66528
	// To check on clicking "My Bet" button "Account Options" pop-up window should
	// appear.

	public boolean BS_MyBetButtonAccountPopupWindow(Desktop_HTML_Report report) {

		try {
			try {
				webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("BSMyBetButtonInBetslipPage"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("BSMyBetButtonInBetslipPage"))).click();
				System.out.print(" My Bet button clciked on belsip page\n");
				Thread.sleep(3000);

				report.detailsAppend("TC50-BetSlipProd",
						"User must clicking MyBet button AccountOptions pop-up window should appear",
						"MyBet button AccountOptions pop-up window appeared", "Pass");
				Thread.sleep(3000);

			} catch (Exception e) {
				report.detailsAppend("TC50-BetSlipProd",
						"User must clicking MyBet button AccountOptions pop-up window should appear",
						"MyBet button AccountOptions pop-up window appeared", "Fail");
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("OpenBets"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("AllRadioButton"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC51-BetSlipProd",
						"User must check the result(Data) of ALL Radio Button In Singleodd",
						"check the result(Data) of ALL Radio Button In Singleodd", "Pass");

				Thread.sleep(3000);
				report.detailsAppend("TC52-BetSlipProd",
						"User must Verify the result(Data) options in Sports Drop-down",
						"erify the result(Data) options in Sports Drop-down", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC51-BetSlipProd",
						"User must check the result(Data) of ALL Radio Button In Singleodd",
						"check the result(Data) of ALL Radio Button In Singleodd", "Fail");

				report.detailsAppend("TC52-BetSlipProd",
						"User must Verify the result(Data) options in Sports Drop-down",
						"erify the result(Data) options in Sports Drop-down", "Fail");
			}

			try {
				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("AllRadioButton"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC53-BetSlipProd", "User must check the result(Data) of ALL Radio Button",
						"check the result(Data) of ALL Radio Button", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC53-BetSlipProd", "User must check the result(Data) of ALL Radio Button",
						"check the result(Data) of ALL Radio Button", "Fail");
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SettledBets"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SettledBets"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC55-BetSlipProd",
						"User must check functionality of Hide Losses  togglebutton when its off",
						"check functionality of Hide Losses  togglebutton when its off", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC55-BetSlipProd",
						"User must check functionality of Hide Losses  togglebutton when its off",
						"check functionality of Hide Losses  togglebutton when its off", "Fail");

			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SettledBets"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("HideLossesCheckBox"))).click();
				Thread.sleep(3000);
			} catch (Exception e) {
				System.out.println(e);
			}

			Thread.sleep(3000);
			report.detailsAppend("TC54-BetSlipProd",
					"User must check functionality of Hide Losses  togglebutton when its on",
					"check functionality of Hide Losses  togglebutton when its on", "Pass");

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
				Thread.sleep(3000);
			} catch (Exception e) {
				webdriver.navigate().refresh();
			}

			Thread.sleep(3000);
			WebElement BetDD = webdriver.findElement(By.xpath(XpathMap.get("BetDropdown")));
			Actions actionbox1 = new Actions(webdriver);
			actionbox1.moveToElement(BetDD).perform();
			JavascriptExecutor jeBet = (JavascriptExecutor) webdriver;
			jeBet.executeScript("window.scrollBy(0,200)");
			Thread.sleep(3000);

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FreeBetCB"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("FreeBetCB"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC56-BetSlipProd",
						"check the functionality of Free bet checkbox when its selected.",
						"checked the functionality of Free bet checkbox when its selected.", "Pass");
				Thread.sleep(3000);
			} catch (Exception e) {
				report.detailsAppend("TC56-BetSlipProd",
						"check the functionality of Free bet checkbox when its selected.",
						"checked the functionality of Free bet checkbox its not selected bec no balance", "Fail");
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SportBonusCheckBox"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SportBonusCheckBox"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC57-BetSlipProd",
						"check the functionality of Sport Bonus checkbox when its selected.",
						"checked the functionality of Sport Bonus checkbox when its selected.", "Pass");
				Thread.sleep(3000);

			} catch (Exception e) {

				report.detailsAppend("TC57-BetSlipProd",
						"check the functionality of Sport Bonus checkbox its selected.",
						"checked the functionality of Sport Bonus checkbox its not selected bec no balance", "Fail");
			}

			log.debug("Switch to default tab");
		} catch (Exception e) {

			report.detailsAppend("TC54-BetSlipProd",
					"User must check functionality of Hide Losses  togglebutton when its on",
					"check functionality of Hide Losses  togglebutton when its on", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

///////////////////////////////////////////               VUVUZELA PROD SOCCER / BET BOOK ZA NG REGIONS        ////////////////////////////////////////////////////////

	// TC-1 to 6 (SB) @Author: AS66528//
	// To Verify that User should able to navigate on Sport vertical
	public boolean SB_SportVerticalVisible(Desktop_HTML_Report report) {

		try {
			try {
				webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed());
				System.out.print(" navigate on Sport vertical\n ");

				report.detailsAppend("TC1-Soccer_BetBook",
						"user should check Verify that User should able to navigate on Sport vertical",
						"Checked Verify that User able to navigate on Sport vertical", "Pass");

				report.detailsAppend("TC2-Soccer_BetBook", "user should check for Multiple sport event list.",
						"Checked for Multiple sport event list.", "Pass");

				Thread.sleep(3000);
				Actions action = new Actions(webdriver);
				WebElement we = webdriver.findElement(By.xpath("//*[@id=\"nav-link-container\"]//div/div/div[3]"));
				action.moveToElement(we).build().perform();

				report.detailsAppend("TC3-Soccer_BetBook",
						"Check mouse hovering property for Multiple sport event list.",
						"Checked mouse hovering property Visibled for Multiple sport event list.", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC1-Soccer_BetBook",
						"user should check Verify that User should able to navigate on Sport vertical",
						"Checked Verify that User Not able to navigate on Sport vertical", "Fail");

				report.detailsAppend("TC2-Soccer_BetBook", "user should check for Multiple sport event list.",
						"Checked for Multiple sport event Not list.", "Fail");

				report.detailsAppend("TC3-Soccer_BetBook",
						"Check mouse hovering property for Multiple sport event list.",
						"Checked mouse hovering Not property Visibled for Multiple sport event list.", "Fail");
				return false;
			}

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(3000);
			JavascriptExecutor js = (JavascriptExecutor) webdriver;
			js.executeScript(
					"window.onbeforeunload = function() { return Are you sure you want to leave this page?; };");
			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("RightArrowBtnInEvents"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("RightArrowBtnInEvents"))).click();
			System.out.print(" Right brackets  on Sport vertical clicked\n ");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("LeftArrowBtnInEvents"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("LeftArrowBtnInEvents"))).click();
			System.out.print(" Left brackets  on Sport vertical clicked\n ");
			Thread.sleep(3000);

			report.detailsAppend("TC4-Soccer_BetBook",
					"Verify that user should able to navigate on left and right side of the list by clicking on angle brackets",
					"Verified user able to navigate on left and right side of the list by clicking on angle brackets",
					"Pass");

			Thread.sleep(3000);
			report.detailsAppend("TC5-Soccer_BetBook",
					"Check user should able to see \"Top Leagues\" header bar below sport event in the list.",
					"Checked user able to seen \"Top Leagues\" header bar below sport event in the list", "Pass");

			report.detailsAppend("TC6-Soccer_BetBook",
					"Check user should able to see event filters such as \"Live\",\"Highlights\",\"Upcoming\",\"Outrights\"",
					"Checked user able to seen event filters such as \"Live\",\"Highlights\",\"Upcoming\",\"Outrights\"",
					"Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {

			report.detailsAppend("TC4-Soccer_BetBook",
					"Verify that user should able to navigate on left and right side of the list by clicking on angle brackets",
					"Verified user Not able to navigate on left and right side of the list by clicking on angle brackets",
					"Fail");

			report.detailsAppend("TC5-Soccer_BetBook",
					"Check user should able to see \"Top Leagues\" header bar below sport event in the list.",
					"Checked user able to seen \"Top Leagues\" header bar below sport event in the list", "Fail");

			report.detailsAppend("TC6-Soccer_BetBook",
					"Check user should able to see event filters such as \"Live\",\"Highlights\",\"Upcoming\",\"Outrights\"",
					"Checked user Not able to seen event filters such as \"Live\",\"Highlights\",\"Upcoming\",\"Outrights\"",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

	// TC-7-20 (SB) @Author: AS66528//
	// To Verify that User should able to navigate Highlights button clicked on
	// Sport vertical
	public boolean SB_HighlightsEvents(Desktop_HTML_Report report) {

		try {
			try {
				webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).click();
				System.out.print(" Highlights button clicked on Sport vertical\n ");

				report.detailsAppend("TC7-Soccer_BetBook",
						"user should check when user select \"Highlights\" Section for Sport then Highlights section getting open or not",
						"checked when selecting \"Highlights\" Section for Sport then Highlights section getting opened",
						"Pass");

				Thread.sleep(3000);
				report.detailsAppend("TC8-Soccer_BetBook",
						"Verify user should able to see \"League\",\"Bet type\",\"Odds\", \"Date\" and Lightning Icon selection field",
						"Verified user able to seen \"League\",\"Bet type\",\"Odds\", \"Date\" and Lightning Icon selection field",
						"Pass");

				Thread.sleep(3000);
				report.detailsAppend("TC9-Soccer_BetBook",
						"Verify \"League\" filter  with Drop Down icon with by default 0 count ",
						"Verified \"League\" filter  with Drop Down icon with by default 0 count ", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC7-Soccer_BetBook",
						"user should check when user select \"Highlights\" Section for Sport then Highlights section getting open or not",
						"checked when Not selecting \"Highlights\" Section for Sport then Highlights section getting opened",
						"Fail");

				report.detailsAppend("TC8-Soccer_BetBook",
						"Verify user should able to see \"League\",\"Bet type\",\"Odds\", \"Date\" and Lightning Icon selection field",
						"Verified user Not able to seen \"League\",\"Bet type\",\"Odds\", \"Date\" and Lightning Icon selection field",
						"Fail");

				report.detailsAppend("TC9-Soccer_BetBook",
						"Verify \"League\" filter  with Drop Down icon with by default 0 count ",
						"Verified Not \"League\" filter  with Drop Down icon with by default 0 count ", "Fail");

				return false;
			}

			Thread.sleep(3000);
			WebElement LeagueDD = webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD")));
			Actions act1 = new Actions(webdriver);
			act1.moveToElement(LeagueDD).perform();
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			je.executeScript("window.scrollBy(0,340)");
			Thread.sleep(3000);

			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).click();
				System.out.print(" League dropdown button clicked below higlights\n ");

				report.detailsAppend("TC10-Soccer_BetBook",
						"Verify user should able to see Countries and Tournament and Scroll bar.",
						"Verified user able to see Countries and Tournament and Scroll bar.", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC10-Soccer_BetBook",
						"Verify user should able to see Countries and Tournament and Scroll bar.",
						"Verified user Not able to see Countries and Tournament and Scroll bar.", "Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				WebElement CountryL1 = webdriver.findElement(By.xpath(XpathMap.get("13thCountryInLeagueDD")));
				Actions act2 = new Actions(webdriver);
				act2.moveToElement(CountryL1).perform();
				Thread.sleep(3000);

				WebElement CountryL2 = webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD")));
				Actions act3 = new Actions(webdriver);
				act3.moveToElement(CountryL2).perform();
				Thread.sleep(3000);

				report.detailsAppend("TC11-Soccer_BetBook",
						"Check Click and hold scroll Bar and move at Up side (Scroll Up) ",
						"Checked Click and hold scroll Bar and move at Up side (Scroll Up) ", "Pass");

				Thread.sleep(3000);
				act1.moveToElement(LeagueDD).perform();
				je.executeScript("window.scrollBy(0,350)");
				Thread.sleep(3000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).click();
				System.out.print("1st county in League dropdown button clicked\n ");
				Thread.sleep(3000);
				report.detailsAppend("TC12-Soccer_BetBook", "Check if Leagues are visible under each Country",
						"Checked that Leagues are visible under each Country", "Pass");

				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).click();
				System.out.print("1st county in League dropdown button again clicked\n ");
				Thread.sleep(3000);
				report.detailsAppend("TC13-Soccer_BetBook",
						"Check user should able to hide the Leagues list when we double click(again Click) on the selected Country ",
						"Checked user able to hide the Leagues list when double click(again Click) on the selected Country ",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC11-Soccer_BetBook",
						"Check Click and hold scroll Bar and move at Up side (Scroll Up) ",
						"Checked Not Click and hold scroll Bar and Not move at Up side (Scroll Up) ", "Fail");

				report.detailsAppend("TC12-Soccer_BetBook", "Check if Leagues are visible under each Country",
						"Checked that Leagues are Not visible under each Country", "Fail");

				report.detailsAppend("TC13-Soccer_BetBook",
						"Check user should able to hide the Leagues list when we double click(again Click) on the selected Country ",
						"Checked user Not able to hide the Leagues list when double click(again Click) on the selected Country ",
						"Fail");
				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC14-Soccer_BetBook",
						"check whether for  \"Highlights\" , after clicking on Highlights the color of Highlights bar should get converted into dark grey color ",
						"checked for \"Highlights\" , after clicking on Highlights the color of Highlights bar get converted into dark grey color ",
						"Pass");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).isDisplayed());
				report.detailsAppend("TC15-Soccer_BetBook",
						"check whether user should able to see same country / tournament with there flag after click on  all countries / tournament ",
						"check user able to seen same country / tournament with there flag after click on  all countries / tournament ",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC14-Soccer_BetBook",
						"check whether for  \"Highlights\" , after clicking on Highlights the color of Highlights bar should get converted into dark grey color ",
						"checked for \"Highlights\"  Not clicking on Highlights the color of Highlights bar get converted into dark grey color ",
						"Fail");

				report.detailsAppend("TC15-Soccer_BetBook",
						"check whether user should able to see same country / tournament with there flag after click on  all countries / tournament ",
						"check user Not able to seen same country / tournament with there flag after click on  all countries / tournament ",
						"Fail");
				return false;
			}

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).click();
			System.out.print(" League dropdown button clicked below higlights\n ");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).click();
			System.out.print("1st county in League dropdown button clicked\n ");
			Thread.sleep(3000);
			Actions action = new Actions(webdriver);
			WebElement le = webdriver.findElement(By.xpath(XpathMap.get("1stLeagueunderCountry")));
			action.moveToElement(le).build().perform();

			report.detailsAppend("TC16-Soccer_BetBook",
					"check  whether mouse hovering property on All Leagues in country / tournament",
					"check  whether mouse hovering property on All Leagues in country / tournament", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("1stLeagueunderCountry"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC17-Soccer_BetBook", "check whether user is able to select the League",
					"checked user able to select the League", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("1stLeagueunderCountry"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC18-Soccer_BetBook", "check whether user is able to deselect the League",
					"checked user able to deselect the League", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("1stLeagueunderCountry"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC19-Soccer_BetBook",
					"check whether we select the leagues the Count infront of \"Leugue\" should be increasing as selecting the leagues.",
					"checked user selected the leagues the Count infront of \"Leugue\" be increasing as selecting the leagues.",
					"Pass");

			webdriver.findElement(By.xpath(XpathMap.get("1stLeagueunderCountry"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC20-Soccer_BetBook",
					"check whether we deselect the leagues the Count infront of \"Leugue\" should be decreasing as deselecting the leagues.",
					"checked user deselect the leagues the Count infront of \"Leugue\" be decreasing as deselecting the leagues.",
					"Pass");

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("1stLeagueunderCountry"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).click();
			Thread.sleep(3000);
			log.debug("Switch to default tab");

		} catch (Exception e) {

			report.detailsAppend("TC16-Soccer_BetBook",
					"check whether mouse hovering property on All Leagues in country / tournament",
					"check Not mouse hovering property on All Leagues in country / tournament", "Fail");

			report.detailsAppend("TC17-Soccer_BetBook", "check whether user is able to select the League",
					"checked user Not able to select the League", "Fail");

			report.detailsAppend("TC18-Soccer_BetBook", "check whether user is able to deselect the League",
					"checked user Not able to deselect the League", "Fail");

			report.detailsAppend("TC19-Soccer_BetBook",
					"check whether we select the leagues the Count infront of \"Leugue\" should be increasing as selecting the leagues.",
					"checked user Not selected the leagues the Count infront of \"Leugue\" be Not increasing as selecting the leagues.",
					"Fail");

			report.detailsAppend("TC20-Soccer_BetBook",
					"check whether we deselect the leagues the Count infront of \"Leugue\" should be decreasing as deselecting the leagues.",
					"checked user Not deselect the leagues the Count infront of \"Leugue\" be Not decreasing as deselecting the leagues.",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

	// TC-21-34 (SB) @Author: AS66528//
	// To Verify that User should able to navigate Upcoming Button, click on Sport
	// vertical
	public boolean SB_UpcomingEvents(Desktop_HTML_Report report) {

		try {
			try {
				webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).click();
				System.out.print(" Upcoming button clicked on Sport vertical\n ");

				report.detailsAppend("TC21-Soccer_BetBook",
						"user should check when select \"Upcoming\" Section for Sport then Upcoming section getting open or not",
						"checked when selecting \"Upcoming\" Section for Sport then Upcoming section getting opened",
						"Pass");

				Thread.sleep(3000);
				report.detailsAppend("TC22-Soccer_BetBook",
						"Verify user should able to see \"League\",\"Bet type\",\"Odds\", \"Date\" and Lightning Icon selection field",
						"Verified user able to seen \"League\",\"Bet type\",\"Odds\", \"Date\" and Lightning Icon selection field",
						"Pass");

				Thread.sleep(3000);
				report.detailsAppend("TC23-Soccer_BetBook",
						"Verify \"League\" filter  with Drop Down icon with by default 0 count ",
						"Verified \"League\" filter  with Drop Down icon with by default 0 count ", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC21-Soccer_BetBook",
						"user should check when user select \"Highlights\" Section for Sport then Highlights section getting open or not",
						"checked when Not selecting \"Highlights\" Section for Sport then Highlights section getting opened",
						"Fail");

				report.detailsAppend("TC22-Soccer_BetBook",
						"Verify user should able to see \"League\",\"Bet type\",\"Odds\", \"Date\" and Lightning Icon selection field",
						"Verified user Not able to seen \"League\",\"Bet type\",\"Odds\", \"Date\" and Lightning Icon selection field",
						"Fail");

				report.detailsAppend("TC23-Soccer_BetBook",
						"Verify \"League\" filter  with Drop Down icon with by default 0 count ",
						"Verified Not \"League\" filter  with Drop Down icon with by default 0 count ", "Fail");
				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).click();
				System.out.print(" League dropdown button clicked below higlights\n ");

				report.detailsAppend("TC24-Soccer_BetBook",
						"Verify user should able to see Countries and Tournament and Scroll bar.",
						"Verified user able to see Countries and Tournament and Scroll bar.", "Pass");

				Thread.sleep(3000);
				WebElement CountryL1 = webdriver.findElement(By.xpath(XpathMap.get("13thCountryInLeagueDD")));
				Actions act2 = new Actions(webdriver);
				act2.moveToElement(CountryL1).perform();
				Thread.sleep(3000);

				WebElement CountryL2 = webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD")));
				Actions act3 = new Actions(webdriver);
				act3.moveToElement(CountryL2).perform();
				Thread.sleep(3000);

				report.detailsAppend("TC25-Soccer_BetBook",
						"Check Click and hold scroll Bar and move at Up side (Scroll Up) ",
						"Checked Click and hold scroll Bar and move at Up side (Scroll Up) ", "Pass");

				Thread.sleep(3000);
				WebElement LeagueDD = webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD")));
				Actions act1 = new Actions(webdriver);
				act1.moveToElement(LeagueDD).perform();
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,330)");
				Thread.sleep(3000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).click();
				System.out.print("1st county in League dropdown button clicked\n ");
				Thread.sleep(3000);
				report.detailsAppend("TC26-Soccer_BetBook", "Check if Leagues are visible under each Country",
						"Checked that Leagues are visible under each Country", "Pass");

				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).click();
				System.out.print("1st county in League dropdown button again clicked\n ");
				Thread.sleep(3000);
				report.detailsAppend("TC27-Soccer_BetBook",
						"Check user should able to hide the Leagues list when we double click(again Click) on the selected Company ",
						"Checked user able to hide the Leagues list when double click(again Click) on the selected Company ",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC24-Soccer_BetBook",
						"Verify user should able to see Countries and Tournament and Scroll bar.",
						"Verified user Not able to see Countries and Tournament and Scroll bar.", "Fail");

				report.detailsAppend("TC25-Soccer_BetBook",
						"Check Click and hold scroll Bar and move at Up side (Scroll Up) ",
						"Checked Not Click and hold scroll Bar and Not move at Up side (Scroll Up) ", "Fail");

				report.detailsAppend("TC26-Soccer_BetBook", "Check if Leagues are visible under each Country",
						"Checked that Leagues are Not visible under each Country", "Fail");

				report.detailsAppend("TC27-Soccer_BetBook",
						"Check user should able to hide the Leagues list when we double click(again Click) on the selected Company ",
						"Checked user Not able to hide the Leagues list when double click(again Click) on the selected Company ",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC28-Soccer_BetBook",
						"check whether for  \"Upcoming\" , after clicking on Upcoming the color of Upcoming bar should get converted into dark grey color ",
						"checked for \"Upcoming\" , after clicking on Upcoming the color of Upcoming bar get converted into dark grey color ",
						"Pass");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).isDisplayed());
				report.detailsAppend("TC29-Soccer_BetBook",
						"check whether user should able to see same country / tournament with there flag after click on  all countries / tournament ",
						"check user able to seen same country / tournament with there flag after click on  all countries / tournament ",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC28-Soccer_BetBook",
						"check whether for  \"Upcoming\" , after clicking on Upcoming the color of Upcoming bar should get converted into dark grey color ",
						"checked for \"Upcoming\"  Not clicking on Upcoming the color of Upcoming bar get converted into dark grey color ",
						"Fail");

				report.detailsAppend("TC29-Soccer_BetBook",
						"check whether user should able to see same country / tournament with there flag after click on  all countries / tournament ",
						"check user Not able to seen same country / tournament with there flag after click on  all countries / tournament ",
						"Fail");
				return false;
			}

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).click();
			System.out.print(" League dropdown button clicked below higlights\n ");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).click();
			System.out.print("1st county in League dropdown button clicked\n ");
			Thread.sleep(3000);
			Actions action = new Actions(webdriver);
			WebElement le = webdriver.findElement(By.xpath(XpathMap.get("1stLeagueunderCountry")));
			action.moveToElement(le).build().perform();

			report.detailsAppend("TC30-Soccer_BetBook",
					"check whether user should able to see same country / tournament with there flag after click on all countries / tournament ",
					"check whether user able to see same country / tournament with there flag after click on all countries / tournament ",
					"Pass");

			webdriver.findElement(By.xpath(XpathMap.get("1stLeagueunderCountry"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC31-Soccer_BetBook", "check whether user is able to select the League",
					"checked user able to select the League", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("1stLeagueunderCountry"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC32-Soccer_BetBook", "check whether user is able to deselect the League",
					"checked user able to deselect the League", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("1stLeagueunderCountry"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC33-Soccer_BetBook",
					"check whether we select the leagues the Count infront of \"Leugue\" should be increasing as selecting the leagues.",
					"checked user selected the leagues the Count infront of \"Leugue\" be increasing as selecting the leagues.",
					"Pass");

			webdriver.findElement(By.xpath(XpathMap.get("1stLeagueunderCountry"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC34-Soccer_BetBook",
					"check whether we deselect the leagues the Count infront of \"Leugue\" should be decreasing as deselecting the leagues.",
					"checked user deselect the leagues the Count infront of \"Leugue\" be decreasing as deselecting the leagues.",
					"Pass");

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("1stLeagueunderCountry"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).click();
			Thread.sleep(3000);
			log.debug("Switch to default tab");

		} catch (Exception e) {

			report.detailsAppend("TC30-Soccer_BetBook",
					"check whether user should able to see same country / tournament with there flag after click on all countries / tournament ",
					"check whether user Not able to see same country / tournament with there flag after click on all countries / tournament ",
					"Fail");

			report.detailsAppend("TC31-Soccer_BetBook", "check whether user is able to select the League",
					"checked user Not able to select the League", "Fail");

			report.detailsAppend("TC32-Soccer_BetBook", "check whether user is able to deselect the League",
					"checked user Not able to deselect the League", "Fail");

			report.detailsAppend("TC33-Soccer_BetBook",
					"check whether we select the leagues the Count infront of \"Leugue\" should be increasing as selecting the leagues.",
					"checked user Not selected the leagues the Count infront of \"Leugue\" be Not increasing as selecting the leagues.",
					"Fail");

			report.detailsAppend("TC34-Soccer_BetBook",
					"check whether we deselect the leagues the Count infront of \"Leugue\" should be decreasing as deselecting the leagues.",
					"checked user Not deselect the leagues the Count infront of \"Leugue\" be Not decreasing as deselecting the leagues.",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

	// TC-35-40 (SB) @Author: AS66528//
	// To Verify that User should able to navigate Highlights button and Leadues DD
	// Clicked
	public boolean SB_HighlightsLeaguesDD(Desktop_HTML_Report report) {

		try {

			try {
				webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).click();
				System.out.print(" Highlights button clicked on Sport vertical\n ");
				Thread.sleep(3000);
				report.detailsAppend("TC35-Soccer_BetBook",
						"Verify that we havent selected any league for the league filter; in that case,then count in front of League should be zero (0).",
						"Verified we havent selected any league for league filter; then count in front of League be zero (0).",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC35-Soccer_BetBook",
						"Verify that we havent selected any league for the league filter; in that case,then count in front of League should be zero (0).",
						"Verified we havent selected any league for league filter; then count in front of League Not be zero (0).",
						"Fail");

				return false;
			}

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).click();
			System.out.print(" League dropdown button clicked below higlights\n ");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).click();
			System.out.print("1st county in League dropdown button clicked\n ");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stLeagueunderCountry"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("1stLeagueunderCountry"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).click();

			Thread.sleep(3000);
			WebElement LeagueDD = webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD")));
			Actions act1 = new Actions(webdriver);
			act1.moveToElement(LeagueDD).perform();
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			je.executeScript("window.scrollBy(0,500)");
			Thread.sleep(3000);

			report.detailsAppend("TC36-Soccer_BetBook",
					"Verify that if the league count more than 0  (indicating that  league is selected), then the Reset option should be displayed last after clicking on the League Filter.",
					"Verified if the league count more than 0  (indicating that  league is selected), then the Reset option should be displayed last after clicking on the League Filter.",
					"Pass");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("LeaguesDDApplyBtn"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("LeaguesDDApplyBtn"))).click();
			Thread.sleep(3000);

			report.detailsAppend("TC37-Soccer_BetBook",
					"check whether if we click on the Apply button after selecting any league, then that particular league should be displayed.",
					"checked if we click on Apply button after selecting any league, then that particular league be displayed.",
					"Pass");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).click();
			System.out.print(" League dropdown button clicked below higlights\n ");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).click();
			System.out.print("1st county in League dropdown button clicked\n ");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stLeagueunderCountry"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("1stLeagueunderCountry"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).click();

			Thread.sleep(3000);
			act1.moveToElement(LeagueDD).perform();
			je.executeScript("window.scrollBy(0,500)");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("LeaguesDDResetBtn"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("LeaguesDDResetBtn"))).click();
			Thread.sleep(3000);

			report.detailsAppend("TC38-Soccer_BetBook",
					"check whether if we click on the Reset button after selecting any league, then the League Filter should be reset.",
					"checked if we click on Reset button after selecting any league, then the League Filter be reset.",
					"Pass");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).click();
			System.out.print(" League dropdown button clicked below higlights\n ");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).click();
			System.out.print("1st county in League dropdown button clicked\n ");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stLeagueunderCountry"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("1stLeagueunderCountry"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).click();

			Thread.sleep(3000);
			act1.moveToElement(LeagueDD).perform();
			je.executeScript("window.scrollBy(0,500)");
			Thread.sleep(3000);

			Thread.sleep(3000);
			Actions action = new Actions(webdriver);
			WebElement le = webdriver.findElement(By.xpath(XpathMap.get("LeaguesDDResetBtn")));
			action.moveToElement(le).build().perform();
			Thread.sleep(3000);
			report.detailsAppend("TC39-Soccer_BetBook",
					"To check whether When we hover over Reset,the cursor should change to a hand cursor, and the color of Reset should change to green.",
					"checked When we hover over Reset, the cursor change to a hand cursor, and the color of Reset should change to green.",
					"Pass");

			Thread.sleep(3000);
			act1.moveToElement(LeagueDD).perform();
			je.executeScript("window.scrollBy(0,-500)");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stLeagueMatchinHomepage"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("1stLeagueMatchinHomepage"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC40-Soccer_BetBook",
					"Check whether if we open the league and click outside the league list box, then the list should be closed.",
					"Check whether we open the league and click outside the league list box, then the list be closed.",
					"Pass");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).click();
			System.out.print(" League dropdown button clicked below higlights\n ");
			Thread.sleep(3000);

			act1.moveToElement(LeagueDD).perform();
			je.executeScript("window.scrollBy(0,500)");
			Thread.sleep(3000);

			webdriver.findElement(By.xpath(XpathMap.get("LeaguesDDResetBtn"))).click();
			Thread.sleep(3000);
			log.debug("Switch to default tab");

		} catch (Exception e) {

			report.detailsAppend("TC36-Soccer_BetBook",
					"Verify that if the league count more than 0  (indicating that league is selected), then the Reset option should be displayed last after clicking on the League Filter.",
					"Verified if the league count more than 0 (indicating that league is selected), then the Reset option should Not displayed last after clicking on the League Filter.",
					"Fail");

			report.detailsAppend("TC37-Soccer_BetBook",
					"check whether if we click on the Apply button after selecting any league, then that particular league should be displayed.",
					"checked if we click on Apply button after selecting any league, then that particular league Not be displayed.",
					"Fail");

			report.detailsAppend("TC38-Soccer_BetBook",
					"check whether if we click on the Reset button after selecting any league, then the League Filter should be reset.",
					"checked that Reset button not clicked after selecting any league, then the League Filter Not reset.",
					"Fail");

			report.detailsAppend("TC39-Soccer_BetBook",
					"Check user should able to hide the Leagues list when we double click(again Click) on the selected Company ",
					"Checked user able to hide the Leagues list when double click not click on the selected Company ",
					"Fail");

			report.detailsAppend("TC40-Soccer_BetBook",
					"Check whether if we open the league and click outside the league list box, then the list should be closed.",
					"Check whether we open the league and Not click outside the league list box, then the list Not be closed.",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

	// TC-41-51 (SB) @Author: AS66528//
	// To Verify that User should able to navigate Highlights button and BetType DD
	// clicked

	public boolean SB_HighlightsBetTypeDD(Desktop_HTML_Report report) throws InterruptedException {

		try {
			try {
				webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).click();
				System.out.print(" Highlights button clicked on Sport vertical\n ");

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
				System.out.print(" BetType DD button clicked on Sport vertical\n ");

				report.detailsAppend("TC41-Soccer_BetBook",
						"Verify that user should able click on \"Bet Type\" filter/Dropdown icon.",
						"Verify user able to click on \"Bet Type\" filter/Dropdown icon.", "Pass");

				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("MatchResultInBetTypeDD"))).isDisplayed());
				System.out.print("DD list in BetType dropdown button visible\n ");
				Thread.sleep(3000);
				report.detailsAppend("TC42-Soccer_BetBook",
						"user should able to see Bet Types List -Match Result(1X2),Double Chance , ToQualify, Over/Unders, Draw no Bet, Next Goal",
						"user able to seen Bet Types List -Match Result(1X2),Double Chance , ToQualify, Over/Unders, Draw no Bet, Next Goal",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC41-Soccer_BetBook",
						"Verify that user should able click on \"Bet Type\" filter/Dropdown icon.",
						"Verify user Not able to click on \"Bet Type\" filter/Dropdown icon.", "Fail");

				report.detailsAppend("TC42-Soccer_BetBook",
						"user should able to see Bet Types List -Match Result(1X2),Double Chance , ToQualify, Over/Unders, Draw no Bet, Next Goal",
						"user Not able to seen Bet Types List -Match Result(1X2),Double Chance , ToQualify, Over/Unders, Draw no Bet, Next Goal",
						"Fail");

				return false;
			}

			try {
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("MatchResultInBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("MatchResultInBetTypeDD"))).click();
				System.out.print("Bet Type -Match Result(1X2) option is clicked\n ");

				Thread.sleep(3000);
				WebElement BetTypeDD = webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD")));
				Actions act1 = new Actions(webdriver);
				act1.moveToElement(BetTypeDD).perform();
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,200)");

				Thread.sleep(3000);
				report.detailsAppend("TC43-Soccer_BetBook",
						"check whether user is able to select the Bet Type -Match Result(1X2)",
						"user abled to select the Bet Type -Match Result(1X2)", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC43-Soccer_BetBook",
						"check whether user is able to select the Bet Type -Match Result(1X2)",
						"user Not abled to select the Bet Type -Match Result(1X2)", "Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).click();
				System.out.print(" Highlights button clicked on Sport vertical\n ");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
				System.out.print(" BetType DD button clicked on Sport vertical\n ");

				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("DoubleChanceInBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("DoubleChanceInBetTypeDD"))).click();
				System.out.print("Bet Type -Double Chance option is clicked\n ");

				Thread.sleep(3000);
				WebElement BetTypeDD = webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD")));
				Actions act1 = new Actions(webdriver);
				act1.moveToElement(BetTypeDD).perform();
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,200)");
				Thread.sleep(3000);
				report.detailsAppend("TC44-Soccer_BetBook",
						"check whether user is able to select the Bet Type Double Chance",
						"user abled to select the Bet Type -Double Chance", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC44-Soccer_BetBook",
						"check whether user is able to select the Bet Type Double Chance",
						"user Not abled to select the Bet Type -Double Chance", "Fail");
				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).click();
				System.out.print(" Highlights button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
				System.out.print(" BetType DD button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("OversUndersInBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("OversUndersInBetTypeDD"))).click();
				System.out.print("Bet Type -Over/Unders option is clicked\n ");
				Thread.sleep(3000);
				Thread.sleep(3000);
				WebElement BetTypeDD = webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD")));
				Actions act1 = new Actions(webdriver);
				act1.moveToElement(BetTypeDD).perform();
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,200)");

				Thread.sleep(3000);
				report.detailsAppend("TC45-Soccer_BetBook",
						"check whether user is able to select the Bet Type -Over/Unders",
						"user abled to select the Bet Type -Over/Unders", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC45-Soccer_BetBook",
						"check whether user is able to select the Bet Type -Over/Unders",
						"user Not abled to select the Bet Type -Over/Unders", "Fail");
				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).click();
				System.out.print(" Highlights button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
				System.out.print(" BetType DD button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("DrawNoBetInBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("DrawNoBetInBetTypeDD"))).click();
				System.out.print("Bet Type -DrawNoBet option is clicked\n ");

				Thread.sleep(3000);
				WebElement BetTypeDD = webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD")));
				Actions act1 = new Actions(webdriver);
				act1.moveToElement(BetTypeDD).perform();
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,200)");
				Thread.sleep(3000);
				report.detailsAppend("TC46-Soccer_BetBook",
						"check whether user is able to select the Bet Type -DrawNoBet",
						"user abled to select the Bet Type -DrawNoBet", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC46-Soccer_BetBook",
						"check whether user is able to select the Bet Type -DrawNoBet",
						"user Not abled to select the Bet Type -DrawNoBet", "Fail");
				return false;
			}

			try {

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).click();
				System.out.print(" Highlights button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
				System.out.print(" BetType DD button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("NextGoalInBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("NextGoalInBetTypeDD"))).click();
				System.out.print("Bet Type -NextGoal option is clicked\n ");

				Thread.sleep(3000);
				WebElement BetTypeDD = webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD")));
				Actions act1 = new Actions(webdriver);
				act1.moveToElement(BetTypeDD).perform();
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,200)");
				Thread.sleep(3000);
				report.detailsAppend("TC47-Soccer_BetBook",
						"check whether user is able to select the Bet Type -NextGoal",
						"user abled to select the Bet Type -NextGoal", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC47-Soccer_BetBook",
						"check whether user is able to select the Bet Type -NextGoal",
						"user Not abled to select the Bet Type -NextGoal", "Fail");
				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).click();
				System.out.print(" Highlights button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
				System.out.print(" BetType DD button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HandicapInBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("HandicapInBetTypeDD"))).click();
				System.out.print("Bet Type -Handicap option is clicked\n ");
				Thread.sleep(3000);

				WebElement BetTypeDD = webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD")));
				Actions act1 = new Actions(webdriver);
				act1.moveToElement(BetTypeDD).perform();
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,200)");
				Thread.sleep(3000);

				report.detailsAppend("TC49-Soccer_BetBook",
						"check whether user is able to select the Bet Type Handicap",
						"user abled to select the Bet Type -Handicap", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC49-Soccer_BetBook",
						"check whether user is able to select the Bet Type -Handicap",
						"user Not abled to select the Bet Type Handicap", "Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).click();
				System.out.print(" Highlights button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
				System.out.print(" BetType DD button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("BothTeamstoScoreInBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("BothTeamstoScoreInBetTypeDD"))).click();
				System.out.print("Bet Type -BothTeamsToScore option is clicked\n ");

				Thread.sleep(3000);
				WebElement BetTypeDD = webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD")));
				Actions act1 = new Actions(webdriver);
				act1.moveToElement(BetTypeDD).perform();
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,320)");

				report.detailsAppend("TC50-Soccer_BetBook",
						"check whether user is able to select the Bet Type BothTeamsToScore",
						"user abled to select the Bet Type BothTeamsToScore", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC50-Soccer_BetBook",
						"check whether user is able to select the Bet Type -BothTeamsToScore",
						"user Not abled to select the Bet Type -BothTeamsToScore", "Fail");
				return false;
			}

			try {

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).click();
				System.out.print(" Highlights button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
				System.out.print(" BetType DD button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1x2InBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("1x2InBetTypeDD"))).click();
				System.out.print("Bet Type -1x2 option is clicked\n ");

				Thread.sleep(3000);
				WebElement BetTypeDD = webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD")));
				Actions act1 = new Actions(webdriver);
				act1.moveToElement(BetTypeDD).perform();
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,200)");
				Thread.sleep(3000);

				report.detailsAppend("TC51-Soccer_BetBook", "check whether user is able to select the Bet Type -1x2",
						"user abled to select the Bet Type -1x2", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC51-Soccer_BetBook", "check whether user is able to select the Bet Type -1x2",
						"user No abled to select the Bet Type -1x2", "Fail");
			}
			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).click();
			System.out.print(" Highlights button clicked on Sport vertical\n ");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
			System.out.print(" BetType DD button clicked on Sport vertical\n ");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("Handicap1x2InBetTypeDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("Handicap1x2InBetTypeDD"))).click();
			System.out.print("Bet Type -Handicap1x2 option is clicked\n ");
			Thread.sleep(3000);

			WebElement BetTypeDD = webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD")));
			Actions act1 = new Actions(webdriver);
			act1.moveToElement(BetTypeDD).perform();
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			je.executeScript("window.scrollBy(0,200)");
			Thread.sleep(3000);

			report.detailsAppend("TC48-Soccer_BetBook", "check whether user is able to select the Bet Type Handicap1x2",
					"user abled to select the Bet Type Handicap1x2", "Pass");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).click();
			System.out.print(" Highlights button clicked on Sport vertical\n ");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
			System.out.print(" BetType DD button clicked on Sport vertical\n ");

			Thread.sleep(3000);
			act1.moveToElement(BetTypeDD).perform();
			je.executeScript("window.scrollBy(0,200)");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ClearOptInBetTypeDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("ClearOptInBetTypeDD"))).click();
			System.out.print("In BetType DD Clear option is clicked\n ");
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).click();
			System.out.print(" Highlights button clicked on Sport vertical\n ");

			log.debug("Switch to default tab");

		} catch (Exception e) {

			report.detailsAppend("TC48-Soccer_BetBook", "check whether user is able to select the Bet Type Handicap1x2",
					"user Not abled to select the Bet Type Handicap1x2", "Fail");

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).click();
			System.out.print(" Highlights button clicked on Sport vertical\n ");
			Thread.sleep(3000);

			webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
			System.out.print(" BetType DD button clicked on Sport vertical\n ");

			Thread.sleep(3000);
			WebElement BetTypeDD = webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD")));
			Actions act1 = new Actions(webdriver);
			act1.moveToElement(BetTypeDD).perform();
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			je.executeScript("window.scrollBy(0,200)");
			Thread.sleep(3000);

			webdriver.findElement(By.xpath(XpathMap.get("ClearOptInBetTypeDD"))).click();
			System.out.print("In BetType DD Clear option is clicked\n ");

			return false;
		}

		return true;
	}

	// TC-52-57 (SB) @Author: AS66528//
	// To Verify that User should able to navigate UpComing button and Leadues DD
	// Clicked
	public boolean SB_UpcomingBetLeaguesDD(Desktop_HTML_Report report) {

		try {

			try {
				webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).click();
				System.out.print(" UpComing Button clicked on Sport vertical" + "\n");

				report.detailsAppend("TC52-Soccer_BetBook",
						"Verify that we havent selected any league for the league filter; in that case,then count in front of League should be zero (0).",
						"Verified we havent selected any league for league filter; then count in front of League be zero (0).",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC52-Soccer_BetBook",
						"Verify that we havent selected any league for the league filter; in that case,then count in front of League should be zero (0).",
						"Verified we havent selected any league for league filter; then count in front of League Not be zero (0).",
						"Fail");
				return false;
			}

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).click();
			System.out.print(" League dropdown button clicked below higlights\n ");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).click();
			System.out.print("1st county in League dropdown button clicked\n ");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stLeagueunderCountry"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("1stLeagueunderCountry"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).click();

			Thread.sleep(3000);
			WebElement LeagueDD = webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD")));
			Actions act1 = new Actions(webdriver);
			act1.moveToElement(LeagueDD).perform();
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			je.executeScript("window.scrollBy(0,500)");
			Thread.sleep(3000);

			report.detailsAppend("TC53-Soccer_BetBook",
					"Verify that if the league count more than 0 (indicating that  league is selected), then the Reset option should be displayed last after clicking on the League Filter.",
					"Verified if league count more than 0 (indicating that  league is selected), then the Reset option be displayed last after clicking on the League Filter.",
					"Pass");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("LeaguesDDApplyBtn"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("LeaguesDDApplyBtn"))).click();
			Thread.sleep(3000);

			report.detailsAppend("TC54-Soccer_BetBook",
					"check whether if we click on the Apply button after selecting any league, then that particular league should be displayed.",
					"checked if we click on Apply button after selecting any league, then that particular league be displayed.",
					"Pass");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).click();
			System.out.print(" League dropdown button clicked below higlights\n ");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).click();
			System.out.print("1st county in League dropdown button clicked\n ");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stLeagueunderCountry"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("1stLeagueunderCountry"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).click();

			Thread.sleep(3000);
			act1.moveToElement(LeagueDD).perform();
			je.executeScript("window.scrollBy(0,500)");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("LeaguesDDResetBtn"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("LeaguesDDResetBtn"))).click();
			Thread.sleep(3000);

			report.detailsAppend("TC55-Soccer_BetBook",
					"check whether if we click on the Reset button after selecting any league, then the League Filter should be reset.",
					"checked if we click on Reset button after selecting any league, then the League Filter be reset.",
					"Pass");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).click();
			System.out.print(" League dropdown button clicked below higlights\n ");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).click();
			System.out.print("1st county in League dropdown button clicked\n ");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stLeagueunderCountry"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("1stLeagueunderCountry"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).click();

			Thread.sleep(3000);
			act1.moveToElement(LeagueDD).perform();
			je.executeScript("window.scrollBy(0,500)");
			Thread.sleep(3000);

			Thread.sleep(3000);
			Actions action = new Actions(webdriver);
			WebElement le = webdriver.findElement(By.xpath(XpathMap.get("LeaguesDDResetBtn")));
			action.moveToElement(le).build().perform();
			Thread.sleep(3000);
			report.detailsAppend("TC56-Soccer_BetBook",
					"To check whether When we hover over Reset,the cursor should change to a hand cursor, and the color of Reset should change to green.",
					"checked When we hover over Reset, the cursor change to a hand cursor, and the color of Reset should change to green.",
					"Pass");

			Thread.sleep(3000);
			WebElement LeagueReset = webdriver.findElement(By.xpath(XpathMap.get("LeaguesDDResetBtn")));
			Actions LR = new Actions(webdriver);
			LR.moveToElement(LeagueReset).perform();
			JavascriptExecutor lr = (JavascriptExecutor) webdriver;
			lr.executeScript("window.scrollBy(0,-500)");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stLeagueMatchinHomepage"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("1stLeagueMatchinHomepage"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC57-Soccer_BetBook",
					"Check whether if we open the league and click outside the league list box, then the list should be closed.",
					"Check whether we open the league and click outside the league list box, then the list be closed.",
					"Pass");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).click();
			System.out.print(" League dropdown button clicked below higlights\n ");
			Thread.sleep(3000);

			act1.moveToElement(LeagueDD).perform();
			je.executeScript("window.scrollBy(0,500)");
			Thread.sleep(3000);

			webdriver.findElement(By.xpath(XpathMap.get("LeaguesDDResetBtn"))).click();
			Thread.sleep(3000);
			log.debug("Switch to default tab");

		} catch (Exception e) {

			report.detailsAppend("TC53-Soccer_BetBook",
					"Verify that if the league count more than 0  (indicating that league is selected), then the Reset option should be displayed last after clicking on the League Filter.",
					"Verified if the league count more than 0 (indicating that league is selected), then the Reset option should Not displayed last after clicking on the League Filter.",
					"Fail");

			report.detailsAppend("TC54-Soccer_BetBook",
					"check whether if we click on the Apply button after selecting any league, then that particular league should be displayed.",
					"checked if we click on Apply button after selecting any league, then that particular league Not be displayed.",
					"Fail");

			report.detailsAppend("TC55-Soccer_BetBook",
					"check whether if we click on the Reset button after selecting any league, then the League Filter should be reset.",
					"checked that Reset button not clicked after selecting any league, then the League Filter Not reset.",
					"Fail");

			report.detailsAppend("TC56-Soccer_BetBook",
					"Check user should able to hide the Leagues list when we double click(again Click) on the selected Company ",
					"Checked user able to hide the Leagues list when double click not click on the selected Company ",
					"Fail");

			report.detailsAppend("TC57-Soccer_BetBook",
					"Check whether if we open the league and click outside the league list box, then the list should be closed.",
					"Check whether we open the league and Not click outside the league list box, then the list Not be closed.",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

	// TC-58-70 (SB) @Author: AS66528//
	// To Verify that User should able to navigate Upcoming button and BetType DD
	// clicked

	public boolean SB_UpcomingBetTypeDD(Desktop_HTML_Report report) {

		try {
			try {

				webdriver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).click();
				System.out.print(" Upcoming button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
				System.out.print("In Upcoming button,BetType DD clicked on Sport vertical\n ");

				report.detailsAppend("TC58-Soccer_BetBook",
						"Verify that user should able click on \"Bet Type\" filter/Dropdown icon.",
						"Verify user able to click on \"Bet Type\" filter/Dropdown icon.", "Pass");

				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("MatchResultInBetTypeDD"))).isDisplayed());
				System.out.print("DD list in BetType dropdown button visible\n ");
				Thread.sleep(3000);
				report.detailsAppend("TC59-Soccer_BetBook",
						"user should able to see Bet Types List -Match Result(1X2),Double Chance , ToQualify, Over/Unders, Draw no Bet, Next Goal",
						"user able to seen Bet Types List -Match Result(1X2),Double Chance , ToQualify, Over/Unders, Draw no Bet, Next Goal",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC58-Soccer_BetBook",
						"Verify that user should able click on \"Bet Type\" filter/Dropdown icon.",
						"Verify user Not abled to click on \"Bet Type\" filter/Dropdown icon.", "Fail");

				report.detailsAppend("TC59-Soccer_BetBook",
						"user should able to see Bet Types List -Match Result(1X2),Double Chance , ToQualify, Over/Unders, Draw no Bet, Next Goal",
						"user Not abled to seen Bet Types List -Match Result(1X2),Double Chance , ToQualify, Over/Unders, Draw no Bet, Next Goal",
						"Fail");
				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("MatchResultInBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("MatchResultInBetTypeDD"))).click();
				System.out.print("Bet Type -Match Result(1X2) option is clicked\n ");

				Thread.sleep(3000);
				WebElement BetTypeDD = webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD")));
				Actions act1 = new Actions(webdriver);
				act1.moveToElement(BetTypeDD).perform();
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,200)");

				Thread.sleep(3000);
				report.detailsAppend("TC60-Soccer_BetBook",
						"check whether user is able to select the Bet Type -Match Result(1X2)",
						"user abled to select the Bet Type -Match Result(1X2)", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC60-Soccer_BetBook",
						"check whether user is able to select the Bet Type -Match Result(1X2)",
						"user Not abled to select the Bet Type -Match Result(1X2)", "Fail");
				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).click();
				System.out.print(" Upcoming button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
				System.out.print(" BetType DD button clicked on Sport vertical\n ");

				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("DoubleChanceInBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("DoubleChanceInBetTypeDD"))).click();
				System.out.print("Bet Type -Double Chance option is clicked\n ");

				Thread.sleep(3000);
				WebElement BetTypeDD = webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD")));
				Actions act1 = new Actions(webdriver);
				act1.moveToElement(BetTypeDD).perform();
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,200)");
				Thread.sleep(3000);
				report.detailsAppend("TC61-Soccer_BetBook",
						"check whether user is able to select the Bet Type Double Chance",
						"user abled to select the Bet Type -Double Chance", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC61-Soccer_BetBook",
						"check whether user is able to select the Bet Type Double Chance",
						"user Not abled to select the Bet Type -Double Chance", "Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).click();
				System.out.print(" Highlights button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
				System.out.print(" BetType DD button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("OversUndersInBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("OversUndersInBetTypeDD"))).click();
				System.out.print("Bet Type -Over/Unders option is clicked\n ");
				Thread.sleep(3000);
				WebElement BetTypeDD = webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD")));
				Actions act1 = new Actions(webdriver);
				act1.moveToElement(BetTypeDD).perform();
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,200)");

				Thread.sleep(3000);
				report.detailsAppend("TC62-Soccer_BetBook",
						"check whether user is able to select the Bet Type -Over/Unders",
						"user abled to select the Bet Type -Over/Unders", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC62-Soccer_BetBook",
						"check whether user is able to select the Bet Type -Over/Unders",
						"user Not abled to select the Bet Type -Over/Unders", "Fail");
				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).click();
				System.out.print(" Upcoming button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
				System.out.print(" BetType DD button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("DrawNoBetInBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("DrawNoBetInBetTypeDD"))).click();
				System.out.print("Bet Type -DrawNoBet option is clicked\n ");

				Thread.sleep(3000);
				WebElement BetTypeDD = webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD")));
				Actions act1 = new Actions(webdriver);
				act1.moveToElement(BetTypeDD).perform();
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,200)");
				Thread.sleep(3000);
				report.detailsAppend("TC63-Soccer_BetBook",
						"check whether user is able to select the Bet Type -DrawNoBet",
						"user abled to select the Bet Type -DrawNoBet", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC63-Soccer_BetBook",
						"check whether user is able to select the Bet Type -DrawNoBet",
						"user Not abled to select the Bet Type -DrawNoBet", "Fail");
				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).click();
				System.out.print(" Upcoming button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
				System.out.print(" BetType DD button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("NextGoalInBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("NextGoalInBetTypeDD"))).click();
				System.out.print("Bet Type -NextGoal option is clicked\n ");

				Thread.sleep(3000);
				WebElement BetTypeDD = webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD")));
				Actions act1 = new Actions(webdriver);
				act1.moveToElement(BetTypeDD).perform();
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,200)");
				Thread.sleep(3000);
				report.detailsAppend("TC64-Soccer_BetBook",
						"check whether user is able to select the Bet Type -NextGoal",
						"user abled to select the Bet Type -NextGoal", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC64-Soccer_BetBook",
						"check whether user is able to select the Bet Type -NextGoal",
						"user Not abled to select the Bet Type -NextGoal", "Fail");
				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).click();
				System.out.print(" Upcoming button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
				System.out.print(" BetType DD button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HandicapInBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("HandicapInBetTypeDD"))).click();
				System.out.print("Bet Type -Handicap option is clicked\n ");
				Thread.sleep(3000);

				WebElement BetTypeDD = webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD")));
				Actions act1 = new Actions(webdriver);
				act1.moveToElement(BetTypeDD).perform();
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,200)");
				Thread.sleep(3000);

				report.detailsAppend("TC66-Soccer_BetBook",
						"check whether user is able to select the Bet Type -Handicap",
						"user abled to select the Bet Type -Handicap", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC66-Soccer_BetBook",
						"check whether user is able to select the Bet Type -Handicap",
						"user Not abled to select the Bet Type -Handicap", "Fail");
				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).click();
				System.out.print(" Upcoming button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
				System.out.print(" BetType DD button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("BothTeamstoScoreInBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("BothTeamstoScoreInBetTypeDD"))).click();
				System.out.print("Bet Type -BothTeamsToScore option is clicked\n ");

				Thread.sleep(3000);
				WebElement BetTypeDD = webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD")));
				Actions act1 = new Actions(webdriver);
				act1.moveToElement(BetTypeDD).perform();
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,200)");

				report.detailsAppend("TC67-Soccer_BetBook",
						"check whether user is able to select the Bet Type -BothTeamsToScore",
						"user abled to select the Bet Type -BothTeamsToScore", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC67-Soccer_BetBook",
						"check whether user is able to select the Bet Type -BothTeamsToScore",
						"user Not abled to select the Bet Type -BothTeamsToScore", "Fail");
				return false;
			}

			try {

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).click();
				System.out.print(" Upcoming button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
				System.out.print(" BetType DD button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				WebElement BetTypeDD = webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD")));
				Actions act1 = new Actions(webdriver);
				act1.moveToElement(BetTypeDD).perform();
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,220)");
				Thread.sleep(3000);

				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("Handicap1x2InBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("Handicap1x2InBetTypeDD"))).click();
				System.out.print("Bet Type -Handicap1x2 option is clicked\n ");
				Thread.sleep(3000);

				report.detailsAppend("TC65-Soccer_BetBook",
						"check whether user is able to select the Bet Type Handicap1x2",
						"user abled to select the Bet Type Handicap1x2", "Pass");

			} catch (Exception e) {

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ClearOptInBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("ClearOptInBetTypeDD"))).click();
				System.out.print(" BetType DD button clicked on Sport vertical\n ");
				Thread.sleep(3000);
				report.detailsAppend("TC65-Soccer_BetBook",
						"check whether user is able to select the Bet Type Handicap1x2",
						"user Not abled to select the Bet Type Handicap1x2", "Fail");
				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).click();
				System.out.print(" Upcoming button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
				System.out.print(" BetType DD button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1x2InBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("1x2InBetTypeDD"))).click();
				System.out.print("Bet Type -1x2 option is clicked\n ");

				WebElement BetTypeDD = webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD")));
				Actions act1 = new Actions(webdriver);
				act1.moveToElement(BetTypeDD).perform();
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,200)");
				Thread.sleep(3000);

				report.detailsAppend("TC68-Soccer_BetBook", "check whether user is able to select the Bet Type -1x2",
						"user abled to select the Bet Type -1x2", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC68-Soccer_BetBook", "check whether user is able to select the Bet Type -1x2",
						"user Not abled to select the Bet Type -1x2", "Fail");

			}

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).click();
			System.out.print(" Upcoming button clicked on Sport vertical\n ");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
			System.out.print(" BetType DD button clicked on Sport vertical\n ");
			Thread.sleep(3000);

			WebElement BetTypeDD = webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD")));
			Actions act1 = new Actions(webdriver);
			act1.moveToElement(BetTypeDD).perform();
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			je.executeScript("window.scrollBy(0,200)");
			Thread.sleep(3000);

			WebElement ClearInBettype = webdriver.findElement(By.xpath(XpathMap.get("ClearOptInBetTypeDD")));
			Actions actClear = new Actions(webdriver);
			actClear.moveToElement(ClearInBettype).build().perform();

			report.detailsAppend("TC70-Soccer_BetBook", "check whether mouse hovering Action for Clear Button",
					" checked mouse hovering Action for Clear Button", "Pass");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ClearOptInBetTypeDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("ClearOptInBetTypeDD"))).click();
			System.out.print("In BetType DD Clear option is clicked\n ");
			Thread.sleep(3000);

			report.detailsAppend("TC69-Soccer_BetBook", "check whether user is able to select the Clear Button",
					"user abled to select the Clear Button", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {

			report.detailsAppend("TC69-Soccer_BetBook", "check whether user is able to select the Clear Button",
					"user Not abled to select the Clear Button", "Pass");

			report.detailsAppend("TC70-Soccer_BetBook", "check whether mouse hovering Action for Clear Button",
					" checked mouse Not hovering Action for Clear Button", "Pass");

			return false;
		}

		return true;
	}

	// TC-71 (SB) @Author: AS66528//
	// To Check whether if we open the Bet Type and click outside the Bet Types list
	// box, then the list should be closed.
	public boolean SB_HighlightsBetTypeDDClose(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).click();
			System.out.print(" Highlights button clicked on Sport vertical\n ");

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
			System.out.print(" BetType DD button clicked on Sport vertical\n ");
			Thread.sleep(3000);

			WebElement BetTypeDD = webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD")));
			Actions act1 = new Actions(webdriver);
			act1.moveToElement(BetTypeDD).perform();
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			je.executeScript("window.scrollBy(0,200)");

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stLeagueMatchinHomepage"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("1stLeagueMatchinHomepage"))).click();
			Thread.sleep(3000);

			report.detailsAppend("TC71-Soccer_BetBook",
					"To Check whether if we open the Bet Type and click outside the Bet Types list box, then the list should be closed.",
					"Checked if we open the Bet Type and click outside the Bet Types list box, then the list be closed.",
					"Pass");

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("1stLeagueMatchinHomepage"))).click();
			Thread.sleep(3000);

		} catch (Exception e) {
			report.detailsAppend("TC71-Soccer_BetBook",
					"To Check whether if we open the Bet Type and click outside the Bet Types list box, then the list should be closed.",
					"Check if we open the Bet Type and Not click outside the Bet Types list box, then the list not closed.",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-72-84 (SB) @Author: AS66528//
	// Verify that user should able click on "Odds" filter/Dropdown icon.
	public boolean SB_HighlightsOddsDD(Desktop_HTML_Report report) {

		try {

			try {
				webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).click();
				System.out.print(" Highlights button clicked on Sport vertical\n ");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD"))).click();
				System.out.print(" Odds dropdown button clicked below higlights\n ");
				Thread.sleep(3000);

				WebElement OddsDD = webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD")));
				Actions Oddsdd = new Actions(webdriver);
				Oddsdd.moveToElement(OddsDD).perform();
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,200)");
				Thread.sleep(3000);

				report.detailsAppend("TC72-Soccer_BetBook",
						"Verify that user should able click on \"Odds\" filter Dropdown icon.",
						"Verified user able to click on \"Odds\" filter Dropdown icon.", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC72-Soccer_BetBook",
						"Verify that user should able click on \"Odds\" filter Dropdown icon.",
						"Verified user Not able to click on \"Odds\" filter Dropdown icon.", "Fail");
				return false;
			}

			try {
				Thread.sleep(3000);
				WebElement OddsDDLeftArr = webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDLeftArrow")));
				Actions act1 = new Actions(webdriver);
				act1.moveToElement(OddsDDLeftArr).build().perform();
				Thread.sleep(3000);

				WebElement OddsDDRightArr = webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDRightArrow")));
				Actions act2 = new Actions(webdriver);
				act2.moveToElement(OddsDDRightArr).build().perform();
				Thread.sleep(3000);

				report.detailsAppend("TC73-Soccer_BetBook",
						"To check user should able to hover mouse on two Text Box selection for Odds ",
						"user checked able to hover mouse on two Text Box selection for Odds ", "Pass");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDLeftArrow"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDLeftArrow"))).click();
				System.out.print("1st textbox in Odds DD is clicked");
				Thread.sleep(3000);

				report.detailsAppend("TC74-Soccer_BetBook",
						"To check user should able to click on 1st Text Box selection for Odds",
						"checked user abled to click on 1st Text Box selection for Odds", "Pass");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDRightArrow"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDRightArrow"))).click();
				System.out.print("2nd textbox in Odds DD is clicked\n");
				Thread.sleep(3000);

				report.detailsAppend("TC75-Soccer_BetBook",
						"To check user should able to click on 2nd Text Box selection for Odds",
						"checked user abled to click on 2nd Text Box selection for Odds", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC73-Soccer_BetBook",
						"To check user should able to hover mouse on two Text Box selection for Odds ",
						"user checked Not able to hover mouse on two Text Box selection for Odds ", "Fail");

				report.detailsAppend("TC74-Soccer_BetBook",
						"To check user should able to click on 1st Text Box selection for Odds",
						"checked user Not abled to click on 1st Text Box selection for Odds", "Fail");

				report.detailsAppend("TC75-Soccer_BetBook",
						"To check user should able to click on 2nd Text Box selection for Odds",
						"checked user Not abled to click on 2nd Text Box selection for Odds", "Fail");
				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDLeftArrow"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDLeftArrow"))).click();
				System.out.print("1st textbox in Odds DD is clicked\n");
				Thread.sleep(3000);

				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("1stTextBoxOddsOptionSelect"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("1stTextBoxOddsOptionSelect"))).click();
				System.out.print(" selecting the odds from dd 1st text box\n");
				Thread.sleep(3000);

				report.detailsAppend("TC76-Soccer_BetBook",
						"check user should able select odd by clicking on Dropdown option on 1st Text Box selection for Odds ",
						"user checked able select odd by clicking on Dropdown option on 1st Text Box selection for Odds ",
						"Pass");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDRightArrow"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDRightArrow"))).click();
				System.out.print("2nd textbox in Odds DD is clicked \n");
				Thread.sleep(3000);

				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("2ndTextBoxOddsOptionSelect"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("2ndTextBoxOddsOptionSelect"))).click();
				System.out.print(" selecting the odds from dd 2nd text box \n");
				Thread.sleep(3000);

				report.detailsAppend("TC77-Soccer_BetBook",
						"check user should able select odd by clicking on Dropdown option on 2nd Text Box selection for Odds ",
						"user checked able select odd by clicking on Dropdown option on 2nd Text Box selection for Odds ",
						"Pass");

				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDClearBtn"))).click();
				System.out.print("Clear btn in odds dd is clicked \n");
				Thread.sleep(3000);

			} catch (Exception e) {

				report.detailsAppend("TC76-Soccer_BetBook",
						"check user should able select odd by clicking on Dropdown option on 1st Text Box selection for Odds ",
						"user checked Not able select odd by clicking on Dropdown option on 1st Text Box selection for Odds ",
						"Fail");

				report.detailsAppend("TC77-Soccer_BetBook",
						"check user should able select odd by clicking on Dropdown option on 2nd Text Box selection for Odds ",
						"user checked Not able select odd by clicking on Dropdown option on 2nd Text Box selection for Odds ",
						"Fail");

				return false;
			}

			try {
				WebElement OddsDD = webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD")));
				Actions Oddsdd = new Actions(webdriver);
				Oddsdd.moveToElement(OddsDD).perform();
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,200)");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD"))).click();
				System.out.print(" Odds dropdown button clicked below higlights\n ");
				Thread.sleep(3000);

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDLeftArrow"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDLeftArrow"))).sendKeys("2.0");
				System.out.print(" entering the odds value in 1st text box\n");
				Thread.sleep(3000);

				report.detailsAppend("TC78-Soccer_BetBook",
						"check user should able insert value by entering the available value in 1st Text Box selection for Odds",
						"user able insert value by entering the available value in 1st Text Box selection for Odds",
						"Pass");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDRightArrow"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDRightArrow"))).sendKeys("8.0");
				System.out.print(" entering the odds value in 2nd text box\n");
				Thread.sleep(3000);

				report.detailsAppend("TC79-Soccer_BetBook",
						"check user should able insert value by entering the available value in 2nd Text Box selection for Odds",
						"user able insert value by entering the available value in 2nd Text Box selection for Odds",
						"Pass");

				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDClearBtn"))).click();
				System.out.print("Clear btn in odds dd is clicked \n");
				Thread.sleep(3000);

			} catch (Exception e) {
				report.detailsAppend("TC78-Soccer_BetBook",
						"check user should able insert value by entering the available value in 1st Text Box selection for Odds",
						"user Not able insert value by entering the available value in 1st Text Box selection for Odds",
						"Fail");

				report.detailsAppend("TC79-Soccer_BetBook",
						"check user should able insert value by entering the available value in 1st Text Box selection for Odds",
						"user Not able insert value by entering the available value in 1st Text Box selection for Odds",
						"Fail");
				return false;
			}

			try {
				WebElement OddsDD = webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD")));
				Actions Oddsdd = new Actions(webdriver);
				Oddsdd.moveToElement(OddsDD).perform();
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,200)");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD"))).click();
				System.out.print(" Odds dropdown button clicked below higlights\n ");
				Thread.sleep(3000);

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDLeftArrow"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDLeftArrow"))).sendKeys("3.2");
				System.out.print(" entering the odds unavailable valuein 1st text box\n");
				Thread.sleep(3000);

				report.detailsAppend("TC80-Soccer_BetBook",
						"check user should not able insert value by entering the unavailable value value in 1st Text Box selection for Odds",
						"user not able insert value by entering the unavailable value value in 1st Text Box selection for Odds",
						"Pass");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDRightArrow"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDRightArrow"))).sendKeys("11.5");
				System.out.print(" entering the odds unavailable valuein 2nd text box\n");
				Thread.sleep(3000);

				report.detailsAppend("TC81-Soccer_BetBook",
						"check user should not able insert value by entering the unavailable value value in 2nd Text Box selection for Odds",
						"user not able insert value by entering the unavailable value value in 2nd Text Box selection for Odds",
						"Pass");

			} catch (Exception e) {

				report.detailsAppend("TC80-Soccer_BetBook",
						"check user should not able insert value by entering the unavailable value value in 1st Text Box selection for Odds",
						"user Not able insert value by entering the unavailable value value in 1st Text Box selection for Odds",
						"Fail");

				report.detailsAppend("TC81-Soccer_BetBook",
						"check user should not able insert value by entering the unavailable value value in 2nd Text Box selection for Odds",
						"user Not able insert value by entering the unavailable value value in 2nd Text Box selection for Odds",
						"Fail");
				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD"))).click();
				System.out.print(" clicking on 1st league match in homepage\n");
				Thread.sleep(3000);

				report.detailsAppend("TC84-Soccer_BetBook",
						"Verify that if we open the Odds and click outside the Odds Text box, then the odds should be closed.",
						"Verified if we open the Odds and click outside the Odds Text box,then the odds be closed.",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC84-Soccer_BetBook",
						"Verify that if we open the Odds and click outside the Odds Text box, then the odds should be closed.",
						"Verified if we open the Odds and Not click outside the Odds Text box,then the odds Not be closed.",
						"Fail");

				return false;
			}

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD"))).click();
			System.out.print(" Odds dropdown button clicked below higlights\n ");

			Thread.sleep(3000);
			WebElement OddsDDClearBtn = webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDClearBtn")));
			Actions oddsClear = new Actions(webdriver);
			oddsClear.moveToElement(OddsDDClearBtn).build().perform();
			Thread.sleep(3000);

			report.detailsAppend("TC83-Soccer_BetBook", "To check mouse hovering Action for Clear Button",
					"checked mouse hovering Action for Clear Button", "Pass");

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDClearBtn"))).click();
			System.out.print("Clear btn in odds dd is clicked \n");
			Thread.sleep(3000);

			report.detailsAppend("TC82-Soccer_BetBook", "Verify whether user is able to select the Clear Button",
					"Verified user able to select the Clear Button", "Pass");

			Thread.sleep(3000);
			WebElement OddsDD = webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD")));
			Actions Oddsdd = new Actions(webdriver);
			Oddsdd.moveToElement(OddsDD).perform();
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			je.executeScript("window.scrollBy(0,200)");

			log.debug("Switch to default tab");

		} catch (Exception e) {

			report.detailsAppend("TC82-Soccer_BetBook", "Verify whether user is able to select the Clear Button",
					"Verified user Not able to select the Clear Button", "Fail");

			report.detailsAppend("TC83-Soccer_BetBook", "To check mouse hovering Action for Clear Button",
					"checked mouse Not hovering Action for Clear Button", "Fail");

			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

	// TC-85-93 (SB) @Author: AS66528//
	// Verify that user should able click on "Odds" filter/Dropdown icon.
	public boolean SB_UpcomingOddsDD(Desktop_HTML_Report report) {

		try {
			try {
				webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).click();
				System.out.print(" Upcoming button clicked on Sport vertical\n ");

				Thread.sleep(3000);
				WebElement OddsDD = webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD")));
				Actions Oddsdd = new Actions(webdriver);
				Oddsdd.moveToElement(OddsDD).perform();
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,200)");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD"))).click();
				System.out.print(" Odds dropdown button clicked below higlights\n ");

				report.detailsAppend("TC85-Soccer_BetBook",
						"Verify that user should able click on \"Odds\" filterDropdown icon.",
						"Verified user able to click on \"Odds\" filterDropdown icon.", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC85-Soccer_BetBook",
						"Verify that user should able click on \"Odds\" filterDropdown icon.",
						"Verified user Not able to click on \"Odds\" filterDropdown icon.", "Fail");
				return false;
			}

			try {
				Thread.sleep(3000);
				WebElement OddsDDLeftArr = webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDLeftArrow")));
				Actions act1 = new Actions(webdriver);
				act1.moveToElement(OddsDDLeftArr).build().perform();
				Thread.sleep(3000);

				Thread.sleep(3000);
				WebElement OddsDDRightArr = webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDRightArrow")));
				Actions act2 = new Actions(webdriver);
				act2.moveToElement(OddsDDRightArr).build().perform();
				Thread.sleep(3000);

				report.detailsAppend("TC86-Soccer_BetBook",
						"To check user should able to hover mouse on two Text Box selection for Odds ",
						"user checked able to hover mouse on two Text Box selection for Odds ", "Pass");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDLeftArrow"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDLeftArrow"))).click();
				System.out.print("1st textbox in Odds DD is clicked");
				Thread.sleep(3000);

				report.detailsAppend("TC87-Soccer_BetBook",
						"To check user should able to click on 1st Text Box selection for Odds",
						"checked user abled to click on 1st Text Box selection for Odds", "Pass");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDRightArrow"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDRightArrow"))).click();
				System.out.print("2nd textbox in Odds DD is clicked\n");
				Thread.sleep(3000);

				report.detailsAppend("TC88-Soccer_BetBook",
						"To check user should able to click on 2nd Text Box selection for Odds",
						"checked user abled to click on 2nd Text Box selection for Odds", "Pass");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDLeftArrow"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDLeftArrow"))).click();
				System.out.print("1st textbox in Odds DD is clicked\n");
				Thread.sleep(3000);

				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("1stTextBoxOddsOptionSelect"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("1stTextBoxOddsOptionSelect"))).click();
				System.out.print(" selecting the odds from dd 1st text box\n");
				Thread.sleep(3000);

				report.detailsAppend("TC89-Soccer_BetBook",
						"check user should able select odd by clicking on Dropdown option on 1st Text Box selection for Odds ",
						"user checked able select odd by clicking on Dropdown option on 1st Text Box selection for Odds ",
						"Pass");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDRightArrow"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDRightArrow"))).click();
				System.out.print("2nd textbox in Odds DD is clicked \n");
				Thread.sleep(3000);

				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("2ndTextBoxOddsOptionSelect"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("2ndTextBoxOddsOptionSelect"))).click();
				System.out.print(" selecting the odds from dd 2nd text box \n");
				Thread.sleep(3000);

				report.detailsAppend("TC90-Soccer_BetBook",
						"check user should able select odd by clicking on Dropdown option on 2nd Text Box selection for Odds ",
						"user checked able select odd by clicking on Dropdown option on 2nd Text Box selection for Odds ",
						"Pass");

				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDClearBtn"))).click();
				System.out.print("Clear btn in odds dd is clicked \n");
				Thread.sleep(3000);

			} catch (Exception e) {
				report.detailsAppend("TC86-Soccer_BetBook",
						"To check user should able to hover mouse on two Text Box selection for Odds ",
						"user checked Not able to hover mouse on two Text Box selection for Odds ", "Fail");

				report.detailsAppend("TC87-Soccer_BetBook",
						"To check user should able to click on 1st Text Box selection for Odds",
						"checked user Not abled to click on 1st Text Box selection for Odds", "Fail");

				report.detailsAppend("TC88-Soccer_BetBook",
						"To check user should able to click on 2nd Text Box selection for Odds",
						"checked user Not abled to click on 2nd Text Box selection for Odds", "Fail");

				report.detailsAppend("TC89-Soccer_BetBook",
						"check user should able select odd by clicking on Dropdown option on 1st Text Box selection for Odds ",
						"user checked Not able select odd by clicking on Dropdown option on 1st Text Box selection for Odds ",
						"Fail");

				report.detailsAppend("TC90-Soccer_BetBook",
						"check user should able select odd by clicking on Dropdown option on 2nd Text Box selection for Odds ",
						"user checked Not able select odd by clicking on Dropdown option on 2nd Text Box selection for Odds ",
						"Fail");

				return false;
			}

			try {
				WebElement OddsDD = webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD")));
				Actions Oddsdd = new Actions(webdriver);
				Oddsdd.moveToElement(OddsDD).perform();
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,200)");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD"))).click();
				System.out.print(" Odds dropdown button clicked below higlights\n ");
				Thread.sleep(3000);

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDLeftArrow"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDLeftArrow"))).sendKeys("2.0");
				System.out.print(" entering the odds value in 1st text box\n");
				Thread.sleep(3000);

				report.detailsAppend("TC91-Soccer_BetBook",
						"check user should able insert value by entering the available value in 1st Text Box selection for Odds",
						"user able insert value by entering the available value in 1st Text Box selection for Odds",
						"Pass");

				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDClearBtn"))).click();
				System.out.print("Clear btn in odds dd is clicked \n");
				Thread.sleep(3000);

			} catch (Exception e) {

				report.detailsAppend("TC91-Soccer_BetBook",
						"check user should able insert value by entering the available value in 1st Text Box selection for Odds",
						"user Not able insert value by entering the available value in 1st Text Box selection for Odds",
						"Fail");
				return false;
			}

			WebElement OddsDD = webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD")));
			Actions Oddsdd = new Actions(webdriver);
			Oddsdd.moveToElement(OddsDD).perform();
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			je.executeScript("window.scrollBy(0,200)");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD"))).click();
			System.out.print(" Odds dropdown button clicked below higlights\n ");
			Thread.sleep(3000);

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDLeftArrow"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDLeftArrow"))).sendKeys("3.2");
			System.out.print(" entering the odds unavailable valuein 1st text box\n");
			Thread.sleep(3000);

			report.detailsAppend("TC92-Soccer_BetBook",
					"check user should not able insert value by entering the unavailable value value in 1st Text Box selection for Odds",
					"user not able insert value by entering the unavailable value value in 1st Text Box selection for Odds",
					"Pass");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDRightArrow"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDRightArrow"))).sendKeys("11.5");
			System.out.print(" entering the odds unavailable valuein 2nd text box\n");
			Thread.sleep(3000);

			report.detailsAppend("TC93-Soccer_BetBook",
					"check user should not able insert value by entering the unavailable value value in 2nd Text Box selection for Odds",
					"user not able insert value by entering the unavailable value value in 2nd Text Box selection for Odds",
					"Pass");

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDClearBtn"))).click();
			System.out.print("Clear btn in odds dd is clicked \n");
			Thread.sleep(3000);

			Oddsdd.moveToElement(OddsDD).perform();
			je.executeScript("window.scrollBy(0,200)");

			log.debug("Switch to default tab");

		} catch (Exception e) {

			report.detailsAppend("TC92-Soccer_BetBook",
					"check user should not able insert value by entering the unavailable value value in 1st Text Box selection for Odds",
					"user Not able insert value by entering the unavailable value value in 1st Text Box selection for Odds",
					"Fail");

			report.detailsAppend("TC93-Soccer_BetBook",
					"check user should not able insert value by entering the unavailable value value in 2nd Text Box selection for Odds",
					"user Not able insert value by entering the unavailable value value in 2nd Text Box selection for Odds",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

	// TC 94-109 (SB) @Author: AS66528 //
	// To Verify that User should able to navigate Live button and Leadues DD
	// Clicked
	public boolean SB_LiveLeaguesDD(Desktop_HTML_Report report) {

		try {

			try {
				webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).click();
				System.out.print(" Live button clicked on Sport vertical\n ");

				report.detailsAppend("TC94-Soccer_BetBook",
						"To check when user select \"Live\" Section for Sport then Live section getting open or not",
						"checked when user select \"Live\" Section for Sport then Live section getting opened", "Pass");

				Thread.sleep(3000);
				report.detailsAppend("TC95-Soccer_BetBook",
						"Verify that user should able to see \"League\",\"Bet type\"selection field.",
						"Verified user should able to seen \"League\",\"Bet type\"selection field.", "Pass");

				Thread.sleep(3000);
				report.detailsAppend("TC96-Soccer_BetBook",
						"Verify that user should able click on \"League\" filter/Dropdown icon with by default 0 count ",
						"Verified user able click on \"League\" filter/Dropdown icon with by default 0 count ", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC94-Soccer_BetBook",
						"To check when user select \"Live\" Section for Sport then Live section getting open or not",
						"checked when user select \"Live\" Section for Sport then Live section getting opened", "Fail");

				Thread.sleep(3000);
				report.detailsAppend("TC95-Soccer_BetBook",
						"Verify that user should able to see \"League\",\"Bet type\"selection field.",
						"Verified user should able to seen \"League\",\"Bet type\"selection field.", "Fail");

				Thread.sleep(3000);
				report.detailsAppend("TC96-Soccer_BetBook",
						"Verify that user should able click on \"League\" filter/Dropdown icon with by default 0 count ",
						"Verified user able click on \"League\" filter/Dropdown icon with by default 0 count ", "Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				WebElement LiveLeagueDD = webdriver.findElement(By.xpath(XpathMap.get("SBLiveLeagueDD")));
				Actions LiveLeg1 = new Actions(webdriver);
				LiveLeg1.moveToElement(LiveLeagueDD).perform();
				JavascriptExecutor jeL = (JavascriptExecutor) webdriver;
				jeL.executeScript("window.scrollBy(0,200)");
				Thread.sleep(3000);

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBLiveLeagueDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBLiveLeagueDD"))).click();
				System.out.print(" League dropdown button clicked \n ");

				Thread.sleep(3000);
				report.detailsAppend("TC97-Soccer_BetBook",
						"Verify that user should able to see Countries and Tournament and Scroll bar",
						"Verified user able to seen Countries and Tournament and Scroll bar", "Pass");

				Thread.sleep(3000);
				report.detailsAppend("TC98-Soccer_BetBook", "check Scroll bar functinality in Leagues filter",
						"checked Scroll bar functinality in Leagues filter", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC97-Soccer_BetBook",
						"Verify that user should able to see Countries and Tournament and Scroll bar",
						"Verified user able to seen Countries and Tournament and Scroll bar", "Fail");

				report.detailsAppend("TC98-Soccer_BetBook", "check Scroll bar functinality in Leagues filter",
						"checked Scroll bar functinality in Leagues filter", "Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("Live1stCountryInLeagueDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("Live1stCountryInLeagueDD"))).click();
				System.out.print("1st county in League dropdown Selected \n ");
				Thread.sleep(3000);
				report.detailsAppend("TC99-Soccer_BetBook",
						"User should able to see that the country colour should get converts into green and see list of Leagues under each Country.",
						"User able to seen the country colour should get converts into green and seen list of Leagues under each Country.",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC99-Soccer_BetBook",
						"User should able to see that the country colour should get converts into green and see list of Leagues under each Country.",
						"User able to seen the country colour should get converts into green and seen list of Leagues under each Country.",
						"Fail");
				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("Live1stCountryInLeagueDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("Live1stCountryInLeagueDD"))).click();
				System.out.print("1st county in League dropdown Again clicked \n ");
				Thread.sleep(3000);

				report.detailsAppend("TC100-Soccer_BetBook",
						"Check user should able to hide the Leagues list when we double click(again Click) on the selected Company ",
						"Checked user able to hide the Leagues list when we double click(again Click) on the selected Company ",
						"Pass");

				report.detailsAppend("TC101-Soccer_BetBook",
						"check whether user should able to see same country / tournament with there flag after click on countries / tournament ",
						"checked user able to see same country / tournament with there flag after click on countries / tournament ",
						"Pass");
				Thread.sleep(3000);
			} catch (Exception e) {

				report.detailsAppend("TC100-Soccer_BetBook",
						"Check user should able to hide the Leagues list when we double click(again Click) on the selected Company ",
						"Checked user able to hide the Leagues list when we double click(again Click) on the selected Company ",
						"Fail");

				report.detailsAppend("TC101-Soccer_BetBook",
						"check whether user should able to see same country / tournament with there flag after click on countries / tournament ",
						"checked user able to see same country / tournament with there flag after click on countries / tournament ",
						"Fail");

				return false;
			}

			try {

				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("Live1stCountryInLeagueDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("Live1stCountryInLeagueDD"))).click();
				System.out.print("1st county in League dropdown Selected \n ");

				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("Live1stLeagueunderCountry"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("Live1stLeagueunderCountry"))).click();
				System.out.print("1stLeague under country button selected\n ");

				report.detailsAppend("TC102-Soccer_BetBook",
						"User should able to Select league by check(selecting) the checkbox ",
						"User able to Select league by check(selecting) the checkbox ", "Pass");
				Thread.sleep(3000);

			} catch (Exception e) {

				report.detailsAppend("TC102-Soccer_BetBook",
						"User should able to Select league by check(selecting) the checkbox ",
						"User able to Select league by check(selecting) the checkbox ", "Fail");
				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("Live1stLeagueunderCountry"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("Live1stLeagueunderCountry"))).click();
				System.out.print("1stLeague under country button selected \n");

				report.detailsAppend("TC103-Soccer_BetBook",
						"User should able to deSelect league by check(selecting) the checkbox ",
						"User able to deSelect league by check(selecting) the checkbox ", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC103-Soccer_BetBook",
						"User should able to deSelect league by check(selecting) the checkbox ",
						"User able to deSelect league by check(selecting) the checkbox ", "Fail");
				return false;
			}

			try {
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("Live1stLeagueunderCountry"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("Live1stLeagueunderCountry"))).click();
				System.out.print("1stLeague under country button selected \n");

				report.detailsAppend("TC104-Soccer_BetBook",
						"check if we select the leagues the Count infront of \"Leugue\" should be increasing as selecting the leagues.",
						"checked once selecting the leagues the Count infront of \"Leugue\" be increasing as selecting the leagues.",
						"Pass");
				Thread.sleep(3000);
			} catch (Exception e) {

				report.detailsAppend("TC104-Soccer_BetBook",
						"check if we select the leagues the Count infront of \"Leugue\" should be increasing as selecting the leagues.",
						"checked once selecting the leagues the Count infront of \"Leugue\" be increasing as selecting the leagues.",
						"Fail");
				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("Live1stLeagueunderCountry"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("Live1stLeagueunderCountry"))).click();
				System.out.print("1stLeague under country button again selected \n");

				report.detailsAppend("TC105-Soccer_BetBook",
						"check if we deselect the leagues the Count infront of \"Leugue\" should be decreasing as selecting the leagues.",
						"checked once deselecting the leagues the Count infront of \"Leugue\" be decreasing as selecting the leagues.",
						"Pass");

				Thread.sleep(3000);
				report.detailsAppend("TC106-Soccer_BetBook",
						"check whether we havent selected any league for the league filter; in that case, the count in front of League should be zero (0).",
						"checked we havent selected any league for the league filter; in that case, the count in front of League be zero (0).",
						"Pass");

				Thread.sleep(3000);
				report.detailsAppend("TC107-Soccer_BetBook",
						"check whether if league count is 0 (indicating that no single league selected), then the cancel option should be displayed last.",
						"checked if league count is 0 (indicating that no single league selected), then the cancel option be displayed last.",
						"Pass");
				Thread.sleep(3000);
			} catch (Exception e) {

				report.detailsAppend("TC105-Soccer_BetBook",
						"check if we deselect the leagues the Count infront of \"Leugue\" should be decreasing as selecting the leagues.",
						"checked once deselecting the leagues the Count infront of \"Leugue\" be decreasing as selecting the leagues.",
						"Fail");

				report.detailsAppend("TC106-Soccer_BetBook",
						"check whether we havent selected any league for the league filter; in that case, the count in front of League should be zero (0).",
						"checked we havent selected any league for the league filter; in that case, the count in front of League be zero (0).",
						"Fail");

				report.detailsAppend("TC107-Soccer_BetBook",
						"check whether if league count is 0 (indicating that no single league selected), then the cancel option should be displayed last.",
						"checked if league count is 0 (indicating that no single league selected), then the cancel option be displayed last.",
						"Fail");

				return false;
			}

			try {

				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("Live1stLeagueMatchinHome"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("Live1stLeagueMatchinHome"))).click();
				System.out.print("1stLeague in home page is selected \n");

				report.detailsAppend("TC109-Soccer_BetBook",
						"To Check whether if we open the league and click outside the league list box, then the list should be closed.",
						"Checked if we open the league and click outside the league list box, then the list be closed.",
						"Pass");
				Thread.sleep(3000);
			} catch (Exception e) {

				report.detailsAppend("TC109-Soccer_BetBook",
						"To Check whether if we open the league and click outside the league list box, then the list should be closed.",
						"Checked if we open the league and click outside the league list box, then the list Not closed.",
						"Fail");
				return false;
			}

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBLiveLeagueDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("SBLiveLeagueDD"))).click();
			System.out.print(" League dropdown button clicked \n ");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("Live1stCountryInLeagueDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("Live1stCountryInLeagueDD"))).click();
			System.out.print("1st county in League dropdown Again clicked \n ");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("Live1stLeagueunderCountry"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("Live1stLeagueunderCountry"))).click();
			System.out.print("1stLeague under country button selected \n");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("LiveLeaguesDDUpdateBtn"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("LiveLeaguesDDUpdateBtn"))).click();
			System.out.print("update button under league selected \n");

			report.detailsAppend("TC108-Soccer_BetBook",
					"To check whether if we click on the Update button after selecting any league, then that particular league should be displayed.",
					"check if we click on Update button after selecting any league, then that particular league be displayed.",
					"Pass");

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("SBLiveLeagueDD"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("LiveLeaguesDDResetBtn"))).click();
			Thread.sleep(3000);
			log.debug("Switch to default tab");

		} catch (Exception e) {

			report.detailsAppend("TC108-Soccer_BetBook",
					"To check whether if we click on the Update button after selecting any league, then that particular league should be displayed.",
					"check if we click on Update button after selecting any league, then that particular league Not displayed.",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	// TC-110 -122 (SB) @Author: AS66528//
	// Verify that user should able to see Bet Types like Match Result(1X2),Double
	// Chance , ToQualify
	// Over/Unders, Draw no Bet, Next Goal, Handicap 0:4 en, Handicap, Both Teams

	public boolean SB_LiveBetTypeDD(Desktop_HTML_Report report) {

		try {

			try {
				webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).isDisplayed());
//			webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).click();
				System.out.print(" Live button clicked on Sport vertical\n ");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
				System.out.print(" BetType DD button clicked on Sport vertical\n ");

				report.detailsAppend("TC110-Soccer_BetBook",
						"user should able to see Bet Types List -Match Result(1X2),Double Chance,ToQualify,Over/Unders,Draw no Bet, Next Goal,Both Teams to Score,1X2 Total.",
						"user able to seen Bet Types List -Match Result(1X2),Double Chance,ToQualify,Over/Unders,Draw no Bet, Next Goal,Both Teams to Score,1X2 Total.",
						"Pass");

			} catch (Exception e) {

				report.detailsAppend("TC110-Soccer_BetBook",
						"user should able to see Bet Types List -Match Result(1X2),Double Chance,ToQualify,Over/Unders,Draw no Bet, Next Goal,Both Teams to Score,1X2 Total.",
						"user Not able to seen Bet Types List -Match Result(1X2),Double Chance,ToQualify,Over/Unders,Draw no Bet, Next Goal,Both Teams to Score,1X2 Total.",
						"Fail");

				return false;
			}

			try {

				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("MatchResultInBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("MatchResultInBetTypeDD"))).click();
				System.out.print("Bet Type -Match Result(1X2) option is clicked\n ");

				Thread.sleep(3000);
				WebElement BetTypeDD = webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD")));
				Actions act1 = new Actions(webdriver);
				act1.moveToElement(BetTypeDD).perform();
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,200)");

				Thread.sleep(3000);
				report.detailsAppend("TC111-Soccer_BetBook",
						"check whether user is able to select the Bet Type -Match Result(1X2)",
						"user abled to select the Bet Type -Match Result(1X2)", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC111-Soccer_BetBook",
						"check whether user is able to select the Bet Type -Match Result(1X2)",
						"user abled to select the Bet Type -Match Result(1X2)", "Fail");

				return false;
			}

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).isDisplayed());
			System.out.print(" Live button clicked on Sport vertical\n ");

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
			System.out.print(" BetType DD button clicked on Sport vertical\n ");

//			Thread.sleep(3000);
//			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("DoubleChanceInBetTypeDD"))).isDisplayed());
//			webdriver.findElement(By.xpath(XpathMap.get("DoubleChanceInBetTypeDD"))).click();
//			System.out.print("Bet Type -Double Chance option is clicked\n ");			
//			Thread.sleep(3000);
//			act1.moveToElement(BetTypeDD).perform();
//			je.executeScript("window.scrollBy(0,200)");		
//			
//			report.detailsAppend("TC112-Soccer_BetBook",
//					"check whether user is able to select the Bet Type Double Chance",
//					"user abled to select the Bet Type -Double Chance", "Pass");
//			
//			Thread.sleep(3000);
//			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).isDisplayed());
//			System.out.print(" Live button clicked on Sport vertical\n ");
//			Thread.sleep(3000);
//			
//			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
//			webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
//			System.out.print(" BetType DD button clicked on Sport vertical\n ");
//			Thread.sleep(3000);
//			
//			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("OversUndersInBetTypeDD"))).isDisplayed());
//			webdriver.findElement(By.xpath(XpathMap.get("OversUndersInBetTypeDD"))).click();
//			System.out.print("Bet Type -Over/Unders option is clicked\n ");
//			Thread.sleep(3000);
//			act1.moveToElement(BetTypeDD).perform();
//			je.executeScript("window.scrollBy(0,200)");
//			
//			Thread.sleep(3000);
//			report.detailsAppend("TC113-Soccer_BetBook",
//					"check whether user is able to select the Bet Type -Over/Unders",
//					"user abled to select the Bet Type -Over/Unders", "Pass");
//			
//			Thread.sleep(3000);
//			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).isDisplayed());
//			System.out.print(" Live button clicked on Sport vertical\n ");
//			Thread.sleep(3000);
//			
//			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
//			webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
//			System.out.print(" BetType DD button clicked on Sport vertical\n ");
//			Thread.sleep(3000);
//			
//			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("DrawNoBetInBetTypeDD"))).isDisplayed());
//			webdriver.findElement(By.xpath(XpathMap.get("DrawNoBetInBetTypeDD"))).click();
//			System.out.print("Bet Type -DrawNoBet option is clicked\n ");
//
//			Thread.sleep(3000);
//			act1.moveToElement(BetTypeDD).perform();
//			je.executeScript("window.scrollBy(0,200)");
//			Thread.sleep(3000);
//			report.detailsAppend("TC114-Soccer_BetBook", "check whether user is able to select the Bet Type -DrawNoBet",
//					"user abled to select the Bet Type -DrawNoBet", "Pass");
//
//			Thread.sleep(3000);
//			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).isDisplayed());
//			System.out.print(" Live button clicked on Sport vertical\n ");
//			Thread.sleep(3000);
//
//			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
//			webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
//			System.out.print(" BetType DD button clicked on Sport vertical\n ");
//			Thread.sleep(3000);
//			
//			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("NextGoalInBetTypeDD"))).isDisplayed());
//			webdriver.findElement(By.xpath(XpathMap.get("NextGoalInBetTypeDD"))).click();
//			System.out.print("Bet Type -NextGoal option is clicked\n ");
//
//			Thread.sleep(3000);
//			act1.moveToElement(BetTypeDD).perform();
//			je.executeScript("window.scrollBy(0,200)");
//			Thread.sleep(3000);
//			report.detailsAppend("TC115-Soccer_BetBook", "check whether user is able to select the Bet Type -NextGoal",
//					"user abled to select the Bet Type -NextGoal", "Pass");
//
//			
//			Thread.sleep(3000);
//			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).isDisplayed());
//			System.out.print(" Live button clicked on Sport vertical\n ");
//			Thread.sleep(3000);
//
//			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
//			webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
//			System.out.print(" BetType DD button clicked on Sport vertical\n ");
//			Thread.sleep(3000);
//			
//			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("Handicap1x2InBetTypeDD"))).isDisplayed());
//			webdriver.findElement(By.xpath(XpathMap.get("Handicap1x2InBetTypeDD"))).click();
//			System.out.print("Bet Type -Handicap1x2 option is clicked\n ");
//
//			Thread.sleep(3000);
//			act1.moveToElement(BetTypeDD).perform();
//			je.executeScript("window.scrollBy(0,200)");
//			Thread.sleep(3000);
//			report.detailsAppend("TC116-Soccer_BetBook",
//					"check whether user is able to select the Bet Type -Handicap1x2",
//					"user abled to select the Bet Type -Handicap1x2", "Pass");
//
//			Thread.sleep(3000);
//			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).isDisplayed());
//			System.out.print(" Live button clicked on Sport vertical\n ");
//			Thread.sleep(3000);
//
//			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
//			webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
//			System.out.print(" BetType DD button clicked on Sport vertical\n ");
//			Thread.sleep(3000);
//			
//			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HandicapInBetTypeDD"))).isDisplayed());
//			webdriver.findElement(By.xpath(XpathMap.get("HandicapInBetTypeDD"))).click();
//			System.out.print("Bet Type -Handicap option is clicked\n ");
//			Thread.sleep(3000);
//			act1.moveToElement(BetTypeDD).perform();
//			je.executeScript("window.scrollBy(0,200)");
//			Thread.sleep(3000);
//			
//			report.detailsAppend("TC117-Soccer_BetBook", "check whether user is able to select the Bet Type -Handicap",
//					"user abled to select the Bet Type -Handicap", "Pass");
//
//			Thread.sleep(3000);
//			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).isDisplayed());
//			System.out.print(" Live button clicked on Sport vertical\n ");
//			Thread.sleep(3000);
//
//			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
//			webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
//			System.out.print(" BetType DD button clicked on Sport vertical\n ");
//			Thread.sleep(3000);
//			
//			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BothTeamstoScoreInBetTypeDD"))).isDisplayed());
//			webdriver.findElement(By.xpath(XpathMap.get("BothTeamstoScoreInBetTypeDD"))).click();
//			System.out.print("Bet Type -BothTeamsToScore option is clicked\n ");
//
//			Thread.sleep(3000);
//			act1.moveToElement(BetTypeDD).perform();
//			je.executeScript("window.scrollBy(0,200)");
//			
//			report.detailsAppend("TC118-Soccer_BetBook",
//					"check whether user is able to select the Bet Type -BothTeamsToScore",
//					"user abled to select the Bet Type -BothTeamsToScore", "Pass");
//			
//			Thread.sleep(3000);
//			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).isDisplayed());
//			System.out.print(" Live button clicked on Sport vertical\n ");
//			Thread.sleep(3000);
//
//			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
//			webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
//			System.out.print(" BetType DD button clicked on Sport vertical\n ");
//			Thread.sleep(3000);
//			
//			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1x2InBetTypeDD"))).isDisplayed());
//			webdriver.findElement(By.xpath(XpathMap.get("1x2InBetTypeDD"))).click();
//			System.out.print("Bet Type -1x2 option is clicked\n ");
//			act1.moveToElement(BetTypeDD).perform();
//			je.executeScript("window.scrollBy(0,200)");
//			Thread.sleep(3000);
//
//			report.detailsAppend("TC119-Soccer_BetBook", "check whether user is able to select the Bet Type -1x2",
//					"user abled to select the Bet Type -1x2", "Pass");
//
//			Thread.sleep(3000);
//			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).isDisplayed());
//			System.out.print(" Live button clicked on Sport vertical\n ");
//			Thread.sleep(3000);
//			
//			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed());
//			webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
//			System.out.print(" BetType DD button clicked on Sport vertical\n ");
//			Thread.sleep(3000);
//			act1.moveToElement(BetTypeDD).perform();
//			je.executeScript("window.scrollBy(0,200)");

			try {

				Thread.sleep(3000);
				WebElement CloseBtnBetType = webdriver.findElement(By.xpath(XpathMap.get("CloseBtnInBetTypeDD")));
				Actions ClsB = new Actions(webdriver);
				ClsB.moveToElement(CloseBtnBetType).build().perform();
				Thread.sleep(3000);
				report.detailsAppend("TC121-Soccer_BetBook", "To check mouse hovering Action for Clear Button",
						"checked mouse hovering Action for Clear Button", "Pass");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("CloseBtnInBetTypeDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("CloseBtnInBetTypeDD"))).click();
				System.out.print("In BetType DD Close Btn is clicked\n ");
				report.detailsAppend("TC120-Soccer_BetBook", "To check whether user is able to select the Close Button",
						"checked user able to clicked the Close Button", "Pass");

				report.detailsAppend("TC122-Soccer_BetBook",
						"Check whether if we open the Bet Type and click outside the Bet Types list box, then the list should be closed.",
						"Check If we open the Bet Type and click outside the Bet Types list box,then the list be closed.",
						"Pass");

			} catch (Exception e) {

				report.detailsAppend("TC120-Soccer_BetBook", "To check whether user is able to select the Close Button",
						"checked user Not able to clicked the Close Button", "Fail");

				report.detailsAppend("TC121-Soccer_BetBook", "To check mouse hovering Action for Clear Button",
						"checked mouse Not able to hovering Action for Clear Button", "Fail");

				report.detailsAppend("TC122-Soccer_BetBook",
						"Check whether if we open the Bet Type and click outside the Bet Types list box, then the list should be closed.",
						"Check If we open the Bet Type and click outside the Bet Types list box,then the list be Not closed.",
						"Fail");

				return false;
			}
			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");

		} catch (Exception e) {

			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

	// TC-123-144 (SB) @Author: AS66528//
	// to check user should able to click on Outrights and see all countries /
	// tournament

	public boolean SB_OutrightsEvents(Desktop_HTML_Report report) {

		try {

			try {
				webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
				WebElement CloseBtnBetType = webdriver.findElement(By.xpath(XpathMap.get("OutrightsButton")));
				Actions ClsB = new Actions(webdriver);
				ClsB.moveToElement(CloseBtnBetType).build().perform();

				report.detailsAppend("TC123-Soccer_BetBook",
						"user should check when select \"Upcoming\" Section for Sport then Upcoming section getting open or not",
						"checked when selecting \"Upcoming\" Section for Sport then Upcoming section getting opened",
						"Pass");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("OutrightsButton"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("OutrightsButton"))).click();
				System.out.print(" Outrights button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				report.detailsAppend("TC124-Soccer_BetBook",
						"user should check able to click on \"Outrights\" and see all countries / tournament",
						"user checked able to click on \"Outrights\" and see all countries / tournament", "Pass");

				Thread.sleep(3000);
				report.detailsAppend("TC125-Soccer_BetBook",
						"check whether for \"Outrights\" , after clicking on outrights the color of Outright bar should get converted into dark grey color ",
						"checked for \"Outrights\" , after clicking on outrights the color of Outright bar get converted into dark grey color ",
						"Pass");

				Thread.sleep(3000);
				report.detailsAppend("TC126-Soccer_BetBook",
						"To check whether for \"Outrights\" , after clicking on outrights then moving the cursor on Outrights, should get converted into arrow cursor icon ",
						"checked for \"Outrights\" , after clicking on outrights then moving the cursor on Outrights converted into arrow cursor icon ",
						"Pass");

			} catch (Exception e) {

				report.detailsAppend("TC123-Soccer_BetBook",
						"user should check when select \"Upcoming\" Section for Sport then Upcoming section getting open or not",
						"checked when selecting \"Upcoming\" Section for Sport then Upcoming section Not opened",
						"Fail");

				report.detailsAppend("TC124-Soccer_BetBook",
						"user should check able to click on \"Outrights\" and see all countries / tournament",
						"user checked Not able to click on \"Outrights\" and see all countries / tournament", "Fail");

				Thread.sleep(3000);
				report.detailsAppend("TC125-Soccer_BetBook",
						"check whether for \"Outrights\" , after clicking on outrights the color of Outright bar should get converted into dark grey color ",
						"checked for \"Outrights\" , after clicking on outrights the color of Outright bar Not converted into dark grey color ",
						"Fail");

				Thread.sleep(3000);
				report.detailsAppend("TC126-Soccer_BetBook",
						"To check whether for \"Outrights\" , after clicking on outrights then moving the cursor on Outrights, should get converted into arrow cursor icon ",
						"checked for \"Outrights\" , after clicking on outrights then moving the cursor on Outrights Not converted into arrow cursor ",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				WebElement countryOutrights = webdriver.findElement(By.xpath(XpathMap.get("1stCountryInOutrights")));
				Actions country = new Actions(webdriver);
				country.moveToElement(countryOutrights).build().perform();

				report.detailsAppend("TC128-Soccer_BetBook",
						"Verify whether for Mouse hovering property working on countries/tournament  in \"Outrights\" ",
						"Verified Mouse hovering property working on countries/tournament  in \"Outrights\" ", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC128-Soccer_BetBook",
						"Verify whether for Mouse hovering property working on countries/tournament  in \"Outrights\" ",
						"Verified Mouse hovering property Not working on countries/tournament  in \"Outrights\" ",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stCountryInOutrights"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("1stCountryInOutrights"))).click();
				System.out.print(" 1st county under outirights selected \n ");
				Thread.sleep(3000);
				report.detailsAppend("TC129-Soccer_BetBook",
						"To check whether user should able to click on countries / tournament",
						"checked user able to click on countries / tournament", "Pass");

				Thread.sleep(3000);
				report.detailsAppend("TC131-Soccer_BetBook",
						" check whether user should able to see same country / tournament with there flag after click on countries / tournament ",
						" checked user able to see same country / tournament with there flag after click on countries / tournament ",
						"Pass");

			} catch (Exception e) {

				report.detailsAppend("TC129-Soccer_BetBook",
						"To check whether user should able to click on countries / tournament",
						"checked user Notable to click on countries / tournament", "Fail");

				report.detailsAppend("TC131-Soccer_BetBook",
						" check whether user should able to see same country / tournament with there flag after click on countries / tournament ",
						" checked user able to Not see same country / tournament with there flag after click on countries / tournament ",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BackBtnInCountrypage"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("BackBtnInCountrypage"))).click();
				System.out.print(" Back button in country page clicked\n ");
				Thread.sleep(3000);
				report.detailsAppend("TC133-Soccer_BetBook",
						"check whether user should able to navigate back icon  before flag after click on countries / tournament ",
						"check user able to navigate back icon before flag after click on countries / tournament ",
						"Pass");

			} catch (Exception e) {

				webdriver.findElement(By.xpath(XpathMap.get("BackBtnInCountrypage"))).click();
				System.out.print(" Back button in country page clicked\n ");
				report.detailsAppend("TC133-Soccer_BetBook",
						"check whether user should able to navigate back icon  before flag after click on countries / tournament ",
						"check user Not able to navigate back icon before flag after click on countries / tournament ",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(4000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stCountryInOutrights"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("1stCountryInOutrights"))).click();
				System.out.print(" 1st county under outirights selected \n ");
				Thread.sleep(3000);

				report.detailsAppend("TC134-Soccer_BetBook",
						"check  whether filter tab is available under after click on Country",
						"check filter tab is available under after click on Country ", "Pass");

				Thread.sleep(3000);
				WebElement FiltersDD = webdriver.findElement(By.xpath(XpathMap.get("FilterDDinOutrightsCountryPage")));
				Actions flter = new Actions(webdriver);
				flter.moveToElement(FiltersDD).build().perform();

				report.detailsAppend("TC135-Soccer_BetBook",
						"check whether mouse hovering action on filter tab is available under after click on Country",
						"check mouse hovering action on filter tab is available under after click on Country", "Pass");

				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("FilterDDinOutrightsCountryPage"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("FilterDDinOutrightsCountryPage"))).click();
				Thread.sleep(3000);

				report.detailsAppend("TC136-Soccer_BetBook",
						"check filter tab is clickable and after clicking on Filter Dropdown box should open ",
						"checked filter tab is clickable and after clicking on Filter Dropdown box opened ", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC134-Soccer_BetBook",
						"check  whether  filter tab is available under after click on Country",
						"check filter tab Not available under after click on Country ", "Fail");

				report.detailsAppend("TC135-Soccer_BetBook",
						"check whether mouse hovering action on filter tab is available under after click on Country",
						"check mouse hovering action on filter tab is Not available under after click on Country",
						"Fail");

				report.detailsAppend("TC136-Soccer_BetBook",
						"check filter tab is clickable and after clicking on Filter Dropdown box should open ",
						"checked filter tab is clickable and after clicking on Filter Dropdown box Not opened ",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("FilterDDinOutrightsCountryPage"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("FilterDDinOutrightsCountryPage"))).click();
				Thread.sleep(3000);

				report.detailsAppend("TC137-Soccer_BetBook",
						"To check  whether filter dropdown should close after clicking on Filter tab ",
						"check filter dropdown is close when after clicking on Filter tab ", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC137-Soccer_BetBook",
						"To check  whether filter dropdown should close after clicking on Filter tab ",
						"check filter dropdown Not close when after clicking on Filter tab ", "Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("SearchBoxInOutrightsCountryPage"))).isDisplayed());
				System.out.print(" Search button available below outrights\n ");
				report.detailsAppend("TC139-Soccer_BetBook",
						"check whether mouse hovering action on search tab is available under after click on Country ",
						"check  mouse hovering action on search tab  available under after click on Country ", "Pass");

				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("SearchBoxInOutrightsCountryPage"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SearchBoxInOutrightsCountryPage"))).click();
				System.out.print(" Search button clicked below outrights\n ");
				Thread.sleep(3000);
				report.detailsAppend("TC140-Soccer_BetBook",
						"check Search tab is clickable and after clicking on it search box should open ",
						"checked Search tab is clickable and after clicking on it search box is opened ", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC139-Soccer_BetBook",
						"check whether mouse hovering action on search tab is available under after click on Country ",
						"check  mouse hovering action on search tab  available under after click on Country ", "Fail");

				report.detailsAppend("TC140-Soccer_BetBook",
						"check Search tab is clickable and after clicking on it search box should open ",
						"checked Search tab is clickable and after clicking on it search box is opened ", "Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				WebElement SearchbtnClose = webdriver
						.findElement(By.xpath(XpathMap.get("SearchBoxCloseBtninCountryPage")));
				Actions Search = new Actions(webdriver);
				Search.moveToElement(SearchbtnClose).build().perform();

				report.detailsAppend("TC142-Soccer_BetBook", "To check mouse hovering action on search box Close Icon",
						"checked mouse hovering action on search box Close Icon", "Pass");

				report.detailsAppend("TC143-Soccer_BetBook", "To check mouse hovering action on search box Close Icon",
						"checked mouse hovering action on search box Close Icon", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC142-Soccer_BetBook", "To check mouse hovering action on search box Close Icon",
						"checked mouse hovering action on search box Close Icon", "Fail");

				report.detailsAppend("TC143-Soccer_BetBook", "To check mouse hovering action on search box Close Icon",
						"checked mouse hovering action on search box Close Icon", "Fail");

				return false;
			}

			Thread.sleep(3000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(XpathMap.get("SearchBoxInOutrightsCountryPage"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("SearchBoxInOutrightsCountryPage"))).click();
			System.out.print(" Search button clicked below outrights\n ");

			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("SearchBoxEnter")))
					.sendKeys(XpathMap.get("EnterTextInSearchBox"));
			Thread.sleep(3000);
			report.detailsAppend("TC144-Soccer_BetBook",
					"To check as we enter any league name that perticular leagues list should open ",
					"check as we enter any league name that perticular leagues list opened ", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC144-Soccer_BetBook",
					"To check as we enter any league name that perticular leagues list should open ",
					"check as we enter any league name that perticular leagues list opened ", "Fail");

			return false;
		}
		return true;
	}

	// TC-145 -151 (SB) @Author: AS66528//
	// To check that when a user clicks on a team, the respective statistics for
	// that team in the leagues should open

	public boolean SB_LiveLeagues(Desktop_HTML_Report report) {

		try {

			try {
				webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).click();
				System.out.print(" Live button clicked on Sport vertical\n ");

				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("1stLeagueTeamSelectinLive"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("1stLeagueTeamSelectinLive"))).click();
				System.out.print(" 1st League Match selected in Live Event \n ");

				report.detailsAppend("TC145-Soccer_BetBook",
						"check that when a user clicks on a team, the respective statistics for that team in the leagues should open",
						"checkws when a user clicks on a team, the respective statistics for that team in the leagues should open",
						"Pass");

				report.detailsAppend("TC146-Soccer_BetBook",
						"check whether the UI of statistics is as per design or not",
						"checked the UI of statistics is as per design", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC145-Soccer_BetBook",
						"check that when a user clicks on a team, the respective statistics for that team in the leagues should open",
						"checkws when a user clicks on a team, the respective statistics for that team in the leagues Not open",
						"Fail");

				report.detailsAppend("TC146-Soccer_BetBook",
						"check whether the UI of statistics is as per design or not",
						"checked the UI of statistics is Not as per design", "Fail");
				return false;
			}

			Thread.sleep(3000);
			report.detailsAppend("TC151-Soccer_BetBook",
					"check whether the title of the statistics page, it is same as selected team name with match day and time or not",
					"checked the title of the statistics page, it is same as selected team name with match day and time",
					"Pass");

			try {
				Thread.sleep(3000);
				WebElement AllinStatistic = webdriver.findElement(By.xpath(XpathMap.get("AllMarketInStatistics")));
				Actions all = new Actions(webdriver);
				all.moveToElement(AllinStatistic).build().perform();
				Thread.sleep(3000);
				report.detailsAppend("TC147-Soccer_BetBook",
						"To check the hand icon on mouse hover on the link or elements which are clickable for statistics page or not",
						"check the hand icon on mouse hover on the link or elements are clickable for statistics page",
						"Pass");

				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("TogglebtnInStatisticpage"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("TogglebtnInStatisticpage"))).click();
				System.out.print("Statistic Icon is clicked\n ");

				report.detailsAppend("TC148-Soccer_BetBook",
						"check the functionality of Statistics icon on statistics page whether it is clickable or not",
						"checked the functionality of Statistics icon on statistics page is clickable", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC147-Soccer_BetBook",
						"To check the hand icon on mouse hover on the link or elements which are clickable for statistics page or not",
						"check the hand icon on mouse hover on the link or elements are Not clickable for statistics page",
						"Fail");

				report.detailsAppend("TC148-Soccer_BetBook",
						"check the functionality of Statistics icon on statistics page whether it is clickable or not",
						"checked the functionality of Statistics icon on statistics page Not clickable", "Fail");

				return false;
			}

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("TogglebtnInStatisticpage"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("TogglebtnInStatisticpage"))).click();
			Thread.sleep(3000);

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BackBtnInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("BackBtnInStatistics"))).click();
				System.out.print("Back btn in Statistic page is clicked\n ");

				report.detailsAppend("TC149-Soccer_BetBook",
						"check the functionality of backward arrow of the statistics page",
						"checked the functionality of backward arrow of the statistics page", "Pass");

				Thread.sleep(3000);
				report.detailsAppend("TC150-Soccer_BetBook",
						"Verify that when a user goes back from the statistics page to the league page, a green border should be displayed for the previously selected team",
						"Verified user goes back from the statistics page to the league page, a green border displayed for the previously selected team",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC149-Soccer_BetBook",
						"check the functionality of backward arrow of the statistics page",
						"checked the functionality of backward arrow of the statistics page not opened", "Fail");

				Thread.sleep(3000);
				report.detailsAppend("TC150-Soccer_BetBook",
						"Verify that when a user goes back from the statistics page to the league page, a green border should be displayed for the previously selected team",
						"Verified user not goes back from the statistics page to the league page, a green border displayed for the previously selected team",
						"Fail");
				return false;
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {

			report.detailsAppend("TC151-Soccer_BetBook",
					"check whether the title of the statistics page, it is same as selected team name with match day and time or not",
					"checked the title of the statistics page, Not same as selected team name with match day and time",
					"Fail");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");

			return false;
		}

		return true;
	}

	// TC-152 -166 (SB) @Author: AS66528//
	// To check that when a user clicks on a team, the respective statistics for
	// that team in the leagues should open

	public boolean SB_LiveLeagueStatisticPage(Desktop_HTML_Report report) {

		try {

			try {
				webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("1stLeagueTeamSelectinLive"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("1stLeagueTeamSelectinLive"))).click();
				System.out.print(" 1st League Match selected in Live Event \n ");

				report.detailsAppend("TC152-Soccer_BetBook",
						"Verify the breadcrumb trail is should display on statistics page",
						"Verify the breadcrumb trail is display on statistics page", "Pass");

				Thread.sleep(4000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("BreadcrumbInStatisticPage"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("BreadcrumbInStatisticPage"))).click();
				System.out.print(" BreadCrumb in Statistic page is clicked \n ");
				Thread.sleep(3000);
				report.detailsAppend("TC153-Soccer_BetBook",
						"Verify click operation on breadcrumb trail, on click page should get redirect to respective term of that trail",
						"Verified click operation on breadcrumb trail, on click page get redirect to respective term of that trail",
						"Pass");

			} catch (Exception e) {

				report.detailsAppend("TC152-Soccer_BetBook",
						"Verify the breadcrumb trail is should display on statistics page",
						"Verify the breadcrumb trail Not display on statistics page", "Fail");

				report.detailsAppend("TC153-Soccer_BetBook",
						"Verify click operation on breadcrumb trail, on click page should get redirect to respective term of that trail",
						"Verified click operation on breadcrumb trail, on click page Not get redirect to respective term of that trail",
						"Fail");
				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("1stLeagueTeamSelectinLive"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("1stLeagueTeamSelectinLive"))).click();
				System.out.print(" 1st League Match selected in Live Event \n ");
				Thread.sleep(3000);
				report.detailsAppend("TC157-Soccer_BetBook",
						"Verify whether for statistics page different market should be available is Build a bet, All,Popular,Goals,1st Half,2nd Half,",
						"Verified for statistics page different market be available is Build a bet, All,Popular,Goals,1st Half,2nd Half,",
						"Pass");
				Thread.sleep(3000);

			} catch (Exception e) {

				report.detailsAppend("TC157-Soccer_BetBook",
						"Verify whether for statistics page different market should be available is Build a bet, All,Popular,Goals,1st Half,2nd Half,",
						"Verified for statistics page different market Not available is Build a bet, All,Popular,Goals,1st Half,2nd Half,",
						"Fail");

			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SearchBtnInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SearchBtnInStatistics"))).click();
				System.out.print("Search button in Statistic Icon is clicked\n ");
				Thread.sleep(3000);
				report.detailsAppend("TC154-Soccer_BetBook",
						"check the functionality of search icon on statistics page whether it is clickable or not",
						"checked the functionality of search icon on statistics page, it is clicked", "Pass");

				Thread.sleep(3000);
				report.detailsAppend("TC155-Soccer_BetBook",
						" For statistics window, when user click on search icon then search box should get accessible",
						" For statistics window, user click on search icon then search box get accessible", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC154-Soccer_BetBook",
						"check the functionality of search icon on statistics page whether it is clickable or not",
						"checked the functionality of search icon on statistics page, Not clickable", "Fail");

				report.detailsAppend("TC155-Soccer_BetBook",
						" For statistics window, when user click on search icon then search box should get accessible",
						" For statistics window, user Not click on search icon then search box not get accessible",
						"Fail");

				return false;
			}

			try {

				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("SearchBoxEnterinStatistic"))).sendKeys("Draw");
				Thread.sleep(3000);

				report.detailsAppend("TC156-Soccer_BetBook",
						"check whether user is able to search market using search box for example, search for DRAW ",
						"checked user able to search market using search box for example, search for DRAW ", "Pass");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SearchboxCloseBtninStatisticpage")))
						.isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SearchboxCloseBtninStatisticpage"))).click();

			} catch (Exception e) {
				report.detailsAppend("TC156-Soccer_BetBook",
						"check whether user is able to search market using search box for example, search for DRAW ",
						"checked user Not able to search market using search box for example, search for DRAW ",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("AllMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("AllMarketInStatistics"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC158-Soccer_BetBook",
						"check when user click on \"All\" market of statistics page then respected result getting displayed or not",
						"checked User click on \"All\" market of statistics page then respected result getting displayed",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC158-Soccer_BetBook",
						"check when user click on \"All\" market of statistics page then respected result getting displayed or not",
						"checked User Not click on \"All\" market of statistics page then respected result Not getting displayed",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("PopularMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("PopularMarketInStatistics"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC159-Soccer_BetBook",
						"check when user click on \"Popular\" market of statistics page then respected result getting displayed or not",
						"checked User click on \"Popular\" market of statistics page then respected result getting displayed",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC159-Soccer_BetBook",
						"check when user click on \"Popular\" market of statistics page then respected result getting displayed or not",
						"checked User Not click on \"Popular\" market of statistics page then respected result Not getting displayed",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("GoalsMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("GoalsMarketInStatistics"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC160-Soccer_BetBook",
						"check when user click on \"Goals\" market of statistics page then respected result getting displayed or not",
						"checked User click on \"Goals\" market of statistics page then respected result getting displayed",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC160-Soccer_BetBook",
						"check when user click on \"Goals\" market of statistics page then respected result getting displayed or not",
						"checked User Not click on \"Goals\" market of statistics page then respected result Not getting displayed",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("1stHalfMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("1stHalfMarketInStatistics"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC161-Soccer_BetBook",
						"check when user click on \"1stHalf\" market of statistics page then respected result getting displayed or not",
						"checked User click on \"1stHalf\" market of statistics page then respected result getting displayed",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC161-Soccer_BetBook",
						"check when user click on \"1stHalf\" market of statistics page then respected result getting displayed or not",
						"checked User Not click on \"1stHalf\" market of statistics page then respected result Not getting displayed",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("2ndHalfMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("2ndHalfMarketInStatistics"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC162-Soccer_BetBook",
						"check when user click on \"2ndHalf\" market of statistics page then respected result getting displayed or not",
						"checked User click on \"2ndHalf\" market of statistics page then respected result getting displayed",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC162-Soccer_BetBook",
						"check when user click on \"2ndHalf\" market of statistics page then respected result getting displayed or not",
						"checked User Not click on \"2ndHalf\" market of statistics page then respected result Not getting displayed",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("PlayerSpecialMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("PlayerSpecialMarketInStatistics"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC163-Soccer_BetBook",
						"check when user click on \"PlayerSpecial\" market of statistics page then respected result getting displayed or not",
						"checked User click on \"PlayerSpecial\" market of statistics page then respected result getting displayed",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC163-Soccer_BetBook",
						"check when user click on \"PlayerSpecial\" market of statistics page then respected result getting displayed or not",
						"checked User Not click on \"PlayerSpecial\" market of statistics page then respected result Not getting displayed",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("BookingMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("BookingMarketInStatistics"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC164-Soccer_BetBook",
						"check when user click on \"Booking\" market of statistics page then respected result getting displayed or not",
						"checked User click on \"Booking\" market of statistics page then respected result getting displayed",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC164-Soccer_BetBook",
						"check when user click on \"Booking\" market of statistics page then respected result getting displayed or not",
						"checked User Not click on \"Booking\" market of statistics page then respected result Not getting displayed",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("CombosMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("CombosMarketInStatistics"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC165-Soccer_BetBook",
						"check when user click on \"Combos\" market of statistics page then respected result getting displayed or not",
						"checked User click on \"Combos\" market of statistics page then respected result getting displayed",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC165-Soccer_BetBook",
						"check when user click on \"Combos\" market of statistics page then respected result getting displayed or not",
						"checked User Not click on \"Combos\" market of statistics page then respected result Not getting displayed",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketInStatistics"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC166-Soccer_BetBook",
						"check when user click on \"BuildABet\" market of statistics page then respected result getting displayed or not",
						"checked User click on \"BuildABet\" market of statistics page then respected result getting displayed",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC166-Soccer_BetBook",
						"check when user click on \"BuildABet\" market of statistics page then respected result getting displayed or not",
						"checked User Not click on \"BuildABet\" market of statistics page then respected result Not getting displayed",
						"Fail");

				return false;
			}

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BackBtnInStatistics"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("BackBtnInStatistics"))).click();
			log.debug("Switch to default tab");

		} catch (Exception e) {

			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");

			return false;
		}

		return true;
	}

	// TC-167-177 (SB) @Author: AS66528//
	// To check that when a user clicks on a team, the respective statistics for
	// that team in the leagues should open

	public boolean SB_LiveLeagueUIStatisticdetailsPage(Desktop_HTML_Report report) {

		try {

			try {
				webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("2ndLeagueTeamSelectinLive"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("2ndLeagueTeamSelectinLive"))).click();

				Thread.sleep(4000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("AllMarketInStatistics"))).isDisplayed());
				System.out.print("League statistic page opened \n ");

				report.detailsAppend("TC167-Soccer_BetBook",
						"check the functionality of left-right scroll Bar for market names on statistics page",
						"check the functionality of left-right scroll Bar for market names on statistics page", "Pass");

				Thread.sleep(4000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("AllMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("AllMarketInStatistics"))).click();
				System.out.print("AllMarket in Statistic page is Selected \n ");
				Thread.sleep(3000);

				report.detailsAppend("TC168-Soccer_BetBook",
						"check when user select any market from statistics page, for that selected market color is getting change to dark color or not",
						"check user select any market from statistics page, for that selected market color getting change to dark color",
						"Pass");

			} catch (Exception e) {
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("1stLeagueTeamSelectinLive"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("1stLeagueTeamSelectinLive"))).click();

				report.detailsAppend("TC167-Soccer_BetBook",
						"check the functionality of left-right scroll Bar for market names Not on statistics page",
						"check the functionality of left-right scroll Bar for market names Not on statistics page",
						"Fail");

				report.detailsAppend("TC168-Soccer_BetBook",
						"check when user select any market from statistics page, for that selected market color is getting change to dark color or not",
						"check user select any market from statistics page, for that selected market color Not getting change to dark color",
						"Fail");

				return false;
			}

			try {

				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("CashoutIconInStatisticmarket"))).isDisplayed());

				report.detailsAppend("TC169-Soccer_BetBook",
						"check whether cash out icon/ option is available for particular match or not",
						"checked that cash out icon/ is option available for particular match", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC169-Soccer_BetBook",
						"check whether cash out icon/ option is available for particular match or not",
						"checked that cash out icon/ is option not available for particular match", "Fail");
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("1stOddInStatisticMarket"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("1stOddInStatisticMarket"))).click();
				System.out.print("1st odds Selected in Market Statistic \n ");
				Thread.sleep(3000);
				report.detailsAppend("TC170-Soccer_BetBook",
						"Verify whether user is able to select odds from the market of Statistics page",
						"Verify whether user is able to select odds from the market of Statistics page", "Pass");

				Thread.sleep(3000);
				report.detailsAppend("TC171-Soccer_BetBook",
						"check when user select odds, that same odds are getting reflected on betslip or not",
						"checked user select odds, that same odds are reflected on betslip", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC170-Soccer_BetBook",
						"Verify whether user is able to select odds from the market of Statistics page",
						"Verify whether user Not able to select odds from the market of Statistics page", "Fail");

				report.detailsAppend("TC171-Soccer_BetBook",
						"check when user select odds, that same odds are getting reflected on betslip or not",
						"checked user select odds, that same odds are Not reflected on betslip", "Fail");

				return false;
			}

			try {

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("downwardMarkettab"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("downwardMarkettab"))).click();

				report.detailsAppend("TC172-Soccer_BetBook",
						"Verify the extend and close functionality of the Market tab under different markets and list of odds should be visible",
						"Verify the extend and close functionality of the Market tab under different markets and list of odds be visible",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC172-Soccer_BetBook",
						"Verify the extend and close functionality of the Market tab under different markets and list of odds should be visible",
						"Verify the extend and close functionality of the Market tab under different markets and list of odds Not visible",
						"Fail");

				return false;
			}

			try {

				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("IiconInStatisticMarket"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("IiconInStatisticMarket"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC173-Soccer_BetBook",
						"Verify the functionality of i icon of market tab under different market",
						"Verified the functionality of i icon of market tab under different market", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC173-Soccer_BetBook",
						"Verify the functionality of i icon of market tab under different market",
						"Verified the functionality of i icon of market tab Noy visible", "Fail");

				return false;
			}

			try {

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SearchBtnInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SearchBtnInStatistics"))).click();
				Thread.sleep(3000);

				report.detailsAppend("TC174-Soccer_BetBook",
						"check whether functinality of the Search Text Box of the statistics window",
						"checked functinality of the Search Text Box of the statistics window", "Pass");

				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("SearchBoxEnterinStatistic"))).sendKeys("Team");
				Thread.sleep(3000);

				report.detailsAppend("TC175-Soccer_BetBook",
						"Verify that when we enter any match/league name of statistics, matches window should get open with list of teams of league",
						"Verified we enter any match/league name of statistics, matches window get open with list of teams of league",
						"Pass");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SearchboxCloseBtninStatisticpage")))
						.isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SearchboxCloseBtninStatisticpage"))).click();

			} catch (Exception e) {
				report.detailsAppend("TC174-Soccer_BetBook",
						"check whether functinality of the Search Text Box of the statistics window",
						"checked functinality of the Search Text Box Not clicked in statistics window", "Fail");

				report.detailsAppend("TC175-Soccer_BetBook",
						"Verify that when we enter any match/league name of statistics, matches window should get open with list of teams of league",
						"Verified we enter any match/league name of statistics, matches window Not open with list of teams of league",
						"Pass");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SearchBtnInStatistics"))).isDisplayed());
				Thread.sleep(3000);

				report.detailsAppend("TC176-Soccer_BetBook",
						" Verify the UI of statistics window with proper spell check and alignment of all the elements",
						" Verified UI of statistics window with proper spell check and alignment of all the elements",
						"Pass");

				Thread.sleep(3000);
				report.detailsAppend("TC177-Soccer_BetBook",
						"Verify the UI of the sport window with statistics which include timer and sport points of the teams with details.",
						"Verify the UI of the sport window with statistics which include timer and sport points of the teams with details.",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC176-Soccer_BetBook",
						" Verify the UI of statistics window with proper spell check and alignment of all the elements",
						" Verified UI of statistics window with proper spell check and alignment of all the elements",
						"Fail");

				Thread.sleep(3000);
				report.detailsAppend("TC177-Soccer_BetBook",
						"Verify the UI of the sport window with statistics which include timer and sport points of the teams with details.",
						"Verify the UI of the sport window with statistics which Not include timer and sport points of the teams with details.",
						"Fail");

				return false;
			}

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");

			return false;
		}
		return true;
	}

	// TC-178-184 (SB) @Author: AS66528//
	// To check that when a user clicks on a team, the respective statistics for
	// that team in the leagues should open

	public boolean SB_HighlightsLeagues(Desktop_HTML_Report report) {

		try {

			try {
				webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).click();
				System.out.print(" Highlights button clicked on Sport vertical\n ");

				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("1stLeagueTeamSelectinLive"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("1stLeagueTeamSelectinLive"))).click();
				System.out.print(" 1st League Match selected in Highlights Event \n ");

				report.detailsAppend("TC178-Soccer_BetBook",
						"Verify that when a user clicks on a team or time and day , the statistics for that team in leagues should open",
						"Verified when a user clicks on a team or time and day , the statistics for that team in leagues open",
						"Pass");

				report.detailsAppend("TC179-Soccer_BetBook",
						"check whether the UI of statistics is as per design or not",
						"checked the UI of statistics is as per design", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC178-Soccer_BetBook",
						"Verify that when a user clicks on a team or time and day , the statistics for that team in leagues should open",
						"Verified when a user clicks on a team or time and day , the statistics for that team in leagues Not open",
						"Fail");

				report.detailsAppend("TC179-Soccer_BetBook",
						"check whether the UI of statistics is as per design or not",
						"checked the UI of statistics is Not as per design", "Fail");
				return false;
			}

			Thread.sleep(3000);
			report.detailsAppend("TC184-Soccer_BetBook",
					"check whether the title of the statistics page, it is same as selected team name with match day and time or not",
					"checked the title of the statistics page, it is same as selected team name with match day and time",
					"Pass");

			try {
				Thread.sleep(3000);
//				WebElement AllinStatistic = webdriver.findElement(By.xpath(XpathMap.get("AllMarketInStatistics")));
//				Actions all = new Actions(webdriver);
//				all.moveToElement(AllinStatistic).perform();
//				Thread.sleep(3000);
				report.detailsAppend("TC180-Soccer_BetBook",
						"To check the hand icon on mouse hover on the link or elements which are clickable for statistics page or not",
						"check the hand icon on mouse hover on the link or elements are clickable for statistics page",
						"Pass");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("AllMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("AllMarketInStatistics"))).click();
				System.out.print("Statistic Market Icon is clicked\n ");
				Thread.sleep(3000);
				report.detailsAppend("TC181-Soccer_BetBook",
						"check the functionality of Statistics icon on statistics page whether it is clickable or not",
						"checked the functionality of Statistics icon on statistics page is clickable", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC180-Soccer_BetBook",
						"To check the hand icon on mouse hover on the link or elements which are clickable for statistics page or not",
						"check the hand icon on mouse hover on the link or elements are Not clickable for statistics page",
						"Fail");

				report.detailsAppend("TC181-Soccer_BetBook",
						"check the functionality of Statistics icon on statistics page whether it is clickable or not",
						"checked the functionality of Statistics icon on statistics page Not clickable", "Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BackBtnInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("BackBtnInStatistics"))).click();
				System.out.print("Back btn in Statistic page is clicked\n ");
				Thread.sleep(3000);
				report.detailsAppend("TC182-Soccer_BetBook",
						"check the functionality of backward arrow of the statistics page",
						"checked the functionality of backward arrow of the statistics page", "Pass");

				Thread.sleep(3000);
				report.detailsAppend("TC183-Soccer_BetBook",
						"Verify that when a user goes back from the statistics page to the league page, a green border should be displayed for the previously selected team",
						"Verified user goes back from the statistics page to the league page, a green border displayed for the previously selected team",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC182-Soccer_BetBook",
						"check the functionality of backward arrow of the statistics page",
						"checked the functionality of backward arrow of the statistics page not opened", "Fail");

				Thread.sleep(3000);
				report.detailsAppend("TC183-Soccer_BetBook",
						"Verify that when a user goes back from the statistics page to the league page, a green border should be displayed for the previously selected team",
						"Verified user not goes back from the statistics page to the league page, a green border displayed for the previously selected team",
						"Fail");
				return false;
			}

			Thread.sleep(3000);
			log.debug("Switch to default tab");

		} catch (Exception e) {

			report.detailsAppend("TC184-Soccer_BetBook",
					"check whether the title of the statistics page, it is same as selected team name with match day and time or not",
					"checked the title of the statistics page, Not same as selected team name with match day and time",
					"Fail");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");

			return false;
		}

		return true;
	}

	// TC-185 -199 (SB) @Author: AS66528//
	// To check that when a user clicks on a team, the respective statistics for
	// that team in the leagues should open

	public boolean SB_HighlightsLeagueStatisticPage(Desktop_HTML_Report report) {

		try {

			try {
				webdriver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).click();
				System.out.print(" Highlights button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("1stLeagueTeamSelectinLive"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("1stLeagueTeamSelectinLive"))).click();
				System.out.print(" 1st League Match selected in Highlights Event \n ");

				report.detailsAppend("TC185-Soccer_BetBook",
						"Verify the breadcrumb trail is should display on statistics page",
						"Verify the breadcrumb trail is display on statistics page", "Pass");

				Thread.sleep(4000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("BreadcrumbInStatisticPage"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("BreadcrumbInStatisticPage"))).click();
				System.out.print(" BreadCrumb in Statistic page is clicked \n ");
				Thread.sleep(3000);
				report.detailsAppend("TC186-Soccer_BetBook",
						"Verify click operation on breadcrumb trail, on click page should get redirect to respective term of that trail",
						"Verified click operation on breadcrumb trail, on click page get redirect to respective term of that trail",
						"Pass");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).click();
				System.out.print(" Leagues Dropdown is Clicked \n ");
				Thread.sleep(3000);

				Thread.sleep(3000);
				WebElement LeagueDD = webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD")));
				Actions act1 = new Actions(webdriver);
				act1.moveToElement(LeagueDD).perform();
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,500)");
				Thread.sleep(3000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("LeaguesDDResetBtn"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("LeaguesDDResetBtn"))).click();
				System.out.print(" Leagues reset Btn is Clicked \n ");
				Thread.sleep(3000);

			} catch (Exception e) {

				report.detailsAppend("TC185-Soccer_BetBook",
						"Verify the breadcrumb trail is should display on statistics page",
						"Verify the breadcrumb trail Not display on statistics page", "Fail");

				report.detailsAppend("TC186-Soccer_BetBook",
						"Verify click operation on breadcrumb trail, on click page should get redirect to respective term of that trail",
						"Verified click operation on breadcrumb trail, on click page Not get redirect to respective term of that trail",
						"Fail");
				return false;
			}

			try {

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).click();
				System.out.print(" Highlights button clicked on Sport vertical\n ");
				Thread.sleep(3000);

				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("1stLeagueTeamSelectinLive"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("1stLeagueTeamSelectinLive"))).click();
				System.out.print(" 1st League Match selected in Highlights Event \n ");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SearchBtnInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SearchBtnInStatistics"))).click();
				System.out.print("Search button in Statistic Icon is clicked\n ");
				Thread.sleep(3000);
				report.detailsAppend("TC187-Soccer_BetBook",
						"check the functionality of search icon on statistics page whether it is clickable or not",
						"checked the functionality of search icon on statistics page, it is clicked", "Pass");

				Thread.sleep(3000);
				report.detailsAppend("TC188-Soccer_BetBook",
						" For statistics window, when user click on search icon then search box should get accessible",
						" For statistics window, user click on search icon then search box get accessible", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC187-Soccer_BetBook",
						"check the functionality of search icon on statistics page whether it is clickable or not",
						"checked the functionality of search icon on statistics page, Not clickable", "Fail");

				report.detailsAppend("TC188-Soccer_BetBook",
						" For statistics window, when user click on search icon then search box should get accessible",
						" For statistics window, user Not click on search icon then search box not get accessible",
						"Fail");

				return false;
			}

			try {

				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("SearchBoxEnterinStatistic"))).sendKeys("Draw");
				Thread.sleep(3000);

				report.detailsAppend("TC189-Soccer_BetBook",
						"check whether user is able to search market using search box for example, search for DRAW ",
						"checked user able to search market using search box for example, search for DRAW ", "Pass");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SearchboxCloseBtninStatisticpage")))
						.isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SearchboxCloseBtninStatisticpage"))).click();

			} catch (Exception e) {
				report.detailsAppend("TC189-Soccer_BetBook",
						"check whether user is able to search market using search box for example, search for DRAW ",
						"checked user Not able to search market using search box for example, search for DRAW ",
						"Fail");

				return false;
			}

			try {

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SearchBtnInStatistics"))).isDisplayed());
				System.out.print(" statistics page different markets are available \n ");
				Thread.sleep(3000);
				report.detailsAppend("TC190-Soccer_BetBook",
						"Verify whether for statistics page different market should be available is Build a bet, All,Popular,Goals,1st Half,2nd Half,",
						"Verified for statistics page different market be available is Build a bet, All,Popular,Goals,1st Half,2nd Half,",
						"Pass");
				Thread.sleep(3000);

			} catch (Exception e) {

				report.detailsAppend("TC190-Soccer_BetBook",
						"Verify whether for statistics page different market should be available is Build a bet, All,Popular,Goals,1st Half,2nd Half,",
						"Verified for statistics page different market Not available is Build a bet, All,Popular,Goals,1st Half,2nd Half,",
						"Fail");

			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("AllMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("AllMarketInStatistics"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC191-Soccer_BetBook",
						"check when user click on \"All\" market of statistics page then respected result getting displayed or not",
						"checked User click on \"All\" market of statistics page then respected result getting displayed",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC191-Soccer_BetBook",
						"check when user click on \"All\" market of statistics page then respected result getting displayed or not",
						"checked User Not click on \"All\" market of statistics page then respected result Not getting displayed",
						"Fail");

				return false;
			}

			try {

				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("PopularMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("PopularMarketInStatistics"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC192-Soccer_BetBook",
						"check when user click on \"Popular\" market of statistics page then respected result getting displayed or not",
						"checked User click on \"Popular\" market of statistics page then respected result getting displayed",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC192-Soccer_BetBook",
						"check when user click on \"Popular\" market of statistics page then respected result getting displayed or not",
						"checked User Not click on \"Popular\" market of statistics page then respected result Not getting displayed",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("GoalsMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("GoalsMarketInStatistics"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC193-Soccer_BetBook",
						"check when user click on \"Goals\" market of statistics page then respected result getting displayed or not",
						"checked User click on \"Goals\" market of statistics page then respected result getting displayed",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC193-Soccer_BetBook",
						"check when user click on \"Goals\" market of statistics page then respected result getting displayed or not",
						"checked User Not click on \"Goals\" market of statistics page then respected result Not getting displayed",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("1stHalfMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("1stHalfMarketInStatistics"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC194-Soccer_BetBook",
						"check when user click on \"1stHalf\" market of statistics page then respected result getting displayed or not",
						"checked User click on \"1stHalf\" market of statistics page then respected result getting displayed",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC194-Soccer_BetBook",
						"check when user click on \"1stHalf\" market of statistics page then respected result getting displayed or not",
						"checked User Not click on \"1stHalf\" market of statistics page then respected result Not getting displayed",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("2ndHalfMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("2ndHalfMarketInStatistics"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC195-Soccer_BetBook",
						"check when user click on \"2ndHalf\" market of statistics page then respected result getting displayed or not",
						"checked User click on \"2ndHalf\" market of statistics page then respected result getting displayed",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC195-Soccer_BetBook",
						"check when user click on \"2ndHalf\" market of statistics page then respected result getting displayed or not",
						"checked User Not click on \"2ndHalf\" market of statistics page then respected result Not getting displayed",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("PlayerSpecialMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("PlayerSpecialMarketInStatistics"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC196-Soccer_BetBook",
						"check when user click on \"PlayerSpecial\" market of statistics page then respected result getting displayed or not",
						"checked User click on \"PlayerSpecial\" market of statistics page then respected result getting displayed",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC196-Soccer_BetBook",
						"check when user click on \"PlayerSpecial\" market of statistics page then respected result getting displayed or not",
						"checked User Not click on \"PlayerSpecial\" market of statistics page then respected result Not getting displayed",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("CombosMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("CombosMarketInStatistics"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC197-Soccer_BetBook",
						"check when user click on \"Combos\" market of statistics page then respected result getting displayed or not",
						"checked User click on \"Combos\" market of statistics page then respected result getting displayed",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC197-Soccer_BetBook",
						"check when user click on \"Combos\" market of statistics page then respected result getting displayed or not",
						"checked User Not click on \"Combos\" market of statistics page then respected result Not getting displayed",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("BookingMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("BookingMarketInStatistics"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC198-Soccer_BetBook",
						"check when user click on \"Booking\" market of statistics page then respected result getting displayed or not",
						"checked User click on \"Booking\" market of statistics page then respected result getting displayed",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC198-Soccer_BetBook",
						"check when user click on \"Booking\" market of statistics page then respected result getting displayed or not",
						"checked User Not click on \"Booking\" market of statistics page then respected result Not getting displayed",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketInStatistics"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC199-Soccer_BetBook",
						"check when user click on \"BuildABet\" market of statistics page then respected result getting displayed or not",
						"checked User click on \"BuildABet\" market of statistics page then respected result getting displayed",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC199-Soccer_BetBook",
						"check when user click on \"BuildABet\" market of statistics page then respected result getting displayed or not",
						"checked User Not click on \"BuildABet\" market of statistics page then respected result Not getting displayed",
						"Fail");

				return false;
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {

			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");

			return false;
		}

		return true;
	}

	// TC-200-210 (SB) @Author: AS66528//
	// To check that when a user clicks on a team, the respective statistics for
	// that team in the leagues should open

	public boolean SB_HighlightsLeagueUIStatisticdetailsPage(Desktop_HTML_Report report) {

		try {

			try {

				webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("AllMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("AllMarketInStatistics"))).click();
				Thread.sleep(4000);
				webdriver.findElement(By.xpath(XpathMap.get("CombosMarketInStatistics")));
				System.out.print("Markets in statistic page drag to rightside \n ");

				report.detailsAppend("TC200-Soccer_BetBook",
						"check the functionality of left-right scroll Bar for market names on statistics page",
						"check the functionality of left-right scroll Bar for market names on statistics page", "Pass");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("AllMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("AllMarketInStatistics"))).click();
				System.out.print("AllMarket in Statistic page is Selected \n ");
				Thread.sleep(3000);

				report.detailsAppend("TC201-Soccer_BetBook",
						"check when user select any market from statistics page, for that selected market color is getting change to dark color or not",
						"check user select any market from statistics page, for that selected market color getting change to dark color",
						"Pass");

			} catch (Exception e) {
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("1stLeagueTeamSelectinLive"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("1stLeagueTeamSelectinLive"))).click();

				report.detailsAppend("TC200-Soccer_BetBook",
						"check the functionality of left-right scroll Bar for market names Not on statistics page",
						"check the functionality of left-right scroll Bar for market names Not on statistics page",
						"Fail");

				report.detailsAppend("TC201-Soccer_BetBook",
						"check when user select any market from statistics page, for that selected market color is getting change to dark color or not",
						"check user select any market from statistics page, for that selected market color Not getting change to dark color",
						"Fail");

				return false;
			}

			try {

				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("CashoutIconInStatisticmarket"))).isDisplayed());

				report.detailsAppend("TC202-Soccer_BetBook",
						"check whether cash out icon/ option is available for particular match or not",
						"checked that cash out icon/ is option available for particular match", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC202-Soccer_BetBook",
						"check whether cash out icon/ option is available for particular match or not",
						"checked that cash out icon/ is option not available for particular match", "Fail");
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("1stOddInStatisticMarket"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("1stOddInStatisticMarket"))).click();
				System.out.print("1st odds Selected in Market Statistic \n ");
				Thread.sleep(3000);
				report.detailsAppend("TC203-Soccer_BetBook",
						"Verify whether user is able to select odds from the market of Statistics page",
						"Verify whether user is able to select odds from the market of Statistics page", "Pass");

				Thread.sleep(3000);
				report.detailsAppend("TC204-Soccer_BetBook",
						"check when user select odds, that same odds are getting reflected on betslip or not",
						"checked user select odds, that same odds are reflected on betslip", "Pass");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).click();
				System.out.print("1st odds Selected in Market Statistic \n ");
				Thread.sleep(3000);

			} catch (Exception e) {

				report.detailsAppend("TC203-Soccer_BetBook",
						"Verify whether user is able to select odds from the market of Statistics page",
						"Verify whether user Not able to select odds from the market of Statistics page", "Fail");

				report.detailsAppend("TC204-Soccer_BetBook",
						"check when user select odds, that same odds are getting reflected on betslip or not",
						"checked user select odds, that same odds are Not reflected on betslip", "Fail");

				return false;
			}

			try {

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("downwardMarkettab"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("downwardMarkettab"))).click();

				report.detailsAppend("TC205-Soccer_BetBook",
						"Verify the extend and close functionality of the Market tab under different markets and list of odds should be visible",
						"Verify the extend and close functionality of the Market tab under different markets and list of odds be visible",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC205-Soccer_BetBook",
						"Verify the extend and close functionality of the Market tab under different markets and list of odds should be visible",
						"Verify the extend and close functionality of the Market tab under different markets and list of odds Not visible",
						"Fail");

				return false;
			}

			try {

				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("IiconInStatisticMarket"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("IiconInStatisticMarket"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC206-Soccer_BetBook",
						"Verify the functionality of i icon of market tab under different market",
						"Verified the functionality of i icon of market tab under different market", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC206-Soccer_BetBook",
						"Verify the functionality of i icon of market tab under different market",
						"Verified the functionality of i icon of market tab Noy visible", "Fail");

				return false;
			}

			try {

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SearchBtnInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SearchBtnInStatistics"))).click();
				Thread.sleep(3000);

				report.detailsAppend("TC207-Soccer_BetBook",
						"check whether functinality of the Search Text Box of the statistics window",
						"checked functinality of the Search Text Box of the statistics window", "Pass");

				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("SearchBoxEnterinStatistic"))).sendKeys("Team");
				Thread.sleep(3000);

				report.detailsAppend("TC208-Soccer_BetBook",
						"Verify that when we enter any match/league name of statistics, matches window should get open with list of teams of league",
						"Verified we enter any match/league name of statistics, matches window get open with list of teams of league",
						"Pass");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SearchboxCloseBtninStatisticpage")))
						.isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SearchboxCloseBtninStatisticpage"))).click();

			} catch (Exception e) {
				report.detailsAppend("TC207-Soccer_BetBook",
						"check whether functinality of the Search Text Box of the statistics window",
						"checked functinality of the Search Text Box Not clicked in statistics window", "Fail");

				report.detailsAppend("TC208-Soccer_BetBook",
						"Verify that when we enter any match/league name of statistics, matches window should get open with list of teams of league",
						"Verified we enter any match/league name of statistics, matches window Not open with list of teams of league",
						"Pass");

				return false;
			}

			try {

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SearchBtnInStatistics"))).isDisplayed());
				Thread.sleep(3000);

				report.detailsAppend("TC209-Soccer_BetBook",
						" Verify the UI of statistics window with proper spell check and alignment of all the elements",
						" Verified UI of statistics window with proper spell check and alignment of all the elements",
						"Pass");

				Thread.sleep(3000);
				report.detailsAppend("TC210-Soccer_BetBook",
						"Verify the UI of the sport window with statistics which include timer and sport points of the teams with details.",
						"Verify the UI of the sport window with statistics which include timer and sport points of the teams with details.",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC209-Soccer_BetBook",
						" Verify the UI of statistics window with proper spell check and alignment of all the elements",
						" Verified UI of statistics window with proper spell check and alignment of all the elements",
						"Fail");

				Thread.sleep(3000);
				report.detailsAppend("TC210-Soccer_BetBook",
						"Verify the UI of the sport window with statistics which include timer and sport points of the teams with details.",
						"Verify the UI of the sport window with statistics which Not include timer and sport points of the teams with details.",
						"Fail");

				return false;
			}

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BackBtnInStatistics"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("BackBtnInStatistics"))).click();
			log.debug("Switch to default tab");
			Thread.sleep(3000);

		} catch (Exception e) {
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");

			return false;
		}
		return true;
	}

	// TC-211-217 (SB) @Author: AS66528//
	// To check that when a user clicks on a team, the respective statistics for
	// that team in the leagues should open

	public boolean SB_UpcomingLeagues(Desktop_HTML_Report report) {

		try {

			try {
				webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).click();
				System.out.print(" Upcoming button clicked on Sport vertical\n ");

				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("1stLeagueTeaminOutrights"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("1stLeagueTeaminOutrights"))).click();
				System.out.print(" 1st League Match selected in Outrights Event \n ");
				Thread.sleep(3000);

				report.detailsAppend("TC211-Soccer_BetBook",
						"Verify that when a user clicks on a team or time and day , the statistics for that team in leagues should open",
						"Verified when a user clicks on a team or time and day , the statistics for that team in leagues open",
						"Pass");

				report.detailsAppend("TC212-Soccer_BetBook",
						"check whether the UI of statistics is as per design or not",
						"checked the UI of statistics is as per design", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC211-Soccer_BetBook",
						"Verify that when a user clicks on a team or time and day , the statistics for that team in leagues should open",
						"Verified when a user clicks on a team or time and day , the statistics for that team in leagues Not open",
						"Fail");

				report.detailsAppend("TC212-Soccer_BetBook",
						"check whether the UI of statistics is as per design or not",
						"checked the UI of statistics is Not as per design", "Fail");
				return false;
			}

			Thread.sleep(3000);
			report.detailsAppend("TC217-Soccer_BetBook",
					"check whether the title of the statistics page, it is same as selected team name with match day and time or not",
					"checked the title of the statistics page, it is same as selected team name with match day and time",
					"Pass");

			try {
				Thread.sleep(3000);
				WebElement AllinStatistic = webdriver.findElement(By.xpath(XpathMap.get("AllMarketInStatistics")));
				Actions all = new Actions(webdriver);
				all.moveToElement(AllinStatistic).build().perform();
				Thread.sleep(3000);
				report.detailsAppend("TC213-Soccer_BetBook",
						"To check the hand icon on mouse hover on the link or elements which are clickable for statistics page or not",
						"check the hand icon on mouse hover on the link or elements are clickable for statistics page",
						"Pass");

				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("TogglebtnInStatisticpage"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("TogglebtnInStatisticpage"))).click();
				System.out.print("Statistic Icon is clicked\n ");

				report.detailsAppend("TC214-Soccer_BetBook",
						"check the functionality of Statistics icon on statistics page whether it is clickable or not",
						"checked the functionality of Statistics icon on statistics page is clickable", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC213-Soccer_BetBook",
						"To check the hand icon on mouse hover on the link or elements which are clickable for statistics page or not",
						"check the hand icon on mouse hover on the link or elements are Not clickable for statistics page",
						"Fail");

				report.detailsAppend("TC214-Soccer_BetBook",
						"check the functionality of Statistics icon on statistics page whether it is clickable or not",
						"checked the functionality of Statistics icon on statistics page Not clickable", "Fail");

				return false;
			}

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("TogglebtnInStatisticpage"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("TogglebtnInStatisticpage"))).click();
			Thread.sleep(3000);

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BackBtnInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("BackBtnInStatistics"))).click();
				System.out.print("Back btn in Statistic page is clicked\n ");

				report.detailsAppend("TC215-Soccer_BetBook",
						"check the functionality of backward arrow of the statistics page",
						"checked the functionality of backward arrow of the statistics page", "Pass");

				Thread.sleep(3000);
				report.detailsAppend("TC216-Soccer_BetBook",
						"Verify that when a user goes back from the statistics page to the league page, a green border should be displayed for the previously selected team",
						"Verified user goes back from the statistics page to the league page, a green border displayed for the previously selected team",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC215-Soccer_BetBook",
						"check the functionality of backward arrow of the statistics page",
						"checked the functionality of backward arrow of the statistics page not opened", "Fail");

				Thread.sleep(3000);
				report.detailsAppend("TC216-Soccer_BetBook",
						"Verify that when a user goes back from the statistics page to the league page, a green border should be displayed for the previously selected team",
						"Verified user not goes back from the statistics page to the league page, a green border displayed for the previously selected team",
						"Fail");
				return false;
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {

			report.detailsAppend("TC217-Soccer_BetBook",
					"check whether the title of the statistics page, it is same as selected team name with match day and time or not",
					"checked the title of the statistics page, Not same as selected team name with match day and time",
					"Fail");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");

			return false;
		}

		return true;
	}

	// TC-218-243 (SB) @Author: AS66528//
	// To check that when a user clicks on a team, the respective statistics for
	// that team in the leagues should open

	public boolean SB_UpcomingLeagueStatisticPage(Desktop_HTML_Report report) {

		try {

			try {
				webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("1stLeagueTeaminOutrights"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("1stLeagueTeaminOutrights"))).click();
				System.out.print(" 1st League Match selected in Outrights Event \n ");
				Thread.sleep(3000);
				report.detailsAppend("TC218-Soccer_BetBook",
						"Verify the breadcrumb trail is should display on statistics page",
						"Verify the breadcrumb trail is display on statistics page", "Pass");

				Thread.sleep(4000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("BreadcrumbInStatisticPage"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("BreadcrumbInStatisticPage"))).click();
				System.out.print(" BreadCrumb in Statistic page is clicked \n ");
				Thread.sleep(3000);
				report.detailsAppend("TC219-Soccer_BetBook",
						"Verify click operation on breadcrumb trail, on click page should get redirect to respective term of that trail",
						"Verified click operation on breadcrumb trail, on click page get redirect to respective term of that trail",
						"Pass");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).click();
				System.out.print(" Leagues Dropdown is Clicked \n ");
				Thread.sleep(3000);

				Thread.sleep(3000);
				WebElement LeagueDD = webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD")));
				Actions act1 = new Actions(webdriver);
				act1.moveToElement(LeagueDD).perform();
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,500)");
				Thread.sleep(3000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("LeaguesDDResetBtn"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("LeaguesDDResetBtn"))).click();
				System.out.print(" Leagues reset Btn is Clicked \n ");
				Thread.sleep(3000);

			} catch (Exception e) {

				report.detailsAppend("TC218-Soccer_BetBook",
						"Verify the breadcrumb trail is should display on statistics page",
						"Verify the breadcrumb trail Not display on statistics page", "Fail");

				report.detailsAppend("TC219-Soccer_BetBook",
						"Verify click operation on breadcrumb trail, on click page should get redirect to respective term of that trail",
						"Verified click operation on breadcrumb trail, on click page Not get redirect to respective term of that trail",
						"Fail");
				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).click();
				System.out.print(" Upcoming button clicked on Sport vertical\n ");

				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("1stLeagueTeaminOutrights"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("1stLeagueTeaminOutrights"))).click();
				System.out.print(" 1st League Match selected in Outrights Event \n ");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SearchBtnInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SearchBtnInStatistics"))).click();
				System.out.print("Search button in Statistic Icon is clicked\n ");
				Thread.sleep(3000);
				report.detailsAppend("TC220-Soccer_BetBook",
						"check the functionality of search icon on statistics page whether it is clickable or not",
						"checked the functionality of search icon on statistics page, it is clicked", "Pass");

				Thread.sleep(3000);
				report.detailsAppend("TC221-Soccer_BetBook",
						" For statistics window, when user click on search icon then search box should get accessible",
						" For statistics window, user click on search icon then search box get accessible", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC220-Soccer_BetBook",
						"check the functionality of search icon on statistics page whether it is clickable or not",
						"checked the functionality of search icon on statistics page, Not clickable", "Fail");

				report.detailsAppend("TC221-Soccer_BetBook",
						" For statistics window, when user click on search icon then search box should get accessible",
						" For statistics window, user Not click on search icon then search box not get accessible",
						"Fail");

				return false;
			}

			try {

				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("SearchBoxEnterinStatistic"))).sendKeys("Draw");
				Thread.sleep(3000);

				report.detailsAppend("TC222-Soccer_BetBook",
						"check whether user is able to search market using search box for example, search for DRAW ",
						"checked user able to search market using search box for example, search for DRAW ", "Pass");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SearchboxCloseBtninStatisticpage")))
						.isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SearchboxCloseBtninStatisticpage"))).click();

			} catch (Exception e) {
				report.detailsAppend("TC222-Soccer_BetBook",
						"check whether user is able to search market using search box for example, search for DRAW ",
						"checked user Not able to search market using search box for example, search for DRAW ",
						"Fail");

				return false;
			}

			try {

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SearchBtnInStatistics"))).isDisplayed());
				System.out.print(" statistics page different markets are available \n ");
				Thread.sleep(3000);
				report.detailsAppend("TC223-Soccer_BetBook",
						"Verify whether for statistics page different market should be available is Build a bet, All,Popular,Goals,1st Half,2nd Half,",
						"Verified for statistics page different market be available is Build a bet, All,Popular,Goals,1st Half,2nd Half,",
						"Pass");
				Thread.sleep(3000);

			} catch (Exception e) {

				report.detailsAppend("TC223-Soccer_BetBook",
						"Verify whether for statistics page different market should be available is Build a bet, All,Popular,Goals,1st Half,2nd Half,",
						"Verified for statistics page different market Not available is Build a bet, All,Popular,Goals,1st Half,2nd Half,",
						"Fail");

			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("AllMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("AllMarketInStatistics"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC224-Soccer_BetBook",
						"check when user click on \"All\" market of statistics page then respected result getting displayed or not",
						"checked User click on \"All\" market of statistics page then respected result getting displayed",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC224-Soccer_BetBook",
						"check when user click on \"All\" market of statistics page then respected result getting displayed or not",
						"checked User Not click on \"All\" market of statistics page then respected result Not getting displayed",
						"Fail");

				return false;
			}

			try {

				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("PopularMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("PopularMarketInStatistics"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC225-Soccer_BetBook",
						"check when user click on \"Popular\" market of statistics page then respected result getting displayed or not",
						"checked User click on \"Popular\" market of statistics page then respected result getting displayed",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC225-Soccer_BetBook",
						"check when user click on \"Popular\" market of statistics page then respected result getting displayed or not",
						"checked User Not click on \"Popular\" market of statistics page then respected result Not getting displayed",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("GoalsMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("GoalsMarketInStatistics"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC226-Soccer_BetBook",
						"check when user click on \"Goals\" market of statistics page then respected result getting displayed or not",
						"checked User click on \"Goals\" market of statistics page then respected result getting displayed",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC226-Soccer_BetBook",
						"check when user click on \"Goals\" market of statistics page then respected result getting displayed or not",
						"checked User Not click on \"Goals\" market of statistics page then respected result Not getting displayed",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("1stHalfMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("1stHalfMarketInStatistics"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC227-Soccer_BetBook",
						"check when user click on \"1stHalf\" market of statistics page then respected result getting displayed or not",
						"checked User click on \"1stHalf\" market of statistics page then respected result getting displayed",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC227-Soccer_BetBook",
						"check when user click on \"1stHalf\" market of statistics page then respected result getting displayed or not",
						"checked User Not click on \"1stHalf\" market of statistics page then respected result Not getting displayed",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("2ndHalfMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("2ndHalfMarketInStatistics"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC228-Soccer_BetBook",
						"check when user click on \"2ndHalf\" market of statistics page then respected result getting displayed or not",
						"checked User click on \"2ndHalf\" market of statistics page then respected result getting displayed",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC228-Soccer_BetBook",
						"check when user click on \"2ndHalf\" market of statistics page then respected result getting displayed or not",
						"checked User Not click on \"2ndHalf\" market of statistics page then respected result Not getting displayed",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("PlayerSpecialMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("PlayerSpecialMarketInStatistics"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC229-Soccer_BetBook",
						"check when user click on \"PlayerSpecial\" market of statistics page then respected result getting displayed or not",
						"checked User click on \"PlayerSpecial\" market of statistics page then respected result getting displayed",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC229-Soccer_BetBook",
						"check when user click on \"PlayerSpecial\" market of statistics page then respected result getting displayed or not",
						"checked User Not click on \"PlayerSpecial\" market of statistics page then respected result Not getting displayed",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("CombosMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("CombosMarketInStatistics"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC230-Soccer_BetBook",
						"check when user click on \"Combos\" market of statistics page then respected result getting displayed or not",
						"checked User click on \"Combos\" market of statistics page then respected result getting displayed",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC230-Soccer_BetBook",
						"check when user click on \"Combos\" market of statistics page then respected result getting displayed or not",
						"checked User Not click on \"Combos\" market of statistics page then respected result Not getting displayed",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("BookingMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("BookingMarketInStatistics"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC231-Soccer_BetBook",
						"check when user click on \"Booking\" market of statistics page then respected result getting displayed or not",
						"checked User click on \"Booking\" market of statistics page then respected result getting displayed",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC231-Soccer_BetBook",
						"check when user click on \"Booking\" market of statistics page then respected result getting displayed or not",
						"checked User Not click on \"Booking\" market of statistics page then respected result Not getting displayed",
						"Fail");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketInStatistics"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC232-Soccer_BetBook",
						"check when user click on \"BuildABet\" market of statistics page then respected result getting displayed or not",
						"checked User click on \"BuildABet\" market of statistics page then respected result getting displayed",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC232-Soccer_BetBook",
						"check when user click on \"BuildABet\" market of statistics page then respected result getting displayed or not",
						"checked User Not click on \"BuildABet\" market of statistics page then respected result Not getting displayed",
						"Fail");

				return false;
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {

			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");

			return false;
		}

		return true;
	}

	// TC-233-243 (SB) @Author: AS66528//
	// To check that when a user clicks on a team, the respective statistics for
	// that team in the leagues should open

	public boolean SB_UpcomingLeagueUIStatisticdetailsPage(Desktop_HTML_Report report) {

		try {

			try {

				webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("AllMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("AllMarketInStatistics"))).click();
				Thread.sleep(4000);
				webdriver.findElement(By.xpath(XpathMap.get("CombosMarketInStatistics")));
				System.out.print("Markets in statistic page drag to rightside \n ");

				report.detailsAppend("TC233-Soccer_BetBook",
						"check the functionality of left-right scroll Bar for market names on statistics page",
						"check the functionality of left-right scroll Bar for market names on statistics page", "Pass");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("AllMarketInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("AllMarketInStatistics"))).click();
				System.out.print("AllMarket in Statistic page is Selected \n ");
				Thread.sleep(3000);

				report.detailsAppend("TC234-Soccer_BetBook",
						"check when user select any market from statistics page, for that selected market color is getting change to dark color or not",
						"check user select any market from statistics page, for that selected market color getting change to dark color",
						"Pass");

			} catch (Exception e) {
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("1stLeagueTeaminOutrights"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("1stLeagueTeaminOutrights"))).click();

				report.detailsAppend("TC233-Soccer_BetBook",
						"check the functionality of left-right scroll Bar for market names Not on statistics page",
						"check the functionality of left-right scroll Bar for market names Not on statistics page",
						"Fail");

				report.detailsAppend("TC234-Soccer_BetBook",
						"check when user select any market from statistics page, for that selected market color is getting change to dark color or not",
						"check user select any market from statistics page, for that selected market color Not getting change to dark color",
						"Fail");

				return false;
			}

			try {

				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("CashoutIconInStatisticmarket"))).isDisplayed());

				report.detailsAppend("TC235-Soccer_BetBook",
						"check whether cash out icon/ option is available for particular match or not",
						"checked that cash out icon/ is option available for particular match", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC235-Soccer_BetBook",
						"check whether cash out icon/ option is available for particular match or not",
						"checked that cash out icon/ is option not available for particular match", "Fail");
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("1stOddInStatisticMarket"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("1stOddInStatisticMarket"))).click();
				System.out.print("1st odds Selected in Market Statistic \n ");
				Thread.sleep(3000);
				report.detailsAppend("TC236-Soccer_BetBook",
						"Verify whether user is able to select odds from the market of Statistics page",
						"Verify whether user is able to select odds from the market of Statistics page", "Pass");

				Thread.sleep(3000);
				report.detailsAppend("TC236-Soccer_BetBook",
						"check when user select odds, that same odds are getting reflected on betslip or not",
						"checked user select odds, that same odds are reflected on betslip", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC237-Soccer_BetBook",
						"Verify whether user is able to select odds from the market of Statistics page",
						"Verify whether user Not able to select odds from the market of Statistics page", "Fail");

				report.detailsAppend("TC237-Soccer_BetBook",
						"check when user select odds, that same odds are getting reflected on betslip or not",
						"checked user select odds, that same odds are Not reflected on betslip", "Fail");

				return false;
			}

			try {

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("downwardMarkettab"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("downwardMarkettab"))).click();

				report.detailsAppend("TC238-Soccer_BetBook",
						"Verify the extend and close functionality of the Market tab under different markets and list of odds should be visible",
						"Verify the extend and close functionality of the Market tab under different markets and list of odds be visible",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC238-Soccer_BetBook",
						"Verify the extend and close functionality of the Market tab under different markets and list of odds should be visible",
						"Verify the extend and close functionality of the Market tab under different markets and list of odds Not visible",
						"Fail");

				return false;
			}

			try {

				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("IiconInStatisticMarket"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("IiconInStatisticMarket"))).click();
				Thread.sleep(3000);
				report.detailsAppend("TC239-Soccer_BetBook",
						"Verify the functionality of i icon of market tab under different market",
						"Verified the functionality of i icon of market tab under different market", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC239-Soccer_BetBook",
						"Verify the functionality of i icon of market tab under different market",
						"Verified the functionality of i icon of market tab Noy visible", "Fail");

				return false;
			}

			try {

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SearchBtnInStatistics"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SearchBtnInStatistics"))).click();
				Thread.sleep(3000);

				report.detailsAppend("TC240-Soccer_BetBook",
						"check whether functinality of the Search Text Box of the statistics window",
						"checked functinality of the Search Text Box of the statistics window", "Pass");

				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("SearchBoxEnterinStatistic"))).sendKeys("Team");
				Thread.sleep(3000);

				report.detailsAppend("TC241-Soccer_BetBook",
						"Verify that when we enter any match/league name of statistics, matches window should get open with list of teams of league",
						"Verified we enter any match/league name of statistics, matches window get open with list of teams of league",
						"Pass");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SearchboxCloseBtninStatisticpage")))
						.isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SearchboxCloseBtninStatisticpage"))).click();

			} catch (Exception e) {
				report.detailsAppend("TC240-Soccer_BetBook",
						"check whether functinality of the Search Text Box of the statistics window",
						"checked functinality of the Search Text Box Not clicked in statistics window", "Fail");

				report.detailsAppend("TC241-Soccer_BetBook",
						"Verify that when we enter any match/league name of statistics, matches window should get open with list of teams of league",
						"Verified we enter any match/league name of statistics, matches window Not open with list of teams of league",
						"Pass");

				return false;
			}

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SearchBtnInStatistics"))).isDisplayed());
				Thread.sleep(3000);

				report.detailsAppend("TC242-Soccer_BetBook",
						" Verify the UI of statistics window with proper spell check and alignment of all the elements",
						" Verified UI of statistics window with proper spell check and alignment of all the elements",
						"Pass");

				Thread.sleep(3000);
				report.detailsAppend("TC243-Soccer_BetBook",
						"Verify the UI of the sport window with statistics which include timer and sport points of the teams with details.",
						"Verify the UI of the sport window with statistics which include timer and sport points of the teams with details.",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC242-Soccer_BetBook",
						" Verify the UI of statistics window with proper spell check and alignment of all the elements",
						" Verified UI of statistics window with proper spell check and alignment of all the elements",
						"Fail");

				Thread.sleep(3000);
				report.detailsAppend("TC243-Soccer_BetBook",
						"Verify the UI of the sport window with statistics which include timer and sport points of the teams with details.",
						"Verify the UI of the sport window with statistics which Not include timer and sport points of the teams with details.",
						"Fail");

				return false;
			}

			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			log.debug("Switch to default tab");

			return false;
		}
		return true;
	}

///////////////////////////////// BETSLIP VUVUZELA UAT /////////////////////////////////////
///////BETSLIP VUVUZELA  ////////
	public void loginUAT() throws Exception {
		webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
		webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
		Thread.sleep(2000);
		Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
		System.out.print("HamburgerMenu Button Clicked");
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
		Thread.sleep(2000);
		String title = webdriver.getCurrentUrl();
		if (title.contains("za")) {
			webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber"))).sendKeys(XpathMap.get("SAUATPhno"));
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("SAUATPass"));
			System.out.print("Password is Entered");
			Thread.sleep(2000);
		}
		try {
			webdriver.findElement(By.xpath(XpathMap.get("LoginOnLoginPage"))).click();
			Thread.sleep(4000);
		} catch (Exception e) {
			System.out.println(e);
		}
		webdriver.navigate().refresh();
	}

//public void oddsInBetBook() throws Exception {
//webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
//Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed());
//System.out.print("VuvuSportButton is Present");
////webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
//Thread.sleep(2000);
//
//Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("OddsInBetBook"))).isDisplayed());
//System.out.print("OddsInBetBook is Present");
//webdriver.findElement(By.xpath(XpathMap.get("OddsInBetBook"))).click();
//System.out.print("single Odds selected is Present");
//Thread.sleep(2000);
//}

	public void RemoveAllOdds() throws Exception {
		try {
			webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			System.out.print("Removeall button not visible");
		}
		webdriver.navigate().refresh();
	}

//TC-1 (BetSlip) @Author: @Author: AS66528
//When we add the first bet to the bet slip, it should be added to both the
//single bet and multi-bet selection pages.
	public boolean SingleMultiBetslip(Desktop_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("BetSingle"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC1-BetSlip",
					"When we add the first bet to the bet slip, it should be added to single bet ",
					"When we add the first bet to the bet slip, it is be added to both the single bet ", "Pass");
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC1.1-BetSlip",
					"When we add the first bet to the bet slip, it should be added to Multi bet ",
					"When we add the first bet to the bet slip, it is be added to both the Multi bet ", "Pass");
			webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC1-BetSlip",
					"When we add the first bet to the bet slip, it should be added to both the single bet and Multi bet ",
					"When we add the first bet to the bet slip,NOT added to both the single bet ", "Fail");

			report.detailsAppend("TC1.1-BetSlip",
					"When we add the first bet to the bet slip, it should be added to Multi bet ",
					"When we add the first bet to the bet slip, NOT added to both the Multi bet ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-2 (BetSlip) @Author: AS66528
//When we add more than one bet, it should automatically be added to the
//multi-bet selection..
	public boolean DefaultMultiBetslipAddition(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC2-BetSlip",
					"When we add more than one bet, it should automatically be added to the multi-bet selection.",
					"When we add more than one bet, it is automatically be added to the multi-bet selection. ", "Pass");
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC2-BetSlip",
					"/When we add more than one bet, it should automatically be added to the multi-bet selection.",
					"/When we add more than one bet, it is automatically be added to the multi-bet selection. ",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-3 (BetSlip) @Author: AS66528
//When we add the first bet to the bet slip, the "Select All" switch should be
//selected by default, and the color of the switch should be green.
	public boolean DefaultSelectAllButton(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			report.detailsAppend("TC3-BetSlip", "\"Select All\" switch should be selected by default",
					"\"Select All\" switch is selected by default ", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC3-BetSlip", "\"Select All\" switch should be selected by default",
					"\"Select All\" switch is selected by default ", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-4 (BetSlip) @Author: AS66528
//The user should be able to deselect leg options.
	public boolean DeSelectLegsBetSlip(Desktop_HTML_Report report) {

		try {
			Thread.sleep(2000);
			try {
				oddsInBetBook();
			} catch (Exception e) {

				System.out.println("Error is" + e);
			}

			webdriver.findElement(By.xpath(XpathMap.get("VuvuCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC4-BetSlip", "The user should be able to deselect leg options.",
					"The user is able to deselect leg options.", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC4-BetSlip", "The user should be able to deselect leg options.",
					"The user is able to deselect leg options. ", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-5 (BetSlip) @Author: AS66528
//The user should be able to select leg options after deselecting them.
	public boolean SelectDeSelectedLegsBetSlip(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("VuvuCheckBox"))).click();
			webdriver.findElement(By.xpath(XpathMap.get("VuvuCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC5-BetSlip", "The user should be able to select leg options after deselecting them.",
					"The user is able to select leg options after deselecting them.", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC5-BetSlip", "The user should be able to select leg options after deselecting them.",
					"The user is able to select leg options after deselecting them. ", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-6 (BetSlip) @Author: AS66528
//When we switch the "Select All" switch to deselect, it should change to the
//deselect state, and the color of the switch should convert to white.
	public boolean SelectAllWhiteBetSlip(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("VuvuCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC6-BetSlip", "The color of the switch should convert to white.",
					"The color of the switch is convert to white. ", "Pass");
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC6-BetSlip", "The color of the switch should convert to white.",
					"The color of the switch is convert to white. ", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-7 (BetSlip) @Author: AS66528
//User can click inside the booking code text box..
	public boolean BookingCodeBetSlip(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookingCode"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC7-BetSlip", "User Should click inside the booking code text box.",
					"User can click inside the booking code text box.", "Pass");

			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC7-BetSlip", "User Should click inside the booking code text box.",
					"User can click inside the booking code text box.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-8 (BetSlip) @Author: AS66528
//Entering a valid booking code allows submission.
	public boolean ValidBookingCodeBetSlip(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookingCode"))).sendKeys("UFC9D2");
			Thread.sleep(2000);
			webdriver.findElement(By.cssSelector(XpathMap.get("VuvuSearch"))).click();
			Thread.sleep(20000);
			report.detailsAppend("TC8-BetSlip", "valid booking code should allow submission.",
					"valid booking code allows submission.", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC8-BetSlip", "valid booking code should allow submission.",
					"valid booking code allows submission.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-9 (BetSlip) @Author: AS66528
//Entering an invalid booking code should prevent submission.
	public boolean InValidBookingCodeBetSlip(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookingCode"))).sendKeys("U1F95C");
			Thread.sleep(2000);
			webdriver.findElement(By.cssSelector(XpathMap.get("VuvuSearch"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC9-BetSlip", "invalid booking code should prevent submission.",
					"invalid booking code prevents submission.", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC9-BetSlip", "invalid booking code should prevent submission.",
					"invalid booking code prevents submission.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-10 (BetSlip) @Author: AS66528
//Submitting an empty field should not be allowed.
	public boolean EmptyBookingCodeBetSlip(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();

			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookingCode"))).sendKeys(" ");
			Thread.sleep(2000);
			webdriver.findElement(By.cssSelector(XpathMap.get("VuvuSearch"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC10-BetSlip", "Empty booking code should prevent submission.",
					"Empty booking code prevents submission.", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC10-BetSlip", "Empty booking code should prevent submission.",
					"Empty booking code prevents submission.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-11 (BetSlip) @Author: AS66528
//User can click inside the booking code text box..
	public boolean BookingCodeMultiBetslip(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookingCode"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC11-BetSlip", "User Should click inside the booking code text box.",
					"User can click inside the booking code text box.", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC11-BetSlip", "User Should click inside the booking code text box.",
					"User can click inside the booking code text box.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-12 (BetSlip) @Author: AS66528
//User can click inside the booking code text box..
	public boolean BookingCodeSelectMultiBetslip(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookingCode"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("Sall"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC12-BetSlip", "User Should click inside the booking code text box.",
					"User can click inside the booking code text box.", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC12-BetSlip", "User Should click inside the booking code text box.",
					"User can click inside the booking code text box.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-13 (BetSlip) @Author: AS66528
//Entering a valid booking code allows submission.
	public boolean ValidBookingCodeMultiBetslip(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookingCode"))).sendKeys("U1F95C807");
			Thread.sleep(2000);
			webdriver.findElement(By.cssSelector(XpathMap.get("VuvuSearch"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC13-BetSlip", "valid booking code should allow submission.",
					"valid booking code allows submission.", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC13-BetSlip", "valid booking code should allow submission.",
					"valid booking code allows submission.", "Fail");
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-14 (BetSlip) @Author: AS66528
//Entering an invalid booking code should prevent submission.
	public boolean InValidBookingCodeMultiBetslip(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookingCode"))).sendKeys("U1F95C");
			Thread.sleep(2000);
			webdriver.findElement(By.cssSelector(XpathMap.get("VuvuSearch"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC14-BetSlip", "invalid booking code should prevent submission.",
					"invalid booking code prevents submission.", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC14-BetSlip", "invalid booking code should prevent submission.",
					"invalid booking code prevents submission.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-15 (BetSlip) @Author: AS66528
//Submitting an empty field should not be allowed.
	public boolean EmptyBookingCodeMultiBetslip(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookingCode"))).sendKeys(" ");
			Thread.sleep(2000);
			webdriver.findElement(By.cssSelector(XpathMap.get("VuvuSearch"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC15-BetSlip", "Empty booking code should prevent submission.",
					"Empty booking code prevents submission.", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC15-BetSlip", "Empty booking code should prevent submission.",
					"Empty booking code prevents submission.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-16 (BetSlip) @Author: AS66528
//Check user should able to click on Single bet slip.
	public boolean SingleBetSlipClick(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BetSingle"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC16-BetSlip", "user should able to click on  Single bet slip.",
					"user is able to click on  Single bet slip.", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC16-BetSlip", "user should able to click on  Single bet slip.",
					"user is able to click on  Single bet slip.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-17 (BetSlip) @Author: AS66528
//User should see the same leg is added into the single betslip.
	public boolean VerifySingleBetSlipClick(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			report.detailsAppend("TC17-BetSlip", "User should see  the same leg is added into the single betslip.",
					"User is able to see  the same leg is added into the single betslip.", "Pass");
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC17-BetSlip", "User should see  the same leg is added into the single betslip.",
					"User is able to see  the same leg is added into the single betslip.", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-18 (BetSlip) @Author: AS66528
//user can select/unselect Checkbox
	public boolean CheckBoxClick(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			report.detailsAppend("TC18-BetSlip", " User Should select Checkbox .", " User can select Checkbox. ",
					"Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC18-BetSlip", " User Should Unselect Checkbox .", " User can Unselect Checkbox. ",
					"Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC18-BetSlip", " user Should select/Unselect Checkbox .",
					" user can select/Unselect Checkbox. ", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-19 (BetSlip) @Author: AS66528
//User can see that after deselecting a checkbox for a single bet then
//bydefault deselects the Select All button.
	public boolean DefaultSelectAll(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();

			webdriver.findElement(By.xpath(XpathMap.get("VuvuCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC19-BetSlip", " user Should able to see SelectAll Deselecting .",
					" user can see selectAll Deselected ", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC19-BetSlip", " user Should able to see SelectAll Deselecting .",
					" user can see selectAll Deselected ", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-20 (BetSlip) @Author: AS66528
//User should see the same leg is added into the Multi betslip.
	public boolean VerifyMultiBetslip(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC20-BetSlip", " User should see  the same leg is added into the Multi betslip.",
					"User is able to see  the same leg is added into the Multi betslip.", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC20-BetSlip", " user Should able to see SelectAll Deselecting .",
					" user can see selectAll Deselected ", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-21 (BetSlip) @Author: AS66528
//Confirm the functionality of the checkbox by testing its ability to be checked and unchecked for an added bet in the Multi betslip.
	public boolean MultiBetslipCheckBox(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC21-BetSlip", " user Should able to Click the CheckBox in Multi Betslip .",
					" user is able to Click the CheckBox in Multi Betslip ", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC21-BetSlip", " user Should able to Click the CheckBox in Multi Betslip .",
					" user is able to Click the CheckBox in Multi Betslip ", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-22 (BetSlip) @Author: AS66528
//User can see  that after  deselecting a checkbox for a Multi bet then bydefault deselects the Select All button.
	public boolean MultiBetslipSelectAll(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuCheckBox"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC22-BetSlip",
					" user Should able to Click the CheckBox in Multi Betslip then bydefault deselects the Select All button.",
					" user is able to Click the CheckBox in Multi Betslip then bydefault deselects the Select All button. ",
					"Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC22-BetSlip",
					" user Should able to Click the CheckBox in Multi Betslip then bydefault deselects the Select All button.",
					" user is able to Click the CheckBox in Multi Betslip then bydefault deselects the Select All button.",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-23 (BetSlip) @Author: AS66528
//User can see Multi betslip opens the Winning Probability page.
	public boolean MultiBetslipStatisticsPage(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuEventStatistics"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println("Error is" + e);
			}
			report.detailsAppend("TC23-BetSlip",
					" User can see Clicking on Multi betslip opens the Winning Probability page.",
					" User is able to see Clicking on Multi betslip opens the Winning Probability page. ", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC23-BetSlip",
					" User can see Clicking on Multi betslip opens the Winning Probability page.",
					" User is able to see Clicking on Multi betslip opens the Winning Probability page. ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-25 (BetSlip) @Author: AS66528
//To check "Booking code" pop up window getting closed on clicking "Close" button
	public boolean MultiBookingCodeClose(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("UATBookingCodeDialog")));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("UATBookingCodeCloseButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC25-BetSlip",
					" To check \"Booking code\" pop up window getting closed on clicking \"Close\" button",
					" User is able to close Booking code pop-up Window ", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC25-BetSlip",
					" To check \"Booking code\" pop up window getting closed on clicking \"Close\" button",
					" User is able to close Booking code pop-up Window ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-26 (BetSlip) @Author: AS66528
//To check the WhatApps button in the Book pop window
	public boolean WhatsAppButton(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("UATBookingCodeDialog")));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuWhatsApp"))).click();
			report.detailsAppend("TC26-BetSlip", " To check the WhatApps  button in the Book pop window ",
					"  WhatApps  button is Clicked in the Book pop window  ", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(XpathMap.get("UATBookingCodeCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC26-BetSlip", " To check the WhatApps  button in the Book pop window ",
					"  WhatApps  button is Clicked in the Book pop window  ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-27 (BetSlip) @Author: AS66528
//To check the Twitter button in the Book pop window
	public boolean TwitterButton(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("UATBookingCodeDialog")));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuTwitter"))).click();
			report.detailsAppend("TC27-BetSlip", " To check the WhatApps  button in the Book pop window ",
					"  WhatApps  button is Clicked in the Book pop window  ", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(XpathMap.get("UATBookingCodeCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC27-BetSlip", " To check the Twitter  button in the Book pop window ",
					"  Twitter  button is Clicked in the Book pop window  ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-28 (BetSlip) @Author: AS66528
//To check the Facebook button in the Book pop window
	public boolean FacebookButton(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("UATBookingCodeDialog")));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuFaceBook"))).click();
			report.detailsAppend("TC28-BetSlip", " To check the Facebook  button in the Book pop window ",
					"  Facebook  button is Clicked in the Book pop window  ", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(XpathMap.get("UATBookingCodeCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC28-BetSlip", " To check the Facebook  button in the Book pop window ",
					"  Facebook  button is Clicked in the Book pop window  ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-29 (BetSlip) @Author: AS66528
//To check the Mail button in the Book pop window
	public boolean MailButton(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("UATBookingCodeDialog")));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuMail"))).click();
			report.detailsAppend("TC29-BetSlip", " To check the Mail  button in the Book pop window ",
					"  Mail  button is Clicked in the Book pop window  ", "Pass");
			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(XpathMap.get("UATBookingCodeCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC29-BetSlip", " To check the Mail  button in the Book pop window ",
					"  Mail  button is Clicked in the Book pop window  ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-30 (BetSlip) @Author: AS66528
//To check the ContinueBetting button in the Book pop window
	public boolean ContinueBettingButton(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuBookButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("UATBookingCodeDialog")));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuContinueBetting"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC30-BetSlip", " To check the ContinueBetting  button in the Book pop window ",
					"  ContinueBetting  button is Clicked in the Book pop window  ", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC30-BetSlip", " To check the ContinueBetting  button in the Book pop window ",
					"  ContinueBetting  button is Clicked in the Book pop window  ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-37 (BetSlip) @Author: AS66528
//To check functionality of "Keep bets in betslip check box" Without checking
//the Checkbox
	public boolean SingleBetKeepBetsCheckBox(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			try {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuKeepBets"))).click();
				webdriver.findElement(By.xpath(XpathMap.get("VuvuKeepBets"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("VuvuKeepBets button not Visible to Click");
			}
			report.detailsAppend("TC37-BetSlip", " \"Keep bets in betslip check box\" should be visible ",
					" \"Keep bets in betslip check box\" is visible ", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC37-BetSlip", " \"Keep bets in betslip check box\" should be visible ",
					" \"Keep bets in betslip check box\" is visible ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-38 (BetSlip) @Author: AS66528
//To check functionality of "Keep bets in betslip check box" With checking the
//Checkbox
	public boolean SingleBetKeepBetsCheckBoxClick(Desktop_HTML_Report report) {

		try {

			oddsInBetBook();
			try {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuKeepBets"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("VuvuKeepBets button not Visible to Click");
			}
			report.detailsAppend("TC38-BetSlip", " \"Keep bets in betslip check box\" should be Clicked ",
					" \"Keep bets in betslip check box\" is visible ", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC38-BetSlip", " \"Keep bets in betslip check box\" should be visible ",
					" \"Keep bets in betslip check box\" is Clicked ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-39 (BetSlip) @Author: AS66528
//To check functionality of "Keep bets in betslip check box" Without checking
//the Checkbox
	public boolean MultiBetKeepBetsCheckBox(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuKeepBets"))).click();
				webdriver.findElement(By.xpath(XpathMap.get("VuvuKeepBets"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("VuvuKeepBets button not Visible to Click");
			}
			report.detailsAppend("TC39-BetSlip", " \"Keep bets in betslip check box\" should be visible ",
					" \"Keep bets in betslip check box\" is visible ", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC39-BetSlip", " \"Keep bets in betslip check box\" should be visible ",
					" \"Keep bets in betslip check box\" is visible ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-40 (BetSlip) @Author: AS66528
//To check functionality of "Keep bets in betslip check box" With checking the
//Checkbox
	public boolean MultiBetKeepBetsCheckBoxClick(Desktop_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuKeepBets"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("VuvuKeepBets button not Visible to Click");
			}
			report.detailsAppend("TC40-BetSlip", " \"Keep bets in betslip check box\" should be Clicked ",
					" \"Keep bets in betslip check box\" is visible ", "Pass");
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC40-BetSlip", " \"Keep bets in betslip check box\" should be visible ",
					" \"Keep bets in betslip check box\" is Clicked ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-41 (BetSlip) @Author: AS66528
//To check without check the Accept all odds & line charges Check box
	public boolean SingleBetAcceptOddsCheckBox(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			try {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuAcceptOdds"))).click();
				webdriver.findElement(By.xpath(XpathMap.get("VuvuAcceptOdds"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("VuvuAcceptOdds button not Visible to Click");
			}
			report.detailsAppend("TC41-BetSlip", "Accept all odds & line charges Check box should be visible ",
					"Accept all odds & line charges Check box is visible ", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC41-BetSlip", "Accept all odds & line charges Check box should be visible ",
					"Accept all odds & line charges Check box is visible ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-42 (BetSlip) @Author: AS66528
//To check functionality of "Keep bets in betslip check box" With checking the
//Checkbox
	public boolean SingleBetAcceptOddsCheckBoxClick(Desktop_HTML_Report report) {

		try {

			oddsInBetBook();
			try {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuAcceptOdds"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("VuvuAcceptOdds button not Visible to Click");
			}
			report.detailsAppend("TC42-BetSlip", " \"Keep bets in betslip check box\" should be Clicked ",
					" \"Keep bets in betslip check box\" is visible ", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC42-BetSlip", "Accept all odds & line charges Check box should be visible ",
					"Accept all odds & line charges Check box is Clicked ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-43 (BetSlip) @Author: AS66528
//To check functionality of "Keep bets in betslip check box" Without checking
//the Checkbox
	public boolean MultiBetAcceptOddsCheckBox(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuAcceptOdds"))).click();
				webdriver.findElement(By.xpath(XpathMap.get("VuvuAcceptOdds"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("VuvuAcceptOdds button not Visible to Click");
			}
			report.detailsAppend("TC43-BetSlip", "Accept all odds & line charges Check box should be visible ",
					"Accept all odds & line charges Check box is visible ", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC43-BetSlip", "Accept all odds & line charges Check box should be visible ",
					"Accept all odds & line charges Check box is visible ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-44 (BetSlip) @Author: AS66528
//To check functionality of "Keep bets in betslip check box" With checking the
//Checkbox
	public boolean MultiBetAcceptOddsCheckBoxClick(Desktop_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuAcceptOdds"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("VuvuAcceptOdds button not Visible to Click");
			}
			report.detailsAppend("TC44-BetSlip", "Accept all odds & line charges Check box should be Clicked ",
					"Accept all odds & line charges Check box is visible ", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC44-BetSlip", "Accept all odds & line charges Check box should be visible ",
					"Accept all odds & line charges Check box is Clicked ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-45 (BetSlip) @Author: AS66528
//To check Total betway return Wager calculation(Odd*Bet Wager)
	public boolean TotalBetwayReturn(Desktop_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuAcceptOdds"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("VuvuAcceptOdds button not Visible to Click");
			}
			report.detailsAppend("TC45-BetSlip", "Check Total betway return Wager calculation",
					"Check Total betway return Wager calculation", "Pass");
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC45-BetSlip", "Check Total betway return Wager calculation",
					"Check Total betway return Wager calculation", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-46 (BetSlip) @Author: AS66528
//To check on clicking Total BetWay return dropdown user able to see potential
//return Wager
	public boolean PotentialReturn1(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			try {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuAcceptOdds"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("VuvuKeepBets button not Visible to Click");
			}
			report.detailsAppend("TC46-BetSlip",
					"Clicking on Total BetWay return dropdown user Should able to see potential return",
					"Clicking on Total BetWay return dropdown user is able to see potential return", "Pass");
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC46-BetSlip",
					"Clicking on Total BetWay return dropdown user Should able to see potential return",
					"Clicking on Total BetWay return dropdown user is able to see potential return", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//BETSLIP VUVUZELA
//TC-47 (BetSlip) @Author: AS66528
//To check on clicking Total BetWay return dropdown user able to see potential
//return Wager
	public boolean BetWager1(Desktop_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(2000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("SingleBetBetWagerfieldingleBet"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("SingleBetBetWagerfieldingleBet"))).sendKeys("20.00");
				Thread.sleep(2000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(XpathMap.get("SingleBetBetWagerfieldingleBet"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("SingleBetBetWagerfieldingleBet"))).sendKeys("20.00");
				Thread.sleep(2000);

			}
			Thread.sleep(2000);
			report.detailsAppend("TC47-BetSlip", "check Whether user able to enter/add  WagerInputs to Bet Wagerfield",
					"User able to enter/add  WagerInputs to Bet Wagerfield", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC47-BetSlip", "check Whether user able to enter/add  WagerInputs to Bet Wagerfield",
					"User able to enter/add  WagerInputs to Bet Wagerfield", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

///// Akhil @Author: AS66528 /////
//TC-48 (BetSlip) @Author: AS66528
//To check is user able to enter/add Wager to "Bet Wager" field	
	public boolean VerifyMultipleoddsFunctionality(Desktop_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("Bet_Amount"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("TotalBetwayReturnBetAmount"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC48-BetSlip", "check Whether user able to enter/add Wager to Bet Wagerfield",
					"User able to enter/add Wager to Bet Wagerfield", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC48-BetSlip", "check Whether user able to enter/add Wager to Bet Wagerfield",
					"User able to enter/add Wager to Bet Wagerfield", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-49 (BetSlip) @Author: AS66528
//To check is user  not able to enter/add Invalid Wager Inputs  to "Bet Wager" field

	public boolean UserAddInvalidWagerInputs_BetWager(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(2000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM"))).sendKeys("@!&#");
				Thread.sleep(2000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG"))).sendKeys("@!&#");
				Thread.sleep(2000);

			}
			Thread.sleep(2000);
			report.detailsAppend("TC49-BetSlip",
					"check Whether user able to enter/add Invalid WagerInputs to Bet Wagerfield",
					"User able to enter/add Invalid WagerInputs to Bet Wagerfield", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC49-BetSlip",
					"check Whether user able to enter/add Invalid WagerInputs to Bet Wagerfield",
					"User able to enter/add Invalid WagerInputs to Bet Wagerfield", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-50 (BetSlip) @Author: AS66528
//To check calculation of the Total odds by adding more than one odd

	public boolean TotalBetwayReturnWagercalculation(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC50-BetSlip", "check Whether user able to see Total betway return Wager calculation",
					"User able to see Total betway return Wager calculation", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC50-BetSlip",
					"check Whethrer user able to see Total betway return Wager calculation",
					"User able to see Total betway return Wager calculation", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-51 (BetSlip) @Author: AS66528
//Tocheck all bets are getting removed from the Betslip by clicking on Remove all button In MultiBetslip

	public boolean RemoveAlloddsInMultiBetslip(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();

			report.detailsAppend("TC51-BetSlip",
					"all bets should removed In MultiBetslip by clicking on Remove all button",
					"all bets are removed In MultiBetslip by clicking on Remove all button", "Pass");

			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC51-BetSlip",
					"all bets should removed In MultiBetslip by clicking on Remove all button",
					"all bets are removed In MultiBetslip by clicking on Remove all button", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-52 (BetSlip) @Author: AS66528
//Tocheck all bets are getting removed from the Betslip by clicking on Remove all button In Singlebetslip
	public boolean RemoveAlloddsInSinglebetslip(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("BetSingle"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllBets"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC52-BetSlip",
					"all bets should removed In Singlebetslip by clicking on Remove all button",
					"all bets are removed In Singlebetslip by clicking on Remove all button", "Pass");
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC52-BetSlip",
					"all bets should removed In Singlebetslip by clicking on Remove all button",
					"all bets are removed In Singlebetslip by clicking on Remove all button", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-53 (BetSlip) @Author: AS66528
//To check"Quick Bet" is getting display with five buttons.	
	public boolean Multi_VerifyQuickBetbutton(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("Bet_Amount"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC53-BetSlip", "check QuickBet is getting display with five buttons",
					"QuickBet is getting display with five buttons", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC53-BetSlip", "check QuickBet is getting display with five buttons",
					"QuickBet is getting display with five buttons", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-54 (BetSlip) @Author: AS66528
//Check Quick bet values are getting change as per Wager entered in bet Wager.

	public boolean Multi_EnterAmountInQuickBetSection(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(2000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM"))).sendKeys("10.00");
				Thread.sleep(2000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG"))).sendKeys("10.00");
				Thread.sleep(2000);

			}
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("Bet_Amount"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC54-BetSlip",
					"Check Quick bet values are getting change as per Wager entered in bet Wager.",
					"Quick bet values are getting change as per Wager entered in bet Wager.", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC54-BetSlip",
					"Check Quick bet values are getting change as per Wager entered in bet Wager.",
					"Quick bet values are getting change as per Wager entered in bet Wager.", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-55 (BetSlip) @Author: AS66528
//To check"Quick Bet" buttons functionality put "10 R " in bet Wager.

	public boolean Multi_Verify_QuickBetbutton(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(2000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM"))).sendKeys("10.00");
				Thread.sleep(2000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG"))).sendKeys("10.00");
				Thread.sleep(2000);

			}
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("TotalBetwayReturnBetAmount"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC55-BetSlip",
					"Check Quick bet values are getting change as per Wager entered in bet Wager.",
					"Quick bet values are getting change as per Wager entered in bet Wager.", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC55-BetSlip",
					"Check Quick bet values are getting change as per Wager entered in bet Wager",
					"Quick bet values are getting change as per Wager entered in bet Wager", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-56 (BetSlip) @Author: AS66528
//To check"Quick Bet" buttons functionality put "10 R " in bet Wager.

	public boolean Multi_QuickBetbutton(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(2000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM"))).sendKeys("10.00");
				Thread.sleep(2000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG"))).sendKeys("10.00");
				Thread.sleep(2000);

			}
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("TotalBetwayReturnBetAmount"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC56-BetSlip", "User must be able to see quick bet values",
					"User able to see quick bet values", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC56-BetSlip", "User must be able to see quick bet values",
					"User able to see quick bet values", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-57 (BetSlip) @Author: AS66528
//To check Reset button in "Quick Bet " section

	public boolean Multi_VerifyResetbutton(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("TotalBetwayReturnBetAmount"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("ResetButtonInBetslip"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("ResetButton not visible to clicked");
			}
			report.detailsAppend("TC57-BetSlip", "User must check Resetbutton in QuickBet section",
					"check Reset button in Quick Bet section", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC57-BetSlip", "User must check Resetbutton in QuickBet section",
					"check Reset button in Quick Bet section", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-58 (BetSlip) @Author: AS66528
//To check Win Boost  value in Bet amount dropdown

	public boolean Multi_QuickbetCalculation(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("Bet_Amount"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC58-BetSlip", "User must check Quick bet button calculation",
					"check Quick bet button calculation section", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC58-BetSlip", "User must check Quick bet button calculation",
					"check Quick bet button calculation section", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-59 (BetSlip) @Author: AS66528
//To check Win Boost  value in Bet amount dropdown

	public boolean Multi_WinBoostvalueinBetAmount(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("TotalBetwayReturnBetAmount"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC59-BetSlip", "User must check WinBoostvalue in Betamount dropdown",
					"check WinBoostvalue in Betamount dropdown section", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC59-BetSlip", "User must check WinBoostvalue in Betamount dropdown",
					"check WinBoostvalue in Betamount dropdown section", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-60 (BetSlip) @Author: AS66528
//To check Win Boost  value in Bet amount calculation

	public boolean Multi_WinBoostCalculationPage(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("TotalBetwayReturnBetAmount"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("TotalOddstextInBetSlip"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("WinBoostdropdown"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("WinBoostdropdown not visible to clicked");
			}
			report.detailsAppend("TC60-BetSlip", "User must check WinBoostvalue in Betamount calculation",
					"check WinBoostvalue in Betamount calculation Display", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC60-BetSlip", "User must check WinBoostvalue in Betamount calculation",
					"check WinBoostvalue in Betamount calculation Display", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-61 (BetSlip) @Author: AS66528
//To check Win Boost tool tip

	public boolean Multi_WinBoosttooltip(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("TotalBetwayReturnBetAmount"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("TotalOddstextInBetSlip"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("WinBoostdropdown"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("WinBoostdropdown not visible to clicked");
			}
			report.detailsAppend("TC61-BetSlip", "User must check Win Boost tool tip",
					"check Win Boost tool tip Display", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC61-BetSlip", "User must check Win Boost tool tip",
					"check Win Boost tool tip Display", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-62 (BetSlip) @Author: AS66528
//To check Win Boost pop up window contents

	public boolean Multi_WinBoostpopupwindowcontent(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("TotalBetwayReturnBetAmount"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("TotalOddstextInBetSlip"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("WinBoostdropdown"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("WinBoostdropdown not visible to clicked");
			}
			report.detailsAppend("TC62-BetSlip", "User must check Win Boost pop up window contents",
					"check Win Boost pop up window contents Display", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC62-BetSlip", "User must check Win Boost pop up window contents",
					"check Win Boost pop up window contents Display", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-63 (BetSlip) @Author: AS66528
//To check Win Boost value in Bet amount calculation

	public boolean Multi_WinBoostInBetamountCalculation(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("TotalBetwayReturnBetAmount"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("TotalOddstextInBetSlip"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("WinBoostdropdown"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print("WinBoostdropdown not visible to clicked");
			}
			report.detailsAppend("TC63-BetSlip", "User must check Win Boost value in Bet amount calculation",
					"check Win Boost value in Bet amount calculation Display", "Pass");
			Thread.sleep(2000);
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC63-BetSlip", "User must check Win Boost value in Bet amount calculation",
					"check Win Boost value in Bet amount calculation Display", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-64 (BetSlip) @Author: AS66528
//To check if user don't have insufficient funds in account then "Bet Confirmation" pop up window should display

	public boolean Single_BetConfirmationPopupWindow(Desktop_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("BetSingle"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(2000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("SingleBetBetWagerfieldingleBet"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("SingleBetBetWagerfieldingleBet")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(XpathMap.get("SingleBetBetWagerfieldingleBet"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("SingleBetBetWagerfieldingleBet")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);
			}

			report.detailsAppend("TC64-BetSlip",
					"User must check Single- Insufficient funds error pop-up on clicking BetNow button",
					"check Single- Insufficient funds error pop-up on clicking BetNow button", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC64-BetSlip",
					"User must check Single- Insufficient funds error pop-up on clicking BetNow button",
					"check Single- Insufficient funds error pop-up on clicking BetNow button", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-65 (BetSlip) @Author: AS66528
//To check if user don't have insufficient funds in account then "Bet Confirmation" pop up window should display

	public boolean Multi_BetConfirmationPopupWindow(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(2000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);
			}
			Thread.sleep(2000);

			report.detailsAppend("TC65-BetSlip",
					"User must check Multi- Insufficient funds error pop-up on clicking BetNow button",
					"check Multi- Insufficient funds error pop-up on clicking BetNow button", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC65-BetSlip",
					"User must check Multi- Insufficient funds error pop-up on clicking BetNow button",
					"check Multi- Insufficient funds error pop-up on clicking BetNow button", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-66 (BetSlip) @Author: AS66528
//To check on clicking "My Bet" button "Account Options" pop-up window should appear.

	public boolean Single_MyBetButtonAccountPopupWindow(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("BetSingle"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(2000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("SingleBetBetWagerfieldingleBet"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("SingleBetBetWagerfieldingleBet")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(XpathMap.get("SingleBetBetWagerfieldingleBet"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("SingleBetBetWagerfieldingleBet")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);
			}
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC66-BetSlip",
					"User must clicking MyBet button In AccountOptions pop-up window should appear",
					"MyBet button In AccountOptions pop-up window appeared", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC66-BetSlip",
					"User must Clicking MyBet button In AccountOptions pop-up window should appear",
					"MyBet button In AccountOptions pop-up window appeared", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-67 (BetSlip) @Author: AS66528
//To check the result(Data) of "ALL" Radio Button In Singleodd.

	public boolean VerifyMyBet_ALLRadioButtonInSingleodd(Desktop_HTML_Report report) {

		try {
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(2000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);
			}
			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("OpenBets"))).click();
			Thread.sleep(4000);
			webdriver.findElement(By.xpath(XpathMap.get("AllRadioButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC67-BetSlip", "User must check the result(Data) of ALL Radio Button In Singleodd",
					"check the result(Data) of ALL Radio Button In Singleodd", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC67-BetSlip", "User must check the result(Data) of ALL Radio Button In Singleodd",
					"check the result(Data) of ALL Radio Button In Singleodd", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-68 (BetSlip) @Author: AS66528
//To check the result(Data) options in "Sports Drop-down"

	public boolean VerifyOpenBet_SportsDropdown(Desktop_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(2000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);
			}
			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(4000);
			webdriver.findElement(By.xpath(XpathMap.get("OpenBets"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC68-BetSlip", "User must Verify the result(Data) options in Sports Drop-down",
					"erify the result(Data) options in Sports Drop-down", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC68-BetSlip", "User must erify the result(Data) options in Sports Drop-down",
					"erify the result(Data) options in Sports Drop-down", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-69 (BetSlip) @Author: AS66528
//To check content of  'Auto Cash out" pop up window.

	public boolean VerifyMyBet_AutoCashoutPopupWindow(Desktop_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(2000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);
			}
			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(4000);
			report.detailsAppend("TC69-BetSlip", "User must check content of  Auto Cash out popup window",
					"check content of  Auto Cash out popup window", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC69-BetSlip", "User must check content of  Auto Cash out popup window",
					"check content of  Auto Cash out popup window", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-70 (BetSlip) @Author: AS66528
//To check content of   'Auto Cash out" slider.

	public boolean VerifyMyBet_AutoCashoutSlider(Desktop_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(2000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);
			}
			webdriver.navigate().refresh();
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("CashOutButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC70-BetSlip", "User must check content of  Auto Cash out Slider",
					"check content of  Auto Cash out Slider", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC70-BetSlip", "User must check content of  Auto Cash out Slider",
					"check content of  Auto Cash out Slider", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-71 (BetSlip) @Author: AS66528
//To check "Set" button functionality on Auto Cashout

	public boolean VerifySetbutton_inAutoCashoutsection(Desktop_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("BetSingle"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(2000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);
				;
			}
			webdriver.navigate().refresh();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("CashOutButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC71-BetSlip", "User must check functionality of Setbutton in AutoCashout section",
					"checked functionality of Setbutton in AutoCashout section", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC71-BetSlip", "User must check functionality of Setbutton in AutoCashout section",
					"checked functionality of Setbutton in AutoCashout section", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-72 (BetSlip) @Author: AS66528
//To check the functionality of the "Remove" button in Auto Cashout section

	public boolean VerifyRemovebutton_inAutoCashoutsection(Desktop_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(2000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);
			}
			webdriver.navigate().refresh();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("CashOutButton"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC72-BetSlip", "User must check functionality of Removebutton in AutoCashout section",
					"checked functionality of Removebutton in AutoCashout section", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC72-BetSlip", "User must check functionality of Removebutton in AutoCashout section",
					"checked functionality of Removebutton in AutoCashout section", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-73 (BetSlip) @Author: AS66528
//To check the result(Data) of "ALL" Radio Button In MultiOdd

	public boolean VerifyMyBet_ALLRadioButtonInMultiodd(Desktop_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(2000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);
			}
			webdriver.navigate().refresh();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("OpenBets"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("AllRadioButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC73-BetSlip", "User must check the result(Data) of ALL Radio Button In MultiOdd",
					"check the result(Data) of ALL Radio Button In MultiOdd", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC73-BetSlip", "User must check the result(Data) of ALL Radio Button In MultiOdd",
					"check the result(Data) of ALL Radio Button In MultiOdd", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-74 (BetSlip) @Author: AS66528
//To check the functionality of "Hide Losses"  toggle button when it's on

	public boolean VerifySingleodds_HideLossestoggleOn(Desktop_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("BetSingle"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(2000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("SingleBetBetWagerfieldingleBet"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("SingleBetBetWagerfieldingleBet")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(XpathMap.get("SingleBetBetWagerfieldingleBet"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("SingleBetBetWagerfieldingleBet")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);
			}
			webdriver.navigate().refresh();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(14000);
			webdriver.findElement(By.xpath(XpathMap.get("SettledBets"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("HideLossesCheckBox"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC74-BetSlip",
					"User must check functionality of Hide Losses  togglebutton when its on",
					"check functionality of Hide Losses  togglebutton when its on", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC74-BetSlip",
					"User must check functionality of Hide Losses  togglebutton when its on",
					"check functionality of Hide Losses  togglebutton when its on", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-75 (BetSlip) @Author: AS66528
//To check the functionality of "Hide Losses"  toggle button when it's off

	public boolean VerifySingleodds_HideLossestoggleOff(Desktop_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("BetSingle"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(2000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);
			}
			webdriver.navigate().refresh();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(8000);
			webdriver.findElement(By.xpath(XpathMap.get("SettledBets"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("HideLossesCheckBox"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("HideLossesCheckBox"))).click();
			} catch (Exception e) {
				System.out.println(e);
			}

			report.detailsAppend("TC75-BetSlip",
					"User must check functionality of Hide Losses  togglebutton when its off",
					"check functionality of Hide Losses  togglebutton when its off", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC75-BetSlip",
					"User must check functionality of Hide Losses  togglebutton when it's off",
					"check functionality of Hide Losses  togglebutton when it's off", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-76 (BetSlip) @Author: AS66528
//To check the functionality of "Hide Losses"  toggle button when it's on

	public boolean VerifyMultiodds_HideLossestoggleOn(Desktop_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(2000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);
			}
			webdriver.navigate().refresh();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(8000);
			webdriver.findElement(By.xpath(XpathMap.get("SettledBets"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("HideLossesCheckBox"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC76-BetSlip",
					"User must check functionality of Hide Losses  togglebutton when its on",
					"check functionality of Hide Losses  togglebutton when its on", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC76-BetSlip",
					"User must check functionality of Hide Losses  togglebutton when its on",
					"check functionality of Hide Losses  togglebutton when its on", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-77 (BetSlip) @Author: AS66528
//To check the functionality of "Hide Losses"  toggle button when it's off

	public boolean VerifyMultiodds_HideLossestoggleOff(Desktop_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(2000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);
			}
			webdriver.navigate().refresh();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(8000);
			webdriver.findElement(By.xpath(XpathMap.get("SettledBets"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("HideLossesCheckBox"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("HideLossesCheckBox"))).click();
			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC77-BetSlip",
					"User must check functionality of Hide Losses  togglebutton when its off",
					"check functionality of Hide Losses  togglebutton when its off", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC77-BetSlip",
					"User must check functionality of Hide Losses  togglebutton when its off",
					"check functionality of Hide Losses  togglebutton when its off", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-78 (BetSlip) @Author: AS66528
//To check on clicking the partial button tool tip is showing

	public boolean VerifyMultiodds_OpenbetsPopup(Desktop_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(2000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);
			}
			webdriver.navigate().refresh();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("OpenBets"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC78-BetSlip", "User must check on clicking the partial button tool tip is showing",
					"check on clicking the partial button tool tip is showing", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC78-BetSlip", "User must check on clicking the partial button tool tip is showing",
					"check on clicking the partial button tool tip is showing", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-79 (BetSlip) @Author: AS66528
//To check after partial cashout done then "Partial" button get enabled

	public boolean VerifyMultiodds_cashoutPopUpWindow(Desktop_HTML_Report report) {

		try {

			oddsInBetBook();
			webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BetMulti"))).click();
			Thread.sleep(2000);
			String title = webdriver.getCurrentUrl();
			if ((title).contains("za")) {
				Thread.sleep(2000);
			} else if (title.contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldZM")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);

			} else if (title.contains("ng")) {
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("BetWagerfieldNG")))
						.sendKeys(XpathMap.get("AmountForInSufficient"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				Thread.sleep(2000);
			}
			webdriver.navigate().refresh();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
			Thread.sleep(4000);
			webdriver.findElement(By.xpath(XpathMap.get("OpenBets"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("CashOutButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC79-BetSlip",
					"User must check after partial cashout done then Partial button get enabled",
					"check after partial cashout done then Partial button get enabled", "Pass");
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			RemoveAllOdds();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC79-BetSlip",
					"User must check after partial cashout done then Partial button get enabled",
					"check after partial cashout done then Partial button get enabled", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

////////////////////////////////////////BuildABet  ////////////////////////////////////////////////////////

	public void loginSA() throws Exception {
		webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
		webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
		Thread.sleep(2000);
		Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
		System.out.print("HamburgerMenu Button Clicked");
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
		Thread.sleep(2000);
		webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber"))).sendKeys(XpathMap.get("HMZAPH"));
		Thread.sleep(2000);
		System.out.print("MobileNumber is Entered");
		webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("HMZAPD"));
		System.out.print("Password is Entered");
		Thread.sleep(2000);
		webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();
		Thread.sleep(2000);
		webdriver.navigate().refresh();
		try {
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("PromoClose"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			System.out.print("Promo Not Available");
		}

	}

	public void BuildABetClick() throws Exception {
		webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
		try {
		Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("EventClick"))).isDisplayed());
		System.out.println("EventClick Button is Present");
		webdriver.findElement(By.xpath(XpathMap.get("EventClick"))).click();
		Thread.sleep(2000);
		Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BuildABet"))).isDisplayed());
		System.out.println("BuildABet Button is Present & Clicked \n ");
		webdriver.findElement(By.xpath(XpathMap.get("BuildABet"))).click();
		Thread.sleep(2000);
		} catch(Exception e) {
			
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("EventClick"))).isDisplayed());
			System.out.println("EventClick Button is Present");
			webdriver.findElement(By.xpath(XpathMap.get("EventClick"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BuildABet"))).isDisplayed());
			System.out.println("BuildABet Button is Present & Clicked \n ");
			webdriver.findElement(By.xpath(XpathMap.get("BuildABet"))).click();
			Thread.sleep(2000);
			
		}
	}

//TC-1 (BuildABet) @Author: AS66528
//To check user able to navigate to Sport section
	public boolean SportsPage(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed());
			System.out.println("VuvuSport Button is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC1-BuildABet", "check whether user is able to navigate to Sport section",
					"user is able to navigate to Sport section", "Pass");
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC1-BuildABet", "check whether user is able to navigate to Sport section",
					"user is able to navigate to Sport section", "Fail");

			return false;
		}
		return true;
	}

//TC-2 (BuildABet) @Author: AS66528
//To check user able to nevigate to Soccer sport from sport section
	public boolean SportsToSoccer(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed());
			System.out.println("VuvuSport Button is Present");
			report.detailsAppend("TC2-BuildABet", "check whether user is able to navigate to Soccer From Sport section",
					"user is able to navigate to Soccer From Sport section", "Pass");
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC2-BuildABet", "check whether user is able to navigate to Soccer From Sport section",
					"user is able to navigate to Soccer From Sport section", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-3 (BuildABet) @Author: AS66528
//Verify user able to see betbook under the Live, Highlights, Upcoming,
//Outrights tab
	public boolean BetBook(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed());
			System.out.println("VuvuSport Button is Present");
			Thread.sleep(2000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("EventClick"))).isDisplayed());
			
			report.detailsAppend("TC3-BuildABet",
					"check whether user is able to see betbook under the Live, Highlights, Upcoming, Outrights tab",
					"user is able to see betbook under the Live, Highlights, Upcoming, Outrights tab", "Pass");
			log.debug("Switch to default tab");
			
		} catch (Exception e) {
			report.detailsAppend("TC3-BuildABet",
					"check whether user is able to see betbook under the Live, Highlights, Upcoming, Outrights tab",
					"user Not able to see betbook under the Live, Highlights, Upcoming, Outrights tab", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-4 (BuildABet) @Author: AS66528
//To check user able to navigate to Statistic page from betbook section
	public boolean StatisticsPage(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuStatistics"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC4-BuildABet",
					"check whether user is able to navigate to Statistic page from betbook section",
					"user is able to navigate to Statistic page from betbook section", "Pass");
			log.debug("Switch to default tab");
			try {
			webdriver.findElement(By.xpath(XpathMap.get("VuvuStatisticsClseBtn"))).click();
			Thread.sleep(3000);
			webdriver.navigate().refresh();
			
			} catch (Exception e) {
				webdriver.navigate().refresh();
			}

		} catch (Exception e) {
			report.detailsAppend("TC4-BuildABet",
					"check whether user is able to navigate to Statistic page from betbook section",
					"user Not able to navigate to Statistic page from betbook section", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-5 (BuildABet) @Author: AS66528
//To check user able see Build A Bet tab on Statistic page
	public boolean BuildABet(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			BuildABetClick();
			System.out.println("BuildABet Button is Present");
			Thread.sleep(2000);
			
			report.detailsAppend("TC5-BuildABet", "check whether user is able to see Build A Bet tab on Statistic page",
					"user is able to see Build A Bet tab on Statistic page", "Pass");
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC5-BuildABet", "check whether user is able to see Build A Bet tab on Statistic page",
					"user Not able to see Build A Bet tab on Statistic page", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-6 (BuildABet) @Author: AS66528
//Verify user able click on Build A Bet tab on Statistic page
	public boolean BuildABetTabclick (Desktop_HTML_Report report) {
		webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BuildABet"))).isDisplayed());
//			webdriver.findElement(By.xpath(XpathMap.get("BuildABet"))).click();
			System.out.println("BuildABet Button is Clicked");
			
			report.detailsAppend("TC6-BuildABet",
					"check whether user is able to click on Build A Bet tab on Statistic page",
					"user is able to click on Build A Bet tab on Statistic page", "Pass");
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC6-BuildABet",
					"check whether user is able to click on Build A Bet tab on Statistic page",
					"user Not able to click on Build A Bet tab on Statistic page", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-7 (BuildABet) @Author: AS66528
//To check when user able click on Build A Bet tab on Statistic page its
//highlighted in green colour.
	public boolean BuildABetGreen(Desktop_HTML_Report report) {

		try {
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BuildABet"))).isDisplayed());
			System.out.println("BuildABet Button Clicked, Highighted in green colour \n ");
			
			report.detailsAppend("TC7-BuildABet",
					"check whether user is able to click on Build A Bet tab on Statistic page its highlighted in green colour. ",
					"user is able to click on Build A Bet tab on Statistic page its highlighted in green colour.",
					"Pass");
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC7-BuildABet",
					"check whether user is able to click on Build A Bet tab on Statistic page its highlighted in green colour. ",
					"user Not able to click on Build A Bet tab on Statistic page its highlighted in green colour.",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-8 (BuildABet) @Author: AS66528
//To check user able to see Market dropdowns for example Match Result(1x2),
//Both Teams to score etc
	public boolean BuildABetMarkets(Desktop_HTML_Report report) {

		try {
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketDD"))).isDisplayed());
			System.out.println("BuildABetMarketDD  is Present");
			
			report.detailsAppend("TC8-BuildABet",
					"check whether user is able to see Market dropdowns for example Match Result(1x2), Both Teams to score etc",
					"user is able to see Market dropdowns for example Match Result(1x2), Both Teams to score etc",
					"Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC8-BuildABet",
					"check whether user is able to see Market dropdowns for example Match Result(1x2), Both Teams to score etc",
					"user is able to see Market dropdowns for example Match Result(1x2), Both Teams to score etc",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-9 (BuildABet) @Author: AS66528
//To check user able to Click on Market dropdowns
	public boolean BuildABetMarketClick(Desktop_HTML_Report report) {

		try {
			
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketDD"))).isDisplayed());
			System.out.println("BuildABetMarketDD  is Present");
			webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketDD"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC9-BuildABet", "check whether user is able to Click on Market dropdowns",
					"user is able to Click on Market dropdowns", "Pass");
			
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC9-BuildABet", "check whether user is able to Click on Market dropdowns",
					"user is able to Click on Market dropdowns", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-10 (BuildABet) @Author: AS66528
//To check after click on Market dropdown user able to see Odds
	public boolean BuildABetMarketOdds(Desktop_HTML_Report report) {

		try {
			
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketDD"))).isDisplayed());
			System.out.println("BuildABetMarketDD Clicked,Odds Visible \n ");

			report.detailsAppend("TC10-BuildABet",
					"check whether user is able to check after click on Market dropdown user able to see Odds",
					"user is able to check after click on Market dropdown user able to see Odds", "Pass");
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC10-BuildABet",
					"check whether user is able to check after click on Market dropdown user able to see Odds",
					"user is able to check after click on Market dropdown user able to see Odds", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-11 (BuildABet) @Author: AS66528
//To check user able to select odds from market dropdown
	public boolean BuildABetOddsClick(Desktop_HTML_Report report) {
		webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketClick"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			
			report.detailsAppend("TC11-BuildABet", "check whether user is able to select odds from market dropdown",
					"user is able to select odds from market dropdown", "Pass");
			
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC11-BuildABet", "check whether user is able to select odds from market dropdown",
					"user is able to select odds from market dropdown", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-12 (BuildABet) @Author: AS66528
//To check selected Odds colour should show in green colour.
	public boolean BuildABetGreenOdds(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketClick"))).isDisplayed());
			Thread.sleep(3000);
			
			report.detailsAppend("TC12-BuildABet",
					"check whether user is able to check selected Odds colour should show in green colour.",
					"user is able to check selected Odds colour should show in green colour.", "Pass");
			
			webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC12-BuildABet",
					"check whether user is able to check selected Odds colour should show in green colour.",
					"user is able to check selected Odds colour should show in green colour.", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-13 (BuildABet) @Author: AS66528
//To check user able to deselect odds from market dropdown
	public boolean BuildABetDeselectOdds(Desktop_HTML_Report report) {

		try {			
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			
			report.detailsAppend("TC13-BuildABet", "check whether user is able to deselect odds from market dropdown",
					"user is able to deselect odds from market dropdown", "Pass");			
			
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC13-BuildABet", "check whether user is able to deselect odds from market dropdown",
					"user is able to deselect odds from market dropdown", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-14 (BuildABet) @Author: AS66528
//To check user able to select only one Odds from each market dropdown
	public boolean BuildABetOnlyOneOdds(Desktop_HTML_Report report) {

		try {
			
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketDD2"))).click();
			Thread.sleep(2000);
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			je.executeScript("window.scrollBy(0,100)");
			webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketClick2"))).click();
			Thread.sleep(3000);
			
			report.detailsAppend("TC14-BuildABet",
					"check whether user is able to select only one Odds from each market dropdown",
					"user is able to select only one Odds from each market dropdown", "Pass");
			
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC14-BuildABet",
					"check whether user is able to select only one Odds from each market dropdown",
					"user is able to select only one Odds from each market dropdown", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-15 (BuildABet) @Author: AS66528
//To check when user try to select more than one Odds from each market dropdown
//it should display error pop "Invalid selection : more than outcome per
//outcome"
	public boolean BuildABetOddsError(Desktop_HTML_Report report) throws Exception {

		try {
			
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("ConflictOdds"))).click();
			Thread.sleep(2000);
			
			report.detailsAppend("TC15-BuildABet",
					"check whether user is able to select more than one Odds from each market dropdown it should display error pop \"Invalid selection : more than outcome per outcome\"n",
					"user is able to select more than one Odds from each market dropdown it should display error pop \"Invalid selection : more than outcome per outcome\"",
					"Pass");
			
			webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC15-BuildABet",
					"check whether user is able to select more than one Odds from each market dropdown it should display error pop \"Invalid selection : more than outcome per outcome\"n",
					"user is able to select more than one Odds from each market dropdown it should display error pop \"Invalid selection : more than outcome per outcome\"",
					"Fail");
			
			webdriver.navigate().refresh();
			BuildABetClick();
			return false;
		}
		return true;
	}

//TC-16 (BuildABet) @Author: AS66528
//To check user able to see 0 Selections dropdown tab
	public boolean BuildABetZeroSelections(Desktop_HTML_Report report) {

		try {
			
			report.detailsAppend("TC16-BuildABet", "check whether user is able to see 0 Selections dropdown tab",
					"user is able to see 0 Selections dropdown tab", "Pass");
			log.debug("Switch to default tab");
			
		} catch (Exception e) {
			report.detailsAppend("TC16-BuildABet", "check whether user is able to see 0 Selections dropdown tab",
					"user is able to see 0 Selections dropdown tab", "Fail");

			return false;
		}
		return true;
	}

//TC-17 (BuildABet) @Author: AS66528
//To check after selecting Odds from market dropdown its should display under
//selection tab
	public boolean BuildABetSelectionsTab(Desktop_HTML_Report report) {

		try {		
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			
			report.detailsAppend("TC17-BuildABet",
					"check whether user is able to see selecting Odds in Selections dropdown tab",
					"user is able to see selecting Odds in Selections dropdown tab", "Pass");
			
			webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC17-BuildABet",
					"check whether user is able to see selecting Odds in Selections dropdown tab",
					"user is able to see selecting Odds in Selections dropdown tab", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-18 (BuildABet) @Author: AS66528
//To check after selecting number of Odds from market dropdown its should
//display count on selection tab
	public boolean BuildABetSelectionsCount(Desktop_HTML_Report report) {

		try {
			
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC18-BuildABet", "check whether user is able to see Count in Selections dropdown tab",
					"user is able to see Count in Selections dropdown tab", "Pass");
			
			log.debug("Switch to default tab");

			webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			
		} catch (Exception e) {
			report.detailsAppend("TC18-BuildABet", "check whether user is able to see Count in Selections dropdown tab",
					"user is able to see Count in Selections dropdown tab", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-19 (BuildABet) @Author: AS66528
//To check user able to see Total Odds in round bracket on selection tab
	public boolean BuildABetTotalOdds(Desktop_HTML_Report report) {

		try {
			
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(3000);
			
			report.detailsAppend("TC19-BuildABet",
					"check whether user is able to see Total Odds in round bracket on selection tabb",
					"user is able to see Total Odds in round bracket on selection tab", "Pass");
			
			webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC19-BuildABet",
					"check whether user is able to see Total Odds in round bracket on selection tabb",
					"user is able to see Total Odds in round bracket on selection tab", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-20 (BuildABet) @Author: AS66528
//To check after selecting odds from market dropdown its should display under
//the Total odds on selection tab
	public boolean BuildABetSelections(Desktop_HTML_Report report) {

		try {
			
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC20-BuildABet",
					"check whether user is able to see Total odds on selection tab after selecting from Market Dropdown",
					"user is able to see Total odds on selection tab after selecting from Market Dropdown", "Pass");
			
			webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC20-BuildABet",
					"check whether user is able to see Total odds on selection tab after selecting from Market Dropdown",
					"user is able to see Total odds on selection tab after selecting from Market Dropdown", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-21 (BuildABet) @Author: AS66528
//To check after selecting odds from market dropdown its should display Total
//odds on selection tab
	public boolean BuildABetSelectionsTotalOdds(Desktop_HTML_Report report) {

		try {
		
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(3000);
			report.detailsAppend("TC21-BuildABet",
					"check whether user is able to see odds in selection tab after selecting from Market Dropdown",
					"user is able to see  odds in selection tab after selecting from Market Dropdown", "Pass");
			
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC21-BuildABet",
					"check whether user is able to see odds in selection tab after selecting from Market Dropdown",
					"user is able to see  odds in selection tab after selecting from Market Dropdown", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-22 (BuildABet) @Author: AS66528
//To check selected Odds should be display under the selection tab with cross
//button
	public boolean BuildABetCrossButton(Desktop_HTML_Report report) {

		try {
			
			Thread.sleep(2000);		
			report.detailsAppend("TC22-BuildABet",
					"check whether user is able to check selected Odds should be display under the selection tab with cross button",
					"user is able to check selected Odds should be display under the selection tab with cross button",
					"Pass");
			
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC22-BuildABet",
					"check whether user is able to check selected Odds should be display under the selection tab with cross button",
					"user is able to check selected Odds should be display under the selection tab with cross button",
					"Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	
//TC-23 (BuildABet) @Author: AS66528
//To check after click on cross button the Odds should be remove from Selection
//tab
	public boolean BuildABetCrossButtonClick(Desktop_HTML_Report report) {

		try {
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("RemoveButtonInBAB"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}
			report.detailsAppend("TC23-BuildABet",
					"check whether user is able to remove Odds from Dropdown when click on Cross button",
					"user is able to remove Odds from Dropdown when click on Cross button", "Pass");
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC23-BuildABet",
					"check whether user is able to remove Odds from Dropdown when click on Cross button",
					"user is able to remove Odds from Dropdown when click on Cross button", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-24 (BuildABet) @Author: AS66528
//To check after click on dropup button on Selecting tab then tab should be
//closed
	public boolean BuildABetSelectionsDDClick(Desktop_HTML_Report report) {

		try {
			
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SelectionOddsDD"))).isDisplayed());
			System.out.println("SelectionOdds Dropdown  is Present");
			webdriver.findElement(By.xpath(XpathMap.get("SelectionOddsDD"))).click();
			Thread.sleep(2000);
			
			report.detailsAppend("TC24-BuildABet",
					"check whether user is able to close Dropdown when clicked on dropup button",
					"user is able to close Dropdown when clicked on dropup button", "Pass");
			
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("SelectionOddsDD"))).click();
			Thread.sleep(2000);
			
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC24-BuildABet",
					"check whether user is able to close Dropdown when clicked on dropup button",
					"user is able to close Dropdown when clicked on dropup button", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-25 (BuildABet) @Author: AS66528
//To check user able to see "Add to Betslip" button below the selection tab
	public boolean BuildABetAddToBetSlip(Desktop_HTML_Report report) {

		try {
			Thread.sleep(2000);
			report.detailsAppend("TC25-BuildABet",
					"check whether user is able to see Add to Betslip button below the selection tab",
					"user is able to see Add to Betslip button below the selection tab", "Pass");
		
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC25-BuildABet",
					"check whether user is able to see Add to Betslip button below the selection tab",
					"user is able to see Add to Betslip button below the selection tab", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-26 (BuildABet) @Author: AS66528
//To check user able to click on "Add to Betslip" button below the selection
//tab
	public boolean BuildABetAddToBetSlipClick(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketClick2"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("AddToBetSlip"))).isDisplayed());
			System.out.println("AddToBetSlip Button  is Present");
			webdriver.findElement(By.xpath(XpathMap.get("AddToBetSlip"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC26-BuildABet",
					"check whether user is able to click on Add to Betslip button below the selection tab",
					"user is able to click on Add to Betslip button below the selection tab", "Pass");
		
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC26-BuildABet",
					"check whether user is able to click on Add to Betslip button below the selection tab",
					"user is able to click on Add to Betslip button below the selection tab", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-27 (BuildABet) @Author: AS66528
//To check when user select Odds and click on "Add to Betslip" button the odds
//should be added to betslip
	public boolean BuildABetAddToBetSlipAdd(Desktop_HTML_Report report) {

		try {
		
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).isDisplayed());
			System.out.println("Odds Added ToBetSlip is Present");
			Thread.sleep(2000);
		
			report.detailsAppend("TC27-BuildABet",
					"check whether user is able to see Odds added to the BetSlip when click on Add to Betslip button",
					"user is able to see Odds added to the BetSlip when click on Add to Betslip button", "Pass");
			
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC27-BuildABet",
					"check whether user is able to see Odds added to the BetSlip when click on Add to Betslip button",
					"user is able to see Odds added to the BetSlip when click on Add to Betslip button", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-28 (BuildABet) @Author: AS66528
//To check when user select Odds then "Remove All" button should be display
	public boolean BuildABetRemoveAll(Desktop_HTML_Report report) {

		try {
			
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("RemoveAllButton"))).isDisplayed());
			System.out.println("RemoveAll Button  is Present");
			Thread.sleep(2000);
			
			report.detailsAppend("TC28-BuildABet", "check whether user is able to see RemoveAll Button",
					"user is able to see RemoveAll Button", "Pass");
			
			log.debug("Switch to default tab");
		
		} catch (Exception e) {
			report.detailsAppend("TC28-BuildABet", "check whether user is able to see RemoveAll Button",
					"user is able to see RemoveAll Button", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-29 (BuildABet) @Author: AS66528
//To check user able to click on "Remove All" button
	public boolean BuildABetRemoveAllClick(Desktop_HTML_Report report) {

		try {
			
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("RemoveAllButton"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllButton"))).click();
			System.out.println("RemoveAll Button  is Clicked \n ");
			Thread.sleep(2000);		
			report.detailsAppend("TC29-BuildABet", "check whether user is able to Click RemoveAll Button",
					"user is able to Click RemoveAll Button", "Pass");

			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			report.detailsAppend("TC29-BuildABet", "check whether user is able to Click RemoveAll Button",
					"user is able to Click RemoveAll Button", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-30 (BuildABet) @Author: AS66528
//To check after click on "Remove All" button the selected odds should be
//removed from the selection tab
	public boolean BuildABetRemoveAllOdds(Desktop_HTML_Report report) throws InterruptedException {

		try {
			
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed());		
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			System.out.println("VuvuSport Button is Present & Clicked \n");
			Thread.sleep(4000);
			
			BuildABetClick();
			Thread.sleep(5000);
			webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketClick"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketDD2"))).click();
				Thread.sleep(2000);
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,100)");
				webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketClick2"))).click();				
			} catch(Exception e) {
				System.out.println(e);
			}
			
			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("RemoveAllButton"))).isDisplayed());
			System.out.println("RemoveAll Button  is Present");
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllButton"))).click();
			Thread.sleep(3000);
			
			report.detailsAppend("TC30-BuildABet",
					"check whether user is able to remove all odds from Selections Tab whenClick RemoveAll Button",
					"user is able to remove all odds from Selections Tab whenClick RemoveAll Button", "Pass");

			log.debug("Switch to default tab");
			
		} catch (Exception e) {
			report.detailsAppend("TC30-BuildABet",
					"check whether user is able to remove all odds from Selections Tab whenClick RemoveAll Button",
					"user is able to remove all odds from Selections Tab whenClick RemoveAll Button", "Fail");
			
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("RemoveAllButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).click();
			
			return false;
		}
		return true;
	}

	
//TC-31 (BuildABet) @Author: AS66528
//To check if there is lock icon on odds box then user should not able to
//select that odds
	public boolean BuildABetLockedOdds(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed());		
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			System.out.println("VuvuSport Button is Present & Clicked \n");
			Thread.sleep(4000);
			
			BuildABetClick();
			Thread.sleep(2000);
			
			WebElement AnytimeGoalScorerOpt = webdriver.findElement(By.xpath(XpathMap.get("AnytimeGoalScorer")));
			((JavascriptExecutor) webdriver).executeScript("arguments[0].click();", AnytimeGoalScorerOpt);
			Thread.sleep(2000);
			
			report.detailsAppend("TC31-BuildABet", "check whether user is not able to select Locked icon Odds ",
					"user is not able to select Locked icon Odds", "Pass");
			log.debug("Switch to default tab");
			
		} catch (Exception e) {
			report.detailsAppend("TC31-BuildABet", "check whether user is not able to select Locked icon Odds ",
					"user is not able to select Locked icon Odds", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-32 (BuildABet) @Author: AS66528
//To check if there is lock icon on odds box then Odds box colour should be
//grey.
	public boolean BuildABetGreyLockedOdds(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);			
			webdriver.findElement(By.xpath(XpathMap.get("ScrollToTop"))).click();
			System.out.println("Scroll ToTop Button is Clicked \n ");
			Thread.sleep(2000);
			
			WebElement odds = webdriver.findElement(By.xpath(XpathMap.get("CorrectScore")));
			Actions action = new Actions(webdriver);
			action.moveToElement(odds).perform();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("AnytimeGoalScorer"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("NoGoals"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC32-BuildABet", "check whether user is able to see Grey colour for Locked Odds ",
					"user is not able to see Grey colour for Locked Odds", "Pass");
			log.debug("Switch to default tab");
			
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC32-BuildABet", "check whether user is able to see Grey colour for Locked Odds ",
					"user is not able to see Grey colour for Locked Odds", "Pass");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-34 (BuildABet) @Author: AS66528
//To check the 'i' tool tip icon should be present on Market tab
	public boolean BuildABetToolTip(Desktop_HTML_Report report) {

		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed());		
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			System.out.println("VuvuSport Button is Present & Clicked \n");
			Thread.sleep(4000);

			BuildABetClick();
			Thread.sleep(2000);
			
			report.detailsAppend("TC34-BuildABet", "check whether user is able to see Tool Tip Icon ",
					"user is able to see Tool Tip Icon", "Pass");
			log.debug("Switch to default tab");
			
		} catch (Exception e) {
			report.detailsAppend("TC34-BuildABet", "check whether user is able to see Tool Tip Icon ",
					"user is able to see Tool Tip Icon", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-35 (BuildABet) @Author: AS66528
//To check when user navigate to 'i' tool tip icon then it should display pop
//text for that particular market
	public boolean BuildABetToolTipMessage(Desktop_HTML_Report report) {

		try {
			
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("ToolTip"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC35-BuildABet", "check whether user is able to see pop text of Tool Tip Icon ",
					"user is able to see pop text of Tool Tip Icon ", "Pass");
			log.debug("Switch to default tab");
			
		} catch (Exception e) {
			report.detailsAppend("TC35-BuildABet", "check whether user is able to see pop text of Tool Tip Icon ",
					"user is able to see pop text of Tool Tip Icon ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-36 (BuildABet) @Author: AS66528
//To check when Odds not selected then on selection tab it should display 0
//selections (Total Odds:0.00)
	public boolean BuildABetZeroSelectionsTotalOddsZero(Desktop_HTML_Report report) {

		try {
			report.detailsAppend("TC36-BuildABet",
					"check whether user is able to see 0 selections (Total Odds:0.00) when Odds are not selected ",
					"user is able to see 0 selections (Total Odds:0.00) when Odds are not selected", "Pass");
			log.debug("Switch to default tab");
			
		} catch (Exception e) {
			report.detailsAppend("TC36-BuildABet",
					"check whether user is able to see 0 selections (Total Odds:0.00) when Odds are not selected ",
					"user is able to see 0 selections (Total Odds:0.00) when Odds are not selected", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

/////// TCES FOR BETWAY HEADER SECTION//////////

// TC-01 (Header) @Author: PJ65867
// Check if the "Login" Button is visible on the homepage.
	public boolean LoginButtonVisible(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(7000);
			webdriver.findElement(By.xpath(XpathMap.get("LoginOnHomepage"))).click();
			Thread.sleep(4000);

			report.detailsAppend("TC01-Header", "Check if the \"Login\" Button is visible on the homepage.",
					"Login Button is visible on the homepage", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC01-Header", "Check if the \"Login\" Button is visible on the homepage.",
					"Login Button is visible on the homepage", "Fail");

			return false;

		}

// webdriver.getWindowHandle();
		return true;

	}

// TC-02 (Header) @Author: PJ65867
// Check if there is a visible "Login" button on signup window.
	public boolean LoginButtonVisibleOnSignupWindow(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("SignupOnHomepage"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ClickOnLoginOnSignUpWindow"))).isDisplayed());
			System.out.print("Login is Present");

			webdriver.findElement(By.xpath(XpathMap.get("ClickOnLoginOnSignUpWindow"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("LoginOnSignUp"))).isDisplayed());
			System.out.print("Login is Present");

			report.detailsAppend("TC02-Header", "Check if there is a visible \"Login\" button on signup window",
					"Login Button is visible on the SignUp Window", "Pass");

			Thread.sleep(2000);
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("za")) {
				webdriver.findElement(By.xpath(XpathMap.get("ZACloseLogin"))).click();
				Thread.sleep(2000);

			} else {
				webdriver.findElement(By.xpath(XpathMap.get("NGCloseLogin"))).click();
				Thread.sleep(2000);
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC02-Header", "Check if there is a visible \"Login\" button on signup window",
					"Login Button is visible on the SignUp Window", "Fail");

			return false;

		}

// webdriver.getWindowHandle();
		return true;

	}

// TC-03 (Header) @Author: PJ65867
// Check if there is a visible "Login" button on the Hamburger Menu.
	public boolean LoginButtonVisibleOnHamburger(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("LoginOnHomepage"))).isDisplayed());
			System.out.print("Login is Present");

			report.detailsAppend("TC03-Header", "Check if there is a visible \"Login\" button on the Hamburger Menu.",
					"Login Button is visible on the Hamburger Menu", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("ZACloseHamburger"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC03-Header", "Check if there is a visible \"Login\" button on the Hamburger Menu.",
					"Login Button is visible on the Hamburger Menu", "Fail");

			return false;

		}

// webdriver.getWindowHandle();
		return true;

	}

// TC-04 (Header) @Author: PJ65867
// Check if the Login Window is visible when the "Login" button is clicked.
	public boolean LoginButton(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("ZALoginHB"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC04-Header",
					"Check if the Login Window is visible when the \"Login\" button is clicked.",
					"Login window is opened after clicking the Login button", "Pass");
			Thread.sleep(2000);
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("za")) {
				webdriver.findElement(By.xpath(XpathMap.get("ZACloseLogin"))).click();
				Thread.sleep(2000);

			} else {
				webdriver.findElement(By.xpath(XpathMap.get("NGCloseLogin"))).click();
				Thread.sleep(2000);
			}
			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC04-Header",
					"Check if the Login Window is visible when the \"Login\" button is clicked.",
					"Login windwo is opened after clicking the Login button", "Fail");

			return false;

		}

// webdriver.getWindowHandle();
		return true;

	}

// TC-05 (Header) @Author: PJ65867
// Check if the required Login fields (e.g., mobile number, password) are
// visible on the Login Window.
	public boolean LoginFields(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("SignupOnHomepage"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(XpathMap.get("ClickOnLoginOnSignUpWindow"))).isDisplayed());
			System.out.print("Login is Present");

			webdriver.findElement(By.xpath(XpathMap.get("ClickOnLoginOnSignUpWindow"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("LoginOnSignUp"))).isDisplayed());
			System.out.print("Login is Present");

			report.detailsAppend("TC05-Header",
					"Check if the required Login fields (e.g., mobile number, password) are visible on the Login Window.",
					"Login Fields are visible", "Pass");
			Thread.sleep(2000);
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("za")) {
				webdriver.findElement(By.xpath(XpathMap.get("ZACloseLogin"))).click();
				Thread.sleep(2000);

			} else {
				webdriver.findElement(By.xpath(XpathMap.get("NGCloseLogin"))).click();
				Thread.sleep(2000);
			}
			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC05-Header",
					"Check if the required Login fields (e.g., mobile number, password) are visible on the Login Window.",
					"Login Fields are visible", "Fail");

			return false;

		}

// webdriver.getWindowHandle();
		return true;

	}

// TC-06 (Header) @Author: PJ65867
// Check if the visibility of the \"Login\" button is consistent across
// different pages.
	public boolean LoginButtonVisibleOnMultiplePage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("LoginOnHomepage"))).click();
			Thread.sleep(2000);

			webdriver.findElement(By.xpath(XpathMap.get("SignupOnHomepage"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(XpathMap.get("ClickOnLoginOnSignUpWindow"))).isDisplayed());
			System.out.print("Login is Present");

			webdriver.findElement(By.xpath(XpathMap.get("ClickOnLoginOnSignUpWindow"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("LoginOnSignUp"))).isDisplayed());
			System.out.print("Login is Present");

			Thread.sleep(2000);
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("za")) {
				webdriver.findElement(By.xpath(XpathMap.get("ZACloseLogin"))).click();
				Thread.sleep(2000);

			} else {
				webdriver.findElement(By.xpath(XpathMap.get("NGCloseLogin"))).click();
				Thread.sleep(2000);
			}
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("LoginOnHomepage"))).isDisplayed());
			System.out.print("Login is Present");

			report.detailsAppend("TC06-Header",
					"Check if the visibility of the \"Login\" button is consistent across different pages.",
					"Login Button is visible on the all pages", "Pass");
			webdriver.findElement(By.xpath(XpathMap.get("ZACloseHamburger"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC06-Header",
					"Check if the visibility of the \"Login\" button is consistent across different pages.",
					"Login Button is visible on the all pages", "Fail");

			return false;

		}

// webdriver.getWindowHandle();
		return true;

	}

// TC-08 (Header) @Author: PJ65867
// To check user click on "Login" button mobile number field should be display
// with country code +27
	public boolean CountryCode(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("SignupOnHomepage"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(
					webdriver.findElement(By.xpath(XpathMap.get("ClickOnLoginOnSignUpWindow"))).isDisplayed());
			System.out.print("Login is Present");

			webdriver.findElement(By.xpath(XpathMap.get("ClickOnLoginOnSignUpWindow"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("LoginOnSignUp"))).isDisplayed());
			System.out.print("Login is Present");

			report.detailsAppend("TC08-Header",
					"To check user click on \"Login\" button mobile number field should be display with country code +27",
					"Mobile number field is display with country code +27", "Pass");
			Thread.sleep(2000);
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("za")) {
				webdriver.findElement(By.xpath(XpathMap.get("ZACloseLogin"))).click();
				Thread.sleep(2000);

			} else {
				webdriver.findElement(By.xpath(XpathMap.get("NGCloseLogin"))).click();
				Thread.sleep(2000);
			}
			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC08-Header",
					"To check user click on \"Login\" button mobile number field should be display with country code +27",
					"Mobile number field is display with country code +27", "Fail");

			return false;

		}

// webdriver.getWindowHandle();
		return true;

	}

// TC-07 (Header) @Author: PJ65867
// To check if the system accepts a valid mobile number.
	public boolean ValidMobileNo(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(6000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("LoginOnLoginpage"))).isDisplayed());
			System.out.print("VuvuzelaLogin Button Clicked");

			webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber"))).sendKeys(XpathMap.get("PhoneNo"));
			Thread.sleep(2000);
			System.out.print("MobileNumber is Entered");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("LoginOnLoginpage"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC07-Header", "To check if the system accepts a valid  mobile number.",
					"System accepts a valid mobile number.", "Pass");

			Thread.sleep(2000);
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("za")) {
				webdriver.findElement(By.xpath(XpathMap.get("ZACloseLogin"))).click();
				Thread.sleep(2000);

			} else {
				webdriver.findElement(By.xpath(XpathMap.get("NGCloseLogin"))).click();
				Thread.sleep(2000);
			}
			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC07-Header", "To check if the system accepts a valid  mobile number.",
					"System accepts a valid mobile number.", "Fail");

			return false;

		}

// webdriver.getWindowHandle();
		return true;

	}

// TC-09 (Header) @Author: PJ65867
// To check user should able to see all such as "Sports","Live","Casino
// games","Horse Racing","Luckey Numbers","Betway
// Jackpots","Virtual","Esports","Promotions"
	public boolean HomePageoptions(Desktop_HTML_Report report) {
		try {			
			Thread.sleep(2000);

			report.detailsAppend("TC09-Header",
					"To check user should able to see all such as \"Sports\",\"Live\",\"Casino games\",\"Horse Racing\",\"Luckey Numbers\",\"Betway Jackpots\",\"Virtual\",\"Esports\",\"Promotions\"",
					"User is able to see all options", "Pass");

			Thread.sleep(2000);
			
			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC09-Header",
					"To check user should able to see all such as \"Sports\",\"Live\",\"Casino games\",\"Horse Racing\",\"Luckey Numbers\",\"Betway Jackpots\",\"Virtual\",\"Esports\",\"Promotions\"",
					"User is able to see all options", "Fail");

			return false;

		}

// webdriver.getWindowHandle();
		return true;

	}

// TC-20 (Header) @Author: PJ65867
// To check user should open live page.
	public boolean LivePage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("LiveOpt"))).click();
			Thread.sleep(2000);
			System.out.print("Live is clicked");

			report.detailsAppend("TC20-Header", "To check user should open live page.",
					"User is able to open live page.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC20-Header", "To check user should open live page.",
					"User is able to open live page.", "Fail");

			return false;

		}

// webdriver.getWindowHandle();
		return true;

	}

// TC-21 (Header) @Author: PJ65867
// To check user should open Casino Games page.
	public boolean CasinoGamesPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("CasinoGames"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC21-Header", "To check user should open Casino Games page.",
					"User is able to open Casino Games page.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC21-Header", "To check user should open Casino Games page.",
					"User is able to open Casino Games page.", "Fail");

			return false;

		}

// webdriver.getWindowHandle();
		return true;

	}

// TC-21 (Header) @Author: PJ65867
// To check user should open Casino Games page.
	public boolean NGCasinoPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("Casino"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e);
			}


			report.detailsAppend("TC21-Header", "To check user should open Casino Games page.",
					"User is able to open Casino Games page.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC21-Header", "To check user should open Casino Games page.",
					"User is able to open Casino Games page.", "Fail");

			return false;

		}

// webdriver.getWindowHandle();
		return true;

	}

// TC-22 (Header) @Author: PJ65867
// To check user should open Horse Racing page.
	public boolean HorseRacingPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("HorseRacing"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("Tote"))).isDisplayed());
			System.out.print("Live is clicked");

			report.detailsAppend("TC22-Header", "To check user should open Horse Racing page.",
					"User is able to open Horse Racing page.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC22-Header", "To check user should open Horse Racing page.",
					"User is able to open Horse Racing page.", "Fail");

			return false;

		}

// webdriver.getWindowHandle();
		return true;

	}

// TC-23 (Header) @Author: PJ65867
// To check user should open Lucky Numbers page.
	public boolean LuckyNumbersPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("LuckyNumbers"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC23-Header", "To check user should open Lucky Numbers page.",
					"User is able to open Lucky Numbers page.", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC23-Header", "To check user should open Lucky Numbers page.",
					"User is able to open Lucky Numbers page.", "Fail");

			return false;

		}

// webdriver.getWindowHandle();
		return true;

	}

// TC-24 (Header) @Author: PJ65867
// To check user should open "Betway Jackpots" page
	public boolean BetwayJackpotPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("BetwayJackpot"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC24-Header", "To check user should open \"Betway Jackpots\" page ",
					"User is able to open \"Betway Jackpots\" page ", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC24-Header", "To check user should open \"Betway Jackpots\" page ",
					"User is able to open \"Betway Jackpots\" page ", "Fail");

			return false;

		}

// webdriver.getWindowHandle();
		return true;

	}

// TC-25 (Header) @Author: PJ65867
// To check user should open "Virtual" page
	public boolean VirtualPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("Virtual"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC25-Header", "To check user should open \"Virtual\" page ",
					"User is able to open \"Virtual\" page ", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC25-Header", "To check user should open \"Virtual\" page ",
					"User is able to open \"Virtual\" page ", "Fail");

			return false;

		}

// webdriver.getWindowHandle();
		return true;

	}

// TC-26 (Header) @Author: PJ65867
// To check user should open "Esports" page
	public boolean EsportsPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("Esports"))).click();
			Thread.sleep(2000);
			System.out.print("Esport Btn  is clicked");

			report.detailsAppend("TC26-Header", "To check user should open \"Esports\" page ",
					"User is able to open \"Esports\" page ", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error(" Esport Btn not avilable \n ");

			report.detailsAppend("TC26-Header", "To check user should open \"Esports\" page ",
					"User is able to open \"Esports\" page ", "Fail");

			return false;

		}

// webdriver.getWindowHandle();
		return true;

	}

// TC-27 (Header) @Author: PJ65867
// To check user should open "Promotion" page
	public boolean PromotionPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			WebElement PromotionsBtn = webdriver.findElement(By.xpath(XpathMap.get("Promotionbtn")));
			((JavascriptExecutor) webdriver).executeScript("arguments[0].click();", PromotionsBtn);
			System.out.println("Promotions Button is clicked \n");
			Thread.sleep(3000);

			report.detailsAppend("TC27-Header", "To check user should open \"Promotion\" page ",
					"User is able to open \"Promotion\" page ", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC27-Header", "To check user should open \"Promotion\" page ",
					"User Not able to open \"Promotion\" page ", "Fail");

			return false;

		}

// webdriver.getWindowHandle();
		return true;

	}

// TC-28 (Header) @Author: PJ65867
// To check user should able to click on Email Icon
	public boolean EmailClick(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("Email"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC28-Header", "To check user should able to click on Email Icon ",
					"User is able to click on Email Icon ", "Pass");

			log.debug("Switch to default tab");

			Thread.sleep(5000);

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC28-Header", "To check user should able to click on Email Icon ",
					"User is able to click on Email Icon ", "Pass");

			return false;

		}
		webdriver.navigate().refresh();
// webdriver.getWindowHandle();
		return true;

	}

// TC-29 (Header) @Author: PJ65867
// To check user should able to click on Email Icon
	public boolean LiveChat(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("LiveChat"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC29-Header", "To check user should able to click on Chat Icon ",
					"User is able to click on Chat Icon ", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC29-Header", "To check user should able to click on Chat Icon ",
					"User is able to click on Chat Icon ", "Fail");

			return false;

		}

		webdriver.navigate().refresh();
		return true;
	}

/////////////////////////////////////   Betway FooterSection Vuvuzela  Production    ////////////////////////////

//TC-1 (FS) @Author: AS66528//
//To check that the Footer options are present on betWay site
	public boolean FooterOptionCheck(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC1-Footer_Section", "User check that the Footer options are present on betWay site",
					"checked the Footer options are present on betWay site", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC1-Footer_Section", "User check that the Footer options are present on betWay site",
					"checked the Footer options are present on betWay site", "Fail");

			return false;
		}

		return true;

	}

//TC-2 (FS) @Author: AS66528//
//To check the available Hyperlinks on footer section
	public boolean HyperLinkOnFooter(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC2-Footer_Section", "User check available Hyperlinks on footer section",
					"checked available Hyperlinks on footer section", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC2-Footer_Section", "User check available Hyperlinks on footer section",
					"checked available Hyperlinks on footer section", "Fail");

			return false;
		}

		return true;

	}

//TC-3 (FS) @Author: AS66528//
//To check that user able to See the "betWay" logo in footer
	public boolean BetwayLogoinFooter(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC3-Footer_Section", "user able to See the \"betWay\" logo in footer",
					"user checked to See the \"betWay\" logo in footer", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC3-Footer_Section", "User check available Hyperlinks on footer section",
					"checked available Hyperlinks on footer section", "Fail");
			return false;
		}

		return true;

	}

//TC-4 (FS) @Author: AS66528//
//To Check by clicking on the "Sponsorships" in the footer
	public boolean SponsorshipsClickInFooter(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SponsorshipButton"))).isDisplayed());
			System.out.print(" SponsorshipButton Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("SponsorshipButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC4-Footer_Section", "user able to clicking on  \"Sponsorships\"  in the footer",
					"User Clicked the \"Sponsorships\"  in the footer", "Pass");

			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(XpathMap.get("BackIconInPage"))).click();

		} catch (Exception e) {
			report.detailsAppend("TC4-Footer_Section", "user able to clicking on  \"Sponsorships\"  in the footer",
					"User Clicked the \"Sponsorships\"  in the footer", "Fail");
			return false;
		}

		return true;
	}

//TC-5 (FS) @Author: AS66528//
//Verify by clicking on the "Privacy PolicyPrivacy Policy" option
	public boolean Privacy_PolicyOptionInFooter(Desktop_HTML_Report report) throws InterruptedException {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("PrivacyPolicyButton"))).isDisplayed());
			System.out.print(" PrivacyPolicyButton Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("PrivacyPolicyButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC5-Footer_Section", "user able to clicking on  \"Privacy_Policy\"  in the footer",
					"User Clicked the \"Privacy_Policy\"  in the footer", "Pass");

			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(XpathMap.get("BackIconInPage"))).click();
			Thread.sleep(4000);
		} catch (Exception e) {
			report.detailsAppend("TC5-Footer_Section", "user able to clicking on  \"Privacy_Policy\"  in the footer",
					"User Clicked the \"Privacy_Policy\"  in the footer", "Fail");

			return false;
		}

		return true;

	}

//TC-6 (FS) @Author: AS66528//
//To Check the availability of hyperlinks within the privacy policy information
//page.

	public boolean HyperlinksWithinPrivacy_Policy(Desktop_HTML_Report report) throws InterruptedException {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("PrivacyPolicyButton"))).isDisplayed());
			System.out.print(" PrivacyPolicyButton Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("PrivacyPolicyButton"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("HyperlinkInPrivacyPolicy"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC6-Footer_Section",
					"user check availability of hyperlinks within privacy policy page",
					"Checked availability of hyperlinks within privacy policy page", "Pass");

			log.debug("Switch to default tab");
			webdriver.navigate().back();

			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(4000);
		} catch (Exception e) {
			report.detailsAppend("TC6-Footer_Section", "user able to clicking on  \"Privacy_Policy\"  in the footer",
					"User Clicked the \"Privacy_Policy\"  in the footer", "Fail");

			return false;
		}

		return true;
	}

//TC-7 (FS) @Author: AS66528//
//To Check the Back button available on privacy policy information page.

	public boolean BackbuttonOnPrivacy_PolicyPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("PrivacyPolicyButton"))).isDisplayed());
			System.out.print(" PrivacyPolicyButton Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("PrivacyPolicyButton"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("BackIconInPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC7-Footer_Section", "user check Backbutton available on privacy policy page",
					"Checked Backbutton available on privacy policy page", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC7-Footer_Section", "user check Backbutton available on privacy policy page",
					"Checked Backbutton available on privacy policy page", "Fail");

			return false;
		}

		return true;

	}

//TC-8 (FS) @Author: AS66528//
//To check by clicking on the "Contact Us" button.

	public boolean ClickContactUsOption(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ContactusButton"))).isDisplayed());
			System.out.print(" ContactusButton Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ContactusButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC8-Footer_Section", "user check clicking on the 'Contact Us' button page",
					"Checked clicking on the 'Contact Us' button page", "Pass");

			log.debug("Switch to default tab");

			webdriver.findElement(By.xpath(XpathMap.get("BackIconInPage"))).click();

		} catch (Exception e) {
			report.detailsAppend("TC8-Footer_Section", "user check clicking on the 'Contact Us' button page",
					"Checked clicking on the 'Contact Us' button page", "Fail");
			return false;
		}

		return true;
	}

//TC-9 (FS) @Author: AS66528//
//To check the Contact details information after clicking on Contact Us
//hyperlink

	public boolean ContactUsInformationPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ContactusButton"))).isDisplayed());
			System.out.print(" ContactusButton Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ContactusButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC9-Footer_Section",
					"user check Contact details information  after clicking on ContactUs hyperlink",
					"Checked Contact details information  after clicking on ContactUs hyperlink", "Pass");

			log.debug("Switch to default tab");

			webdriver.findElement(By.xpath(XpathMap.get("BackIconInPage"))).click();
			Thread.sleep(4000);
		} catch (Exception e) {
			report.detailsAppend("TC9-Footer_Section",
					"user check Contact details information  after clicking on ContactUs hyperlink",
					"Checked Contact details information  after clicking on ContactUs hyperlink", "Fail");
			return false;
		}

		return true;
	}

//TC-10 (FS) @Author: AS66528//
//To check the chat to live support option on contact us page

	public boolean LiveSupportButtonInContactus(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ContactusButton"))).isDisplayed());
			System.out.print(" ContactusButton Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ContactusButton"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("LiveSupportInContactus"))).isDisplayed());
			System.out.print(" LiveSupportInContactus Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("LiveSupportInContactus"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC10-Footer_Section",
					"user check Contact details information  after clicking on ContactUs hyperlink",
					"Checked Contact details information  after clicking on ContactUs hyperlink", "Pass");

			log.debug("Switch to default tab");

			webdriver.findElement(By.xpath(XpathMap.get("BackIconInPage"))).click();
			Thread.sleep(4000);
		} catch (Exception e) {
			report.detailsAppend("TC10-Footer_Section",
					"user check Contact details information  after clicking on ContactUs hyperlink",
					"Checked Contact details information  after clicking on ContactUs hyperlink", "Fail");
			return false;
		}

		return true;
	}

//TC-11 (FS) @Author: AS66528//
//To check by clicking on the mail under contact us page

	public boolean MailButtonInContactusPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			webdriver.navigate().to("https://www.betway.co.zm/");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMContactusButton"))).isDisplayed());
			System.out.print(" ContactusButton Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMContactusButton"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("EMAILbutton"))).isDisplayed());
			System.out.print(" EMAIL button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("EMAILbutton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC11-Footer_Section", "user check by clicking on the mail under ContactUs",
					"Checked by clicking on the mail under ContactUs", "Pass");

			log.debug("Switch to default tab");

			webdriver.findElement(By.xpath(XpathMap.get("BackIconInPage"))).click();

		} catch (Exception e) {
			report.detailsAppend("TC11-Footer_Section", "user check by clicking on the mail under ContactUs",
					"Checked by clicking on the mail under ContactUs", "Fail");
			return false;
		}
		webdriver.navigate().to("https://www.betway.co.za/");
		return true;
	}

//TC-12 (FS) @Author: AS66528//
//To check by clicking on the responsible gaming link on the Contact Us page

	public boolean ContactusPagegaminglink(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ContactusButton"))).isDisplayed());
			System.out.print(" ContactusButton Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ContactusButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC12-Footer_Section",
					"user clicking on the responsible gaming  link on the Contact Us page",
					"clicking on the responsible gaming  link on the Contact Us page", "Pass");

			log.debug("Switch to default tab");

			webdriver.findElement(By.xpath(XpathMap.get("BackIconInPage"))).click();
			Thread.sleep(4000);
		} catch (Exception e) {
			report.detailsAppend("TC12-Footer_Section",
					"user clicking on the responsible gaming  link on the Contact Us page",
					"clicking on the responsible gaming  link on the Contact Us page", "Fail");
			return false;
		}

		return true;
	}

//TC-13 (FS) @Author: AS66528//
//To check the Facebook option on the Contact Us page

	public boolean FacebookOptionInContactus(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ContactusButton"))).isDisplayed());
			System.out.print(" ContactusButton Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ContactusButton"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FacebookIcon"))).isDisplayed());
			System.out.print(" FacebookIcon Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FacebookIcon"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC13-Footer_Section", "user check the Facebook option on the Contact Us page",
					"checked the Facebook option on the Contact Us page", "Pass");

			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(XpathMap.get("BackIconInPage"))).click();
			Thread.sleep(4000);
			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC13-Footer_Section", "user check the Facebook option on the Contact Us page",
					"checked the Facebook option on the Contact Us page", "Fail");
			return false;
		}

		return true;
	}

//TC-14 (FS) @Author: AS66528//
//To check by clicking on the Standard Rate Call:

	public boolean StandardRateCall(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ContactusButton"))).isDisplayed());
			System.out.print(" ContactusButton Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ContactusButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC14-Footer_Section",
					"user clicking on the responsible gaming  link on the Contact Us page",
					"clicking on the responsible gaming  link on the Contact Us page", "Pass");

			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(XpathMap.get("BackIconInPage"))).click();

		} catch (Exception e) {
			report.detailsAppend("TC14-Footer_Section",
					"user clicking on the responsible gaming  link on the Contact Us page",
					"clicking on the responsible gaming  link on the Contact Us page", "Fail");
			return false;
		}

		return true;
	}

//TC-15 (FS) @Author: AS66528//
//To check by clicking on the mail under contact us page

	public boolean EmailAfterContactus(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			webdriver.navigate().to("https://www.betway.co.zm/");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMContactusButton"))).isDisplayed());
			System.out.print(" ContactusButton Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMContactusButton"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("EMAILbutton"))).isDisplayed());
			System.out.print(" EMAIL button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("EMAILbutton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC15-Footer_Section", "user check by clicking on the mail under ContactUs",
					"Checked by clicking on the mail under ContactUs", "Pass");

			log.debug("Switch to default tab");

			webdriver.navigate().refresh();
		} catch (Exception e) {
			report.detailsAppend("TC15-Footer_Section", "user check by clicking on the mail under ContactUs",
					"Checked by clicking on the mail under ContactUs", "Fail");
			return false;
		}
		webdriver.navigate().to("https://www.betway.co.za/");
		return true;
	}

//TC-16 (FS) @Author: AS66528//
//To check click on the Twitter App on a contact US page
	public boolean TwitterAppOnContactUS(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ContactusButton"))).isDisplayed());
			System.out.print(" ContactusButton Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ContactusButton"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("TwitterIcon"))).isDisplayed());
			System.out.print(" TwitterIcon button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("TwitterIcon"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC16-Footer_Section", "user check by clicking on the TwitterIcon under ContactUs",
					"Checked by clicking on the TwitterIcon under ContactUs", "Pass");

			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(XpathMap.get("BackIconInPage"))).click();
			Thread.sleep(4000);

		} catch (Exception e) {
			report.detailsAppend("TC16-Footer_Section", "user check by clicking on the TwitterIcon under ContactUs",
					"Checked by clicking on the TwitterIcon under ContactUs", "Fail");
			return false;
		}

		return true;
	}

//TC-17 (FS) @Author: AS66528//
//To check Visible on the WtsApp on a contact US page
	public boolean WtsAppOnContactUS(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ContactusButton"))).isDisplayed());
			System.out.print(" ContactusButton Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ContactusButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC17-Footer_Section", "user check by Visible on the WtsAppIcon under ContactUs",
					"Checked by Visible on the WtsAppIcon under ContactUs", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC17-Footer_Section", "user check by Visible on the WtsAppIcon under ContactUs",
					"Checked by Visible on the WtsAppIcon under ContactUs", "Fail");
			return false;
		}

		return true;
	}

//TC-18 (FS) @Author: AS66528//
//To check the Query type dropdown on contact form
	public boolean QueryDropDownOnContactForm(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			webdriver.navigate().to("https://www.betway.co.zm/");

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMContactusButton"))).isDisplayed());
			System.out.print(" ContactusButton Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMContactusButton"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("QueryDropDown"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC18-Footer_Section", "user check the Query type dropdown on contact form",
					"Checked the Query type dropdown on contact form", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC18-Footer_Section", "user check the Query type dropdown on contact form",
					"Checked the Query type dropdown on contact form", "Fail");
			return false;
		}

		webdriver.navigate().to("https://www.betway.co.za/");
		return true;
	}

//TC-19 (FS) @Author: AS66528//
//To check by by clicking on the Sponsorships hyperlink
	public boolean SponsorshipsHyperlink(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SponsorshipButton"))).isDisplayed());
			System.out.print(" Sponsorship Button  Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("SponsorshipButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC19-Footer_Section", "user check by clicking on the Sponsorships hyperlink",
					"Checked by clicking on the Sponsorships hyperlink", "Pass");

			log.debug("Switch to default tab");
			webdriver.findElement(By.xpath(XpathMap.get("BackIconInPage"))).click();

		} catch (Exception e) {
			report.detailsAppend("TC19-Footer_Section", "user check by clicking on the Sponsorships hyperlinks",
					"Checked by clicking on the Sponsorships hyperlink", "Fail");
			return false;
		}

		return true;
	}

//TC-20 (FS) @Author: AS66528//
//To check by by clicking on FAQ's on the Footer section
	public boolean FAQOnFooterSection(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FAQButton"))).isDisplayed());
			System.out.print(" FAQ Button  Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FAQButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC20-Footer_Section", "user check by clicking on FAQ's on the Footer section",
					"Checked by clicking on FAQ's on the Footer section", "Pass");

			log.debug("Switch to default tab");

			webdriver.findElement(By.xpath(XpathMap.get("BackIconInPage"))).click();

		} catch (Exception e) {
			report.detailsAppend("TC20-Footer_Section", "user check by clicking on FAQ's on the Footer sections",
					"Checked by clicking on FAQ's on the Footer section", "Fail");
			return false;
		}

		return true;
	}

//TC-21 (FS) @Author: AS66528//
//To check that User able to see the FAQs list
	public boolean FAQlistOnFooterSection(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FAQButton"))).isDisplayed());
			System.out.print(" FAQ Button  Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FAQButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC21-Footer_Section", "user check that User able to see the FAQs list",
					"Checked that User able to see the FAQs list", "Pass");

			log.debug("Switch to default tab");

			webdriver.findElement(By.xpath(XpathMap.get("BackIconInPage"))).click();

		} catch (Exception e) {
			report.detailsAppend("TC21-Footer_Section", "user check that User able to see the FAQs list",
					"Checked that User able to see the FAQs list", "Fail");
			return false;
		}

		return true;
	}

//TC-22 (FS) @Author: AS66528//
//To check that Verify by clicking on the FAQs list query
	public boolean FAQSelectAnylistOnFooterSection(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FAQButton"))).isDisplayed());
			System.out.print(" FAQ Button  Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FAQButton"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FAQ1stListDD"))).isDisplayed());
			System.out.print(" FAQ1stListDD Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FAQ1stListDD"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC22-Footer_Section", "user check that Verify by clicking on the  FAQs list query",
					"Checked that Verify by clicking on the  FAQs list query", "Pass");

			log.debug("Switch to default tab");

			webdriver.findElement(By.xpath(XpathMap.get("BackIconInPage"))).click();

		} catch (Exception e) {
			report.detailsAppend("TC22-Footer_Section", "user check that Verify by clicking on the  FAQs list query",
					"Checked that Verify by clicking on the  FAQs list query", "Fail");
			return false;
		}

		return true;
	}

//TC-23 (FS) @Author: AS66528//
//To check that User able to click on Back button on FAQ's page
	public boolean BackbuttonOnFAQPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FAQButton"))).isDisplayed());
			System.out.print(" Responsible Gaming Button  Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FAQButton"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("BackIconInPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC23-Footer_Section",
					"user check that User able to click on Back button on FAQ's page",
					"Checked that User able to click on Back button on FAQs list query", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC23-Footer_Section",
					"user check that User able to click on Back button on FAQ's page",
					"Checked that User able to click on Back button on FAQs list query", "Fail");
			return false;
		}

		return true;
	}

//TC-24 (FS) @Author: AS66528//
//To check by by clicking on Responsible Gaming on the Footer section
	public boolean ResponsibleGamingOnFooterSection(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ResponsibleGamingButton"))).isDisplayed());
			System.out.print(" Responsible Gaming Button  Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ResponsibleGamingButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC24-Footer_Section",
					"user check by clicking on Responsible Gaming on the Footer section",
					"Checked by clicking on Responsible Gaming on the Footer section", "Pass");

			log.debug("Switch to default tab");

			webdriver.findElement(By.xpath(XpathMap.get("BackIconInPage"))).click();

		} catch (Exception e) {
			report.detailsAppend("TC24-Footer_Section",
					"user check by clicking on Responsible Gaming on the Footer sections",
					"Checked by clicking on Responsible Gaming on the Footer section", "Fail");
			return false;
		}

		return true;
	}

//TC-25 (FS) @Author: AS66528//
//To check that User able to click on Back button on Responsible Gaming page
	public boolean BackbuttonOnResponsibleGamingPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ResponsibleGamingButton"))).isDisplayed());
			System.out.print(" ResponsibleGaming Button  Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ResponsibleGamingButton"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("BackIconInPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC25-Footer_Section",
					"user check that User able to click on Back button on Responsible Gaming page",
					"Checked that User able to click on Back button on Responsible Gaming page", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC25-Footer_Section",
					"user check that User able to click on Back button on Responsible Gaming page",
					"Checked that Verify by clicking on the  FAQs list query", "Fail");
			return false;
		}

		return true;
	}

//TC-26 (FS) @Author: AS66528//
//To check by by clicking on Terms & Conditions on the Footer section
	public boolean TermsConditionsOnFooterSection(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("TermsNConditionsButton"))).isDisplayed());
			System.out.print(" TermsConditions Button  Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("TermsNConditionsButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC26-Footer_Section",
					"user check by clicking on Terms & Conditions on the Footer section",
					"Checked by clicking on Terms & Conditions on the Footer section", "Pass");

			log.debug("Switch to default tab");

			webdriver.findElement(By.xpath(XpathMap.get("BackIconInPage"))).click();

		} catch (Exception e) {
			report.detailsAppend("TC26-Footer_Section",
					"user check by clicking on Terms & Conditions on the Footer sections",
					"Checked by clicking on Terms & Conditions on the Footer section", "Fail");
			return false;
		}

		return true;
	}

//TC-27 (FS) @Author: AS66528//
//To check that User able to see the options available on Terms & Conditions
//page
	public boolean TermsConditionslistAvailable(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("TermsNConditionsButton"))).isDisplayed());
			System.out.print(" TermsConditions Button  Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("TermsNConditionsButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC27-Footer_Section", "user check that User able to see the TermsConditions list",
					"Checked that User able to see the TermsConditions list", "Pass");

			log.debug("Switch to default tab");

			webdriver.findElement(By.xpath(XpathMap.get("BackIconInPage"))).click();

		} catch (Exception e) {
			report.detailsAppend("TC27-Footer_Section", "user check that User able to see the TermsConditions list",
					"Checked that User able to see the TermsConditions list", "Fail");
			return false;
		}

		return true;
	}

//TC-28 (FS) @Author: AS66528//
//To check that Verify by clicking Any Option Available on TermsConditions list
//query
	public boolean SelectAnylistOnTermsConditions(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("TermsNConditionsButton"))).isDisplayed());
			System.out.print(" TermsConditions Button  Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("TermsNConditionsButton"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("TermsCondition1stListDD"))).isDisplayed());
			System.out.print(" TermsCondition1stListDD Button  Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("TermsCondition1stListDD"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC28-Footer_Section",
					"user check that Verify by clicking on the  TermsConditions list query",
					"Checked that Verify by clicking on the  TermsConditions list query", "Pass");

			log.debug("Switch to default tab");

			webdriver.findElement(By.xpath(XpathMap.get("BackIconInPage"))).click();

		} catch (Exception e) {
			report.detailsAppend("TC28-Footer_Section",
					"user check that Verify by clicking on the  TermsConditions list query",
					"Checked that Verify by clicking on the  TermsConditions list query", "Fail");
			return false;
		}

		return true;
	}

//TC-29 (FS) @Author: AS66528//
//To check that User able to click on Back button on TermsConditions page
	public boolean BackbuttonOnTermsConditionsPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("TermsNConditionsButton"))).isDisplayed());
			System.out.print(" TermsNConditions Button  Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("TermsNConditionsButton"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("BackIconInPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC29-Footer_Section",
					"user check that User able to click on Back button on TermsConditions page",
					"Checked that User able to click on Back button on TermsConditions page", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC29-Footer_Section",
					"user check that User able to click on Back button on TermsConditions page",
					"Checked that User able to click on Back button on TermsConditions page", "Fail");
			return false;
		}

		return true;
	}

//TC-30 (FS) @Author: AS66528//
//To check that User is able to click on Lotteries Board from the Footer
//section
	public boolean LotteriesBoardOnFooterSection(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

//webdriver.navigate().to("https://www.betway.com.ng/");

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("NGLotteriesButton"))).isDisplayed());
			System.out.print(" NGLotteries Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("NGLotteriesButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC30-Footer_Section",
					"User is able to click on Lotteries Board from the Footer section",
					"Checked User is able to click on Lotteries Board from the Footer section", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC30-Footer_Section",
					"User is able to click on Lotteries Board from the Footer section",
					"Checked User is able to click on Lotteries Board from the Footer section", "Fail");
			return false;
		}

		return true;
	}

//TC-31 (FS) @Author: AS66528//
//To check that User is able to click on How To from the Footer section
	public boolean HowTbuttonOnFooterSection(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			webdriver.navigate().refresh();
//Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button  Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC31-Footer_Section", "User is able to click on How To from the Footer section",
					"Checked User is able to click on How To from the Footer section", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC31-Footer_Section", "User is able to click on How To from the Footer section",
					"Checked User is able to click on How To from the Footer section", "Fail");
			return false;
		}

		return true;
	}

//TC-32 (FS) @Author: AS66528//
//To check that User able to see the options available on How To page
	public boolean HowToOptionsAvailable(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

//Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).isDisplayed());

			System.out.print(" HowTo Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC32-Footer_Section",
					"User able to see the options available on How To page from the Footer section",
					"Checked User able to see the options available on How To page from the Footer section", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC32-Footer_Section",
					"User able to see the options available on How To page from the Footer section",
					"Checked User able to see the options available on How To page from the Footer section", "Fail");
			return false;
		}

		return true;
	}

//TC-33 (FS) @Author: AS66528//
//To check that User able to click on How To Reset Password
	public boolean HowToResetPasswordePage(Desktop_HTML_Report report) throws InterruptedException {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).click();

			try {

				webdriver.findElement(By.xpath(XpathMap.get("ResetPasswordInHowTo"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC33-Footer_Section", "User able to click on How To Reset Password",
						"Checked User able toclick on How To Reset Password", "Pass");
			} catch (Exception e) {
				System.out.println("Reset Password button not Clicked");
				report.detailsAppend("TC33-Footer_Section", "User Not able to click on How To Reset Password",
						"Checked User Not able to click on How To Reset Password", "Fail");
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC33-Footer_Section", "User Not able to click on How To Reset Password",
					"Checked User Not able to click on How To Reset Password", "Fail");
			return false;
		}
		return true;
	}

//TC-34 (FS) @Author: AS66528//
//User is able to click on any option available on "How to Reset Password"
//section
	public boolean ClickAnyOptionInResetPassowrdTab(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).click();

			try {

				webdriver.findElement(By.xpath(XpathMap.get("ResetPasswordInHowTo"))).click();

				webdriver.findElement(By.xpath(XpathMap.get("1stOptionInHowToPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC34-Footer_Section",
						"User able to see the options available on How to ResetPassword Section",
						"Checked User able to see the options available on How To page", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC34-Footer_Section", "User able to see the options available on How To page",
						"Checked User able to see the options available on How To page", "Fail");
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC34-Footer_Section", "User able to see the options available on How To page",
					"Checked User able to see the options available on How To page", "Fail");
			return false;
		}

		return true;
	}

//TC-35 (FS) @Author: AS66528//
//User is able to click on "How to Deposit" on the How To page
	public boolean HowtoDepositPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).click();

			try {
				webdriver.findElement(By.xpath(XpathMap.get("DepositButton"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC35-Footer_Section",
						"User is able to click on \"How to Deposit\" on the How To page",
						"Checked User is able to click on \"How to Deposit\" on the How To page", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC35-Footer_Section",
						"User is able to click on \"How to Deposit\" on the How To page",
						"Checked User is able to click on \"How to Deposit\" on the How To page", "Fail");
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC35-Footer_Section",
					"User is able to click on \"How to Deposit\" on the How To page",
					"Checked User is able to click on \"How to Deposit\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

//TC-36 (FS) @Author: AS66528//
//User is able to click on any option available on "How to Deposit" section
	public boolean ClickAnyOptionInDeposit(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).click();

			try {

				webdriver.findElement(By.xpath(XpathMap.get("DepositButton"))).click();

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stOptionInHowToPage"))).isDisplayed());
				System.out.print(" 1stOption InHowToPage  Visible ");
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("1stOptionInHowToPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC36-Footer_Section",
						"User is able to click on any option available on \"How to Deposit\" Section",
						"Checked User clicked any option available on \"How to Deposit\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC36-Footer_Section",
						"User is able to click on any option available on \"How to Deposit\" Section",
						"Checked User clicked any option available on \"How to Deposit\" Section", "Fail");

			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC36-Footer_Section",
					"User is able to click on any option available on \"How to Deposit\" Section",
					"Checked User clicked any option available on \"How to Deposit\" Section", "Fail");
			return false;
		}

		return true;
	}

//TC-37 (FS) @Author: AS66528//
//User is able to click on "How to Bet" on the How To page
	public boolean HowtoBetPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).click();

			try {

				webdriver.findElement(By.xpath(XpathMap.get("BetButton"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC37-Footer_Section",
						"User is able to click on \"How to Bet\" on the How To page",
						"Checked User is able to click on \"How to Bet\" on the How To page", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC37-Footer_Section",
						"User is able to click on \"How to Bet\" on the How To page",
						"Checked User is able to click on \"How to Bet\" on the How To page", "Fail");

			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC37-Footer_Section", "User is able to click on \"How to Bet\" on the How To page",
					"Checked User is able to click on \"How to Bet\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

//TC-38 (FS) @Author: AS66528//
//User is able to click on any option available on "How to Bet" section
	public boolean ClickAnyOptionInBet(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).click();

			try {

				webdriver.findElement(By.xpath(XpathMap.get("BetButton"))).click();

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stOptionInHowToPage"))).isDisplayed());
				System.out.print(" 1stOption InHowToPage  Visible ");
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("1stOptionInHowToPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC38-Footer_Section",
						"User is able to click on any option available on \"How to Bet\" Section",
						"Checked User clicked any option available on \"How to Bet\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC38-Footer_Section",
						"User is able to click on any option available on \"How to Bet\" Section",
						"Checked User clicked any option available on \"How to Bet\" Section", "Fail");

			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC38-Footer_Section",
					"User is able to click on any option available on \"How to Bet\" Section",
					"Checked User clicked any option available on \"How to Bet\" Section", "Fail");
			return false;
		}

		return true;
	}

//TC-39 (FS) @Author: AS66528//
//User is able to click on "How to Betgames" on the How To page
	public boolean HowtoBetgamesPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).click();

			try {

				webdriver.findElement(By.xpath(XpathMap.get("BetgamesButton"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC39-Footer_Section",
						"User is able to click on \"How to Betgames\" on the How To page",
						"Checked User is able to click on \"How to Betgames\" on the How To page", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC39-Footer_Section",
						"User is able to click on \"How to Bet\" on the How To page",
						"Checked User is able to click on \"How to Bet\" on the How To page", "Fail");

			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC39-Footer_Section", "User is able to click on \"How to Bet\" on the How To page",
					"Checked User is able to click on \"How to Bet\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

//TC-40 (FS) @Author: AS66528//
//User is able to click on any option available on "How to Betgames" section
	public boolean ClickAnyOptionInBetgames(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).click();

			try {

				webdriver.findElement(By.xpath(XpathMap.get("BetgamesButton"))).click();

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stOptionInHowToPage"))).isDisplayed());
				System.out.print(" 1stOption InHowToPage  Visible ");
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("1stOptionInHowToPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC40-Footer_Section",
						"User is able to click on any option available on \"How to Betgames\" Section",
						"Checked User clicked any option available on \"How to Betgames\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC40-Footer_Section",
						"User is able to click on any option available on \"How to Betgames\" Section",
						"Checked User clicked any option available on \"How to Betgames\" Section", "Fail");
				return false;
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC40-Footer_Section",
					"User is able to click on any option available on \"How to Betgames\" Section",
					"Checked User clicked any option available on \"How to Betgames\" Section", "Fail");
			return false;
		}

		return true;
	}

//TC-41 (FS) @Author: AS66528//
//User is able to click on "How to SMS" on the How To page
	public boolean HowtoSMSPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("SMSButton"))).click();
				Thread.sleep(2000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BackButtonError"))).isDisplayed()) {
					Thread.sleep(2000);
					report.detailsAppend("TC41-Footer_Section",
							"User is able to click on \"How to SMS\" on the How To page",
							"Checked User is able to click on \"How to SMS\" on the How To page", "Pass");
					Thread.sleep(2000);
					webdriver.findElement(By.xpath(XpathMap.get("BackButtonError"))).click();
					Thread.sleep(2000);
				} else {
					report.detailsAppend("TC41-Footer_Section",
							"User is able to click on \"How to SMS\" on the How To page",
							"Checked User is able to click on \"How to SMS\" on the How To page", "Pass");
				}
			} catch (Exception e) {
				report.detailsAppend("TC41-Footer_Section",
						"User is able to click on \"How to SMS\" on the How To page",
						"Checked User is able to click on \"How to SMS\" on the How To page", "Fail");
				return false;
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC41-Footer_Section", "User is able to click on \"How to SMS\" on the How To page",
					"Checked User is able to click on \"How to SMS\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

//TC-42 (FS) @Author: AS66528//
//User is able to click on "How to Casino" on the How To page
	public boolean HowtoCasinoPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).click();

			try {
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("CasinoButton"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC42-Footer_Section",
						"User is able to click on \"How to Casino\" on the How To page",
						"Checked User is able to click on \"How to Casino\" on the How To page", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC42-Footer_Section",
						"User is able to click on \"How to Casino\" on the How To page",
						"Checked User is able to click on \"How to Casino\" on the How To page", "Fail");
				return false;
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC42-Footer_Section", "User is able to click on \"How to Casino\" on the How To page",
					"Checked User is able to click on \"How to Casino\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

//TC-43 (FS) @Author: AS66528//
//User is able to click on any option available on "How to Casino" section
	public boolean ClickAnyOptionInCasino(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");
			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");
			webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).click();

			try {
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("CasinoButton"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stOptionInHowToPage"))).isDisplayed());
				System.out.print(" 1stOption InHowToPage  Visible ");
				webdriver.findElement(By.xpath(XpathMap.get("1stOptionInHowToPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC43-Footer_Section",
						"User is able to click on any option available on \"How to Casino\" Section",
						"Checked User clicked any option available on \"How to Casino\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC43-Footer_Section",
						"User is able to click on any option available on \"How to Casino\" Section",
						"Checked User clicked any option available on \"How to Casino\" Section", "Fail");
				return false;
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC43-Footer_Section",
					"User is able to click on any option available on \"How to Casino\" Section",
					"Checked User clicked any option available on \"How to Casino\" Section", "Fail");
			return false;
		}

		return true;
	}

//TC-44 (FS) @Author: AS66528//
//User is able to click on "How to Virtual" on the How To page
	public boolean HowtoVirtualPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).click();

			try {

				webdriver.findElement(By.xpath(XpathMap.get("VirtualButton"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC44-Footer_Section",
						"User is able to click on \"How to Virtual\" on the How To page",
						"Checked User is able to click on \"How to Virtual\" on the How To page", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC44-Footer_Section",
						"User is able to click on \"How to Virtual\" on the How To page",
						"Checked User is able to click on \"How to Virtual\" on the How To page", "Fail");
				return false;
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC44-Footer_Section",
					"User is able to click on \"How to Virtual\" on the How To page",
					"Checked User is able to click on \"How to Virtual\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

//TC-45 (FS) @Author: AS66528//
//User is able to click on any option available on "How to Virtual" section
	public boolean ClickAnyOptionInVirtual(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).click();

			try {

				webdriver.findElement(By.xpath(XpathMap.get("VirtualButton"))).click();

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stOptionInHowToPage"))).isDisplayed());
				System.out.print(" 1stOption InHowToPage  Visible ");
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("1stOptionInHowToPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC45-Footer_Section",
						"User is able to click on any option available on \"How to Virtual\" Section",
						"Checked User clicked any option available on \"How to Virtual\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC45-Footer_Section",
						"User is able to click on any option available on \"How to Virtual\" Section",
						"Checked User clicked any option available on \"How to Virtual\" Section", "Fail");
				return false;
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC45-Footer_Section",
					"User is able to click on any option available on \"How to Virtual\" Section",
					"Checked User clicked any option available on \"How to Virtual\" Section", "Fail");
			return false;
		}

		return true;
	}

//TC-46 (FS) @Author: AS66528//
//User is able to click on "How to Lucky Numbers" on the How To page
	public boolean HowtoLuckyNumbersPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).click();

			try {

				webdriver.findElement(By.xpath(XpathMap.get("LuckyNumbersButton"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC46-Footer_Section",
						"User is able to click on \"How to LuckyNumbers\" on the How To page",
						"Checked User is able to click on \"How to LuckyNumbers\" on the How To page", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC46-Footer_Section",
						"User is able to click on \"How to LuckyNumbers\" on the How To page",
						"Checked User is able to click on \"How to LuckyNumbers\" on the How To page", "Fail");
				return false;
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC46-Footer_Section",
					"User is able to click on \"How to LuckyNumbers\" on the How To page",
					"Checked User is able to click on \"How to LuckyNumbers\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

//TC-47 (FS) @Author: AS66528//
//User is able to click on any option available on "How to Lucky Numbers" section
	public boolean ClickAnyOptionInLuckyNumbers(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).click();

			try {

				webdriver.findElement(By.xpath(XpathMap.get("LuckyNumbersButton"))).click();

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stOptionInHowToPage"))).isDisplayed());
				System.out.print(" 1stOption InHowToPage  Visible ");

				webdriver.findElement(By.xpath(XpathMap.get("1stOptionInHowToPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC47-Footer_Section",
						"User is able to click on any option available on \"How to LuckyNumbers\" Section",
						"Checked User clicked any option available on \"How to LuckyNumbers\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC47-Footer_Section",
						"User is able to click on any option available on \"How to LuckyNumbers\" Section",
						"Checked User clicked any option available on \"How to LuckyNumbers\" Section", "Fail");
				return false;
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC47-Footer_Section",
					"User is able to click on any option available on \"How to LuckyNumbers\" Section",
					"Checked User clicked any option available on \"How to LuckyNumbers\" Section", "Fail");
			return false;
		}

		return true;
	}

//TC-48 (FS) @Author: AS66528//
//User is able to click on "How to Withdraw" on the How To page
	public boolean HowtoWithdrawPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).click();

			try {

				webdriver.findElement(By.xpath(XpathMap.get("WithdrawButton"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC48-Footer_Section",
						"User is able to click on \"How to Withdraw\" on the How To page",
						"Checked User is able to click on \"How to Withdraw\" on the How To page", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC48-Footer_Section",
						"User is able to click on \"How to Withdraw\" on the How To page",
						"Checked User is able to click on \"How to Withdraw\" on the How To page", "Fail");
				return false;
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC48-Footer_Section",
					"User is able to click on \"How to Withdraw\" on the How To page",
					"Checked User is able to click on \"How to Withdraw\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

//TC-49 (FS) @Author: AS66528//
//User is able to click on any option available on "How to Withdraw" section
	public boolean ClickAnyOptionInWithdraw(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).click();

			try {

				webdriver.findElement(By.xpath(XpathMap.get("WithdrawButton"))).click();

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stOptionInHowToPage"))).isDisplayed());
				System.out.print(" 1stOption InHowToPage  Visible ");
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("1stOptionInHowToPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC49-Footer_Section",
						"User is able to click on any option available on \"How to Withdraw\" Section",
						"Checked User clicked any option available on \"How to Withdraw\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC49-Footer_Section",
						"User is able to click on any option available on \"How to Withdraw\" Section",
						"Checked User clicked any option available on \"How to Withdraw\" Section", "Fail");
				return false;
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC49-Footer_Section",
					"User is able to click on any option available on \"How to Withdraw\" Section",
					"Checked User clicked any option available on \"How to Withdraw\" Section", "Fail");
			return false;
		}

		return true;
	}

//TC-50 (FS) @Author: AS66528//
//User is able to click on "How to Jackpots" on the How To page
	public boolean HowtoJackpotsPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).click();

			try {

				webdriver.findElement(By.xpath(XpathMap.get("JackpotsButton"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC50-Footer_Section",
						"User is able to click on \"How to Jackpots\" on the How To page",
						"Checked User is able to click on \"How to Jackpots\" on the How To page", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC50-Footer_Section",
						"User is able to click on \"How to Jackpots\" on the How To page",
						"Checked User is able to click on \"How to Jackpots\" on the How To page", "Fail");
				return false;
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC50-Footer_Section",
					"User is able to click on \"How to Jackpots\" on the How To page",
					"Checked User is able to click on \"How to Jackpots\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

//TC-51 (FS) @Author: AS66528//
//User is able to click on any option available on "How to Jackpots" section
	public boolean ClickAnyOptionInJackpots(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).click();

			try {

				webdriver.findElement(By.xpath(XpathMap.get("JackpotsButton"))).click();

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stOptionInHowToPage"))).isDisplayed());
				System.out.print(" 1stOption InHowToPage  Visible ");

				webdriver.findElement(By.xpath(XpathMap.get("1stOptionInHowToPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC51-Footer_Section",
						"User is able to click on any option available on \"How to Jackpots\" Section",
						"Checked User clicked any option available on \"How to Jackpots\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC51-Footer_Section",
						"User is able to click on any option available on \"How to Jackpots\" Section",
						"Checked User clicked any option available on \"How to Jackpots\" Section", "Fail");
				return false;
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC51-Footer_Section",
					"User is able to click on any option available on \"How to Jackpots\" Section",
					"Checked User clicked any option available on \"How to Jackpots\" Section", "Fail");
			return false;
		}

		return true;
	}

//TC-52 (FS) @Author: AS66528//
//User is able to click on "How to Sign-Up" on the How To page
	public boolean HowtoSign_UpPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).click();

			try {

				webdriver.findElement(By.xpath(XpathMap.get("Sign_UpButton"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC52-Footer_Section",
						"User is able to click on \"How to Sign_Up\" on the How To page",
						"Checked User is able to click on \"How to Sign_Up\" on the How To page", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC52-Footer_Section",
						"User is able to click on \"How to Sign_Up\" on the How To page",
						"Checked User is able to click on \"How to Sign_Up\" on the How To page", "Pass");
				return false;
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC52-Footer_Section",
					"User is able to click on \"How to Sign_Up\" on the How To page",
					"Checked User is able to click on \"How to Sign_Up\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

//TC-53 (FS) @Author: AS66528//
//User is able to click on any option available on "How to Sign_Up" section
	public boolean ClickAnyOptionInSign_Up(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).click();

			try {
				Thread.sleep(2000);
				report.detailsAppend("TC53-Footer_Section",
						"User is able to click on any option available on \"How to Sign_Up\" Section",
						"Checked User clicked any option available on \"How to Jackpots\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC53-Footer_Section",
						"User is able to click on any option available on \"How to Sign_Up\" Section",
						"Checked User clicked any option available on \"How to Sign_Up\" Section", "Fail");
				return false;
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC53-Footer_Section",
					"User is able to click on any option available on \"How to Sign_Up\" Section",
					"Checked User clicked any option available on \"How to Sign_Up\" Section", "Fail");
			return false;
		}

		return true;
	}

//TC-54 (FS) @Author: AS66528//
//User is able to click on "How to LiveCasino" on the How To page
	public boolean HowtoLiveCasinoPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).click();

			try {

				webdriver.findElement(By.xpath(XpathMap.get("LiveCasinoButton"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC54-Footer_Section",
						"User is able to click on \"How to LiveCasino\" on the How To page",
						"Checked User is able to click on \"How to LiveCasino\" on the How To page", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC54-Footer_Section",
						"User is able to click on \"How to LiveCasino\" on the How To page",
						"Checked User is able to click on \"How to LiveCasino\" on the How To page", "Fail");
				return false;
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC54-Footer_Section",
					"User is able to click on \"How to LiveCasino\" on the How To page",
					"Checked User is able to click on \"How to LiveCasino\" on the How To page", "Fail");
			return false;
		}

		return true;
	}

//TC-55 (FS) @Author: AS66528//
//User is able to click on any option available on "How to LiveCasino" section
	public boolean ClickAnyOptionInLiveCasino(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).isDisplayed());
			System.out.print(" HowTo Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("HowToButton"))).click();

			try {
				webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
				webdriver.findElement(By.xpath(XpathMap.get("LiveCasinoButton"))).click();

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("1stOptionInHowToPage"))).isDisplayed());
				System.out.print(" 1stOption InHowToPage  Visible ");

				webdriver.findElement(By.xpath(XpathMap.get("1stOptionInHowToPage"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC55-Footer_Section",
						"User is able to click on any option available on \"How to LiveCasino\" Section",
						"Checked User clicked any option available on \"How to LiveCasino\" Section", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC55-Footer_Section",
						"User is able to click on any option available on \"How to LiveCasino\" Section",
						"Checked User clicked any option available on \"How to LiveCasino\" Section", "Fail");
				return false;
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC55-Footer_Section",
					"User is able to click on any option available on \"How to LiveCasino\" Section",
					"Checked User clicked any option available on \"How to LiveCasino\" Section", "Fail");
			return false;
		}

		webdriver.navigate().to("https://www.betway.co.za/");

		return true;
	}

//TC-56 (FS) @Author: AS66528//
//To check that User is able to click on Affiliates from the Footer section
	public boolean AffiliatesOnFooter(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("AffiliatesButton"))).isDisplayed());
			System.out.print(" Affiliates Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("AffiliatesButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC56-Footer_Section", "User is able to click on Affiliates from the Footer",
					"User click on Affiliates from the Footer", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("BackIconInPage"))).click();

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC56-Footer_Section", "User is able to click on Affiliates from the Footer",
					"User click on Affiliates from the Footer", "Pass");

			return false;
		}

		return true;
	}

//TC-57 (FS) @Author: AS66528//
//TVerify that User should able to see the Legal information about betWay on footer section
	public boolean LegalinformationOnFooter(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC57-Footer_Section",
					"User should able to see the Legal information about betWay on footer section",
					"User able to see the Legalinformation about betWay on footer", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC57-Footer_Section", "User check available Hyperlinks on footer section",
					"User able to see the Legalinformation about betWay on footer", "Fail");

			return false;
		}

		return true;

	}

//TC-58 (FS) @Author: AS66528//
//To Verify that User is able to see the Local time on footer section
	public boolean LocaltimeOnFooter(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC58-Footer_Section", "User is able to see the Local time on footer section",
					"User is able to see the Local time on footer section", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC58-Footer_Section", "User is able to see the Local time on footer section",
					"User is able to see the Local time on footer section", "Fail");

			return false;
		}

		return true;

	}

//TC-59 (FS) @Author: AS66528//
//TVerify that User should able to see the betWay App QR code on footer section
	public boolean betWayAppQRcodeOnFooter(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC59-Footer_Section",
					"User should able to see the betWay App QR code on footer section",
					"User able to see the betWay App QR code on footer", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC59-Footer_Section",
					"User should able to see the betWay App QR code on footer section",
					"User able to see the betWay App QR code on footer", "Fail");

			return false;
		}

		return true;
	}

//TC-60 (FS) @Author: AS66528//
//To check that User is able to click on App store icons on Footer section
	public boolean AppstoreiconsOnFooter(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("AppStoreIcon"))).isDisplayed());
			System.out.print(" Affiliates Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("AppStoreIcon"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC60-Footer_Section", "User is able to click on App store icons on Footer",
					"User click on App store icons on Footer", "Pass");

			webdriver.navigate().back();
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC60-Footer_Section", "User is able to click on App store icons on Footer",
					"User click on App store icons on Footer", "Pass");

			return false;
		}
		return true;
	}

//TC-61 (FS) @Author: AS66528//
//To check that User is able to click on the social media icons from the footer section
	public boolean socialmediaIconsOnFooter(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FbappIcon"))).isDisplayed());
			System.out.print(" Affiliates Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FbappIcon"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC60-Footer_Section", "User is able to click on social media icons on Footer",
					"User click on social media icons on Footer", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC60-Footer_Section", "User is able to click on social media icons on Footer",
					"User click on social media icons on Footer", "Fail");

			return false;
		}

		return true;
	}

//TC-62 (FS) @Author: AS66528//
//To check that User is able to click on 18Plus Logo on Footer section
	public boolean EighteenPlusLogoOnFooter(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("18PlusLogo"))).isDisplayed());
			System.out.print(" Affiliates Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("18PlusLogo"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC62-Footer_Section", "User is able to click on 18Plus Logo on Footer",
					"User click on 18Plus Logo on Footer", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("BackIconInPage"))).click();

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC62-Footer_Section", "User is able to click on 18Plus Logo on Footer",
					"User click on 18Plus Logo on Footer", "Fail");

			return false;
		}

		return true;
	}

//TC-63 (FS) @Author: AS66528//
//To check that User is able to click on Help and Info from the Footer section
	public boolean HelpandInfoOnFooter(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			webdriver.navigate().to("https://www.betway.co.zm/");

			webdriver.navigate().refresh();
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HelpandInfoButton"))).isDisplayed());
			System.out.print(" HelpandInfo Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("HelpandInfoButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC63-Footer_Section",
					"User is able to click on HelpandInfoButton from the Footer section",
					"Checked User is able to click on HelpandInfoButton from the Footer section", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("BackIconInPage"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC63-Footer_Section",
					"User is able to click on HelpandInfoButton from the Footer section",
					"Checked User is able to click on HelpandInfoButton from the Footer section", "Fail");
			return false;
		}

		return true;
	}

//TC-64 (FS) @Author: AS66528//
//To check that User is able to click on Back button available on Help and Info Page
	public boolean BackbuttonOnHelp_InfoPage(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HelpandInfoButton"))).isDisplayed());
			System.out.print(" HelpandInfo Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("HelpandInfoButton"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("BackIconInPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC64-Footer_Section",
					"User is able to click on  Back button available on HelpandInfo page",
					"User click on  Back button available on HelpandInfo page", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC64-Footer_Section",
					"User is able to click on  Back button available on HelpandInfo page",
					"User click on  Back button available on HelpandInfo page", "Fail");
			return false;
		}

		webdriver.navigate().to("https://www.betway.co.za/");
		return true;
	}

//////////////////////////////////Pavan Footer Section///////////////////////////////////////////

//TC-108 (FS) @Author: AS66528//
//To check that the Footer options are present on betWay site
	public boolean FooterOptionCheckForLive(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).isDisplayed());
			System.out.print(" VuvuLive Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC108-Footer_Section",
					"User check that the Footer options are present on Live Tab of betWay site",
					"User able to see Footer options on Live Tab of betWay site", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC108-Footer_Section",
					"User check that the Footer options are present on Live Tab of betWay site",
					"User able to see Footer options on Live Tab of betWay site", "Fail");
			return false;
		}

		return true;

	}

//TC-109 (FS) @Author: AS66528//
//To check the options available on footer section
	public boolean FooterOptionsCheckForLive(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).isDisplayed());
			System.out.print(" VuvuLive Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC109-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Live Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on Live Tab of betWay site",
					"Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC109-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Live Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on Live Tab of betWay site",
					"Fail");
			return false;
		}

		return true;

	}

//TC-110 (FS) @Author: AS66528//
//To check that the Footer options are present on betWay site
	public boolean FooterOptionCheckForCasinoGames(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("CasinoGames"))).isDisplayed());
			System.out.print(" CasinoGames Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("CasinoGames"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC110-Footer_Section",
					"User check that the Footer options are present on Casino Games Tab of betWay site",
					"User able to see Footer options on Casino Games Tab of betWay site", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC110-Footer_Section",
					"User check that the Footer options are present on Casino Games Tab of betWay site",
					"User able to see Footer options on Casino Games Tab of betWay site", "Fail");
			return false;
		}

		return true;

	}

//TC-111 (FS) @Author: AS66528//
//To check the options available on footer section
	public boolean FooterOptionsCheckForCasinoGames(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("CasinoGames"))).isDisplayed());
			System.out.print(" CasinoGames Button Visible ");
			Thread.sleep(4000);
			webdriver.findElement(By.xpath(XpathMap.get("CasinoGames"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC111-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Casino Games Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on Casino Games Tab of betWay site",
					"Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC111-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Casino Games Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info )on Casino Games Tab of betWay site",
					"Fail");
			return false;
		}

		return true;

	}

//TC-112 (FS) @Author: AS66528//
//To check the options available on footer section
	public boolean FooterOptionCheckForAviator(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("Aviator"))).isDisplayed());
			System.out.print(" Aviator Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("Aviator"))).click();
			Thread.sleep(8000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).isDisplayed());
			System.out.print(" LoginClose Button Visible \n");
			webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();
			System.out.print(" LoginClose Button Clicked \n ");
            Thread.sleep(3000);
            Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			
			report.detailsAppend("TC112-Footer_Section",
					"User check that the Footer options are present on Aviator Tab of betWay site",
					"User able to see Footer options on Aviator Tab of betWay site", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC112-Footer_Section",
					"User check that the Footer options are present on Aviator Tab of betWay site",
					"User able to see Footer options on Aviator Tab of betWay site", "Fail");
			return false;
		}

		return true;

	}

//TC-113 (FS) @Author: AS66528//
//To check the options available on footer section
	public boolean FooterOptionsCheckForAviator(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("Aviator"))).isDisplayed());
			System.out.print(" Aviator Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("Aviator"))).click();
			Thread.sleep(5000);
			
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).isDisplayed());
			System.out.print(" LoginClose Button Visible \n");
			webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();
			System.out.print(" LoginClose Button Clicked \n ");
            Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC113-Footer_Section",
					"User check that the Footer options( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) are present on Aviator Tab of betWay site",
					"User able to see Footer options( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Aviator Tab of betWay site",
					"Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC113-Footer_Section",
					"User check that the Footer options( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) are present on Aviator Tab of betWay site",
					"User able to see Footer options( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Aviator Tab of betWay site",
					"Fail");
			return false;
		}

		return true;

	}

//TC-114 (FS) @Author: AS66528//
//To check that the Footer options are present on betWay site
	public boolean FooterOptionCheckForLiveCasino(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.navigate().to("https://www.betway.co.zm/");
			try {
				webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
				webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaCookies"))).click();
			} catch (Exception e) {
				System.out.print("Cookies button not visible");
			}
			Thread.sleep(6000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("Livecasino"))).isDisplayed());
			System.out.print(" LiveCasino Button Visible ");
			Thread.sleep(4000);
			webdriver.findElement(By.xpath(XpathMap.get("Livecasino"))).click();
			Thread.sleep(6000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC114-Footer_Section",
					"User check that the Footer options are present on Live Casino Tab of betWay site",
					"User able to see Footer options on Live Casino Tab of betWay site", "Pass");

			webdriver.navigate().to("https://www.betway.co.za/");
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC114-Footer_Section",
					"User check that the Footer options are present on Live Casino Tab of betWay site",
					"User able to see Footer options on Live Casino Tab of betWay site", "Fail");
			return false;
		}
		webdriver.navigate().to("https://www.betway.co.za/");

		return true;

	}

//TC-115 (FS) @Author: AS66528//
//To check the options available on footer section
	public boolean FooterOptionsCheckForLiveCasino(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.navigate().to("https://www.betway.co.zm/");
			try {
				webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
				webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaCookies"))).click();
			} catch (Exception e) {
				System.out.print("Cookies button not visible");
			}
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("Livecasino"))).isDisplayed());
			System.out.print(" LiveCasino Button Visible ");
			Thread.sleep(4000);
			webdriver.findElement(By.xpath(XpathMap.get("Livecasino"))).click();
			Thread.sleep(6000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("ZMFooterPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC115-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Live Casino Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on Live Casino Tab of betWay site",
					"Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC115-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Live Casino Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info )on Live Casino Tab of betWay site",
					"Fail");
			webdriver.navigate().to("https://www.betway.co.za/");
			return false;
		}
		webdriver.navigate().to("https://www.betway.co.za/");
		;
		return true;

	}

//TC-116 (FS) @Author: AS66528//
//To check that the Footer options are present on betWay site
	public boolean FooterOptionCheckForBWJackpot(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("BetwayJackpot"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC116-Footer_Section",
					"User check that the Footer options are present on BetWay Jackpot Tab of betWay site",
					"User able to see Footer options on BetWay Jackpot Tab of betWay site", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC116-Footer_Section",
					"User check that the Footer options are present on BetWay Jackpot Tab of betWay site",
					"User able to see Footer options on BetWay Jackpot Tab of betWay site", "Pass");
			return false;
		}

		return true;

	}

//TC-117 (FS) @Author: AS66528//
//To check the options available on footer section
	public boolean FooterOptionsCheckForBWJackpot(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BetwayJackpot"))).isDisplayed());
			System.out.print(" BetwayJackpot Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("BetwayJackpot"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC117-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on BetWay Jackpot Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on BetWay Jackpot Tab of betWay site",
					"Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC117-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on BetWay Jackpot Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on BetWay Jackpot Tab of betWay site",
					"Pass");
			return false;
		}

		return true;

	}

//TC-118 (FS) @Author: AS66528//
//To check that the Footer options are present on betWay site
	public boolean FooterOptionCheckForBetGames(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BetGames"))).isDisplayed());
			System.out.print(" BetGames Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("BetGames"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC118-Footer_Section",
					"User check that the Footer options are present on BetGames Tab of betWay site",
					"User able to see Footer options on BetGames Tab of betWay site", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC118-Footer_Section",
					"User check that the Footer options are present on BetGames Tab of betWay site",
					"User able to see Footer options on BetGames Tab of betWay site", "Fail");
			return false;
		}

		return true;

	}

//TC-119 (FS) @Author: AS66528//
//To check the options available on footer section
	public boolean FooterOptionsCheckForBetGames(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BetGames"))).isDisplayed());
			System.out.print(" BetGames Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("BetGames"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC119-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on BetGames Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on BetGames Tab of betWay site",
					"Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC119-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on BetGames Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on BetGames Tab of betWay site",
					"Fail");
			return false;
		}

		return true;
	}

//TC-120 (FS) @Author: AS66528//
//To check that the Footer options are present on betWay site
	public boolean FooterOptionCheckForESports(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("Esports"))).isDisplayed());
			System.out.print(" Esports Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("Esports"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC120-Footer_Section",
					"User check that the Footer options are present on ESports Tab of betWay site",
					"User able to see Footer options on ESports Tab of betWay site", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC120-Footer_Section",
					"User check that the Footer options are present on Esports Tab of betWay site",
					"User able to see Footer options on ESports Tab of betWay site", "Fail");
			return false;
		}

		return true;

	}

//TC-121 (FS) @Author: AS66528//
//To check the options available on footer section
	public boolean FooterOptionsCheckForESports(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("Esports"))).isDisplayed());
			System.out.print(" Esports Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("Esports"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC121-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Esports Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on Esports Tab of betWay site",
					"Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC121-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Esports Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on Esports Tab of betWay site",
					"Pass");
			return false;
		}

		return true;
	}

//TC-122 (FS) @Author: AS66528//
//To check that the Footer options are present on betWay site
	public boolean FooterOptionCheckForVirtuals(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("Virtual"))).isDisplayed());
			System.out.print(" Virtuals Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("Virtual"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC122-Footer_Section",
					"User check that the Footer options are present on Virtuals Tab of betWay site",
					"User able to see Footer options on Virtuals Tab of betWay site", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC122-Footer_Section",
					"User check that the Footer options are present on Virtuals Tab of betWay site",
					"User able to see Footer options on Virtuals Tab of betWay site", "Pass");
			return false;
		}

		return true;

	}

//TC-123 (FS) @Author: AS66528//
//To check the options available on footer section
	public boolean FooterOptionsCheckForVirtuals(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("Virtual"))).isDisplayed());
			System.out.print(" Virtuals Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("Virtual"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC123-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Virtuals Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on Virtuals Tab of betWay site",
					"Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC123-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Virtuals Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on Virtuals Tab of betWay site",
					"Pass");
			webdriver.navigate().refresh();
			return false;
		}

		return true;

	}

//TC-124 (FS) @Author: AS66528//
//To check that the Footer options are present on betWay site
	public boolean FooterOptionCheckForPromotions(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("Promotion"))).isDisplayed());
			System.out.print(" Promotion Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("Promotion"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC124-Footer_Section",
					"User check that the Footer options are present on Promotions Tab of betWay site",
					"User able to see Footer options on Promotions Tab of betWay site", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC124-Footer_Section",
					"User check that the Footer options are present on Promotions Tab of betWay site",
					"User able to see Footer options on Promotions Tab of betWay site", "Pass");
			webdriver.navigate().refresh();
			return false;
		}

		return true;

	}

//TC-125 (FS) @Author: AS66528//
//To check the options available on footer section
	public boolean FooterOptionsCheckForPromotions(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("Promotion"))).isDisplayed());
			System.out.print(" Promotion Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("Promotion"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC125-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Promotions Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on Promotions Tab of betWay site",
					"Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC125-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on Promotions Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on Promotions Tab of betWay site",
					"Pass");
			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

//TC-126 (FS) @Author: AS66528//
//To check that the Footer options are present on betWay site
	public boolean FooterOptionCheckForLuckyNumbers(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("LuckyNumbers"))).isDisplayed());
			System.out.print(" LuckyNumbers Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("LuckyNumbers"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC126-Footer_Section",
					"User check that the Footer options are present on LuckyNumbers Tab of betWay site",
					"User able to see Footer options on LuckyNumbers Tab of betWay site", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC126-Footer_Section",
					"User check that the Footer options are present on LuckyNumbers Tab of betWay site",
					"User able to see Footer options on LuckyNumbers Tab of betWay site", "Pass");
			webdriver.navigate().refresh();
			return false;
		}

		return true;

	}

//TC-127 (FS) @Author: AS66528//
//To check the options available on footer section
	public boolean FooterOptionsCheckForLuckyNumbers(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("LuckyNumbers"))).isDisplayed());
			System.out.print(" LuckyNumbers Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("LuckyNumbers"))).click();

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).isDisplayed());
			System.out.print(" FooterPage Button Visible ");

			webdriver.findElement(By.xpath(XpathMap.get("FooterPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC127-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on LuckyNumbers Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on LuckyNumbers Tab of betWay site",
					"Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC127-Footer_Section",
					"User check that the Footer options are present( betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info) on LuckyNumbers Tab of betWay site",
					"User able to see Footer options(betWay logo,Sponsors logoPrivacy Policy,Lotteries Board,Contact Us,Sponsorships,FAQs,Responsible Gaming,Terms & Conditions,How To,Help and Info ) on LuckyNumbers Tab of betWay site",
					"Pass");
			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

////////////////SignUp for Vuvuzila Prod////////////////////////////////

	public boolean VuvuzelCookies(Desktop_HTML_Report report) {

		try {
			Thread.sleep(2000);
			PromoClose();
			Thread.sleep(1000);
			try {
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaCookies"))).click();
				System.out.print("cookies button is clicked");
				Thread.sleep(1000);
			} catch (Exception e) {
				System.out.print("cookies button is not present");
				webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaCookies"))).click();
			}

			log.debug("Switch to default tab");
		} catch (Exception e) {
			System.out.println(e);
			return false;
		}
		return true;

	}

/// SignUp for Regression Suit ////

//TC-1 @Author: PJ65867
//Check if the "Sign Up" Button is visible on the homepage.//
	public boolean SignupInHomePage(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			Thread.sleep(2000);
			report.detailsAppend("TC-1 BetwayVuvuzela SignUp", "Signup Button in Home page Should be Visible",
					"Signup Button in Home page is Visible", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-1 BetwayVuvuzela SignUp", "Signup Button in Home page Should be Visible",
					"Signup Button in Home page is Visible", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-3 (SignUp) @Author: AS66528//
//Check if there is a visible "Sign Up" button on the Hamburger Menu.//
	public boolean SignupInHamburgerMenu(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC-3 BetwayVuvuzela SignUp", "Signup In HamburgerMenu Should be Visible",
					"Signup in HamburgerMenu  is Visible", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("CloseHamburgerMenu"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-3 BetwayVuvuzela SignUp", "Signup in HamburgerMenu Should be Visible",
					"Signup in HamburgerMenu  is Visible", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-5 (SignUp) @Author: AS66528//
//Check if the required sign-up fields (e.g., mobile number, password) are
//visible on the sign-up form..//
	public boolean SignUpForm(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC-5 BetwayVuvuzela SignUp", "Signup Form Should be Visible",
					"Signup form  is Visible", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-5 BetwayVuvuzela SignUp", "Signup form Should be Visible",
					"Signup form is Visible", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-7 (SignUp) @Author: AS66528//
//Check if the required sign-up fields (e.g., mobile number, password) are
//visible on the sign-up form..//
	public boolean SignupValidNumber(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();

			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno1"));
			} else {
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno"));

			}
			Thread.sleep(2000);
			report.detailsAppend("TC-7 BetwayVuvuzela SignUp", "Mobile Number Should be Valid",
					"Mobile Number is Valid", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-7 BetwayVuvuzela SignUp", "Mobile Number Should be Valid",
					"Mobile Number is Valid", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-9 (SignUp) @Author: AS66528//
//Check if the system accepts a strong password.//
	public boolean SignupStrongPassword(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();

			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno1"));

			} else {

				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno"));

			}
			webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("Passworddata"));
			Thread.sleep(2000);
			report.detailsAppend("TC-9 BetwayVuvuzela SignUp", "Strong Password Should be Valid",
					"Strong Password is Valid", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-9 BetwayVuvuzela SignUp", "Strong Password Should be Valid",
					"Strong Password is Valid", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-11 (SignUp) @Author: AS66528//
//Check if the system rejects a blank password.//
	public boolean SignupBlankStrongPassword(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();

			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno1"));

			} else {

				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno"));

			}
			webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys("");

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("Register"))).click();

			} else {
				webdriver.findElement(By.xpath(XpathMap.get("NextButton"))).click();

			}
			Thread.sleep(2000);
			report.detailsAppend("TC-11 BetwayVuvuzela SignUp", "Blank Password Should be Rejected",
					"Blank Password is Rejected", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-11 BetwayVuvuzela SignUp", "Blank Password Should be Rejected",
					"Blank Password is Rejected", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-13 (SignUp) @Author: AS66528//
//Check if the system rejects a password succeeding the maximum allowed
//length.//
	public boolean SignupMinimumPassword(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();

			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno1"));

			} else {

				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno"));

			}
			webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("MinPass"));

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("Register"))).click();

			} else {
				webdriver.findElement(By.xpath(XpathMap.get("NextButton"))).click();

			}
			Thread.sleep(2000);
			report.detailsAppend("TC-13 BetwayVuvuzela SignUp", "Minimum length Password Should be Rejected",
					"Minimum length is Rejected", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-13 BetwayVuvuzela SignUp", "Minimum length Should be Rejected",
					"Minimum length is Rejected", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-15 (SignUp) @Author: AS66528//
//Check if the system accepts a valid Last name.//
	public boolean SignupLastName(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();

			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno1"));

			} else {

				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno"));

			}
			webdriver.findElement(By.xpath(XpathMap.get("Lastname"))).sendKeys(XpathMap.get("Betway"));

			webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("Passworddata"));

			webdriver.findElement(By.xpath(XpathMap.get("Firstname"))).sendKeys(XpathMap.get("Zensar"));

			Thread.sleep(2000);
			report.detailsAppend("TC-15 BetwayVuvuzela SignUp", "Last Name Should be Valid", "Last Name is Valid",
					"Pass");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
			
		} catch (Exception e) {
			report.detailsAppend("TC-15 BetwayVuvuzela SignUp", "Last Name Should be Valid", "Last Name is Valid",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-17 (SignUp) @Author: AS66528//
//Check if the system accepts a valid Last name.//
	public boolean SignupNextButton(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC-17 BetwayVuvuzela SignUp", "Next Button Should be Visible",
					"Next Button is Visible", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-17 BetwayVuvuzela SignUp", "Next Button Should be Visible",
					"Next Button is Visible", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-19 (SignUp) @Author: AS66528//
//Verify user is not able to signup if Day is not selected from date of birth
//dropdown//
	public boolean SignupDayClick(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();

			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno1"));

			} else {

				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno"));

			}
			webdriver.findElement(By.xpath(XpathMap.get("Lastname"))).sendKeys(XpathMap.get("Betway"));

			webdriver.findElement(By.xpath(XpathMap.get("Firstname"))).sendKeys("Zensar");

			webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("Passworddata"));

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {

			} else {
				webdriver.findElement(By.xpath(XpathMap.get("NextButton"))).click();

			}
			try {
				webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
				webdriver.findElement(By.xpath(XpathMap.get("MonthSelection"))).click();

				webdriver.findElement(By.xpath(XpathMap.get("Month"))).click();

			} catch (Exception e) {
				System.out.println(e);
			}
			webdriver.findElement(By.xpath(XpathMap.get("YearSelection"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("Year"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("Register"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC-19 BetwayVuvuzela SignUp", "Warning Should be Visible when Day not Selected",
					"Warning is Visible when Day not Selected", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-19 BetwayVuvuzela SignUp", "Warning Should be Visible when Day not Selected",
					"Warning is Visible when Day not Selected", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-21 (SignUp) @Author: AS66528//
//Verify user is not able to signup if Month is not selected from date of birth
//dropdown//
	public boolean SignupMonthClick(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();

			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno1"));

			} else {

				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno"));

			}
			webdriver.findElement(By.xpath(XpathMap.get("Lastname"))).sendKeys(XpathMap.get("Betway"));

			webdriver.findElement(By.xpath(XpathMap.get("Firstname"))).sendKeys(XpathMap.get("Zensar"));

			webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("Passworddata"));

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
			} else {
				webdriver.findElement(By.xpath(XpathMap.get("NextButton"))).click();

			}
			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("Register"))).isDisplayed());
			System.out.print("RegisterButton is Present");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("DaySelection"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("Day"))).click();
			Thread.sleep(2000);
			
			webdriver.findElement(By.xpath(XpathMap.get("YearSelection"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("Year"))).click();
			Thread.sleep(2000);
			
			webdriver.findElement(By.xpath(XpathMap.get("Register"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC-21 BetwayVuvuzela SignUp", "Warning Should be Visible when Month not Selected",
					"Warning is Visible when Month not Selected", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-21 BetwayVuvuzela SignUp", "Warning Should be Visible when Month not Selected",
					"Warning is Visible when Month not Selected", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-23 (SignUp) @Author: AS66528//
//Verify user is not able to signup if Year is not selected from date of birth
//dropdown//
	public boolean SignupYearClick(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();

			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno1"));

			} else {
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno"));

			}
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("Lastname"))).sendKeys(XpathMap.get("Betway"));

			webdriver.findElement(By.xpath(XpathMap.get("Firstname"))).sendKeys(XpathMap.get("Zensar"));

			webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("Passworddata"));

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {

			} else {
				webdriver.findElement(By.xpath(XpathMap.get("NextButton"))).click();

			}
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("Register"))).isDisplayed());
			System.out.print("RegisterButton is Present");
			webdriver.findElement(By.xpath(XpathMap.get("DaySelection"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("Day"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("MonthSelection"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("Month"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("Register"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC-23 BetwayVuvuzela SignUp", "Warning Should be Visible when Year not Selected",
					"Warning is Visible when Year not Selected", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-23 BetwayVuvuzela SignUp", "Warning Should be Visible when Year not Selected",
					"Warning is Visible when Year not Selected", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-25 (SignUp) @Author: AS66528//
//Verify two fields are available "voucher code signup code" and "referral
//code" when clicked on have signup code field//
	public boolean SignupCodeDropdown(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();

			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno1"));

				webdriver.findElement(By.xpath(XpathMap.get("Firstname"))).sendKeys(XpathMap.get("Zensar"));

				webdriver.findElement(By.xpath(XpathMap.get("Lastname"))).sendKeys(XpathMap.get("Betway"));

				webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("Passworddata"));

				webdriver.findElement(By.xpath(XpathMap.get("SignupNextButton"))).click();

				webdriver.findElement(By.xpath(XpathMap.get("SignupCodeDropdown"))).click();

			} else {
				webdriver.findElement(By.xpath(XpathMap.get("SignupCodeDropdown"))).click();

			}
			Thread.sleep(2000);
			report.detailsAppend("TC-25 BetwayVuvuzela SignUp", "VoucherCode and ReferalCode fields Should be Visible ",
					"VoucherCode and ReferalCode fields is Visible ", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-25 BetwayVuvuzela SignUp", "VoucherCode and ReferalCode fields Should be Visible ",
					"VoucherCode and ReferalCode fields is Visible ", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-27 (SignUp) @Author: AS66528//
//Verify "select your welcome offer" radio button is available//
	public boolean SignupRadiobutton(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();

			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno1"));

			} else {

				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno"));

			}

			webdriver.findElement(By.xpath(XpathMap.get("Firstname"))).sendKeys(XpathMap.get("Zensar"));

			webdriver.findElement(By.xpath(XpathMap.get("Lastname"))).sendKeys(XpathMap.get("Betway"));

			webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("Passworddata"));

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {

			} else {
				webdriver.findElement(By.xpath(XpathMap.get("NextButton"))).click();

			}
			Thread.sleep(2000);
			report.detailsAppend("TC-27 BetwayVuvuzela SignUp", "Selcet Welcome offer Radio buttons should be visible",
					"Selcet Welcome offer Radio buttons is visible", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-27 BetwayVuvuzela SignUp", "Selcet Welcome offer Radio buttons should be visible",
					"Selcet Welcome offer Radio buttons is visible", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-29 (SignUp) @Author: AS66528//
//Verify signup window is closed when clicked on "X" (close crossmark)//
	public boolean SignupCloseButton(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC-29 BetwayVuvuzela SignUp", "Signup popup window should be closed ",
					"Signup popup window is closed ", "Pass");
			
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-29 BetwayVuvuzela SignUp", "Signup popup window should be closed ",
					"Signup popup window is closed ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-31 (SignUp) @Author: AS66528//
//To check Signup window opens when clicked on signup button from the hamburger
//menu//
	public boolean SignupInHamburger(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present & Clicked \n");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();

			Thread.sleep(2000);
			report.detailsAppend("TC-31 BetwayVuvuzela SignUp", "Signup Form should be opened ",
					"Signup Form  is opened ", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-31 BetwayVuvuzela SignUp", "Signup Form should be opened ",
					"Signup Form  is opened ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-35 (SignUp) @Author: AS66528//
//To check user is not able to signup if I am over 18 is not checked//
	public boolean Signup18YearsCheckbox(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();

			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno1"));

			} else {

				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno"));

			}

			webdriver.findElement(By.xpath(XpathMap.get("Firstname"))).sendKeys(XpathMap.get("Zensar"));

			webdriver.findElement(By.xpath(XpathMap.get("Lastname"))).sendKeys(XpathMap.get("Betway"));

			webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("Passworddata"));

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {

			} else {
				webdriver.findElement(By.xpath(XpathMap.get("NextButton"))).click();

			}
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("Register"))).isDisplayed());
			System.out.print("RegisterButton is Present");
			webdriver.findElement(By.xpath(XpathMap.get("DaySelection"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("Day"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("MonthSelection"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("Month"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("YearSelection"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("Year"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("AlreadyAccount"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("Register"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC-35 BetwayVuvuzela SignUp",
					"User should not able to signup if I am over 18 is not checked",
					"User is not able to signup if I am over 18 is not checked", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-35 BetwayVuvuzela SignUp",
					"User should not able to signup if I am over 18 is not checked",
					"User is not able to signup if I am over 18 is not checked", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-37 (SignUp) @Author: AS66528//
//To check A field to enter ID number (or passport number ) is available//
	public boolean SignupIDField(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();

			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno1"));

			} else {

				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno"));

			}

			webdriver.findElement(By.xpath(XpathMap.get("Firstname"))).sendKeys(XpathMap.get("Zensar"));

			webdriver.findElement(By.xpath(XpathMap.get("Lastname"))).sendKeys(XpathMap.get("Betway"));

			webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("Passworddata"));

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {

			} else {
				webdriver.findElement(By.xpath(XpathMap.get("NextButton"))).click();

			}
			Thread.sleep(2000);
			report.detailsAppend("TC-37 BetwayVuvuzela SignUp", "User should  able to See ID Field",
					"User is  able to See ID Field", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-37 BetwayVuvuzela SignUp", "User should  able to See ID Field",
					"User is  able to See ID Field", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-39 (SignUp) @Author: AS66528//
//To check back button is available on 2nd step of signup window//
	public boolean SignupBackButton(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();

			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno1"));

			} else {

				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno"));

			}

			webdriver.findElement(By.xpath(XpathMap.get("Firstname"))).sendKeys(XpathMap.get("Zensar"));

			webdriver.findElement(By.xpath(XpathMap.get("Lastname"))).sendKeys(XpathMap.get("Betway"));

			webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("Passworddata"));

			webdriver.findElement(By.xpath(XpathMap.get("NextButton"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("AlreadyAccount"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC-39 BetwayVuvuzela SignUp", "User should  able to See Back Button",
					"User is  able to See Back Button", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-39 BetwayVuvuzela SignUp", "User should  able to See Back Button",
					"User is  able to See Back Button", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-41 (SignUp) @Author: AS66528//
//To check user is able to register when Register button is clicked.//
	public boolean SignupRegister(Desktop_HTML_Report report) {

		try {
			 
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			try {
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);}
			catch(Exception e)
			{
				System.out.println("Signup Menu is opened");
			}
			String title = webdriver.getCurrentUrl();
			System.out.println("Title is " + title);
			if ((title).contains("ng")) {
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno1"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("Firstname"))).sendKeys(XpathMap.get("Zensar"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("Lastname"))).sendKeys(XpathMap.get("Betway"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("Passworddata"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("SignupNextButton"))).click();
				Thread.sleep(2000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("Register"))).isDisplayed());
				System.out.print("RegisterButton is Present");
				webdriver.findElement(By.xpath(XpathMap.get("Territory"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("TerritoryField"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("DaySelection"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("Day"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("MonthSelection"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("Month"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("YearSelection"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("Year"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("Address"))).sendKeys(XpathMap.get("Details"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("AgreeAll"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("CaptchaDivision")));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("Captcha"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("AlreadyAccount"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("Register"))).click();
				Thread.sleep(8000);
				webdriver.findElement(By.xpath(XpathMap.get("DepositLater"))).click();
				Thread.sleep(8000);
			} else if ((title).contains("za")) {
 
				long min = 999811111; // Minimum 9-digit number
				long max = 999999999; // Maximum 9-digit number
 
				// Create an instance of Random class
				Random random = new Random();
 
				// Generate random number within the specified range
				long randomNumber = random.nextLong() % (max - min + 1) + min;
 
				// Ensure the generated number is positive
				randomNumber = Math.abs(randomNumber);
				String randomString = Long.toString(randomNumber);
 
				System.out.println(randomString);
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(randomString);
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("Lastname"))).sendKeys(XpathMap.get("Betway"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("Firstname"))).sendKeys(XpathMap.get("Zensar"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("Passworddata"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("SignupNextButton"))).click();
				Thread.sleep(3000);
				System.out.print("RegisterButton is Present");
				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("DaySelection"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("Day"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("MonthSelection"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("Month"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("YearSelection"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("Year"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("SelectIDType"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("Passport"))).click();
				Thread.sleep(2000);
				long min1 = 123456789; // Minimum 9-digit number
				long max1 = 999999999; // Maximum 9-digit number
 
				// Create an instance of Random class
				Random random1 = new Random();
 
				// Generate random number within the specified range
				long randomNumber1 = random1.nextLong() % (max1 - min1 + 1) + min1;
 
				// Ensure the generated number is positive
				randomNumber1 = Math.abs(randomNumber1);
				String randomString1 = Long.toString(randomNumber1);
 
				System.out.println(randomString1);
				webdriver.findElement(By.xpath(XpathMap.get("IDField"))).sendKeys(randomString1);
				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("AgreeAll"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("AlreadyAccount"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("Register"))).click();
				Thread.sleep(12000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("DepositLater"))).isDisplayed());
				Thread.sleep(2000);
			} else if (title.contains("zm")) {
 
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("Firstname"))).sendKeys(XpathMap.get("Zensar"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("Lastname"))).sendKeys(XpathMap.get("Betway"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("Passworddata"));
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("DaySelection"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("Day"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("MonthSelection"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("Month"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("YearSelection"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("Year"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("AgreeAll"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("AlreadyAccount"))).click();
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("Register"))).click();
				Thread.sleep(60000);
				webdriver.findElement(By.xpath(XpathMap.get("DepositLater"))).click();
				Thread.sleep(2000);
			}
			report.detailsAppend("TC-41 SignUp", "User should  able to Register", "User is  able to Register", "Pass");
		} catch (Exception e) {
			System.out.println(e);
			report.detailsAppend("TC-41 SignUp", "User should  able to Register", "User is not able to Register",
					"Fail");
 
			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-47 (SignUp) @Author: AS66528//
//To check Signup window opens when clicked on Register now hyperlink text//
	public boolean SignupLiveRegisterNow(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).isDisplayed());
			System.out.print("VuvuLive is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("FooterDD"))).isDisplayed());
			System.out.print("FooterDropDown is Present");
			webdriver.findElement(By.xpath(XpathMap.get("FooterDD"))).click();

			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("RegisterNow"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC-47 BetwayVuvuzela SignUp", "Signup Window should open When clicked On RegisterNow",
					"Signup Window is opened When clicked On RegisterNow", "Pass");
			
			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			
		} catch (Exception e) {
			report.detailsAppend("TC-47 BetwayVuvuzela SignUp", "Signup Window should open When clicked On RegisterNow",
					"Signup Window is opened When clicked On RegisterNow", "Pass");
			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-2 (Signup)@Author: AS66528
//To Check if there is a visible "Sign Up" button on the login page.
	public boolean SignupButtonInLoginPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SignupButtonOnLoginPage"))).isDisplayed());
			System.out.print(" LoginButton Clicked ");

			webdriver.findElement(By.xpath(XpathMap.get("SignupButtonOnLoginPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC2-SignupButtonInLogin", "SignupButton Should be Clicked", "SignupButton Clicked",
					"Pass");

			System.out.print(" SignupButton Clicked ");
			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC2-SignupButtonInLogin", "SignupButton Should be Clicked",
					"SignupButton Not Clicked", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-4 (SignUp) @Author: AS66528//
//Check if the sign-up form is visible when the "Sign Up" button is clicked.//
	public boolean Signup_Form(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC4-SignUpForm", "Signup Form Should be Visible", "Signup Form  is Visible", "Pass");

			System.out.print(" SignupButton Clicked ");
			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC4-SignUpForm", "Signup Form Should be Visible", "Signup Form  is Visible", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-6 (SignUp) @Author: AS66528//
//Check if the "Register" button is visible on the sign-up form.
	public boolean CheckRegisterbuttonvisible(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno"));

			try {
				webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
				webdriver.findElement(By.xpath(XpathMap.get("Firstname"))).sendKeys(XpathMap.get("Betway"));

			} catch (Exception e) {
				System.out.println(e);
			}
			webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("PasswordData"));

			webdriver.findElement(By.xpath(XpathMap.get("Sirname"))).sendKeys(XpathMap.get("LastnameData"));
			Thread.sleep(2000);
			
			webdriver.findElement(By.xpath(XpathMap.get("NextButton"))).click();
			Thread.sleep(2000);
			
			report.detailsAppend("TC6-Check_RegisterbuttonVisible", "User Able to Check Register button",
					"User Visibled Register button", "Pass");

			System.out.print(" User Visible the Register button ");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC6-Check_RegisterbuttonVisible", "User Able to Check Registerbutton",
					"User Visibled Registerbutton", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-8 (SignUp) @Author: AS66528//
//Check if the sign-up form is visible when the "Sign Up" button is clicked.//
	public boolean SignupMobileNoDisplayCode_27(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC8-SignUpMobileNoDisplayCode", "SignupForm MobileNoWithCodde Should be Visible",
					"SignupForm MobileNoWithCodde is Visible", "Pass");

			System.out.print(" In SignupForm MobileNoWithCodde Visible ");
			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC8-SignUpMobileNoDisplayCode", "SignupForm MobileNoWithCodde Should be Visible",
					"SignupForm MobileNoWithCodde is Visible", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-10 (SignUp) @Author: AS66528//
//Check if the system rejects a weak password.
	public boolean VerifySystemRejectWeakPassword(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("WeakPassword"));

			webdriver.findElement(By.xpath(XpathMap.get("EyeIcon"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC10-SystemRejectWeakPassword", "WeakPassword System Should rejects",
					"WeakPassword System Is Rejects", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC10-SystemRejectWeakPassword", "WeakPassword System Should rejects",
					"WeakPassword System Is Rejects", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-12 (SignUp) @Author: AS66528//
//Check if the system rejects a password exceeding the maximum allowed length.
	public boolean VerifyPasswordExceedingMaxLength(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Signup Button Clicked \n");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("PasswordData"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("EyeIcon"))).click();

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("Register"))).click();

			} else {

				webdriver.findElement(By.xpath(XpathMap.get("NextButton"))).click();

			}
			Thread.sleep(2000);
			report.detailsAppend("TC12-VerifyPasswordExceedingMaxLength",
					"Password exceeding the maximum allowed length", "Password Exceeding the MaxLength", "Pass");

			System.out.print(" In SignupForm Password ExceedingMaxLength ");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC12-VerifyPasswordExceedingMaxLength",
					"Password exceeding the maximum allowed length", "Password Exceeding the MaxLength", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-14 (SignUp) @Author: AS66528//
//Check if the system accepts a valid first name.
	public boolean VerifyvalidFirstname(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("Firstname"))).sendKeys(XpathMap.get("Betway"));
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("Register"))).click();

			} else {

				webdriver.findElement(By.xpath(XpathMap.get("NextButton"))).click();

			}
			Thread.sleep(2000);
			report.detailsAppend("TC14-VerifyvalidFirstname", "System Checks a valid first name",
					"System Accepts a valid first name", "Pass");

			System.out.print(" In SignupForm Password ExceedingMaxLength ");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC14-VerifyvalidFirstname", "System Checks a valid first name",
					"System Accepts a valid first name", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-16 (SignUp) @Author: AS66528//
//Check if the system rejects a blank Last name.
	public boolean VerifyblankLastname(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("Lastname"))).sendKeys("  ");

			webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("Passworddata"));

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("Register"))).click();

			} else {

				webdriver.findElement(By.xpath(XpathMap.get("NextButton"))).click();

			}
			Thread.sleep(2000);
			report.detailsAppend("TC16-VerifyblankLastname", "System Rejects a blank Last name",
					"System Rejects a blank Last name", "Pass");

			System.out.print(" System rejects a blank Last name. ");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC16-VerifyblankLastname", "System Rejects a blank Last name",
					"System Rejects a blank Last name", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-18 (SignUp) @Author: AS66528//
//To check user is able to Select his preferred Day from date of birth dropdown
	public boolean SelectDayfromdateofbirthdropdown(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno1"));

			} else {

				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno"));

			}
			webdriver.findElement(By.xpath(XpathMap.get("Firstname"))).sendKeys(XpathMap.get("Betway"));

			webdriver.findElement(By.xpath(XpathMap.get("Lastname"))).sendKeys(XpathMap.get("LastnameData"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("PasswordData"));
			Thread.sleep(2000);
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("Register"))).click();

			} else {
				webdriver.findElement(By.xpath(XpathMap.get("NextButton"))).click();

			}
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("DaySelection"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("Day"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC18-SelectDayfromdateofbirthDD", "User able to Select Day from DOB dropdown",
					"User Select Day from DOB dropdown", "Pass");

			System.out.print(" User Selected Day from dateofbirth dropdown ");

			webdriver.findElement(By.xpath(XpathMap.get("DayField"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC18-SelectDayfromdateofbirthDD", "User able to Select Day from DOB dropdown",
					"User Select Day from DOB dropdown", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-20 (SignUp) @Author: AS66528//
//To check user is able to Select his preferred Month from date of birth
//dropdown
	public boolean SelectMonthfromdateofbirthdropdown(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno1"));

			} else {

				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno"));
				Thread.sleep(2000);
			}
			webdriver.findElement(By.xpath(XpathMap.get("Firstname"))).sendKeys(XpathMap.get("Betway"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("Lastname"))).sendKeys(XpathMap.get("LastnameData"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("PasswordData"));

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("Register"))).click();

			} else {
				webdriver.findElement(By.xpath(XpathMap.get("NextButton"))).click();

			}
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("MonthSelected"))).click();
			Thread.sleep(2000);
			
			report.detailsAppend("TC20-SelectMonthfromdateofbirthDD", "User able to Select Month from DOB dropdown",
					"User Select Month from DOB dropdown", "Pass");

			System.out.print(" User Selected Month from dateofbirth dropdown ");

			webdriver.findElement(By.xpath(XpathMap.get("MonthField"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC20-SelectMonthfromdateofbirthDD", "User able to Select Month from DOB dropdown",
					"User Select Month from DOB dropdown", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-22 (SignUp) @Author: AS66528//
//To check user is able to Select his preferred Year from date of birth
//dropdown
	public boolean SelectYearfromdateofbirthdropdown(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();

			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno1"));

			} else {

				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno"));

			}
			webdriver.findElement(By.xpath(XpathMap.get("Firstname"))).sendKeys("Betway");

			webdriver.findElement(By.xpath(XpathMap.get("Lastname"))).sendKeys(XpathMap.get("LastnameData"));

			webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("PasswordData"));

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("Register"))).click();

			} else {

				webdriver.findElement(By.xpath(XpathMap.get("NextButton"))).click();

			}
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("YearSelected"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC22-SelectYearfromdateofbirthDD", "User able to Select Year from DOB dropdown",
					"User Select Year from DOB dropdown", "Pass");

			System.out.print(" User Selected Year from dateofbirth dropdown ");

			webdriver.findElement(By.xpath(XpathMap.get("YearField"))).click();
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC22-SelectYearfromdateofbirthDD", "User able to Select Year from DOB dropdown",
					"User Select Year from DOB dropdown", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-24 (SignUp) @Author: AS66528//
//To check I have signup code field is available
	public boolean SignupCodefieldVisible(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC24-SignupCodeFieldVisible", "User able to Visible SignupCodefield",
					"User Visible SignupCodefield", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC24-SignupCodeFieldVisible", "User able to Visible SignupCodefield",
					"User Visible SignupCodefield", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-26 (SignUp) @Author: AS66528//
//To check checkbox are available am over 18 years of age and I accept Betway’s
//Terms And Conditions and Privacy Policy
	public boolean checkboxAvailableTermsConditionsPrivacyPolicy(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Signup Button Clicked");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();

			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno1"));

			} else {
				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno"));

			}
			webdriver.findElement(By.xpath(XpathMap.get("Firstname"))).sendKeys(XpathMap.get("Betway"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("Lastname"))).sendKeys(XpathMap.get("LastnameData"));

			webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("PasswordData"));
			Thread.sleep(2000);
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("Register"))).click();

			} else {

				webdriver.findElement(By.xpath(XpathMap.get("NextButton"))).click();

			}
			Thread.sleep(2000);
			report.detailsAppend("TC26-checkboxTermsForConditionsPrivacyPolicy",
					"User Visible to checkboxTerms ForConditionsPrivacyPolicy",
					"User Able checkbox TermsForConditionsPrivacyPolicy", "Pass");

			System.out.print(" User Visible the checkboxTerms ForConditionsPrivacyPolicy ");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC26-checkboxTermsForConditionsPrivacyPolicy",
					"User Visible to checkboxTerms ForConditionsPrivacyPolicy",
					"User Able checkbox TermsForConditionsPrivacyPolicy", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-28 (SignUp) @Author: AS66528//
//To check "Already have an account?" and "Click here to login" button is
//available on both 1st and 2nd window
	public boolean VerifyAlreadyhaveanaccountPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();

			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno1"));
				Thread.sleep(2000);
			} else {

				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno"));

			}
			webdriver.findElement(By.xpath(XpathMap.get("Firstname"))).sendKeys(XpathMap.get("Betway"));

			webdriver.findElement(By.xpath(XpathMap.get("Lastname"))).sendKeys(XpathMap.get("LastnameData"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("PasswordData"));

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("Register"))).click();

			} else {

				webdriver.findElement(By.xpath(XpathMap.get("NextButton"))).click();

			}
			Thread.sleep(2000);
			report.detailsAppend("TC28-VerifyTheAlreadyhaveanaccountPage", "User Verify TheAlreadyhaveanaccountPage",
					"User Verify TheAlreadyhaveanaccountPage", "Pass");

			System.out.print(" User Visible the checkboxTerms ForConditionsPrivacyPolicy ");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC28-VerifyTheAlreadyhaveanaccountPage", "User Verify TheAlreadyhaveanaccountPage",
					"User Verify TheAlreadyhaveanaccountPage", "Pass");
			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-30 (SignUp) @Author: AS66528//
//To check "Terms and conditions" and "Privacy policy" link redirects to the
//correct page
	public boolean ClickTermsConditionsPrivacyPolicy(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();

			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno1"));

			} else {

				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno"));

			}
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("Firstname"))).sendKeys(XpathMap.get("Betway"));

			webdriver.findElement(By.xpath(XpathMap.get("Lastname"))).sendKeys(XpathMap.get("LastnameData"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("PasswordData"));
			Thread.sleep(2000);
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("Register"))).click();

			} else {

				webdriver.findElement(By.xpath(XpathMap.get("NextButton"))).click();

			}
			webdriver.findElement(By.xpath(XpathMap.get("TermsConditions"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC30-Click TermsConditionsPrivacyPolicy",
					"User Able to click the termsConditionsPrivacyPolicy", "User Clicked termsConditionsPrivacyPolicy",
					"Pass");

			System.out.print(" User Visible the checkboxTerms ForConditionsPrivacyPolicy \n ");
			
			Thread.sleep(2000);

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC30-Click TermsConditionsPrivacyPolicy",
					"User Able to click the termsConditionsPrivacyPolicy", "User Clicked termsConditionsPrivacyPolicy",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-32 (Signup)@Author: AS66528
//To check Signup window opens when clicked on signup button from login window
//in the hamburger menu
	public boolean InHumburgerMenuSignupButtonInLoginPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SignupButtonOnLoginPage"))).isDisplayed());
			System.out.print(" LoginButton Clicked ");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("SignupButtonOnLoginPage"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC32-SignupButtonOnLogin", "SignupButton Should be Clicked", "SignupButton Clicked",
					"Pass");

			System.out.print(" SignupButton Clicked ");
			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC32-SignupButtonInLogin", "SignupButton Should be Clicked",
					"SignupButton Not Clicked", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-36 (Signup)@Author: AS66528
//To Check South African ID dropdown is available

	public boolean CheckSouthAfricanIDdropdownAvailable(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("VuvuzelaSignup Button Clicked");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno1"));

			} else {
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno"));

			}
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("Firstname"))).sendKeys(XpathMap.get("Betway"));

			webdriver.findElement(By.xpath(XpathMap.get("Lastname"))).sendKeys(XpathMap.get("LastnameData"));
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("PasswordData"));

			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {

			} else {
				webdriver.findElement(By.xpath(XpathMap.get("NextButton"))).click();

			}
			Thread.sleep(2000);
			if ((title).contains("NG")) {

			} else {

				webdriver.findElement(By.xpath(XpathMap.get("SouthAfricanID"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC36-CheckSouthAfricanID", "SouthAfricanID Should be Available",
						"SouthAfricanID is Available", "Pass");

				System.out.print(" SouthAfricanID fromDD Selected ");

				webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
				Thread.sleep(2000);
				webdriver.navigate().refresh();
			}

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC36-SignupButtonInLogin", "SouthAfricanID Should be Available",
					"SouthAfricanID is not Available", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-38 (Signup)@Author: AS66528
//To check language dropdown is available

	public boolean ChecklanguagedropdownAvailable(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SignupNextButton"))).isDisplayed());
			System.out.print(" SignupNextButton Clicked ");
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno1"));

			} else {

				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno"));

			}
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("Firstname"))).sendKeys(XpathMap.get("Betway"));

			webdriver.findElement(By.xpath(XpathMap.get("Lastname"))).sendKeys(XpathMap.get("LastnameData"));

			webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("PasswordData"));
			Thread.sleep(2000);
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				webdriver.navigate().refresh();

			} else {
				webdriver.findElement(By.xpath(XpathMap.get("NextButton"))).click();

			}
			Thread.sleep(2000);
			report.detailsAppend("TC38-Checklanguagedropdown", "languagedropdown Should be Available",
					"languagedropdown is Available", "Pass");

			System.out.print(" languagedropdown fromDD Available ");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC38-SignupButtonInLogin", "SignupButton Should be Clicked",
					"SignupButton Not Clicked", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-40 (SignUp) @Author: AS66528//
//To check Register button is available on step of signup window
	public boolean CheckRegisterbuttonOn2ndsignupwindow(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno1"));

			} else {

				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno"));

			}
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("Firstname"))).sendKeys(XpathMap.get("Betway"));

			webdriver.findElement(By.xpath(XpathMap.get("Lastname"))).sendKeys(XpathMap.get("LastnameData"));

			webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("PasswordData"));
			Thread.sleep(2000);
			String currentUrl = webdriver.getCurrentUrl();
			if ((currentUrl).contains("zm")) {
				webdriver.findElement(By.xpath(XpathMap.get("Register"))).click();

			} else {

				webdriver.findElement(By.xpath(XpathMap.get("NextButton"))).click();

			}
			Thread.sleep(2000);
			report.detailsAppend("TC40-CheckRegisterbuttonOn signupwindow", "Check Registerbutton On Singupwindow",
					"Registerbutton Visibleon Signupwindoiw", "Pass");

			System.out.print(" User Visible Registerbutton ");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC40-CheckRegisterbuttonOn signupwindow", "Check Registerbutton On Singupwindow",
					"Registerbutton Visibleon Signupwindoiw", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-42 (SignUp) @Author: AS66528//
//To check email field is available
	public boolean CheckemailfieldAvailable(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("BackButton"))).click();
			Thread.sleep(2000);
			
			report.detailsAppend("TC42-CheckemailfieldIsAvailable", "Check Checkemailfield Available",
					"Checkemailfield Available On Signupwindoiw", "Pass");

			System.out.print(" User Visible emailfield ");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC42-CheckemailfieldIsAvailable", "Check Checkemailfield Available",
					"Checkemailfield Available On Signupwindoiw", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-44 (SignUp) @Author: AS66528//
//To check sign me up for all promotional communication dropdown is available
	public boolean Checkpromotionalcommunicationdropdown(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();
			Thread.sleep(2000);
			String title = webdriver.getTitle();
			if ((title).contains("NG")) {
				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno1"));

			} else {

				webdriver.findElement(By.xpath(XpathMap.get("PhoneNumber"))).sendKeys(XpathMap.get("Phno"));

			}
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("Firstname"))).sendKeys(XpathMap.get("Betway"));

			webdriver.findElement(By.xpath(XpathMap.get("Lastname"))).sendKeys(XpathMap.get("LastnameData"));

			webdriver.findElement(By.xpath(XpathMap.get("PasswordTab"))).sendKeys(XpathMap.get("PasswordData"));
			Thread.sleep(2000);
			report.detailsAppend("TC44-CheckpromotionalcommunicationIsAvailable",
					"Check promotionalcommunication Available", "promotionalcommunication Available On Signupwindoiw",
					"Pass");

			System.out.print(" User Visible emailfield ");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			
			
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC44-CheckpromotionalcommunicationIsAvailable",
					"Check promotionalcommunication Available", "promotionalcommunication Available On Signupwindoiw",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-46 (SignUp) @Author: AS66528//
//To check Signup window opens when clicked on Register now hyperlink text
	public boolean Registernowhyperlinktext(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			Thread.sleep(4000);
			webdriver.findElement(By.xpath(XpathMap.get("Footer"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("FooterDD"))).click();

			} catch (Exception e) {
				System.out.println(e);
			}
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("RegisterNow"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC46-BetwayVuvuzela SignUp", "Signup Window should open When clicked On RegisterNow",
					"Signup Window is opened When clicked On RegisterNow", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
			Thread.sleep(2000);
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC46-BetwayVuvuzela SignUp", "Signup Window should open When clicked On RegisterNow",
					"Signup Window is opened When clicked On RegisterNow", "Pass");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

///////////////////////////////// Login  vuvu/////////////////////////////////////////////////

// TC-1(Login) @Author: AS66528//
// Check if the "Login" Button is visible on the homepage.
	public boolean CheckLoginButtonVisible(Desktop_HTML_Report report) {
		try {
			webdriver.findElement(By.xpath(XpathMap.get("LoginOnHomepage"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC01-LoginButtonInLoginPage",
					"Check if the \"Login\" Button is visible on the homepage.",
					"Login Button is visible on the homepage", "Pass");

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			report.detailsAppend("TC01-LoginButtonInLoginPage",
					"Check if the \"Login\" Button is visible on the homepage.",
					"Login Button is visible on the homepage", "Fail");

			return false;
		}

// webdriver.getWindowHandle();
		return true;
	}

//TC-2(Login) @Author: AS66528//
//Check if there is a visible "Login" button on Login window
	public boolean LoginButtonInLoginPage(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC2-LoginButtonInLoginPage", "LoginButton Should be Clicked", "LoginButton Clicked",
					"Pass");

			webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC2-LoginButtonInLoginPage", "LoginButton Should be Clicked",
					"LoginButton Not Clicked", "Fail");
			System.out.println("ElementNotVisibleException :\n");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-3 (Login) @Author: AS66528//
//Check if there is a visible "Login" button on the Hamburger Menu.//
	public boolean LoginInHamburgerMenu(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC-3 LoginInHamburgerMenu", "Login In HamburgerMenu Should be Visible",
					"Login in HamburgerMenu  is Visible", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("CloseIconOnHamburgerMenu"))).click();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC-3 LoginInHamburgerMenu", "Login in HamburgerMenu Should be Visible",
					"Login in HamburgerMenu  is Visible", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;

	}

//TC-4 (Login) @Author: AS66528//
//Check if the Login Window is visible when the "Login" button is clicked.
	public boolean LoginForm(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(2000);
//Assert.assertTrue(webdriver.findElement(By.cssSelector(XpathMap.get("LoginCloseButton"))).isDisplayed());
			report.detailsAppend("TC4-LoginForm", "Login Form Should be Visible", "Login Form  is Visible", "Pass");

			System.out.print(" LoginButton Clicked ");
			webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC4-LoginForm", "Login form Should be Visible", "Login form is Not Visible", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-5 (Login) @Author: AS66528//
//Check if the required Login fields (e.g., mobile number, password) are
//visible on the Login Window.
	public boolean LoginFields1(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Clicked");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC5-LoginFields", "Login Form Should be Visible", "Login form  is Visible", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();
			webdriver.navigate().refresh();
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC5-LoginFields", "Login form Should be Visible", "Login form is Visible", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-6 (Login) @Author: AS66528//
//Check if the visibility of the "Login" button is consistent across different
//pages.

	public boolean VerifyLoginButtonConsistency(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			report.detailsAppend("TC6[1]-VerifyLoginButtonConsistency", "User Able to Check LoginbuttonPage",
					"User Visibled LoginbuttonPage", "Pass");
			System.out.print("LoginButton OnHomepage  Clicked");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed());
			System.out.print("LoginButton In Hamburgermenu Clicked");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();

			report.detailsAppend("TC6[2]-VerifyLoginButtonConsistency", "User Able to Check Loginbutton",
					"User Visibled Loginbutton", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("LoginButton In Hamburgermenu Clicked");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC6[3]-VerifyLoginButtonConsistency", "User Able to Check LoginbuttonPage",
					"User Visibled LoginbuttonPage", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();
			Thread.sleep(2000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC6-VerifyLoginButtonConsistency", "User Not able to Check LoginbuttonPage",
					"User Not Visibled LoginbuttonPage", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-7 (Login) @Author: AS66528//
//To check if the system accepts a valid mobile number.
	public boolean LoginValidNumber(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber"))).sendKeys(XpathMap.get("ValidMobileNum"));

			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC7-LoginValidNumber", "Mobile Number Should be Valid", "Mobile Number is Valid",
					"Pass");

			webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();


			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC7-LoginValidNumber", "Mobile Number Not be Valid", "Mobile Number Not Valid",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-8 (Login) @Author: AS66528//
//To check user click on "Login" button mobile number field should be display
//with country code +27
	public boolean LoginMobileNoDisplayCode_27(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("HamburgerMenu Button Clicked");

			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC8-LoginMobileNoDisplayCode", "LoginForm MobileNoWithCodde Should be Visible",
					"LoginForm MobileNoWithCodde is Visible", "Pass");

			System.out.print(" In LoginForm MobileNoWithCodde Visible ");
			webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC8-LoginMobileNoDisplayCode", "LoginForm MobileNoWithCodde Should be Visible",
					"LoginForm MobileNoWithCodde is Visible", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-9 (Login) @Author: AS66528//
//To check if the system accepts a valid mobile number with leading zeros.
	public boolean LoginMobileNumberWithZeros(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber"))).sendKeys(XpathMap.get("ZerosOnMobileNo"));

			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("ValidPassword"));
			System.out.print("Password is Entered");

			webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC9-LoginMobileNumberWithZeros", "Strong Password Should be Valid",
					"Strong Password is Valid", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC-9 BetwayVuvuzela Login", "Strong Password Should be Valid",
					"Strong Password is Valid", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-10 (Login) @Author: AS66528//
//To check if the system rejects a mobile number with non-numeric characters.
	public boolean NonNumericCharactersinMobileNumber(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			Thread.sleep(4000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber"))).sendKeys(XpathMap.get("CharactersInMobileNo"));

			System.out.print("CharactersInMobileNo is Entered");
			webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("ValidPassword"));
			System.out.print("Password is Entered");

			webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC10-NonNumericCharactersinMobileNumber",
					"system rejects a mobilenumber with non-numeric characters",
					"system rejects a mobilenumber with non-numeric characters", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();


			log.debug("Switch to default tab");

		} catch (Exception e) {
			System.out.println(e);
			report.detailsAppend("TC10-NonNumericCharactersinMobileNumber",
					"system rejects a mobilenumber with non-numeric characters",
					"system rejects a mobilenumber with non-numeric characters", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-11 (Login) @Author: AS66528//
//To check if the system rejects a mobile number that is too short.
	public boolean LoginMobilenumbertooshort(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber"))).sendKeys(XpathMap.get("MobileNumShort"));

			System.out.print("MobileNumShort is Entered");
			webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("ValidPassword"));
			System.out.print("Password is Entered");

			webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC11-LoginMobilenumbertooshort", "system rejects a mobilenumber that is too short",
					"system rejects a mobilenumber that is too short", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC11-LoginMobilenumbertooshort",
					"system should rejects mobilenumber that is too short",
					"system rejects mobilenumber that is too short", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-12 (Login) @Author: AS66528//
//To check if the system rejects a mobile number that is too long.
	public boolean LoginMobilenumberlong(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber"))).sendKeys(XpathMap.get("MobileNumLong"));

			System.out.print("MobileNumLong is Entered");
			webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("ValidPassword"));
			System.out.print("Password is Entered");

			webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC12-LoginMobilenumberlong", "system rejects a mobilenumber that is too long",
					"system rejects a mobilenumber that is too long", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();

			

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC12-LoginMobilenumberlong", "system should rejects a mobilenumber that islong",
					"system rejects mobilenumber that is long", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-13 (Login) @Author: AS66528//
//To check if the system accepts a valid mobile number with hyphens.
	public boolean LoginMobilenumberhyphens(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber")))
					.sendKeys(XpathMap.get("MobileNumhyphens"));

			System.out.print("MobileNumber is Entered");
			webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("ValidPassword"));
			System.out.print("Password is Entered");

			webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC13-LoginMobilenumberhyphens", "system should accepts a mobilenumber with hyphens",
					"system accepts a mobilenumber with hyphens", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();

			

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC13-LoginMobilenumberhyphens", "system should accepts a mobilenumber with hyphens",
					"system accepts mobilenumber with hyphens", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-14 (Login) @Author: AS66528//
//To check if the system accepts a valid mobile number with parentheses.
	public boolean LoginMobilenumberparentheses(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber")))
					.sendKeys(XpathMap.get("MobileNumparentheses"));

			System.out.print("MobileNumparentheses is Entered");
			webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("ValidPassword"));
			System.out.print("Password is Entered");

			webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC14-LoginMobilenumberparentheses",
					"system should accepts a mobilenumber with parentheses",
					"system accepts a mobilenumber with parentheses", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();

			

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC14-LoginMobilenumberparentheses",
					"system should accepts a mobilenumber with parentheses",
					"system accepts mobilenumber with parentheses", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-15 (Login) @Author: AS66528//
//To check if the system accepts a valid mobile number with both spaces and
//hyphens.
	public boolean LoginMobilenumberSpaces_Hyphens(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber")))
					.sendKeys(XpathMap.get("MobileNumSpacesHyphens"));

			System.out.print("MobileNumSpacesHyphens is Entered");
			webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("ValidPassword"));
			System.out.print("Password is Entered");

			webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC15-LoginMobilenumberSpaces_Hyphens",
					"system should accepts a mobilenumber with both spaces_hyphens",
					"system accepts a mobilenumber with both spaces_hyphens", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();

			

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC14-LoginMobilenumberSpaces_Hyphens",
					"system should accepts a mobilenumber with both spaces_hyphens",
					"system accepts mobilenumber with both spaces_hyphens", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-16 (Login) @Author: AS66528//
//To check if the system rejects a mobile number with alphabetic characters.
	public boolean LoginMobilenumberAlphabeticCharacters(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber")))
					.sendKeys(XpathMap.get("MobileNumAlphabeticCharacters"));

			System.out.print("MobileNumAlphabeticCharacters is Entered");
			webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("ValidPassword"));
			System.out.print("Password is Entered");

			webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC16-LoginMobilenumberAlphabeticCharacters",
					"system rejects a mobilenumber with alphabetic characters",
					"system rejects a mobilenumber with alphabetic characters", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();

			

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC16-LoginMobilenumberAlphabeticCharacters",
					"system rejects a mobilenumber with alphabetic characters",
					"system rejects a mobilenumber with alphabetic characters", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-17 (Login) @Author: AS66528//
//To check if the system rejects a mobile number with special characters.
	public boolean LoginMobilenumberSpecialCharacters(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber")))
					.sendKeys(XpathMap.get("MobileNumSpecialCharacters"));

			System.out.print("MobileNumSpecialCharacters is Entered");
			webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("ValidPassword"));
			System.out.print("Password is Entered");

			webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC17-LoginMobilenumberSpecialCharacters",
					"system rejects a mobilenumber with special characters",
					"system rejects a mobilenumber with special characters", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();

			

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC17-LoginMobilenumberSpecialCharacters",
					"system rejects a mobilenumber with special characters",
					"system rejects a mobilenumber with special characters", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-18 (Login) @Author: AS66528//
//To check if the system rejects a valid mobile number Starting with Hyphen.
	public boolean LoginMobilenumberStartingwithHyphen(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber")))
					.sendKeys(XpathMap.get("MobileNumStartingwithHyphens"));

			System.out.print("MobileNumStartingwithHyphens is Entered");
			webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("ValidPassword"));
			System.out.print("Password is Entered");

			webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC18-LoginMobilenumberStartingwithHyphen",
					"system should rejects a mobilenumber Startingwith Hyphen",
					"system rejects a mobilenumber Startingwith Hyphen", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();

			

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC18-LoginMobilenumberStartingwithHyphen",
					"system should rejects a mobilenumber Startingwith Hyphens",
					"system rejects mobilenumber Startingwith Hyphen", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-19 (Login) @Author: AS66528//
//To check if the system rejects a valid mobile number Ending with Hyphen.
	public boolean LoginMobilenumberEndingwithHyphen(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber")))
					.sendKeys(XpathMap.get("MobileNumEndingwithHyphens"));

			System.out.print("MobileNumEndingwithHyphens is Entered");
			webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("ValidPassword"));
			System.out.print("Password is Entered");

			webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC19-LoginMobilenumberEndingwithHyphen",
					"system should rejects a mobilenumber Endingwith Hyphen",
					"system rejects a mobilenumber Endingwith Hyphen", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();


			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC19-LoginMobilenumberEndingwithHyphen",
					"system should rejects a mobilenumber Endingwith Hyphens",
					"system rejects mobilenumber Endingwith Hyphen", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-20 (Login) @Author: AS66528//
//To check if the system rejects a mobile number with consecutive spaces.
	public boolean LoginMobilenumberConsecutiveSpaces(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber")))
					.sendKeys(XpathMap.get("MobileNumConsecutiveSpaces"));

			System.out.print("MobileNumConsecutiveSpaces is Entered");
			webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("ValidPassword"));
			System.out.print("Password is Entered");

			webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();
			Thread.sleep(2000);
			report.detailsAppend("TC20-LoginMobilenumberConsecutiveSpaces",
					"system should rejects a mobilenumber ConsecutiveSpaces",
					"system rejects a mobilenumber ConsecutiveSpaces", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();

			

			log.debug("Switch to default tab");

		} catch (Exception e) {
			report.detailsAppend("TC20-LoginMobilenumberConsecutiveSpaces",
					"system should rejects a mobilenumber ConsecutiveSpaces",
					"system rejects mobilenumber ConsecutiveSpaces", "Fail");
			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//TC-21(Login) @Author: AS66528
//Check if the system accepts a strong password.
	public boolean LoginStrongPassword(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber"))).sendKeys(XpathMap.get("Phno1"));

			webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("Passworddata"));

			try {

				webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			Thread.sleep(2000);
			report.detailsAppend("TC21-LoginStrongPassword",
					"System should accept a password accepts a strong password",
					"System accepts a password accepts a strong password", "Pass");

			try {

				webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC21-LoginStrongPassword",
					"System should accept a password accepts a strong password",
					"System accepts a password accepts a strong password", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//Login Vuvuzela
//TC-22(Login) @Author: AS66528
//Check if the system accepts a password with a combination of uppercase and
//lowercase letters.
	public boolean LoginCombinePassword(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber"))).sendKeys(XpathMap.get("Phno1"));

			webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("Passworddata"));

			try {

				webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			Thread.sleep(2000);
			report.detailsAppend("TC22-LoginCombinePassword",
					"System should accept a password accepts a password with a combination of uppercase and lowercase letters.",
					"System accepts a password accepts a password with a combination of uppercase and lowercase letters.",
					"Pass");

			try {

				webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC22-LoginCombinePassword",
					"System should accept a password accepts a password with a combination of uppercase and lowercase letters.",
					"System accepts a password accepts a password with a combination of uppercase and lowercase letters.",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//Login Vuvuzela
//TC-23(Login) @Author: AS66528
//Check if the system accepts a password with numeric characters.
	public boolean LoginNumericPassword(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber"))).sendKeys(XpathMap.get("Phno1"));

			webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("Phno"));

			try {

				webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			Thread.sleep(2000);
			report.detailsAppend("TC23-LoginNumericPassword",
					"System should accept a password  with numeric characters.",
					"System accepts a password with numeric characters.", "Pass");

			try {

				webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC23-LoginNumericPassword",
					"System should accept a password with numeric characters.",
					"System accepts a password with numeric characters", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//Login Vuvuzela
//TC-24(Login) @Author: AS66528
//Check if the system accepts a password with special characters.
	public boolean LoginSpecialCharacterPassword(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber"))).sendKeys(XpathMap.get("Phno1"));

			webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("SpecialPassword"));

			try {

				webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			Thread.sleep(2000);
			report.detailsAppend("TC24-LoginSpecialCharacterPassword",
					"System should accept a password with special characters",
					"system accepts a password with special characters", "Pass");

			try {

				webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC24-LoginSpecialCharacterPassword",
					"System should accept a password with special characters",
					"system accepts a password with special characters", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//Login Vuvuzela
//TC-25(Login) @Author: AS66528
//Check if the system accepts a password with the minimum required length.
	public boolean LoginPasswordMinimum(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber"))).sendKeys(XpathMap.get("Phno1"));

			webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("Zensar"));

			try {

				webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			Thread.sleep(2000);
			report.detailsAppend("TC25-LoginPasswordMinimum",
					"System should accept a password with the minimum required length.",
					"system accepts a password with the minimum required length.", "Pass");

			try {

				webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC25-LoginPasswordMinimum",
					"System should accept a password with the minimum required length.",
					"system accepts a password with the minimum required length.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//Login Vuvuzela
//TC-26(Login) @Author: AS66528
//Check if the system accepts a password with the maximum allowed length.
	public boolean LoginPasswordMaximum(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();

			webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber"))).sendKeys(XpathMap.get("Phno1"));

			webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("Passworddata"));

			try {

				webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			Thread.sleep(2000);
			report.detailsAppend("TC26-LoginPasswordMaximum",
					"System should accept a password with the maximum allowed length",
					"System accepts a password with with the maximum allowed length", "Pass");

			try {

				webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC26-LoginPasswordMaximum",
					"System should accept a password with the maximum allowed length",
					"System accepts a password with with the maximum allowed length", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//Login Vuvuzela
//TC-27(Login) @Author: AS66528
//Check if the system accepts a password with all allowed characters, including
//uppercase letters, lowercase letters, numbers, and special characters.
	public boolean LoginPasswordwithAllowedCharacters(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber"))).sendKeys(XpathMap.get("Phno1"));

			webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("Passworddata"));

			try {

				webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			Thread.sleep(2000);
			report.detailsAppend("TC27-LoginPasswordwithAllowedCharacters",
					"System should accept a password with all allowed characters, including uppercase letters, lowercase letters, numbers, and special characters.",
					"System accepts a password with all allowed characters, including uppercase letters, lowercase letters, numbers, and special characters",
					"Pass");

			try {

				webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC27-LoginPasswordwithAllowedCharacters",
					"System should accept a password with all allowed characters, including uppercase letters, lowercase letters, numbers, and special characters.",
					"System accepts a password with all allowed characters, including uppercase letters, lowercase letters, numbers, and special characters",
					"Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//Login Vuvuzela
//TC-28(Login) @Author: AS66528
//Check if the system accepts a password containing spaces.
	public boolean LoginPasswordwithSpaces(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber"))).sendKeys(XpathMap.get("Phno1"));

			webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("SpacePassword"));

			try {

				webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			Thread.sleep(2000);
			report.detailsAppend("TC28-LoginPasswordwithSpaces", "System should accept a password containing spaces.",
					"System accepts a password containing spaces.", "Pass");

			try {

				webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC28-LoginPasswordwithSpaces", "System should accept a password containing spaces.",
					"System accepts a password containing spaces.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//Login Vuvuzela
//TC-29(Login) @Author: AS66528
//Check if the system trims leading and trailing spaces in the entered
//password.
	public boolean LoginTrimPassword(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber"))).sendKeys(XpathMap.get("Phno1"));

			webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("TrimPassword"));

			try {

				webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			Thread.sleep(2000);
			report.detailsAppend("TC29-LoginTrimPassword",
					"System should trim leading and trailing spaces in the entered password.",
					"system trims leading and trailing spaces in the entered password.", "Pass");

			try {

				webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC29-LoginTrimPassword",
					"System should trim leading and trailing spaces in the entered password.",
					"system trims leading and trailing spaces in the entered password.", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//Login Vuvuzela
//TC-30(Login) @Author: AS66528
//Check if the system rejects a blank password .
	public boolean LoginBlankPassword(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber"))).sendKeys(XpathMap.get("Phno1"));

			try {

				webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			Thread.sleep(2000);
			report.detailsAppend("TC30-LoginBlankPassword", "Blank Password Should be Invalid",
					"Blank Password is Invalid", "Pass");

			try {

				webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC30-LoginValidNumber", "Blank Password Should be Invalid",
					"Blank Password is Invalid", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//Login Vuvuzela
//TC-31(Login) @Author: AS66528
//Check if the system rejects a password Exceeding the maximum allowed length.
	public boolean LoginMaximumPasswordLength(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber"))).sendKeys(XpathMap.get("Phno1"));

			webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("PasswordData1"));

			try {

				webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			Thread.sleep(2000);
			report.detailsAppend("TC31-LoginMaximumPasswordLength", "Password Should be Invalid For Maximum Length",
					"Password is Invalid For Maximum Length", "Pass");

			try {

				webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC31-LoginMaximumPasswordLength", "Password Should be Invalid For Maximum Length",
					"Password is Invalid For Maximum Length", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

//Login Vuvuzela
//TC-32(Login) @Author: AS66528
//Check if the system rejects a password succeeding the minimum allowed length.
	public boolean LoginMinimumPasswordLength(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			System.out.print("VuvuHamburgerMenu is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed());
			System.out.print("VuvuzelaLogin is Present");
			webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber"))).sendKeys(XpathMap.get("Phno1"));

			webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("MinPass"));

			try {

				webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			Thread.sleep(2000);
			report.detailsAppend("TC32-LoginMinimumPasswordLength", "Password Should be Invalid For Minimum Length",
					"Password is Invalid For Minimum Length", "Pass");

			try {

				webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();
				Thread.sleep(2000);

			} catch (Exception e) {
				System.out.println("error is" + e);
			}
			
			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC32-LoginMinimumPasswordLength", "Password Should be Invalid For Minimum Length",
					"Password is Invalid For Minimum Length", "Fail");

			webdriver.navigate().refresh();
			return false;
		}
		return true;
	}

	public void ZALogin1() throws Exception {
		webdriver.manage().timeouts().implicitlyWait(3, TimeUnit.SECONDS);
		webdriver.findElement(By.xpath(XpathMap.get("MobileNoFieldZA"))).sendKeys(XpathMap.get("HMZAPH"));
		Thread.sleep(2000);
		System.out.print("MobileNumber is Entered");
		webdriver.findElement(By.xpath(XpathMap.get("PasswordFieldZA"))).sendKeys(XpathMap.get("HMZAPD"));
		System.out.print("Password is Entered");
		Thread.sleep(2000);
		System.out.print("SynapseLogin is Present");
		webdriver.findElement(By.xpath(XpathMap.get("LoginZA1"))).click();
		Thread.sleep(2000);
		try {
			webdriver.findElement(By.xpath(XpathMap.get("PromoClose"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			System.out.print("Promo Code is not present");
		}
	}

	public void ZALogout1() throws Exception {

		webdriver.findElement(By.xpath(XpathMap.get("HMLogOutBtn"))).click();
		Thread.sleep(2000);

	}

	public void NGLogin1() throws Exception {
		webdriver.manage().timeouts().implicitlyWait(3, TimeUnit.SECONDS);
		webdriver.findElement(By.xpath(XpathMap.get("MobileNoFieldZA"))).sendKeys(XpathMap.get("HMNGPH"));
		Thread.sleep(2000);
		System.out.print("MobileNumber is Entered");
		webdriver.findElement(By.xpath(XpathMap.get("PasswordFieldZA"))).sendKeys(XpathMap.get("HMNGPD"));
		System.out.print("Password is Entered");
		Thread.sleep(2000);
		System.out.print("SynapseLogin is Present");
		webdriver.findElement(By.xpath(XpathMap.get("LoginZA1"))).click();
		Thread.sleep(2000);

		try {
			webdriver.findElement(By.xpath(XpathMap.get("PromoClose"))).click();
			Thread.sleep(2000);
		} catch (Exception e) {
			System.out.print("Promo Code is not present");
		}
	}

	public void NGLogout1() throws Exception {
		webdriver.findElement(By.xpath(XpathMap.get("HMLogOutBtn"))).click();
		Thread.sleep(2000);

	}

	public boolean AutoplayZA(Desktop_HTML_Report report) {
		try {

			webdriver.findElement(By.xpath(XpathMap.get("CookiesButtonZA"))).click();
			System.out.print(" Cookies is Present");
			Thread.sleep(4000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			log.error("Test Case is failed");

			return false;
		}
// webdriver.getWindowHandle();
		return true;

	}

	public boolean HeaderSection_HamburgerMenuClickedZA(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			Thread.sleep(2000);
			System.out.print("Hamburger Menu button  is clicked\n");

			report.detailsAppend("TC01-HeaderZA",
					"Verify is Hamburger Menu is visible and user is able to click on the button.",
					"Hamburger Menu is visible and user is able to click on the button.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC01-HeaderZA",
					"Verify is Hamburger Menu is visible and user is able to click on the button.",
					"Hamburger Menu is visible and user is able to click on the button.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	public boolean HeaderSection_BetwayClickedZA(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("BetwayLogo"))).click();
			Thread.sleep(2000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("AssForBetwayLogo"))).isDisplayed());
			System.out.print("Betway Logo is clicked\n");

			report.detailsAppend("TC02-HeaderZA",
					"Verify if Betway icon is visible and user is able to click on the button.",
					"Betway icon is visible and user is able to click on the button.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC02-HeaderZA",
					"Verify if Betway icon is visible and user is able to click on the button.",
					"Betway icon is visible and user is able to click on the button.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	public boolean HeaderSection_EyeIconClickedZA(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("EyeIconZA"))).click();
			Thread.sleep(2000);
// Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("AssForBetwayLogo"))).isDisplayed());
			System.out.print("Eye Icon is clicked\n");

			report.detailsAppend("TC03-HeaderZA", "Verify Eye icon is visble and can be clicked.",
					"Eye icon is visble and can be clicked.", "Pass");

			webdriver.findElement(By.xpath(XpathMap.get("ShowEye"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {

			report.detailsAppend("TC03-HeaderZA", "Verify Eye icon is visble and can be clicked.",
					"Eye icon is visble and can be clicked.", "Fail");

			return false;
		}

		return true;
	}

	public boolean HeaderSection_RefreshOnCashTabClickedZA(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("RefreshOnCashZA"))).click();
				Thread.sleep(2000);
// Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("AssForBetwayLogo"))).isDisplayed());
				System.out.print("Refresh is clicked\n");
			} catch (Exception e) {
				System.out.print("Refresh is not available\n");
			}

			report.detailsAppend("TC04-HeaderZA",
					"Verify if Cash  button is visible and user is able to click on refresh.",
					"Cash  button is visible and user is able to click on refresh.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC04-HeaderZA",
					"Verify if Cash  button is visible and user is able to click on refresh.",
					"Cash  button is visible and user is able to click on refresh.", "Fail");

			return false;
		}

		return true;
	}

	public boolean HeaderSection_FreeBetClickedZA(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.findElement(By.xpath(XpathMap.get("FreeBetZA"))).click();
			Thread.sleep(4000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("AssForFreeBetZA"))).isDisplayed());
			System.out.print("Free Bet is clicked\n");

			report.detailsAppend("TC05-HeaderZA",
					"Verify if Free Bet  button is visible and user is able to click on the button.",
					"Free Bet  button is visible and user is able to click on the button.", "Pass");

		} catch (Exception e) {

			report.detailsAppend("TC05-HeaderZA",
					"Verify if Free Bet  button is visible and user is able to click on the button.",
					"Free Bet  button is visible and user is able to click on the button.", "Fail");

			return false;
		}
		webdriver.navigate().refresh();
		return true;
	}

	public boolean CasinoBonusRefresh(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			webdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("CasinoRefresh"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC07-HeaderZA",
					"Verify if Casino bonus cash field is visible and user is able to click on referesh button",
					"Casino bonus cash field is visible and user is able to click on referesh button", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC07-HeaderZA",
					"Verify if Casino bonus cash field is visible and user is able to click on referesh button",
					"Casino bonus cash field is visible and user is able to click on referesh button", "Fail");
			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

// TC16(Vuvu-Header) @Author: AS66528
// Verify if Deposite button is visible and user is able to click on button

	public boolean DepositHeader(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("DepositHeader"))).click();
			Thread.sleep(4000);

			report.detailsAppend("TC08-HeaderZA",
					"Verify if Deposit button is visible and user is able to click on button",
					"Deposit button is visible and user is able to click on button", "Pass");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("DepositClose"))).click();
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC08-HeaderZA",
					"Verify if Deposit button is visible and user is able to click on button",
					"Deposit button is visible and user is able to click on button", "Fail");
			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

// TC17(Vuvu-Header) @Author: AS66528
// Verify Profile button is visible and user is able to click on button

	public boolean AccountHeader(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("AccountHeader"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC09-HeaderZA",
					"Verify  Profile button is visible and user is able to click on button",
					"Profile button is visible and user is able to click on button", "Pass");
			Thread.sleep(2000);

		} catch (Exception e) {
			report.detailsAppend("TC09-HeaderZA",
					"Verify  Profile button is visible and user is able to click on button",
					"Profile button is visible and user is able to click on button", "Fail");
			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

	public boolean SportsBonusInfo(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("RefreshOnCashNG"))).click();
			Thread.sleep(2000);

			report.detailsAppend("TC06-HeaderZA",
					"Verify if Bonus (Sports)  button is visible and user is able to click on the \"i\" button.",
					"Bonus (Sports)  button is visible and user is able to click on the \\\"i\\\" button.", "Pass");
			Thread.sleep(2000);

			log.debug("Switch to default tab");

		} catch (Exception e) {
			System.out.print(e);
			report.detailsAppend("TC06-HeaderZA",
					"Verify if Bonus (Sports)  button is visible and user is able to click on the \"i\" button.",
					"Bonus (Sports)  button is visible and user is able to click on the \\\"i\\\" button.", "Fail");
			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

	public boolean SportsBonusInfoNG(Desktop_HTML_Report report) {

		try {

			webdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("RefreshOnCashNG"))).click();
			Thread.sleep(2000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("iOptionNG"))).click();
				Thread.sleep(2000);
				report.detailsAppend("TC06-HeaderZA",
						"Verify if Bonus (Sports)  button is visible and user is able to click on the \"i\" button.",
						"Bonus (Sports)  button is visible and user is able to click on the \\\"i\\\" button.", "Pass");

				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("AccountClose"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				report.detailsAppend("TC06-HeaderZA",
						"Verify if Bonus (Sports)  button is visible and user is able to click on the \"i\" button.",
						"Bonus (Sports)  button is visible and user is able to click on the \\\"i\\\" button.", "Pass");
				Thread.sleep(2000);
				System.out.print("i is not present");
			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			System.out.print(e);
			report.detailsAppend("TC06-HeaderZA",
					"Verify if Bonus (Sports)  button is visible and user is able to click on the \"i\" button.",
					"Bonus (Sports)  button is visible and user is able to click on the \\\"i\\\" button.", "Fail");
			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

/////////////////////////////////////////////////////// SMOKE SUIT VUVUZELA PROD ZA ///////////////////////////////////////////////////////////		

////////////////////////////// Login / Sign Up through Header /////////////////////////////

	public void HM_Login() throws Exception {
		webdriver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);

		// Get the current URL
		String currentURL = webdriver.getCurrentUrl();
		String mobileNumber;
		String password;

		// Determine which credentials to use based on the URL
		if (currentURL.contains("za")) {
			mobileNumber = XpathMap.get("HMZAPH");
			password = XpathMap.get("HMZAPD");
		} else if (currentURL.contains("ng")) {
			mobileNumber = XpathMap.get("HMNGPH");
			password = XpathMap.get("HMNGPD");
		} else {
			throw new Exception("URL does not contain za or ng");
		}

		// MobileNoFieldZA
		if (webdriver.findElement(By.xpath(XpathMap.get("MobileNoFieldZA"))).isDisplayed()) {
			webdriver.findElement(By.xpath(XpathMap.get("MobileNoFieldZA"))).sendKeys(mobileNumber);
			Thread.sleep(3000);
			System.out.print("MobileNumber is Entered \n");
		} else {
			System.out.print("MobileNoFieldZA is not displayed \n");
		}

		// PasswordFieldZA
		if (webdriver.findElement(By.xpath(XpathMap.get("PasswordFieldZA"))).isDisplayed()) {
			webdriver.findElement(By.xpath(XpathMap.get("PasswordFieldZA"))).sendKeys(password);
			System.out.print("Password is Entered \n");
			Thread.sleep(2000);
		} else {
			System.out.print("PasswordFieldZA is not displayed \n");
		}

		Thread.sleep(2000);
		// LoginOnLoginpage
		try {
			webdriver.findElement(By.xpath(XpathMap.get("LoginZA1"))).click();
			System.out.print("LoginBtn is Clicked \n ");
			Thread.sleep(3000);
		} catch (Exception e) {
			System.out.print(e + "LoginBtn is not displayed \n");
		}

		// PromoClose
		Thread.sleep(3000);
		try {
			webdriver.findElement(By.xpath(XpathMap.get("PromoClose"))).click();
			System.out.print("Promo Code Displayed and Clicked");
			Thread.sleep(3000);
		} catch (Exception e) {
			webdriver.navigate().refresh();
			System.out.print(e + "Promo Code not displayed");
		}
	}

	public void SM_SingleBet() throws Exception {
		webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		try {

			clickButton("VuvuSportButton");
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("OddsInBetBook"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("OddsInBetBook"))).click();
				System.out.println(" 1st Odd in Highlights Section is Selected \n");
				Thread.sleep(3000);

			} else {
				webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
				System.out.println(" 2nd Odd in Highlights Section is Selected \n");
				Thread.sleep(3000);
			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				System.out.println("Betnow Button is Clicked \n");
				Thread.sleep(3000);
			} else {
				System.out.println("Betnow Button Not Clicked \n");
			}

			Thread.sleep(3000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("BetConfirmBtn"))).click();
				System.out.println("Bet Confirm Button is Selected \n");
				Thread.sleep(3000);
			} catch (Exception e) {
				System.out.println("Bet Confirm Button Not Displayed \n");
			}

			Thread.sleep(3000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).click();
				System.out.println(" Betnow Popup Close Button is Clicked \n");
				Thread.sleep(3000);
			} catch (Exception e) {
				System.out.println(" Betnow Popup Close Button not Displayed \n");
			}

		} catch (Exception e) {
			System.out.println(" Odd not vivisble Suspend not click \n");
		}
	}

	public void SM_MultiBet() throws Exception {
		webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

		try {
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).isDisplayed()) {
				System.out.print("UpComingButton is Present");
				webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).click();
			} else {
				throw new Exception("VuvuSportButton is not present");
			}

			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			for (int i = 1; i <= 4; i++) {
				try {
					Thread.sleep(3000);
					if (webdriver.findElement(By.xpath(XpathMap.get("UpcomingOdd" + i))).isDisplayed()) {
						System.out.print("UpcomingOdd" + i + " is Present");
						webdriver.findElement(By.xpath(XpathMap.get("UpcomingOdd" + i))).click();
					} else {
						throw new Exception("UpcomingOdd" + i + " is not present");
					}
				} catch (Exception e) {
					e.printStackTrace();
				}
				Thread.sleep(2000);
				if (i % 2 == 1) {
					je.executeScript("window.scrollBy(0,200)");
				}
			}

			Thread.sleep(1000);
			try {
				Thread.sleep(3000);
				// Click on Settings button on Betslip
				webdriver.findElement(By.xpath(XpathMap.get("SettingsButton"))).click();
				Thread.sleep(1000);
			} catch (Exception e) {
				throw new Exception("SettingsButton is not present or could not be clicked", e);
			}

			try {
				Thread.sleep(3000);
				// Click on Accept All Odds button on Betslip
				webdriver.findElement(By.xpath(XpathMap.get("AcceptAllOddsBS"))).click();
			} catch (Exception e) {
				throw new Exception("AcceptAllOddsBS is not present or could not be clicked", e);
			}

			Thread.sleep(3000);

			try {
				Thread.sleep(1000);
				// Click on Continue button in Settings on Betslip
				webdriver.findElement(By.xpath(XpathMap.get("ContinueBtnInSettingsBS"))).click();
				Thread.sleep(1000);
			} catch (Exception e) {
				throw new Exception("ContinueBtnInSettingsBS is not present or could not be clicked", e);
			}

			Thread.sleep(3000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				System.out.println("Betnow Button is Clicked \n");
				Thread.sleep(3000);
			} catch (Exception e) {
				System.out.println("Betnow Button Not Clicked \n");
			}

			Thread.sleep(3000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("BetConfirmBtn"))).click();
				System.out.println("Bet Confirm Button is Selected \n");
				Thread.sleep(1000);
			} catch (Exception e) {
				System.out.println("Bet Confirm Button Not Selected \\n");
			}

			Thread.sleep(3000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).click();
				System.out.println(" Betnow Popup Close Button is Clicked \n");
				Thread.sleep(3000);
			} catch (Exception e) {
				webdriver.navigate().refresh();
				System.out.println(" Betnow Popup Close Button not Clicked \n");
			}

			clickButton("VuvuSportButton");
		} catch (Exception e) {
			System.out.println(" Odd not vivisble Suspend not click \n");
		}

	}

	public void BSoddsInBetBook() throws Exception {
		webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

		if (webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).isDisplayed()) {
			System.out.print("UpComingButton is Present");
			webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).click();
		} else {
			throw new Exception("VuvuSportButton is not present");
		}

		JavascriptExecutor je = (JavascriptExecutor) webdriver;
		for (int i = 1; i <= 10; i++) {
			try {
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("UpcomingOdd" + i))).isDisplayed()) {
					System.out.print("UpcomingOdd" + i + " is Present");
					webdriver.findElement(By.xpath(XpathMap.get("UpcomingOdd" + i))).click();
				} else {
					throw new Exception("UpcomingOdd" + i + " is not present");
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
			Thread.sleep(2000);
			if (i % 2 == 1) {
				je.executeScript("window.scrollBy(0,200)");
			}
		}

		Thread.sleep(2000);
		webdriver.findElement(By.xpath(XpathMap.get("MultiBetslip"))).click();
		System.out.print("Multi Betslip is selected");
		Thread.sleep(2000);

	}

// TC1-11(SMOKE_Login/Singup) @Author: AS66528

	public boolean SM_CheckLoginSignupOnHeader(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			// TC1:Check if \"Login\" Button is visible on the homepage.
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
				System.out.println("Sport Button is clicked \n");
				Thread.sleep(4000);
				PromoClose();
				Thread.sleep(1000);

				if (webdriver.findElement(By.xpath(XpathMap.get("LoginOnHomepage"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("LoginOnHomepage"))).click();
					System.out.println("LoginButton On Homepage is clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println("Login Button Not click \n");
				}

				report.detailsAppend("TC01-Smoke_CheckLoginSignupOnHeader",
						"Check if the \"Login\" Button is visible on the homepage.",
						"Checked the \"Login\" Button visible on homepage", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC01-Smoke_CheckLoginSignupOnHeader",
						"Check if the \"Login\" Button is visible on the homepage.",
						"Checked that \"Login\" Button Not visible on the homepage.", "Fail");

				webdriver.navigate().refresh();
			}

			// TC2:Check if \"Signup\" Button is visible on the homepage.

			try {
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("SignupOnHomepage"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("SignupOnHomepage"))).click();
					System.out.println("SignupButton On Homepage  is clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println("Signup Button Not click \n");
				}

				report.detailsAppend("TC02-Smoke_CheckLoginSignupOnHeader",
						"Check if the \"Signup\" Button is visible on the homepage.",
						"Sign Up button be displayed and user be able to click on the button.", "Pass");

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("SignupPageCloseButton"))).click();
					System.out.println("Signup Page CloseButton is clicked \n");
				} else {
					System.out.println("Signup Page Close Button Not click \n");
				}

			} catch (Exception e) {
				report.detailsAppend("TC02-Smoke_CheckLoginSignupOnHeader",
						"Check if the \"Signup\" Button is visible on the homepage.",
						"Checked that \"Signup\" Button Not visible on the homepage.", "Fail");

				webdriver.navigate().refresh();
			}

			// TC3:Verify Mobile Number field is present on the Header of Home page with the
			// country code of +27..

			try {
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("MobileNoFieldZA"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("MobileNoFieldZA"))).sendKeys(XpathMap.get("HMZAPH"));
					System.out.print("MobileNumber is Entered on Homepage");
				} else {
					System.out.println("MobileNumber Not Entered on Homepage \n");
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("LoginOnHomepage"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("LoginOnHomepage"))).click();
					System.out.println("LoginButton On Homepage is clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println("LoginButton On Homepage Not clicked \n");
					Thread.sleep(3000);
				}

				report.detailsAppend("TC03-Smoke_CheckLoginSignupOnHeader",
						"Verify Mobile Number field is Present on Header of Home page with the country code +27",
						"Mobile Number field presented and user able to enter the mobile number.", "Pass");

				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("MobileNoFieldZA"))).clear();

			} catch (Exception e) {
				report.detailsAppend("TC03-Smoke_CheckLoginSignupOnHeader",
						"Verify Mobile Number field is Present on the Header of Home page with the country code +27",
						"Verify Mobile Number field Not Present on Header of Home page with the country code +27",
						"Fail");

				webdriver.navigate().refresh();
			}

			// TC4:Verify Password field is Entered on the Header of Home page .

			try {
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("PasswordFieldZA"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("PasswordFieldZA"))).sendKeys(XpathMap.get("HMZAPD"));
					System.out.print("Password is Entered on Homepage \n");
					Thread.sleep(3000);
				} else {
					System.out.println("Password not Entered on Homepage \n");
				}

				if (webdriver.findElement(By.xpath(XpathMap.get("LoginOnHomepage"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("LoginOnHomepage"))).click();
					System.out.println("LoginButton On Homepage is clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println("LoginButton On Homepage Not clicked \n");
					Thread.sleep(3000);
				}

				report.detailsAppend("TC04-Smoke_CheckLoginSignupOnHeader",
						"Verify Password field is Entered on Header of Home page",
						"Password field presented and user able to enter the Password.", "Pass");

				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("PasswordFieldZA"))).clear();

			} catch (Exception e) {
				report.detailsAppend("TC04-Smoke_CheckLoginSignupOnHeader",
						"Verify Password field is Entered on the Header of Home page",
						"Verify Password field Not Entered on Header of Home page", "Fail");

				webdriver.navigate().refresh();
			}

			// TC5:Verify Forgot Username link is present on the Header of Home page below
			// Mobile Number field.

			try {
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("ForgetUsername"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("ForgetUsername"))).click();
					System.out.print("Forget Username is Clicked on Homepage \n");
					Thread.sleep(3000);
				} else {
					System.out.println("Forget Username Not Present on Homepage\n");
				}

				report.detailsAppend("TC05-Smoke_CheckLoginSignupOnHeader",
						"Verify Forgot Username link is present on the Header of Home page below Mobile Number field.",
						"Verify Forgot Username link is present on the Header of Home page below Mobile Number field.",
						"Pass");

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("CloseBtnInForgetPopup"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("CloseBtnInForgetPopup"))).click();
					System.out.print("Forget Username Popup Close Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println("Forget Username Popup Close Btn Not present \\n");
				}

			} catch (Exception e) {
				report.detailsAppend("TC05-Smoke_CheckLoginSignupOnHeader",
						"Verify Forgot Username link is present on the Header of Home page below Mobile Number field.",
						"Verify Forgot Username link Not present on the Header of Home page below Mobile Number field.",
						"Fail");

				webdriver.navigate().refresh();
			}

			// TC6:Verify Password field is Entered on the Header of Home page .

			try {
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("ForgetPassword"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("ForgetPassword"))).click();
					System.out.print("Forget Password is Clicked on Homepage \n");
					Thread.sleep(3000);
				} else {
					System.out.println("Forget Password is Click on Homepage \\n");
				}

				report.detailsAppend("TC06-Smoke_CheckLoginSignupOnHeader",
						"Verify Forgot Password link is present on the Header of Home page below Password field.",
						"Verify Forgot Password link is present on the Header of Home page below Password field.",
						"Pass");

			} catch (Exception e) {
				report.detailsAppend("TC06-Smoke_CheckLoginSignupOnHeader",
						"Verify Forgot Password link is present on the Header of Home page below Password field.",
						"Verify Forgot Password link Not present on the Header of Home page below Password field.",
						"Fail");

				webdriver.navigate().refresh();
			}

			// TC7:Verify Betway Logo is present on the Header of Home page and clickable.

			try {
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BetwayLogo"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BetwayLogo"))).click();
					System.out.print("Betway Logo is Clicked on Homepage \n");
					Thread.sleep(3000);
				} else {
					System.out.println("Betway Logo Not Clicked on Homepage \n");
				}

				report.detailsAppend("TC07-Smoke_CheckLoginSignupOnHeader",
						"Verify Betway Logo is present on the Header of Home page and clickable.",
						"Verified Betway logo presented and user abled to click on the logo.", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC07-Smoke_CheckLoginSignupOnHeader",
						"Verify Betway Logo is present on the Header of Home page and clickable.",
						"Verified Betway logo Not present and user Not abled to click on the logo.", "Fail");

				webdriver.navigate().refresh();
			}

			// TC8:Verify Hamburger Menu is present on the Header of Home page and
			// clickable.

			try {
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
					System.out.print("HamburgerMenu Button is Clicked on Homepage \n");
					Thread.sleep(3000);
				} else {
					System.out.println("HamburgerMenu Button Not Clicked on Homepage \\n");
				}

				report.detailsAppend("TC08-Smoke_CheckLoginSignupOnHeader",
						"Verify Hamburger Menu is present on the Header of Home page and clickable.",
						"Verified Hamburger Menu present on the Header of Home page and clickable.", "Pass");

				Thread.sleep(3000);
				try {
					webdriver.findElement(By.xpath(XpathMap.get("CloseIconOnHamburgerMenu"))).click();
					System.out.println("Close Btn ON Hamburgermen is  Clicked \n");
					Thread.sleep(3000);
				} catch (Exception e) {
					webdriver.navigate().refresh();
					System.out.println(e + "Close Btn ON Hamburgermen is  Clicked \n");
				}

			} catch (Exception e) {
				report.detailsAppend("TC08-Smoke_CheckLoginSignupOnHeader",
						"Verify Hamburger Menu is present on the Header of Home page and clickable.",
						"Verified Hamburger Menu Not visible on the Header of Home page and Not able click.", "Fail");

				webdriver.navigate().refresh();
			}

			// TC9:Verify if user is able to successfully login through Header.

			try {
				Thread.sleep(3000);
				HM_Login();
				Thread.sleep(3000);
				PromoClose();

				report.detailsAppend("TC09-Smoke_CheckLoginSignupOnHeader",
						"Verify if user is able to successfully login through Header.",
						"Verified User able to successfully login through Header.", "Pass");

				Thread.sleep(3000);
				HM_Logout();
				try {
					Thread.sleep(3000);
					webdriver.findElement(By.xpath(XpathMap.get("PromoClose"))).click();
					Thread.sleep(3000);
				} catch (Exception e) {
					System.out.print("Promo Code is not present");
				}

			} catch (Exception e) {
				report.detailsAppend("TC09-Smoke_CheckLoginSignupOnHeader",
						"Verify if user is able to successfully login through Header.",
						"Verified user Not able to login through Header.", "Fail");

				webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
				System.out.println("Sport Button is clicked \n");
			}

			Thread.sleep(3000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			System.out.println("Sport Button is clicked \n");
			log.debug("Switch to default tab");
			return false;
		}
		return true;
	}

	// TC10-11(SMOKE_Login/Singup) @Author: AS66528

	public boolean SM_CheckLoginSignupOnHeader1(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			// TC10:Verify if user is able to successfully login through Hamburger Menu.

			try {
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
					System.out.print("HamburgerMenu Button is Clicked on Homepage");
				} else {
					System.out.print("VuvuHamburgerMenu button is not displayed");
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaLogin"))).click();
					System.out.print("login Button is Clicked on hamburgermenu");
				} else {
					System.out.print("Login button is not Visible to Click");
				}
				Thread.sleep(3000);
				String title = webdriver.getCurrentUrl();
				if ((title).contains("za")) {
					Thread.sleep(3000);
					if (webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber")))
								.sendKeys(XpathMap.get("HMZAPH"));
						System.out.print("MobileNumber is Entered on Homepage");
					} else {
						System.out.print("MenuMobileNumber is not displayed");
					}
					Thread.sleep(3000);

					if (webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("HMZAPD"));
						System.out.print("Password is Entered on Homepage");
					} else {
						System.out.print("MenuPassword is not displayed");
					}
					Thread.sleep(3000);

					if (webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).isDisplayed()) {
						webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();
						System.out.println("LoginButton On Homepage is clicked \n");
						Thread.sleep(3000);
					} else {
						System.out.print("MobileLoginButton is not displayed");
					}
					Thread.sleep(3000);

				} else if (title.contains("ng")) {
					Thread.sleep(3000);
					if (webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber")))
								.sendKeys(XpathMap.get("HMZAPH"));
						System.out.print("MobileNumber is Entered on Homepage");
					} else {
						System.out.print("MenuMobileNumber is not displayed");
					}
					Thread.sleep(3000);

					if (webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("HMZAPD"));
						System.out.print("Password is Entered on Homepage");
					} else {
						System.out.print("MenuPassword is not displayed");
					}
					Thread.sleep(3000);

					if (webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).isDisplayed()) {
						webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();
						System.out.println("LoginButton On Homepage is clicked \n");
						Thread.sleep(3000);
					} else {
						System.out.print("MobileLoginButton is not displayed");
					}
					Thread.sleep(3000);
				}

				report.detailsAppend("TC10-Smoke_CheckLoginSignupOnHeader",
						"Verify if user is able to successfully login through Header.",
						"Verified User able to successfully login through Header.", "Pass");

				Thread.sleep(3000);
				try {
					Thread.sleep(3000);
					webdriver.findElement(By.xpath(XpathMap.get("PromoClose"))).click();
				} catch (Exception e) {
					System.out.print("Promo Code is not present");
				}

				Thread.sleep(3000);
				HM_Logout();

			} catch (Exception e) {
				report.detailsAppend("TC10-Smoke_CheckLoginSignupOnHeader",
						"Verify if user is able to successfully login through Header.",
						"Verified user Not able to login through Header.", "Fail");

				webdriver.navigate().refresh();
			}

			// TC11:Verify if user is able to successfully login through Hamburger Menu.

			try {
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
					System.out.print("HamburgerMenu Button is Clicked on Homepage");
				} else {
					System.out.print("VuvuHamburgerMenu button is not displayed");
				}
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("VuvuzelaSignup"))).click();
					System.out.print("Signup Button is Clicked on hamburgermenu");
				} else {
					System.out.print("VuvuzelaSignup button is not displayed");
				}
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("ClickOnLoginOnSignUpWindow"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("ClickOnLoginOnSignUpWindow"))).click();
					System.out.print("Login Button is Clicked on SignupPopup");
				} else {
					System.out.print("ClickOnLoginOnSignUpWindow button is not displayed");
				}
				Thread.sleep(3000);

				String title = webdriver.getCurrentUrl();
				if ((title).contains("za")) {
					Thread.sleep(3000);
					if (webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber")))
								.sendKeys(XpathMap.get("HMZAPH"));
						System.out.print("MobileNumber is Entered on Homepage");
					} else {
						System.out.print("MenuMobileNumber is not displayed");
					}
					Thread.sleep(3000);

					if (webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("HMZAPD"));
						System.out.print("Password is Entered on Homepage");
					} else {
						System.out.print("MenuPassword is not displayed");
					}
					Thread.sleep(3000);

					if (webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).isDisplayed()) {
						webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();
						System.out.println("LoginButton On Homepage is clicked \n");
						Thread.sleep(3000);
					} else {
						System.out.print("MobileLoginButton is not displayed");
					}
					Thread.sleep(3000);

				} else if (title.contains("ng")) {
					Thread.sleep(3000);
					if (webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("MenuMobileNumber")))
								.sendKeys(XpathMap.get("HMZAPH"));
						System.out.print("MobileNumber is Entered on Homepage");
					} else {
						System.out.print("MenuMobileNumber is not displayed");
					}
					Thread.sleep(3000);

					if (webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("MenuPassword"))).sendKeys(XpathMap.get("HMZAPD"));
						System.out.print("Password is Entered on Homepage");
					} else {
						System.out.print("MenuPassword is not displayed");
					}
					Thread.sleep(3000);

					if (webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).isDisplayed()) {
						webdriver.findElement(By.cssSelector(XpathMap.get("MobileLoginButton"))).click();
						System.out.println("LoginButton On Homepage is clicked \n");
						Thread.sleep(3000);
					} else {
						System.out.print("MobileLoginButton is not displayed");
					}
					Thread.sleep(3000);
				}

				report.detailsAppend("TC11-Smoke_CheckLoginSignupOnHeader",
						"Verify if user is able to successfully login through Hamburger Menu.",
						"Verified User able to successfully login through Hamburger Menu.", "Pass");

				Thread.sleep(3000);
				PromoClose();

			} catch (Exception e) {
				report.detailsAppend("TC11-Smoke_CheckLoginSignupOnHeader",
						"Verify if user is able to successfully login through Hamburger Menu.",
						"Verified user Not able to login through Hamburger Menu.", "Fail");

				webdriver.navigate().refresh();
				webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
				System.out.println("Sport Button is clicked \n");
			}

			Thread.sleep(3000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			System.out.println("Sport Button is clicked \n");
			log.debug("Switch to default tab");
			return false;
		}
		return true;
	}

//////////////////// Carousel Bar after Login  /////////////////////////////

//TC12-25(SMOKE_ Smoke_CarouselBar_afterLogin) @Author: AS66528

	public boolean SM_CarouselBar_afterLogin(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			// TC12: Verify if user is able to click on Sports tab over carousel bar.
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
				System.out.println("Sport Button is clicked \n");
				Thread.sleep(4000);
				report.detailsAppend("TC12-Smoke_CarouselBar_afterLogin",
						"Verify if user is able to click on Sports tab over carousel bar.",
						"Verified user able to click on Sports tab over carousel bar.", "Pass");
			} else {
				System.out.println("Sport Button Not click \n");
				report.detailsAppend("TC12-Smoke_CarouselBar_afterLogin",
						"Verify if user is able to click on Sports tab over carousel bar.",
						"Verified user Not able to click on Sports tab over carousel bar.", "Fail");
				webdriver.navigate().refresh();
			}

			// TC13: Verify if user is able to click on Live tab over carousel bar.
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).click();
				System.out.println("Live Button is clicked \n");
				Thread.sleep(3000);
				report.detailsAppend("TC13-Smoke_CarouselBar_afterLogin",
						"Verify if user is able to click on Live tab over carousel bar.",
						"Verified user able to click on Live tab over carousel bar.", "Pass");
			} else {
				System.out.println("Live Button Not click \n");
				report.detailsAppend("TC13-Smoke_CarouselBar_afterLogin",
						"Verify if user is able to click on Live tab over carousel bar.",
						"Verified user Not able to click on Live tab over carousel bar.", "Fail");
				webdriver.navigate().refresh();
			}

			// TC14: Verify if user is able to click on Aviator tab over carousel bar.
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("Aviator"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("Aviator"))).click();
				System.out.println("Aviator Button is clicked \n");
				Thread.sleep(3000);
				report.detailsAppend("TC14-Smoke_CarouselBar_afterLogin",
						"Verify if user is able to click on Aviator tab over carousel bar.",
						"Verified user able to click on Aviator tab over carousel bar.", "Pass");
			} else {
				System.out.println("Aviator Button Not click \n");
				report.detailsAppend("TC14-Smoke_CarouselBar_afterLogin",
						"Verify if user is able to click on Aviator tab over carousel bar.",
						"Verified user Not able to click on Aviator tab over carousel bar.", "Fail");
				webdriver.navigate().refresh();
			}

			// TC15: Verify if user is able to click on Casino Games tab over carousel bar.
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("CasinoGames"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("CasinoGames"))).click();
				System.out.println("Casino Games Button is clicked \n");
				Thread.sleep(3000);
				report.detailsAppend("TC15-Smoke_CarouselBar_afterLogin",
						"Verify if user is able to click on Casino Games tab over carousel bar.",
						"Verified user able to click on Casino Games tab over carousel bar.", "Pass");
			} else {
				System.out.println("Casino Games Button Not click \n");
				report.detailsAppend("TC15-Smoke_CarouselBar_afterLogin",
						"Verify if user is able to click on Casino Games tab over carousel bar.",
						"Verified user Not able to click on Casino Games tab over carousel bar.", "Fail");
				webdriver.navigate().refresh();
			}

			// TC16: Verify if user is able to click on LuckyNumbers tab over carousel bar.
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("LuckyNumbers"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("LuckyNumbers"))).click();
				System.out.println("LuckyNumbers Button is clicked \n");
				Thread.sleep(3000);
				report.detailsAppend("TC16-Smoke_CarouselBar_afterLogin",
						"Verify if user is able to click on LuckyNumbers tab over carousel bar.",
						"Verified user able to click on LuckyNumbers tab over carousel bar.", "Pass");
			} else {
				System.out.println("LuckyNumbers Button Not click \n");
				report.detailsAppend("TC16-Smoke_CarouselBar_afterLogin",
						"Verify if user is able to click on LuckyNumbers tab over carousel bar.",
						"Verified user Not able to click on LuckyNumbers tab over carousel bar.", "Fail");
				webdriver.navigate().refresh();
			}

			// TC17: Verify if user is able to click on Horse Racing tab over carousel bar.
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("HorseRacing"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("HorseRacing"))).click();
				System.out.println("Horse Racing Button is clicked \n");
				Thread.sleep(3000);
				report.detailsAppend("TC17-Smoke_CarouselBar_afterLogin",
						"Verify if user is able to click on Horse Racing tab over carousel bar.",
						"Verified user able to click on Horse Racing tab over carousel bar.", "Pass");
			} else {
				System.out.println("Horse Racing Button Not click \n");
				report.detailsAppend("TC17-Smoke_CarouselBar_afterLogin",
						"Verify if user is able to click on Horse Racing tab over carousel bar.",
						"Verified user Not able to click on Horse Racing tab over carousel bar.", "Fail");
			}

			// TC18: Verify if user is able to click on Bet Games tab over carousel bar.
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("BetGames"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("BetGames"))).click();
				System.out.println("Bet Games Button is clicked \n");
				Thread.sleep(3000);
				report.detailsAppend("TC18-Smoke_CarouselBar_afterLogin",
						"Verify if user is able to click on Bet Games tab over carousel bar.",
						"Verified user able to click on Bet Games tab over carousel bar.", "Pass");
			} else {
				System.out.println("Bet Games Button Not click \n");
				report.detailsAppend("TC18-Smoke_CarouselBar_afterLogin",
						"Verify if user is able to click on Bet Games tab over carousel bar.",
						"Verified user Not able to click on Bet Games tab over carousel bar.", "Fail");
			}

			// TC19: Verify if user is able to click on BetwayJackpot tab over carousel bar.
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("BetwayJackpot"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("BetwayJackpot"))).click();
				System.out.println("BetwayJackpot Button is clicked \n");
				report.detailsAppend("TC19-Smoke_CarouselBar_afterLogin",
						"Verify if user is able to click on BetwayJackpot tab over carousel bar.",
						"Verified user able to click on BetwayJackpot tab over carousel bar.", "Pass");
			} else {
				System.out.println("BetwayJackpot Button Not click \n");
				report.detailsAppend("TC19-Smoke_CarouselBar_afterLogin",
						"Verify if user is able to click on BetwayJackpot tab over carousel bar.",
						"Verified user Not able to click on BetwayJackpot tab over carousel bar.", "Fail");
			}

			// TC20: Verify if user is able to click on Virtuals tab over carousel bar.
			Thread.sleep(3000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("Virtual"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("Virtual"))).click();
				System.out.println("Virtuals Button is clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC20-Smoke_CarouselBar_afterLogin",
						"Verify if user is able to click on Virtuals tab over carousel bar.",
						"Verified user able to click on Virtuals tab over carousel bar.", "Pass");
			} catch (Exception e) {
				System.out.println(e + "Virtuals Button Not click \n");
				report.detailsAppend("TC20-Smoke_CarouselBar_afterLogin",
						"Verify if user is able to click on Virtuals tab over carousel bar.",
						"Verified user Not able to click on Virtuals tab over carousel bar.", "Fail");
			}

			// TC21:Verify if user is able to click on Esports tab over carousel bar.

			try {
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("Esports"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("Esports"))).click();
					System.out.println("Esports Button is clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println("Esports Button Not click \n");
				}
				report.detailsAppend("TC21-Smoke_CarouselBar_afterLogin",
						"Verify if user is able to click on Esports tab over carousel bar.",
						"Verified user able to click on Esports tab over carousel bar.", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC21-Smoke_CarouselBar_afterLogin",
						"Verify if user is able to click on Esports tab over carousel bar.",
						"Verified user Not able to click on Esports tab over carousel bar.", "Fail");

			}

			// TC23: Verify if user is able to click on Promotions tab over carousel bar.

			try {
				Thread.sleep(3000);
				WebElement PromotionsBtn = webdriver.findElement(By.xpath(XpathMap.get("Promotionbtn")));
				((JavascriptExecutor) webdriver).executeScript("arguments[0].click();", PromotionsBtn);
				System.out.println("Promotions Button is clicked \n");
				Thread.sleep(3000);
				report.detailsAppend("TC23-Smoke_CarouselBar_afterLogin",
						"Verify if user is able to click on Promotions tab over carousel bar.",
						"Verified user able to click on Promotions tab over carousel bar.", "Pass");
			} catch (Exception e) {
				System.out.println(e + "Promotions Button Not clicked \n");

				report.detailsAppend("TC23-Smoke_CarouselBar_afterLogin",
						"Verify if user is able to click on Promotions tab over carousel bar.",
						"Verified user Not able to click on Promotions tab over carousel bar.", "Fail");
			}

			// TC22: Verify if user is able to click on SoccerTote tab over carousel bar.
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("SoccerToteBtn"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("SoccerToteBtn"))).click();
				System.out.println("SoccerTote Button is clicked \n");
				Thread.sleep(4000);
				report.detailsAppend("TC22-Smoke_CarouselBar_afterLogin",
						"Verify if user is able to click on SoccerTote tab over carousel bar.",
						"Verified user able to click on SoccerTote tab over carousel bar.", "Pass");
			} else {
				report.detailsAppend("TC22-Smoke_CarouselBar_afterLogin",
						"Verify if user is able to click on SoccerTote tab over carousel bar.",
						"Verified user Not able to click on SoccerTote tab over carousel bar, Not Present.", "Fail");
				webdriver.navigate().refresh();
			}

			// TC24: Verify if user is able to click on Betslip button tab over carousel
			// bar.

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
				System.out.println("Sport Button is clicked \n");
				Thread.sleep(4000);
			} else {
				System.out.println("Sport Button Not clicked \n");
			}
			Thread.sleep(3000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BetslipBtnInHeader"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("BetslipBtnInHeader"))).click();
				System.out.println("Betslip button in header is clicked \n");
				Thread.sleep(3000);
				report.detailsAppend("TC24-Smoke_CarouselBar_afterLogin",
						"Verify if user is able to click on Betslip button tab over carousel bar.",
						"Verified user able to click on Betslip button tab over carousel bar.", "Pass");
			} catch (Exception e) {
				report.detailsAppend("TC24-Smoke_CarouselBar_afterLogin",
						"Verify if user is able to click on Betslip button tab over carousel bar.",
						"Verified user Not able to click on Betslip button tab over carousel bar.", "Fail");
				webdriver.navigate().refresh();
			}

			// TC25: Verify if user is able to click on My Bets button tab over carousel
			// bar.
			Thread.sleep(3000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				Thread.sleep(3000);
				try {
					Assert.assertTrue(
							webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).isDisplayed());
					webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
					System.out.println("My Bets Button is clicked \n");
					Thread.sleep(3000);
					report.detailsAppend("TC25-Smoke_CarouselBar_afterLogin",
							"Verify if user is able to click on My Bets button tab over carousel bar.",
							"Verified user able to click on My Bets button tab over carousel bar.", "Pass");

					Thread.sleep(3000);
					try {
						webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
						System.out.println("Profile Account Popup is Closed \n");
					} catch (Exception e) {
						webdriver.navigate().refresh();
					}

				} catch (Exception e) {
					report.detailsAppend("TC25-Smoke_CarouselBar_afterLogin",
							"Verify if user is able to click on My Bets button tab over carousel bar.",
							"Verified user Not able to click on My Bets button tab over carousel bar.", "Fail");
					webdriver.navigate().refresh();
				}

			} catch (Exception e) {
				report.detailsAppend("TC25-Smoke_CarouselBar_afterLogin",
						"Verify if user is able to click on My Bets button tab over carousel bar.",
						"Verified user Not able to click on My Bets button tab over carousel bar.", "Fail");

			}

			Thread.sleep(3000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			System.out.println("Sport Button is clicked \n");
			log.debug("Switch to default tab");
			return false;
		}
		return true;
	}

////////////////////Header after Login  /////////////////////////////

//TC26-37(SMOKE_Header_AfterLogin) @Author: AS66528

	public boolean SM_Header_afterLogin(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);

			// TC26:Verify Betway Logo is present on the Header of Home page and clickable.

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
				System.out.println("Sport Button is clicked \n");
				Thread.sleep(4000);
			} else {
				System.out.println("Sport Button Not Click \n");
			}
			Thread.sleep(3000);

			if (webdriver.findElement(By.xpath(XpathMap.get("BetwayLogo"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("BetwayLogo"))).click();
				System.out.print("Betway Logo is Clicked on Homepage \n");
				Thread.sleep(3000);

				report.detailsAppend("TC26-Smoke_Header_afterLogin",
						"Verify Betway Logo is present on the Header of Home page and clickable.",
						"Verified Betway Logo present on the Header of Home page and clickable.", "Pass");

			} else {
				report.detailsAppend("TC26-Smoke_Header_afterLogin",
						"Verify Betway Logo is present on the Header of Home page and clickable.",
						"Verified Betway Logo Not present on the Header of Home page and Not clickable.", "Fail");

				System.out.println("Betway Logo Not Clicked on Homepage \n");
			}

			// TC27: Verify Hamburger Menu is present on the Header of Home page and
			// clickable.
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println("HamburgerMenu Button is clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC27-Smoke_Header_afterLogin",
						"Verify Hamburger Menu is present on the Header of Home page and clickable.",
						"Verified Hamburger Menu present on the Header of Home page and clickable.", "Pass");

				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("CloseIconOnHamburgerMenu"))).click();
				System.out.println("HamburgerMenu Button is clicked \n");
				Thread.sleep(3000);

			} else {
				System.out.println("HamburgerMenu Button Not click \n");
				report.detailsAppend("TC27-Smoke_Header_afterLogin",
						"Verify Hamburger Menu is present on the Header of Home page and clickable.",
						"Verified Hamburger Menu Not present on the Header of Home page and Not clickable.", "Fail");

			}

			// TC28: Verify the eye Logo is present on the Header of Home page and
			// clickable.
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("EyeIconZA"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("EyeIconZA"))).click();
				System.out.println("EyeIcon Button is clicked \n");
				Thread.sleep(3000);
				report.detailsAppend("TC28-Smoke_Header_afterLogin",
						"Verify the eye Logo is present on the Header of Home page and clickable.",
						"Verified the eye Logo is present on the Header of Home page and clickable.", "Pass");

				try {
					Thread.sleep(3000);
					webdriver.findElement(By.xpath(XpathMap.get("EyeIconBalShow"))).click();
				} catch (Exception e) {
					webdriver.navigate().refresh();
				}

			} else {
				System.out.println("EyeIcon Button Not clicked \n");
				report.detailsAppend("TC28-Smoke_Header_afterLogin",
						"Verify the eye Logo is present on the Header of Home page and clickable.",
						"Verified the eye Logo Not present on the Header of Home page and Not clickable.", "Fail");

			}

			// TC29: Verify the Cash balance field is present on the Header of Home page
			// with the Refresh button.
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("RefreshOnCashZA"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("RefreshOnCashZA"))).click();
				System.out.println("RefreshOn CashButton is clicked \n");
				Thread.sleep(3000);
				report.detailsAppend("TC29-Smoke_Header_afterLogin",
						"Verify the Cash balance field Should present on the Header of Home page with the Refresh button.",
						"Cash balance field present and user able to refresh the balance.", "Pass");
			} else {
				System.out.println("RefreshOn Cash Button Not click \n");
				report.detailsAppend("TC29-Smoke_Header_afterLogin",
						"Verify the Cash balance field Should present on the Header of Home page with the Refresh button.",
						"Cash balance field Not present and user Not able to refresh the balance.", "Fail");

			}

			// TC30: Verify the Free Bet (Sports) field is present on the Header of Home
			// page and clickable.
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("FreeBetZA"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("FreeBetZA"))).click();
				System.out.println("FreeBet Button is clicked \n");
				Thread.sleep(3000);
				report.detailsAppend("TC30-Smoke_Header_afterLogin",
						"Verify the Free Bet (Sports) field Should present on the Header of Home page and clickable.",
						"Verified the Free Bet (Sports) field present on Header of Home page and clickable.", "Pass");

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
					System.out.println("Profile Account Popup is Closed \n");
				} else {
					webdriver.navigate().refresh();
				}

			} else {
				System.out.println("FreeBet Button Not click \n");
				report.detailsAppend("TC30-Smoke_Header_afterLogin",
						"Verify the Free Bet (Sports) field Should present on the Header of Home page and clickable.",
						"Verified the Free Bet (Sports) field Not present on Header of Home page and  Not clickable.",
						"Fail");

			}

			// TC31: Verify the Bonus (Sports) field is present on the Header of Home page
			// with the Refresh button.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("BonusRefresh"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("BonusRefresh"))).click();
				System.out.println("Bonus Refresh Button is clicked \n");
				Thread.sleep(3000);
				report.detailsAppend("TC31-Smoke_Header_afterLogin",
						"Verify the Bonus (Sports) field Should present on the Header of Home page with the Refresh button.",
						"Verified the Bonus (Sports) field presenedt on the Header of Home page with the Refresh button.",
						"Pass");
			} else {
				System.out.println("Bonus Refresh Button Not click \n");
				report.detailsAppend("TC31-Smoke_Header_afterLogin",
						"Verify the Bonus (Sports) field Should present on the Header of Home page with the Refresh button.",
						"Verified the Bonus (Sports) field Not present and Not clickable on the Header of Home page with Refresh button.",
						"Fail");

			}

			// TC32: Verify the Casino Bonus field is present on the Header of Home page
			// with the Refresh button.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("CasinoRefresh"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("CasinoRefresh"))).click();
				System.out.println("Casino Refresh Button is clicked \n");
				Thread.sleep(3000);
				report.detailsAppend("TC32-Smoke_Header_afterLogin",
						"Verify the Casino Bonus field Should present on the Header of Home page with the Refresh button.",
						"Verified the Casino Bonus field presented on the Header of Home page with the Refresh button.",
						"Pass");
			} else {
				System.out.println("Casino Refresh Button Not click \n");
				report.detailsAppend("TC32-Smoke_Header_afterLogin",
						"Verify the Casino Bonus field Should present on the Header of Home page with the Refresh button.",
						"Verified the Casino Bonus field Not present and Not clickable on the Header of Home page with Refresh button.",
						"Fail");

			}

			// TC33: Verify the Deposit button is present on the Header of Home page and
			// clickable.
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("DepositHeader"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("DepositHeader"))).click();
				System.out.println("Deposit Header Button is clicked \n");
				Thread.sleep(3000);
				report.detailsAppend("TC33-Smoke_Header_afterLogin",
						"Verify the Deposit button is present on the Header of Home page and clickable.",
						"Verified the Deposit button present on Header of Home page and clickable.", "Pass");

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("DepositClose"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("DepositClose"))).click();
					System.out.println("Deposit Close Popup is Closed \n");
				} else {
					webdriver.navigate().refresh();
				}

				PromoClose();

			} else {
				System.out.println(" Deposit Header Button Not click\n");
				report.detailsAppend("TC33-Smoke_Header_afterLogin",
						"Verify the Deposit button is present on the Header of Home page and clickable.",
						"Verified the Deposit button Not present on Header of Home page and Not clickable.", "Fail");
			}

			// TC34: Verify the My Account button is present on the Header of Home page and
			// clickable.
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("AccountHeader"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("AccountHeader"))).click();
				System.out.println(" MyAccount Button on Header is clicked \n");
				Thread.sleep(3000);
				report.detailsAppend("TC34-Smoke_Header_afterLogin",
						"Verify the My Account button is present on the Header of Home page and clickable.",
						"My Account button present, User abled to click and Hamburger Menu Page open.", "Pass");

				Thread.sleep(3000);
				try {
					webdriver.findElement(By.xpath(XpathMap.get("CloseIconOnHamburgerMenu"))).click();
					System.out.println("Close Btn ON Hamburgermen is  Clicked \n");
					Thread.sleep(3000);
				} catch (Exception e) {
					webdriver.navigate().refresh();
					System.out.println(e + "Close Btn ON Hamburgermen is  Clicked \n");
				}

			} else {
				System.out.println(" MyAccount Button on Header Not clicked \n");
				report.detailsAppend("TC34-Smoke_Header_afterLogin",
						"Verify the My Account button is present on the Header of Home page and clickable.",
						"My Account button present, User Not able to click and Hamburger Menu doesnt open.", "Fail");
			}

			// TC35: Verify the Live Chat button is present on the Header of Home page and
			// clickable.
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("LiveChatonHeader"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("LiveChatonHeader"))).click();
				System.out.println("LiveChat Button on Header is clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC35-Smoke_Header_afterLogin",
						"Verify the Live Chat button is present on the Header of Home page and clickable.",
						"User able to click Live Chatand is redirected to respective page.", "Pass");

				Thread.sleep(2000);
				if (webdriver.findElement(By.xpath(XpathMap.get("LiveChatCloseBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("LiveChatCloseBtn"))).click();
					System.out.print("Live chat close btn is Clicked \n");
				} else {
					System.out.print("Live chat close btn Not Clicked \\n");
					webdriver.navigate().refresh();
				}

			} else {
				System.out.println("LiveChat Button on Header Not click \n");
				report.detailsAppend("TC35-Smoke_Header_afterLogin",
						"Verify the Live Chat button is present on the Header of Home page and clickable.",
						"User Not able to click Live Chat and Not redirected to respective page.", "Fail");
			}

			// TC36:Verify the Notifications button is present on the Header of Home page
			// and clickable.

			Thread.sleep(3000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("NotificationonHeader"))).click();
				System.out.println("Notification Button onHeader is clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC36-Smoke_Header_afterLogin",
						"Verify the Notifications button is present on the Header of Home page and clickable.",
						"Verified the Notifications button present on the Header of Home page and clickable.", "Pass");

			} catch (Exception e) {
				System.out.println(e + "Notification Button onHeader is clicked \n");
				report.detailsAppend("TC36-Smoke_Header_afterLogin",
						"Verify the Notifications button is present on the Header of Home page and clickable.",
						"Verified the Notifications button Not present on the Header of Home page and Not clickable.",
						"Fail");

			}

			log.debug("Switch to default tab");

		} catch (Exception e) {
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			System.out.println("Sport Button is clicked \n");
			log.debug("Switch to default tab");
			return false;
		}
		return true;
	}

////////////////////Header after Login  /////////////////////////////

//TC38-48 (SMOKE_Highlights) @Author: AS66528

	public boolean SM_Highlights(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);

// TC38:Verify the Search bar is present on left side of the sports page and clickable.

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
				System.out.println("Sport Button is clicked \n");
				Thread.sleep(4000);
			} else {
				System.out.println("Sport Button Not Click \n");
			}
			Thread.sleep(3000);

			if (webdriver.findElement(By.xpath(XpathMap.get("SearchBarInHomepage"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("SearchBarInHomepage"))).click();
				System.out.print("SearchBar InHomepage is Clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC38-Smoke_Highlights",
						"Verify the Search bar is present on left side of the sports page and clickable.",
						"Verified the Search bar present on left side of the sports page and clickable.", "Pass");

				report.detailsAppend("TC39-Smoke_Highlights",
						"Verify the Previous searches pop up should open after clicking on search bar",
						"Verified the Previous searches pop up opened after clicking on search bar", "Pass");

				try {
					Thread.sleep(3000);
					webdriver.findElement(By.xpath(XpathMap.get("SearchBarInHomepage"))).click();
				} catch (Exception e) {
					webdriver.navigate().refresh();
				}

			} else {
				report.detailsAppend("TC38-Smoke_Highlights",
						"Verify the Search bar is present on left side of the sports page and clickable.",
						"Verify the Search bar Not present on left side of the sports page and Not clickable.", "Fail");

				report.detailsAppend("TC39-Smoke_Highlights",
						"Verify the Previous searches pop up should open after clicking on search bar",
						"Verified the Previous searches pop up Not opened after clicking on search bar", "Fail");

				System.out.println("Betway Logo Not Clicked on Homepage \n");
			}

// TC42: Verify the user is able to search the results on the search bar.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("SearchBarInHomepage"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("SearchBarInHomepage"))).sendKeys("League");
				System.out.println(" Date entered in search bar \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("SearchBtninHomepage"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("SearchBtninHomepage"))).click();
					System.out.println("SearchBtn inHomepage is clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println("SearchBtn inHomepage Not clicked \n");
				}

				report.detailsAppend("TC42-Smoke_Highlights",
						"Verify the user is able to search the results on the search bar.",
						"User abled to search and the respective data is displayed.", "Pass");

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("SearchBarInHomepage"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("SearchBarInHomepage"))).click();
					Thread.sleep(3000);
				} else {
					System.out.println("Search data inHomepage Not clear \n");
				}

				webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
				System.out.print("Sport Button is Clicked\n");
				Thread.sleep(3000);

			} else {
				System.out.println(" Date Not able to entered in search bar \n");
				report.detailsAppend("TC42-Smoke_Highlights",
						"Verify the user is able to search the results on the search bar.",
						"User Not able to search and the respective data not displayed.", "Fail");

			}

// TC40: Verify the user is able to search using  Previous searches result.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("SearchBarInHomepage"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("SearchBarInHomepage"))).click();
				System.out.print("SearchBar InHomepage is Clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC40-Smoke_Highlights",
						"Verify the user is able to search using  Previous searches result.",
						"Verify the user is able to search using  Previous searches result.", "Pass");

			} else {
				System.out.println("EyeIcon Button Not clicked \n");
				report.detailsAppend("TC40-Smoke_Highlights",
						"Verify the user is able to search using  Previous searches result.",
						"Verify the user is able to search using  Previous searches result.", "Fail");

			}

// TC41: Verify if user is able to click on the close button over Previous searches pop up

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("SearchBarPopupClosebtn"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("SearchBarPopupClosebtn"))).click();
				System.out.print("SearchBar Popup Close btn is Clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC41-Smoke_Highlights",
						"Verify if user is able to click on close button over Previous searches pop up",
						"Verified user able to click on close button over Previous searches pop up", "Pass");

			} else {
				System.out.print("SearchBar Popup Close btn Not Clicked \n");
				report.detailsAppend("TC41-Smoke_Highlights",
						"Verify if user is able to click on close button over Previous searches pop up",
						"Verified user Not able to click on close button over Previous searches pop up", "Fail");
				webdriver.navigate().refresh();

			}

// TC43: Verify the Highlights tab is present on left side of the sports page with the clickable expand arrow.

			Thread.sleep(3000);
			try {
				Thread.sleep(3000);
				WebElement highlights = webdriver.findElement(By.xpath(XpathMap.get("HighlightsBtn")));
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("arguments[0].click()", highlights);
				System.out.println("Highlights Btn is clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC43-Smoke_Highlights",
						"Verify the Highlights tab is present on left side of the sports page with the clickable expand arrow.",
						"User is able to click on the expand arrow and Highlights should be displayed.", "Pass");

			} catch (Exception e) {
				System.out.println(e + " Highlights Btn Not Clicked \n");
				report.detailsAppend("TC43-Smoke_Highlights",
						"Verify the Highlights tab is present on left side of the sports page with the clickable expand arrow.",
						"User Not able to click on the expand arrow and Highlights Not be displayed.", "Fail");

			}

// TC44, 47:Verify if user is able to click on the Highlights markets from the highlights section.

			Thread.sleep(3000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HL1stLeagueSelect"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("HL1stLeagueSelect"))).click();
				System.out.println("HighLights 1stmarkets is Select \n");
				Thread.sleep(3000);
				report.detailsAppend("TC44-Smoke_Highlights",
						"Verify if user is able to click on the Highlights markets from the highlights section.",
						"User able to click Highlights Market and is redirected to respective market page.", "Pass");

				report.detailsAppend("TC47-Smoke_Highlights",
						"Verify if user is able to click on Highlights over highlights pop up.",
						"User is able to click and is redirected to respective market page.", "Pass");

				Thread.sleep(3000);

			} catch (Exception e) {
				System.out.println(e + "HighLights 1stmarkets Not Select \n");
				report.detailsAppend("TC44-Smoke_Highlights",
						"Verif if user is able to click on the Highlights markets from the highlights section.",
						"User Not able to click Highlights Market and not redirected to respective market page.",
						"Fail");

				report.detailsAppend("TC47-Smoke_Highlights",
						"Verify if user is able to click on Highlights over highlights pop up.",
						"User Not able to click and Not redirected to respective market page.", "Fail");

			}

// TC45: Verify the date picker is present on the Highlights pop up and clickable.

			Thread.sleep(3000);
			try {
				Thread.sleep(3000);
				WebElement highlights = webdriver.findElement(By.xpath(XpathMap.get("HighlightsBtn")));
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("arguments[0].click()", highlights);
				System.out.println("Highlights Btn is clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("HLCalenderSelect"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HLCalenderSelect"))).click();
					System.out.println(" Calender Button is Select \n");
					Thread.sleep(3000);
					report.detailsAppend("TC45-Smoke_Highlights",
							"Verify the date picker is present on the Highlights pop up and clickable.",
							"Verifed Date picker present on the highlights pop up, User able to click on it.", "Pass");
				} else {
					System.out.println(" Calender Button Not Select \n");
					report.detailsAppend("TC45-Smoke_Highlights",
							"Verify the date picker is present on the Highlights pop up and clickable.",
							"Date picker be present on the highlights pop up, But User Not able to click on it.",
							"Fail");

				}

			} catch (Exception e) {
				System.out.println(e + "Highlights Button Not able to Selected \n");
			}

// TC46: Verify if the user is able to select the date from the date picker.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("HLCalenderSelect"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("HLCalenderSelect"))).click();
				System.out.println(" Calender Button is Select \n");
				Thread.sleep(3000);
				report.detailsAppend("TC46-Smoke_Highlights",
						"User should able to select the date from the date picker and respective highlights should be displayed.",
						"User selected the date from the date picker and respective highlights displayed.", "Pass");

			} else {
				System.out.println(" Calender Button Not Select \n");
				report.detailsAppend("TC46-Smoke_Highlights",
						"Verify if the user is able to select the date from the date picker.",
						"User Not able to select the date from the date picker and respective highlights not displayed.",
						"Fail");
			}

// TC48: Verify if user is able to click on the close button over highlights pop up.
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("HLHightlightsTabCloseBtn"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("HLHightlightsTabCloseBtn"))).click();
				System.out.println(" Hightlights Tab CloseBtn Button clicked \n");
				report.detailsAppend("TC48-Smoke_Highlights",
						"Verify if user is able to click on the close button over highlights pop up.",
						"User abled to click and the Highlights pop closed.", "Pass");

			} else {
				System.out.println(" Hightlights Tab CloseBtn Button Not clicked \n");
				report.detailsAppend("TC48-Smoke_Highlights",
						"Verify if user is able to click on the close button over highlights pop up.",
						"User Not able to click and the Highlights pop closed.", "Fail");
			}

			Thread.sleep(3000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			System.out.println("Sport Button is clicked \n");
			log.debug("Switch to default tab");
			return false;
		}
		return true;
	}

////////////////////Market Book /////////////////////////////

//TC49 -56(Smoke_TopLeaguesMarket) @Author: AS66528

	// TC49: Verify the Sport Carousel bar is present on the sport page.
	public boolean SM_Market_TopLeagues(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("SoccerBtnInCarosel"))).isDisplayed()) {
				System.out.println("Sport Carousel bar is Presented \n");
				Thread.sleep(1000);

				report.detailsAppend("TC49-Smoke_TopLeaguesMarket",
						"Verify the Sport Carousel bar is present on the sport page.",
						"Verified the Sport Carousel bar present on the sport page.", "Pass");

			} else {
				report.detailsAppend("TC49-Smoke_TopLeaguesMarket",
						"Verify the Sport Carousel bar is present on the sport page.",
						"Verified the Sport Carousel bar Not present on the sport page.", "Fail");

				System.out.println("Sport Carousel bar Not Presented \n");
			}

//TC50: Verify the user is able to search the results on the search bar.

			Thread.sleep(3000);
			try {
				if (webdriver.findElement(By.xpath(XpathMap.get("SoccerBtnInCarosel"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("SoccerBtnInCarosel"))).click();
					System.out.println("Soccer Btn In CaroselBar Clicked \n");

					report.detailsAppend("TC50[1]-Smoke_TopLeaguesMarket",
							"User is able to click Soccer Sports and respective markets should be displayed.",
							"User abled to click Soccer Sports and respective markets is displayed.", "Pass");
				} else {
					System.out.println("Soccer Btn In CaroselBar Not Selected\n");
					report.detailsAppend("TC50[1]-Smoke_TopLeaguesMarket",
							"User is able to click Soccer Sports and respective markets should be displayed.",
							"User Not able to click On Soccer Sports and respective data not displayed.", "Fail");

				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("CricketBtnInCarosel"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("CricketBtnInCarosel"))).click();
					System.out.println("Cricket Btn InCarosel is clicked \n");
					Thread.sleep(3000);
					report.detailsAppend("TC50[2]-Smoke_TopLeaguesMarket",
							"User is able to click Cricket Sports and respective markets should be displayed.",
							"User abled to click Cricket Sports and respective markets is displayed.", "Pass");
				} else {
					System.out.println("Cricket Btn In CaroselBar Not Selected\n");
					report.detailsAppend("TC50[2]-Smoke_TopLeaguesMarket",
							"User is able to click Cricket Sports and respective markets should be displayed.",
							"User Not able to click On Cricket Sports and respective data not displayed.", "Fail");

				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("TennisBtnInCarosel"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("TennisBtnInCarosel"))).click();
					System.out.println("Tennis Btn InCarosel is clicked \n");
					Thread.sleep(3000);
					report.detailsAppend("TC50[3]-Smoke_TopLeaguesMarket",
							"User is able to click Tennis Sports and respective markets should be displayed.",
							"User abled to click Tennis Sports and respective markets is displayed.", "Pass");
				} else {
					System.out.println("Tennis Btn In CaroselBar Not Selected\n");
					report.detailsAppend("TC50[3]-Smoke_TopLeaguesMarket",
							"User is able to click Tennis Sports and respective markets should be displayed.",
							"User Not able to click On Tennis Sports and respective data not displayed.", "Fail");

				}

				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
				System.out.print("Sport Button on header is Clicked\n");
				Thread.sleep(5000);

			} catch (Exception e) {
				System.out.print("Sports Not Clicked in Carosle bar\n");
			}

//TC51: Verify if the user is able to click on the next and previous arrow buttons of the sport carousel bar.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("RightArrowBtnInEvents"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("RightArrowBtnInEvents"))).click();
				System.out.print("RightArrow Btn In Events is Clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC51[1]-Smoke_TopLeaguesMarket",
						"Verify if user is able to click on the next arrow buttons of the sport carousel bar.",
						"Verified user abled to click on the next arrow buttons of the sport carousel bar.", "Pass");

			} else {
				System.out.println("EyeIcon Button Not clicked \n");
				report.detailsAppend("TC51[1]-Smoke_TopLeaguesMarket",
						"Verify if user is able to click on the next arrow buttons of the sport carousel bar.",
						"Verified user Not able to click on the next arrow buttons of the sport carousel bar.", "Fail");

			}

			Thread.sleep(3000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("LeftArrowBtnInEvents"))).click();
				System.out.print("LeftArrow Btn In Events is Clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC51[2]-Smoke_TopLeaguesMarket",
						"Verify if user is able to click on the previous arrow buttons of the sport carousel bar.",
						"Verified user abled to click on the previous arrow buttons of the sport carousel bar.",
						"Pass");

			} catch (Exception e) {
				System.out.println("LeftArrow Btn In Events Not Clicked \\n");
				report.detailsAppend("TC51[2]-Smoke_TopLeaguesMarket",
						"Verify if user is able to click on the previous arrow buttons of the sport carousel bar.",
						"Verified user Not able to click on the previous arrow buttons of the sport carousel bar.",
						"Fail");
			}

//TC52: Verify the Top Leagues and Favourites bar is present on the sport page and clickable.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("TopLeaguesHeader"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("TopLeaguesHeader"))).click();
				System.out.print("TopLeagues Header Popup btn is Clicked \n");

				report.detailsAppend("TC52-Smoke_TopLeaguesMarket",
						"Verify the Top Leagues is present on the sport page and clickable.",
						"Verified the Top Leagues present on sport page and clickable.", "Pass");

			} else {
				System.out.print("TopLeagues Header Popup btn Not Clicked \n");
				report.detailsAppend("TC52-Smoke_TopLeaguesMarket",
						"Verify the Top Leagues is present on the sport page and clickable.",
						"Verified the Top Leagues is present on the sport page and clickable.", "Fail");

			}

//TC53: Verify the Top Leagues buttons are clickable.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("TopLeaguesHeader"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("TopLeaguesHeader"))).click();
				System.out.println(" Top Leagues buttons are clicked \n");
				report.detailsAppend("TC53-Smoke_TopLeaguesMarket", "Verify the Top Leagues buttons are clickable.",
						"Verified the Top Leagues clickable.", "Pass");

			} else {
				System.out.println(" Top Leagues buttons Not clickable \n");
				report.detailsAppend("TC53-Smoke_TopLeaguesMarket", "Verify the Top Leagues buttons are clickable.",
						"User Not able to click the Top Leagues button ", "Fail");
			}

//TC55: Verify user is able to click on the league of Top Leagues.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("2ndCountryLeagueInTopleague"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("2ndCountryLeagueInTopleague"))).click();
				System.out.println("2nd Country League In Topleague is Select \n");
				Thread.sleep(3000);

				report.detailsAppend("TC55-Smoke_TopLeaguesMarket",
						"Verify user is able to click on the league of Top Leagues.",
						"User able to click and respective leagues be displayed.", "Pass");

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).click();
					System.out.println("League DD is clicked \n");

					JavascriptExecutor je = (JavascriptExecutor) webdriver;
					je.executeScript("window.scrollBy(0,200)");
					Thread.sleep(3000);

					webdriver.findElement(By.xpath(XpathMap.get("LeaguesDDResetBtn"))).click();
					System.out.println("Leagues Dropdown Reset Btn is clicked \n");

				} else {
					System.out.println("League DD Reset btn Not clicked \\n");

				}

			} else {
				System.out.println("2nd Country League In Topleague is Select \n");
				report.detailsAppend("TC55-Smoke_TopLeaguesMarket",
						"Verify user is able to click on the league of Top Leagues.",
						"User Not able to click and respective leagues Not be displayed.", "Fail");
			}

//TC56: Verify if the user is able to click on the next and previous arrow buttons of the Top Leagues 

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("RightArrowInTopLeague"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("RightArrowInTopLeague"))).click();
				System.out.println(" Next Arrow In TopLeague Button is Select \n");
				Thread.sleep(3000);

				report.detailsAppend("TC56[1]-Smoke_TopLeaguesMarket",
						"Verify if the User is able to click on the next arrow buttons of the Top Leagues ",
						"Verified User able to click on the next arrow buttons of the Top Leagues ", "Pass");
			} else {
				System.out.println(" Next Arrow In TopLeague Button is Select \n");
				report.detailsAppend("TC56[1]-Smoke_TopLeaguesMarket",
						"Verify if the User is able to click on the next arrow buttons of the Top Leagues ",
						"Verified User Not able to click on the next arrow buttons of the Top Leagues ", "Fail");

			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("LeftArrowInTopLeague"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("LeftArrowInTopLeague"))).click();
				System.out.println(" previous Arrow In TopLeague Button is Select \n");
				Thread.sleep(3000);

				report.detailsAppend("TC56[2]-Smoke_TopLeaguesMarket",
						"Verify if the User is able to click on the previous arrow buttons of the Top Leagues ",
						"Verified User able to click on the previous arrow buttons of the Top Leagues ", "Pass");

			} else {
				System.out.println(" previous Arrow In TopLeague Button is Select \n");
				report.detailsAppend("TC56[2]-Smoke_TopLeaguesMarket",
						"Verify if the User is able to click on the previous arrow buttons of the Top Leagues ",
						"Verified User Not able to click on the previous arrow buttons of the Top Leagues ", "Fail");
			}

			Thread.sleep(3000);
			log.debug("Switch to default tab");

		} catch (Exception e) {
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			System.out.println("Sport Button is clicked \n");
			return false;
		}
		return true;
	}

//////////  Verify the Live, Highlights, Upcoming, Outrights buttons are present on sport page and clickable  //////////

	// TC57-62 (Smoke_Events) @Author: AS66528

	public boolean SM_Market_Events(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);

			// TC57: Verify the Live, Highlights, Upcoming,Outrights buttons are present on
			// the sport page and clickable.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).click();
				System.out.println("UpComing Button is Presented and Clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC57-Smoke_Events",
						"Verify the Live,Highlights,Upcoming,Outrights buttons are present on the sport page and clickable.",
						"Verified the Live,Highlights,Upcoming,Outrights buttons are present on the sport page and clickable.",
						"Pass");

				Thread.sleep(2000);
				if (webdriver.findElement(By.xpath(XpathMap.get("LiveButton"))).isDisplayed()) {
					System.out.println("Live Button is Presented \n");
					Thread.sleep(2000);
				} else {
					System.out.println("Live Button Not Presented \n");
				}

				if (webdriver.findElement(By.xpath(XpathMap.get("OutrightsButton"))).isDisplayed()) {
					System.out.println("Outrights Button is Presented \n");
					Thread.sleep(2000);
				} else {
					System.out.println("Outrights Button Not Presented \n");
				}

				if (webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).isDisplayed()) {
					System.out.println("Highlights Button is Presented \n");
					Thread.sleep(2000);
				} else {
					System.out.println("Highlights Button Not Presented \n");
				}

			} else {
				report.detailsAppend("TC57-Smoke_Events",
						"Verify the Live,Highlights,Upcoming,Outrights buttons are present on the sport page and clickable.",
						"Verified the Live,Highlights,Upcoming,Outrights buttons are present on sport page and Not clickable.",
						"Fail");

				System.out.println("Upcoming Button Not Clicked \n");
			}

			// TC58: Verify user is able to click on the Live button from the sport page.

			Thread.sleep(3000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).click();
				System.out.print("VuvuLive Btn In Events is Clicked \n");
				Thread.sleep(4000);

				report.detailsAppend("TC58-Smoke_Events",
						"Verify if user is able to click on the Live button from the sport page.",
						"Verified user abled to click on the Live button from the sport page.", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC58-Smoke_Events",
						"Verify if user is able to click on the Live button from the sport page.",
						"Verified user Not able to click on the Live button from the sport page.", "Fail");

				webdriver.navigate().refresh();
				System.out.println(e + "VuvuLive Button Not clicked \n");

			}

			// TC59: Verify user is able to click on the Upcoming button from the sport
			// page.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("UpcomingBtnInLivePage"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("UpcomingBtnInLivePage"))).click();
				System.out.println("UpComing Button is Clicked \n");
				Thread.sleep(4000);

				report.detailsAppend("TC59-Smoke_Events",
						"Verify if user is able to click on the Upcoming button from the  sport page.",
						"Verified user abled to click on the Upcoming button from the  sport page.", "Pass");

			} else {
				System.out.println("UpComing Button Not Clicked \n");
				report.detailsAppend("TC59-Smoke_Events",
						"Verify if user is able to click on the Upcoming button from the  sport page.",
						"Verified user Not able to click on the Upcoming button from the  sport page.", "Fail");
			}

			// TC60:Verify user is able to click on the Highlights button from the sport
			// page.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).click();
				System.out.println("Highlights Button is Clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC60-Smoke_Events",
						"Verify if user is able to click on the Highlights button from the sport page.",
						"Verified user abled to click on the Highlights button from the sport page.", "Pass");

			} else {
				System.out.println("Highlights Button Not Clicked \n");
				report.detailsAppend("TC60-Smoke_Events",
						"Verify if user is able to click on the Highlights button from the sport page.",
						"Verified user Not able to click on the Highlights button from the sport page.", "Fail");
			}

			// TC61:Verify user is able to click on the Outrights button from the sport
			// page.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("OutrightsButton"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("OutrightsButton"))).click();
				System.out.println("Outrights Button is Clicked \n");
				Thread.sleep(4000);

				report.detailsAppend("TC61-Smoke_Events",
						"Verify if user is able to click on the Outrights button from the sport page.",
						"Verified user abled to click on the Outrights button from the sport page.", "Pass");

				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("HighlightsEvents"))).click();
				System.out.println("Highlights Button is clicked \n");
				Thread.sleep(4000);

			} else {
				System.out.println("Outrights Button Not Clicked \n");
				report.detailsAppend("TC61-Smoke_Events",
						"Verify if user is able to click on the Outrights button from the sport page.",
						"Verified user Not able to click on the Outrights button from the sport page.", "Fail");
			}

			// TC62: Verify the League, Bet Type, Odds and Date filters are present on the
			// sport page and clickable.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
				System.out.println(" Bet Type DD buttons are clicked \n");

				report.detailsAppend("TC62-Smoke_Events",
						"Verify the League, Bet Type, Odds and Date filters are present on the sport page and clickable.",
						"Verify the League, Bet Type, Odds and Date filters are present on the sport page and clickable.",
						"Pass");

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD"))).isDisplayed()) {
					System.out.println("OddsDD Button is Presented \n");
					Thread.sleep(3000);
				} else {
					System.out.println("OddsDD Button Not Presented \n");
				}

				if (webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).isDisplayed()) {
					System.out.println("Leagues DD Button is Presented \n");
					Thread.sleep(3000);
				} else {
					System.out.println("Leagues DD Button Not Presented \n");
				}

				if (webdriver.findElement(By.xpath(XpathMap.get("SMDateDD"))).isDisplayed()) {
					System.out.println("Date DD Button is Presented \n");
					Thread.sleep(3000);
				} else {
					System.out.println("Date DD Button Not Presented \n");
				}

			} else {
				System.out.println(" Top Leagues buttons Not clickable \n");
				report.detailsAppend("TC62-Smoke_Events",
						"Verify the League, Bet Type, Odds and Date filters are present on the sport page and clickable.",
						"Verify the League, Bet Type, Odds and Date filters are present on the sport page and Not clickable.",
						"Fail");
			}

			Thread.sleep(3000);
			log.debug("Switch to default tab");

		} catch (

		Exception e) {
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			System.out.println("Sport Button is clicked \n");
			log.debug("Switch to default tab");
			return false;
		}
		return true;
	}

///////////////////////////////////////////////////////// EVENTS MARKET FILTERS TESTCASES ///////////////////////////////////////

// TC63-78 (Smoke_MarketFilters) @Author: AS66528

	public boolean SM_MarketFilters(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);
			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
				System.out.println("Sport Button is clicked \n");
				log.debug("Switch to default tab");
				Thread.sleep(3000);
			} else {
				System.out.println("Sport Button Not clicked \n");
			}

			// TC63:Verify if user is able apply the League filter on the sport page.

			Thread.sleep(3000);
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			je.executeScript("window.scrollBy(0,100)");
			Thread.sleep(3000);

			if (webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).click();
				System.out.println("Leagues DD Button is Presented \n");
				Thread.sleep(3000);

				report.detailsAppend("TC63-Smoke_MarketFilters",
						"Verify if user is able apply the League filter on the sport page.",
						"Verified user able apply the League filter on the sport page.", "Pass");

			} else {
				report.detailsAppend("TC63-Smoke_MarketFilters",
						"Verify if user is able apply the League filter on the sport page.",
						"Verified user Not able apply the League filter on the sport page.", "Fail");

				System.out.println("Leagues DD Button NOt Presented \n");
			}

			// TC65:Verify the Cancel button is present on the league filter and clickable..

			Thread.sleep(3000);
			je.executeScript("window.scrollBy(0,200)");
			Thread.sleep(3000);

			if (webdriver.findElement(By.xpath(XpathMap.get("LeaguesDDCancelBtn"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("LeaguesDDCancelBtn"))).click();
				System.out.print("League dropdown Cancel button is clicked \n ");

				Thread.sleep(3000);
				report.detailsAppend("TC65-Smoke_MarketFilters",
						"Verify the Cancel button is present on the league filter and clickable.",
						"Verified the Cancel button presented on the league filter and clickable.", "Pass");

			} else {
				System.out.println("League dropdown Cancel button Not clicked \n ");
				report.detailsAppend("TC65-Smoke_MarketFilters",
						"Verify the Cancel button is present on the league filter and clickable.",
						"Veriied the Cancel button present on the league filter and not clickable.", "Fail");
			}

			// TC64:Verify the Apply button is present on the league filter and clickable..

			if (webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).click();
				System.out.println("Leagues DD Button is Presented \n");
				Thread.sleep(3000);

				je.executeScript("window.scrollBy(0,150)");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("1stCountryInLeagueDD"))).click();
					System.out.print("1st county in League dropdown is clicked \n ");
				} else {
					System.out.println("1st county in League dropdown Not clicked \n ");
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("1stLeagueunderCountry"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("1stLeagueunderCountry"))).click();
					System.out.print("1stLeague under country button Selected \n");
				} else {
					System.out.println(" 1stLeague under country button Not Selected \n");
				}

				Thread.sleep(3000);
				je.executeScript("window.scrollBy(0,150)");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("LeaguesDDApplyBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("LeaguesDDApplyBtn"))).click();
					System.out.print("Apply button under league selected \n");
				} else {
					System.out.println("Apply button under league not cliked \n");
				}

				Thread.sleep(3000);
				report.detailsAppend("TC64-Smoke_MarketFilters",
						"Verify the Apply button is present on the league filter and clickable.",
						"Verified the Apply button presented on the league filter and clickable.", "Pass");

			} else {
				System.out.println("VuvuLive Button Not clicked \n");
				report.detailsAppend("TC64-Smoke_MarketFilters",
						"Verify the Apply button is present on the league filter and clickable.",
						"Veriied the Apply button present on the league filter and not clickable.", "Fail");

			}

			// TC66: Verify the Reset button is present on the league filter and clickable.
			// page.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("SBLeagueDD"))).click();
				System.out.println("Leagues DD Button is Presented \n");
				Thread.sleep(3000);

				je.executeScript("window.scrollBy(0,200)");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("LeaguesDDResetBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("LeaguesDDResetBtn"))).click();
					System.out.print("Reset button under league selected \n");
				} else {
					System.out.println("Reset button under league not cliked \n");
				}

				report.detailsAppend("TC66-Smoke_MarketFilters",
						"Verify the Reset button is present on the league filter and clickable.",
						"User able to click on the Reset button and the selections are cleared.", "Pass");
				Thread.sleep(3000);
				log.debug("Switch to default tab");

			} else {
				System.out.println("Reset Button under leagues DD Not Selected \n");
				report.detailsAppend("TC66-Smoke_MarketFilters",
						"Verify the Reset button is present on the league filter and clickable.",
						"User Not able to click on the Reset button and the selections are Not cleared.", "Fail");
			}

			// TC68: Verify if user is able apply the Bet Type filter on the sport page.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
				System.out.print("Bet Type filters button selected \n");
				Thread.sleep(3000);

				je.executeScript("window.scrollBy(0,200)");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("MatchResultInBetTypeDD"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("MatchResultInBetTypeDD"))).click();
					System.out.print(" MatchResult Market In BetTypeDD is Selected \n ");
				} else {
					System.out.println(" MatchResult Market In BetTypeDD Not Selected \n ");
				}

				report.detailsAppend("TC68-Smoke_MarketFilters",
						"Verify if user is able Click the Bet Type filter on the sport page.",
						"User able to Click the Bet type filter and respective markets are displayed.", "Pass");
				Thread.sleep(3000);
				log.debug("Switch to default tab");

			} else {
				System.out.println("Bet Type filters button not clicked \n");
				report.detailsAppend("TC68-Smoke_MarketFilters",
						"Verify if user is able apply the Bet Type filter on the sport page.",
						"User Not able to Click the Bet type filter and respective markets Not displayed.", "Fail");
			}

			// TC69:Verify the Clear button is present on the Bet Type filter and clickable.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
				System.out.print("Bet Type filters button selected \n");
				Thread.sleep(3000);
			} else {
				System.out.print("Bet Type filters button Not selected \n");
			}

			Thread.sleep(3000);
			je.executeScript("window.scrollBy(0,220)");
			Thread.sleep(3000);

			if (webdriver.findElement(By.xpath(XpathMap.get("ClearOptInBetTypeDD"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("ClearOptInBetTypeDD"))).click();
				System.out.println("Outrights Button is Clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC69-Smoke_MarketFilters",
						"Verify the Clear button is present on the Bet Type filter and clickable.",
						"User abled to click on the Clear button and all the selections are cleared.", "Pass");

			} else {
				System.out.println("Outrights Button Not Clicked \n");
				report.detailsAppend("TC69-Smoke_MarketFilters",
						"Verified the Clear button is present on the Bet Type filter and clickable.",
						"User Not able to click on Clear button and all the selections are Notcleared.", "Fail");
			}

			// TC70: Verify if user is able apply the Odds filter on the sport page.

			Thread.sleep(3000);
			je.executeScript("window.scrollBy(0,200)");
			Thread.sleep(3000);

			if (webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD"))).isDisplayed()) {
				System.out.println("OddsDD Button is Presented \n");
				webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD"))).click();
				System.out.println(" OddsDD buttons are clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC70-Smoke_MarketFilters",
						"Verify if user is able apply the Odds filter on the sport page.",
						"User able to apply the Odds filter and respective markets are displayed.", "Pass");

			} else {
				System.out.println(" Top Leagues buttons Not clickable \n");
				report.detailsAppend("TC70-Smoke_MarketFilters",
						"Verified User able apply the Odds filter on the sport page.",
						"User Not able to apply the Odds filter and respective markets Not displayed.", "Fail");
			}

			// TC71:Verify the Apply button is present on the Odds filter and clickable.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDApplyBtn"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDApplyBtn"))).click();
				System.out.print("Odds Filter dropdown Apply button clicked \n ");

				Thread.sleep(3000);
				report.detailsAppend("TC71-Smoke_MarketFilters",
						"Verify the Apply button is present on the Odds filter and clickable.",
						"Verified the Apply button present on the Odds filter and clickable.", "Pass");

			} else {
				System.out.println("Odds Filter dropdown Apply button not clicked \n ");
				report.detailsAppend("TC71-Smoke_MarketFilters",
						"Verify the Apply button is present on the Odds filter and clickable.",
						"Verified the Apply button present on the Odds filter and Not clickable.", "Fail");
			}

			// TC72:Verify the Clear button is present on the Odds filter and clickable.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("SBOddsDD"))).click();
				System.out.println(" OddsDD buttons are clicked \n");
				Thread.sleep(3000);
			} else {
				System.out.println("OddsDD Button Not Presented \n");
			}

			Thread.sleep(3000);
			je.executeScript("window.scrollBy(0,200)");
			Thread.sleep(3000);

			if (webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDClearBtn"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("SBOddsDDClearBtn"))).click();
				System.out.print("Odds Filter dropdown Clear button clicked \n ");

				Thread.sleep(3000);
				report.detailsAppend("TC72-Smoke_MarketFilters",
						"Verify the Clear button is present on the Odds filter and clickable.",
						"Verified the Clear button present on the Odds filter and clickable.", "Pass");

			} else {
				System.out.println("Odds Filter dropdown Clear button not clicked \n ");
				report.detailsAppend("TC72-Smoke_MarketFilters",
						"Verify the Clear button is present on the Odds filter and clickable.",
						"Verified the Clear button present on the Odds filter and Not clickable.", "Fail");
			}

			// TC73:Verify if user is able apply the Date filter on the sport page.

			Thread.sleep(3000);
			je.executeScript("window.scrollBy(0,200)");
			Thread.sleep(3000);

			if (webdriver.findElement(By.xpath(XpathMap.get("SMDateDD"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("SMDateDD"))).click();
				System.out.print("Date DD filters button selected \n");
			} else {
				System.out.print("Date DD filters button not selected \n");
			}

			Thread.sleep(3000);

			if (webdriver.findElement(By.xpath(XpathMap.get("SMDateDDApplyBtn"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("SMDateDDApplyBtn"))).click();
				System.out.println(" apply the Datefilter Button is Clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC73-Smoke_MarketFilters",
						"Verify if user is to able apply the Date filter on the sport page.",
						"Verified user abled apply the Date filter on the sport page.", "Pass");

			} else {
				System.out.println(" apply the Datefilter Button Not Clicked \n");
				report.detailsAppend("TC73-Smoke_MarketFilters",
						"Verify if user is able to apply the Date filter on the sport page.",
						"Verified user not able to apply the Date filter on the sport page.", "Fail");
			}

			// TC74: Verify the Predetermined Time dropdown is present on the date filter
			// and clickable.

			Thread.sleep(3000);
			je.executeScript("window.scrollBy(0,200)");
			Thread.sleep(1000);

			try {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SMDateDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SMDateDD"))).click();
				System.out.print("Date DD filters button selected \n");

				Thread.sleep(3000);
				WebElement PredetermineTime = webdriver.findElement(By.xpath(XpathMap.get("SMDatePredeterminedTime")));
				je.executeScript("arguments[0].click()", PredetermineTime);
				System.out.println(" DatePredetermined Time are clicked \n");
				Thread.sleep(1000);

				try {
					Thread.sleep(3000);
					WebElement time = webdriver.findElement(By.xpath(XpathMap.get("SMDateSelectTimeOption")));
					je.executeScript("arguments[0].click()", time);
					System.out.println(" DatePredetermined Time are clicked \n");
					System.out.print(" DatePredetermined Select Time Option is Selected \n");
				} catch (Exception e) {
					System.out.print(" DatePredetermined Select Time Option Not Selected \\n");
				}

				Thread.sleep(3000);
				report.detailsAppend("TC74-Smoke_MarketFilters",
						"Verify the Predetermined Time dropdown is present on the date filter and clickable.",
						"User abled to select the predetermined time and respective markets are displayed.", "Pass");

				Thread.sleep(3000);
				try {
					Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed());
					webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();

				} catch (Exception e) {
					webdriver.navigate().refresh();
					System.out.print(e);
				}

				Thread.sleep(3000);
				je.executeScript("window.scrollBy(0,200)");
				Thread.sleep(3000);

				try {
					webdriver.findElement(By.xpath(XpathMap.get("SMDateDD"))).click();
					System.out.print("Date DD filters button selected \n");
				} catch (Exception e) {
					System.out.print("Date DD filters button not selected \n");
				}

				try {
					Thread.sleep(3000);
					webdriver.findElement(By.xpath(XpathMap.get("SMDateDDClearBtn"))).click();
					System.out.print("Date Clear button selected \n");
				} catch (Exception e) {
					System.out.print("Date Clear button not selected \n");
				}

			} catch (Exception e) {
				System.out.println(e + " DatePredetermined Time Not clicked \n");
				report.detailsAppend("TC74-Smoke_MarketFilters",
						"Verify the Predetermined Time dropdown is present on the date filter and clickable.",
						"User Not able to select the predetermined time and respective markets Not displayed.", "Fail");
			}

			// TC75:Verify the Apply button is present on the Odds filter and clickable.

			Thread.sleep(3000);
			je.executeScript("window.scrollBy(0,200)");

			Thread.sleep(3000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SMDateDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SMDateDD"))).click();
				System.out.print("Date DD filters button selected \n");
			} catch (Exception e) {
				System.out.print(e + "Date DD filters button not selected \n");
			}

			Thread.sleep(3000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SMDateDDApplyBtn"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SMDateDDApplyBtn"))).click();
				System.out.println(" apply the Datefilter Button is Clicked \n");

				report.detailsAppend("TC76-Smoke_MarketFilters",
						"Verify the Apply button is present on the Odds filter and clickable.",
						"Verified the Apply button present on the Odds filter and clickable.", "Pass");

				Thread.sleep(1000);
				report.detailsAppend("TC75-Smoke_MarketFilters",
						"Verify the date picker is present on the date filter and clickable.",
						"Verified the date picker present on the date filter and clickable.", "Pass");

				Thread.sleep(3000);
				try {
//					Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed());
					webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
					Thread.sleep(5000);
				} catch (Exception e) {
					webdriver.navigate().refresh();
					System.out.print(e);
				}

			} catch (Exception e) {
				System.out.println("An error occurred: " + e.getMessage());
				report.detailsAppend("TC76-Smoke_MarketFilters",
						"An error occurred while verifying the Apply button on the Odds filter.",
						"Error: " + e.getMessage(), "Fail");

				report.detailsAppend("TC75-Smoke_MarketFilters",
						"An error occurred while verifying the date picker on the date filter.",
						"Error: " + e.getMessage(), "Fail");

				webdriver.navigate().refresh();
			}

			// TC77:Verify the date button is present on the Date filter and clickable.

			Thread.sleep(3000);
			je.executeScript("window.scrollBy(0,200)");
			Thread.sleep(3000);

			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SMDateDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SMDateDD"))).click();
				System.out.print("Date DD filters button selected \n");

				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SMDateDDClearBtn"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SMDateDDClearBtn"))).click();
				System.out.print(" Date Clear button clicked \n ");

				Thread.sleep(3000);
				report.detailsAppend("TC77-Smoke_MarketFilters",
						"Verify the Clear button is present on the date filter and clickable.",
						"Verified the Clear button present on the date filter and clickable.", "Pass");

			} catch (Exception e) {
				System.out.println("Date Clear button not clicked \n ");
				report.detailsAppend("TC77-Smoke_MarketFilters",
						"Verify the Clear button is present on the date filter and clickable.",
						"Verified the Clear button present on the date filter and Not clickable.", "Fail");
			}

			// TC78:Verify the Odds Boost button is present and clickable.

			Thread.sleep(3000);
			je.executeScript("window.scrollBy(0,200)");
			Thread.sleep(3000);

			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SMOddsBoostDD"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SMOddsBoostDD"))).click();
				System.out.print("Odds Boost button selected \n");
				Thread.sleep(2000);

				report.detailsAppend("TC78-Smoke_MarketFilters",
						"Verify the Odds Boost button is present and clickable.",
						"User able to click on the Odds Boost button and respective markets are displayed.", "Pass");

				Thread.sleep(2000);
				webdriver.findElement(By.xpath(XpathMap.get("SMOddsBoostDD"))).click();
				Thread.sleep(2000);

			} catch (Exception e) {
				System.out.print("Odds Boost button Not selected \n");
				report.detailsAppend("TC78-Smoke_MarketFilters",
						"Verify the Odds Boost button is present and clickable.",
						"User Not able to click on the Odds Boost button and respective markets Not are displayed.",
						"Fail");
			}

			log.debug("Switch to default tab");

		} catch (

		Exception e) {
			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			System.out.println("Sport Button is clicked \n");
			log.debug("Switch to default tab");
			return false;
		}
		return true;
	}

//////////Verify the user is able to click on the market name from the market book.  //////////

// TC79-90 (Smoke_MarketBookLeague) @Author: AS66528

	public boolean SM_MarketBookLeague(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);

			// TC79: Verify the league name bar is present and clickable.

			try {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
				System.out.println("Sport Button is Presented and Clicked \n");
				Thread.sleep(5000);
			} catch (Exception e) {
				webdriver.navigate().refresh();
				System.out.println(e + "Sport Button Not Clicked \n");
			}

			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			je.executeScript("window.scrollBy(0,200)");

			try {
				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("1stLeagueNameinHomepage"))).click();
				System.out.println("1st League Match in Homepage is Clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC79-Smoke_MarketBookLeague",
						"Verify the league name bar is present and clickable.",
						"User click on the League name bar, and the respective markets be displayed and closed.",
						"Pass");

				Thread.sleep(2000);
				if (webdriver.findElement(By.xpath(XpathMap.get("1stLeagueNameinHomepage"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("1stLeagueNameinHomepage"))).click();
					System.out.println("League Name Bar clicked, Markets displayed \n");
					Thread.sleep(3000);
				} else {
					webdriver.navigate().refresh();
					System.out.println("League Name Bar Not clicked, Markets displayed \n");
				}

			} catch (Exception e) {
				report.detailsAppend("TC79-Smoke_MarketBookLeague",
						"Verify the league name bar is present and clickable.",
						"User Not click on the League name bar, and the respective markets Not displayed and closed.",
						"Fail");

				System.out.println(e + "1st League Match in Homepage Not Clicked \n");
			}

			// TC81: Verify the user is able to click on the market name from the
			// marketbook.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("EventClick"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("EventClick"))).click();
				System.out.print("Market name on league Events is Clicked \n");
				Thread.sleep(4000);

				report.detailsAppend("TC81-Smoke_MarketBookLeague",
						"Verify the user is able to click on the market name from the market book.",
						"User is able to click and the respective market should be displayed.", "Pass");

			} else {
				System.out.println("VuvuLive Button Not clicked \n");
				report.detailsAppend("TC81-Smoke_MarketBookLeague",
						"Verify the user is able to click on the market name from the market book.",
						"User is able to click and the respective market should be displayed.", "Fail");

			}

			// TC82: Verify the user is able to select the odds from the market book.

			Thread.sleep(3000);
			try {
				if (webdriver.findElement(By.xpath(XpathMap.get("1stoddinMarket"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("1stoddinMarket"))).click();
					System.out.println("1st Odd in Market Book is Selected \n");
					Thread.sleep(3000);
				} else {
					webdriver.findElement(By.xpath(XpathMap.get("2ndoddinMarket"))).click();
					System.out.println("2nd Odd in Market Book is Selected \n");
					Thread.sleep(3000);
				}

				report.detailsAppend("TC82-Smoke_MarketBookLeague",
						"Verify the user is able to select the odds from the market book.",
						"User Select the odds and selected odds displayed in the betslip.", "Pass");

				Thread.sleep(2000);
				if (webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).click();
					Thread.sleep(3000);
				} else {
					throw new Exception("DeletBS is not present");
				}

			} catch (Exception e) {
				System.out.println("Odd in Market Book Not Selected \n");
				report.detailsAppend("TC82-Smoke_MarketBookLeague",
						"Verified the user able to select the odds from the market book.",
						"User Not able to Select the odds and selected odds not displayed in the betslip.", "Fail");
			}

			// TC83: Verify the Tip icon is present and clickable from the market book.

			Thread.sleep(3000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
				System.out.println("Sport Button is Presented and Clicked \n");
				Thread.sleep(7000);
			} catch (Exception e) {
				System.out.println("Sport Button Not Clicked \n");
				webdriver.navigate().refresh();
				Thread.sleep(7000);
			}

			if (webdriver.findElement(By.xpath(XpathMap.get("SMTipIconInMarketHome"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("SMTipIconInMarketHome"))).click();
				System.out.println("Tip Icon In MarketBook is Clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC83-Smoke_MarketBookLeague",
						"Verify the Tip icon is present and clickable from the market book.",
						"User able to click on the Tip icon and respective markets be displayed.", "Pass");

			} else {
				System.out.println("Tip Icon In MarketBook Not Clicked \n");
				report.detailsAppend("TC83-Smoke_MarketBookLeague",
						"Verify the Tip icon is present and clickable from the market book.",
						"User Not able to click on the Tip icon and respective markets not be displayed.", "Fail");
			}

			// TC84: Verify the Stats button is present and clickable from the market book.

			try {
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("SM2ndStatsIconInHome"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("SM2ndStatsIconInHome"))).click();
					System.out.println("1st Stats Icon In Home is Clicked \n");

				} else {
					webdriver.findElement(By.xpath(XpathMap.get("SM1stStatsIconInHome"))).click();
					System.out.println("2nd Stats Icon In Home is Clicked \n");
				}

				Thread.sleep(3000);
				report.detailsAppend("TC84-Smoke_MarketBookLeague",
						"Verify the Stats button is present and clickable from the market book.",
						"User able to click on the Stats button and respective markets displayed.", "Pass");

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("VuvuStatisticsClseBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("VuvuStatisticsClseBtn"))).click();
					System.out.println(" Statistics Close Button is Presented and Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println(" Statistics Close Button not Clicked \n");
				}

			} catch (Exception e) {
				System.out.println("Tip Icon In MarketBook Not Clicked \n");
				report.detailsAppend("TC84-Smoke_MarketBookLeague",
						"Verify the Stats button is present and clickable from the market book.",
						"User Not able to click on the Stats buttonand respective markets not displayed.", "Fail");
			}

			// TC85: Verify the More Bets button is present and clickable from the market
			// book.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("SMMoreBetsInhome"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("SMMoreBetsInhome"))).click();
				System.out.println("More Bets In MarketBook is Clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC85-Smoke_MarketBookLeague",
						"Verify the More Bets button is present and clickable from the market book.",
						"User able to click on the More Bets and respective markets be displayed.", "Pass");

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
					System.out.println("Sport Button is Presented and Clicked \n");
					Thread.sleep(7000);
				} else {
					System.out.println("Sport Button Not Clicked \n");
					webdriver.navigate().refresh();
				}

			} else {
				System.out.println("More Bets In MarketBook Not Clicked \n");
				report.detailsAppend("TC85-Smoke_MarketBookLeague",
						"Verify the More Bets is present and clickable from the market book.",
						"User Not able to click on the More Bets and respective markets not be displayed.", "Fail");
			}

			// TC86:Verify the user is able to place bet for live events.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).click();
				System.out.println("Live Button is Clicked \n");
				Thread.sleep(5000);

				if (webdriver.findElement(By.xpath(XpathMap.get("Live1stOddSelect"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("Live1stOddSelect"))).click();
					System.out.println(" 1st Odd in Live Section is Selected \n");
					Thread.sleep(3000);
				} else if (webdriver.findElement(By.xpath(XpathMap.get("Live2ndOddSelect"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("Live2ndOddSelect"))).click();
					System.out.println(" 2nd Odd in Live Section is Selected \n");
					Thread.sleep(3000);

				} else if (webdriver.findElement(By.xpath(XpathMap.get("Live3rdOddSelect"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("Live3rdOddSelect"))).click();
					System.out.println(" 3rd Odd in Live Section is Selected \n");
					Thread.sleep(3000);
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
					System.out.println("Betnow Button is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println("Betnow Button Not Clicked \n");
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BetConfirmBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BetConfirmBtn"))).click();
					System.out.println("Bet Confirm Button is Selected \n");
					Thread.sleep(3000);
				} else {
					System.out.println("Bet Confirm Button Not Selected \n");
				}

				report.detailsAppend("TC86-Smoke_MarketBookLeague",
						"Verify the user is able to place bet for live events.",
						"Verified user able to place bet for live events.", "Pass");

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).click();
					System.out.println(" Betnow Popup Close Button is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println(" Betnow Popup Close Button not Clicked \n");
					webdriver.navigate().refresh();
				}

			} else {
				System.out.println("Live Button Not Clicked \n");
				report.detailsAppend("TC86-Smoke_MarketBookLeague",
						"Verify the user is able to place bet for live events.",
						"Verified user not able to place bet for live events.", "Fail");
			}

			// TC87: Verify the user is able to place bet for Highlights events.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
				System.out.println("Sport Button is Presented and Clicked \n");
				Thread.sleep(4000);
			} else {
				System.out.println("Sport Button Not Clicked \n");
				webdriver.navigate().refresh();
			}

			try {
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("OddsInBetBook"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("OddsInBetBook"))).click();
					System.out.println(" 1st Odd in Highlights Section is Selected \n");
					Thread.sleep(3000);
				} else if (webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("MultiOdds"))).click();
					System.out.println(" 2nd Odd in Highlights Section is Selected \n");
					Thread.sleep(3000);

				} else if (webdriver.findElement(By.xpath(XpathMap.get("ThirdOddInHighlights"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("ThirdOddInHighlights"))).click();
					System.out.println(" 3rd Odd in Highlights Section is Selected \n");
					Thread.sleep(3000);
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
					System.out.println("Betnow Button is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println("Betnow Button Not Clicked \n");
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BetConfirmBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BetConfirmBtn"))).click();
					System.out.println("Bet Confirm Button is Selected \n");
					Thread.sleep(3000);
				} else {
					System.out.println("Bet Confirm Button Not Selected \\n");
				}
				report.detailsAppend("TC87-Smoke_MarketBookLeague",
						"Verify the user is able to place bet for Highlights events.",
						"Verified user able to place bet for Highlights events.", "Pass");

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).click();
					System.out.println(" Betnow Popup Close Button is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println(" Betnow Popup Close Button not Clicked \n");
				}

			} catch (Exception e) {
				System.out.println("Bet Confirm Button Not Selected \n");
				report.detailsAppend("TC87-Smoke_MarketBookLeague",
						"Verify the user is able to place bet for Highlights events.",
						"Verified user not able to place bet for Highlights events.", "Fail");

				Thread.sleep(2000);
				if (webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).click();
					Thread.sleep(3000);
				} else {
					throw new Exception("DeletBS is not present");
				}
			}

			// TC88: Verify the user is able to place bet for Upcoming events.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).click();
				System.out.println("Upcoming Button is Presented and Clicked \n");
				Thread.sleep(3000);
			} else {
				System.out.println("Upcoming Button Not Clicked \n");

			}

			try {
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("Upcoming1stOdd"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("Upcoming1stOdd"))).click();
					System.out.println(" 1st Odd in Upcoming Section is Selected \n");
					Thread.sleep(3000);
				} else if (webdriver.findElement(By.xpath(XpathMap.get("Upcoming2ndOdd"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("Upcoming2ndOdd"))).click();
					System.out.println(" 2nd Odd in Upcoming Section is Selected \n");
					Thread.sleep(3000);

				} else if (webdriver.findElement(By.xpath(XpathMap.get("Upcoming3rdOdd"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("Upcoming3rdOdd"))).click();
					System.out.println(" 3rd Odd in Upcoming Section is Selected \n");
					Thread.sleep(3000);
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
					System.out.println("Betnow Button is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println("Betnow Button Not Clicked \n");
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BetConfirmBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BetConfirmBtn"))).click();
					System.out.println("Bet Confirm Button is Selected \n");
					Thread.sleep(3000);
				} else {
					System.out.println("Bet Confirm Button Not Selected \\n");
				}
				report.detailsAppend("TC88-Smoke_MarketBookLeague",
						"Verify the user is able to place bet for Upcoming events.",
						"Verified user able to place bet for Upcoming events.", "Pass");

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).click();
					System.out.println(" Betnow Popup Close Button is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println(" Betnow Popup Close Button not Clicked \n");
				}

			} catch (Exception e) {
				System.out.println("Bet Confirm Button Not Selected \n");
				report.detailsAppend("TC88-Smoke_MarketBookLeague",
						"Verify the user is able to place bet for Upcoming events.",
						"Verified user not able to place bet for Upcoming events.", "Fail");

				Thread.sleep(2000);
				if (webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).click();
					Thread.sleep(3000);
				} else {
					throw new Exception("DeletBS is not present");
				}

			}

			// TC89: Verify the user is able to place bet for Outrights events.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("OutrightsButton"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("OutrightsButton"))).click();
				System.out.println("Outrights Button is Presented and Clicked \n");
				Thread.sleep(3000);
			} else {
				System.out.println("Outrights Button Not Clicked \n");

			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("1stCountryInOutrights"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("1stCountryInOutrights"))).click();
				System.out.println("1stCountry InOutrights is Selected \n");
				Thread.sleep(3000);
			} else {
				System.out.println("1stCountry InOutrights Not Selected \n");
			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("1stLeagueInOutrights"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("1stLeagueInOutrights"))).click();
				System.out.println("1st match underLeague is Clicked \n");
				Thread.sleep(3000);
			} else {
				System.out.println("1st match underLeague Not Clicked \n");
			}

			try {
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("1stMatchinleagueOutrights"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("1stMatchinleagueOutrights"))).click();
					System.out.println(" 1st Match in League is Selected \n");
					Thread.sleep(3000);

					webdriver.findElement(By.xpath(XpathMap.get("1stOddInOutrightsMatch"))).click();
					System.out.println(" 1st Odds in Match is Selected \n");
					Thread.sleep(3000);

				} else if (webdriver.findElement(By.xpath(XpathMap.get("2ndMatchinleagueOutrights"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("2ndMatchinleagueOutrights"))).click();
					System.out.println(" 2nd Match in League is Selected \n");
					Thread.sleep(3000);

					webdriver.findElement(By.xpath(XpathMap.get("2ndOddInOutrightsMatch"))).click();
					System.out.println(" 2nd Odds in Match is Selected \n");
					Thread.sleep(3000);

				} else if (webdriver.findElement(By.xpath(XpathMap.get("3rdMatchinleagueOutrights"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("3rdMatchinleagueOutrights"))).click();
					System.out.println(" 3rd Match in League is Selected \n");
					Thread.sleep(3000);

					webdriver.findElement(By.xpath(XpathMap.get("3rdOddInOutrightsMatch"))).click();
					System.out.println(" 3rd Odds in Match is Selected \n");
					Thread.sleep(3000);
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
					System.out.println("Betnow Button is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println("Betnow Button Not Clicked \n");
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BetConfirmBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BetConfirmBtn"))).click();
					System.out.println("Bet Confirm Button is Selected \n");
					Thread.sleep(3000);
				} else {
					System.out.println("Bet Confirm Button Not Selected \\n");
				}

				report.detailsAppend("TC89-Smoke_MarketBookLeague",
						"Verify the user is able to place bet for Outrights events.",
						"Verified user able to place bet for Outrights events.", "Pass");

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).click();
					System.out.println(" Betnow Popup Close Button is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println(" Betnow Popup Close Button not Clicked \n");
				}

			} catch (Exception e) {
				System.out.println("Bet Confirm Button Not Selected \n");
				report.detailsAppend("TC89-Smoke_MarketBookLeague",
						"Verify the user is able to place bet for Outrights events.",
						"Verified user not able to place bet for Outrights events.", "Fail");

				Thread.sleep(2000);
				if (webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).click();
					Thread.sleep(3000);
				} else {
					throw new Exception("DeletBS is not present");
				}

			}

			// TC90: Verify the user is able to click on the Load more button for the
			// upcoming events.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
				System.out.println("Sport Button is Presented and Clicked \n");
				Thread.sleep(4000);
			} else {
				System.out.println("Sport Button Not Clicked \n");
				webdriver.navigate().refresh();
			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).click();
				System.out.println("Upcoming Button is Presented and Clicked \n");
				Thread.sleep(3000);
			} else {
				System.out.println("Upcoming Button Not Clicked \n");

			}

			Thread.sleep(3000);
			WebElement LoadMore = webdriver.findElement(By.xpath(XpathMap.get("LoadMoreBtnInUpcoming")));
			Actions act1 = new Actions(webdriver);
			act1.moveToElement(LoadMore).perform();
			je.executeScript("window.scrollBy(0,230)");
			Thread.sleep(3000);

			if (webdriver.findElement(By.xpath(XpathMap.get("LoadMoreBtnInUpcoming"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("LoadMoreBtnInUpcoming"))).click();
				System.out.println("Load More Button is Clicked \n");

				report.detailsAppend("TC90-Smoke_MarketBookLeague",
						"Verify the user is able to click on the Load more button for the upcoming events.",
						"Verified the user able to click on the Load more button for the upcoming events.", "Pass");

			} else {
				System.out.println("Load more Btn not clicked \n");
				report.detailsAppend("TC90-Smoke_MarketBookLeague",
						"Verify the user is able to click on the Load more button for the upcoming events.",
						"Verified the user Not able to click on the Load more button for the upcoming events.", "Fail");

			}

			Thread.sleep(3000);
			log.debug("Switch to default tab");

		} catch (Exception e) {

			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			System.out.println("Sport Button is clicked \n");
			log.debug("Switch to default tab");
			return false;
		}
		return true;
	}

//////////Verify Hamburger Menu is present on the Header of Home page and clickable..  //////////

//TC91-102 (Smoke_HamburgerMenu) @Author: AS66528

	public boolean SM_HamburgerMenu(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);

			// TC91:Verify Hamburger Menu is present on the Header of Home page and
			// clickable.

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
				System.out.println("Sport Button is Presented and Clicked \n");
				Thread.sleep(4000);
			} else {
				System.out.println("Sport Button Not Clicked \n");
			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC91-Smoke_HamburgerMenu",
						"Verify Hamburger Menu is present on the Header of Home page and clickable.",
						"Verify Hamburger Menu present on the Header of Home page and clickable.", "Pass");

			} else {
				report.detailsAppend("TC91-Smoke_HamburgerMenu",
						"Verify Hamburger Menu is present on the Header of Home page and clickable.",
						"Verify Hamburger Menu is present on the Header of Home page and clickable.", "Fail");

				System.out.println(" HamburgerMenu Btn in Homepage Not Clicked \n");
				webdriver.navigate().refresh();
			}

			// TC92: Verify the Cash field is present on the Hamburger Menu of Home page
			// with the Refresh button.

			Thread.sleep(3000);
			try {
				if (webdriver.findElement(By.xpath(XpathMap.get("HamburgerMenuBalanceBtn"))).isDisplayed()) {
					System.out.print(" Cash field Present on Hamburgenumenu \n");
					Thread.sleep(3000);
				} else {
					Thread.sleep(3000);
					webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
					System.out.println(" Cash field Present on Hamburgenumenu \\n");
					Thread.sleep(3000);
				}

				report.detailsAppend("TC92-Smoke_HamburgerMenu",
						"Verify the Cash field is present on the Hamburger Menu of Home page with the Refresh button.",
						"Verified the Cash field present on the Hamburger Menu of Home page with the Refresh button.",
						"Pass");

				report.detailsAppend("TC93-Smoke_HamburgerMenu",
						"Verify the Free Bet is present on the Hamburger Menu of Home page with the Refresh button.",
						"Verified the Free Bet present on the Hamburger Menu of Home page with the Refresh button.",
						"Pass");

				report.detailsAppend("TC94-Smoke_HamburgerMenu",
						"Verify the Sport Bonus field is present on the Hamburger Menu of Home page with the Refresh button.",
						"Verified the Sport Bonus field present on the Hamburger Menu of Home page with the Refresh button.",
						"Pass");

				report.detailsAppend("TC95-Smoke_HamburgerMenu",
						"Verify the Casino Bonus field is present on the Hamburger Menu of Home page with the Refresh button.",
						"Verified the Casino Bonus field present on the Hamburger Menu of Home page with the Refresh button.",
						"Pass");

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("CloseIconOnHamburgerMenu"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("CloseIconOnHamburgerMenu"))).click();
					System.out.println("Close Btn ON Hamburgermen is  Clicked \n");
					Thread.sleep(3000);
				} else {
					webdriver.navigate().refresh();
					System.out.println("Close Btn ON Hamburgermen is  Clicked \n");
				}

			} catch (Exception e) {
				System.out.println("VuvuLive Button Not clicked \n");
				report.detailsAppend("TC92-Smoke_HamburgerMenu",
						"Verify the Cash field is present on the Hamburger Menu of Home page with the Refresh button.",
						"Verified the Cash field Not present on the Hamburger Menu of Home page with the Refresh button.",
						"Fail");

				report.detailsAppend("TC93-Smoke_HamburgerMenu",
						"Verify the Free Bet is present on the Hamburger Menu of Home page with the Refresh button.",
						"Verified the Free Bet Not present on the Hamburger Menu of Home page with the Refresh button.",
						"Pass");

				report.detailsAppend("TC94-Smoke_HamburgerMenu",
						"Verify the Sport Bonus field is present on the Hamburger Menu of Home page with the Refresh button.",
						"Verified the Sport Bonus field Not present on the Hamburger Menu of Home page with the Refresh button.",
						"Pass");

				report.detailsAppend("TC95-Smoke_HamburgerMenu",
						"Verify the Casino Bonus field is present on the Hamburger Menu of Home page with the Refresh button.",
						"Verified the Casino Bonus field Not present on the Hamburger Menu of Home page with the Refresh button.",
						"Pass");

			}

			// TC96: Verify the Accounts dropdown is present on the Hamburger Menu and
			// clickable.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("AccountTabInHM"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("AccountTabInHM"))).click();
					System.out.println("AccountTab In HM is Selected \n");
					Thread.sleep(3000);
				} else {
					System.out.println("AccountTab In HM Not Selected \n");
				}

				report.detailsAppend("TC96-Smoke_HamburgerMenu",
						"Verify the Accounts dropdown is present on the Hamburger Menu and clickable.",
						"Verified the Accounts dropdown present on the Hamburger Menu and clickable.", "Pass");

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("AccountTabInHM"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("AccountTabInHM"))).click();
					System.out.println("AccountTab In HM is Selected \n");
					Thread.sleep(3000);
				} else {
					System.out.println("AccountTab In HM Not Selected \n");
				}

			} else {
				System.out.println(" HamburgerMenu Btn in Homepage Not Clicked \n");
				report.detailsAppend("TC96-Smoke_HamburgerMenu",
						"Verify the Accounts dropdown is present on the Hamburger Menu and clickable.",
						"Verified the Accounts dropdown present on the Hamburger Menu and not clickable.", "Fail");
			}

			// TC97: Verify the Deposit Funds field is present on the Hamburger Menu and
			// clickable.

			Thread.sleep(3000);

			if (webdriver.findElement(By.xpath(XpathMap.get("HMDepositFundBtn"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("HMDepositFundBtn"))).click();
				System.out.println(" DepostFund Btn In hamburgermenu is Clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC97-Smoke_HamburgerMenu",
						"Verify the Deposit Funds field is present on the Hamburger Menu and clickable.",
						"Verified the Deposit Funds field present on the Hamburger Menu and clicked.", "Pass");

			} else {
				System.out.println("DepostFund Btn In hamburgermenu Not Clicked \n");
				report.detailsAppend("TC97-Smoke_HamburgerMenu",
						"Verify the Deposit Funds field is present on the Hamburger Menu and clickable.",
						"Verified the Deposit Funds field present on the Hamburger Menu and not click.", "Fail");
			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("DepositClose"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("DepositClose"))).click();
				System.out.println("Deposit Close Popup Btn is Clicked \n");
				Thread.sleep(3000);
			} else {
				System.out.println("Deposit Close Popup Btn Not Clicked \n");
				webdriver.navigate().refresh();
			}

			// TC98: Verify the Withdraw field is present on the Hamburger Menu and
			// clickable.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("HMWithdrawBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMWithdrawBtn"))).click();
					System.out.println(" Withdraw Btn In hamburgermenu is Clicked \n");
					Thread.sleep(3000);

					report.detailsAppend("TC98-Smoke_HamburgerMenu",
							"Verify the Withdraw field is present on the Hamburger Menu and clickable.",
							"Verified the Withdraw field present on the Hamburger Menu and clicked.", "Pass");

				} else {
					System.out.println("Withdraw Btn In hamburgermenu Not Clicked \n");
					report.detailsAppend("TC98-Smoke_HamburgerMenu",
							"Verify the Withdraw field is present on the Hamburger Menu and clickable.",
							"Verified the Withdraw field present on the Hamburger Menu and not click.", "Fail");
				}

			} else {
				System.out.println("Hamburgermenu Button Not Clicked \n");
				webdriver.navigate().refresh();
			}

			// TC99: Verify the My Bets field is present on the Hamburger Menu and
			// clickable.

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
					System.out.println(" My Bets Btn In hamburgermenu is Clicked \n");
					Thread.sleep(3000);

					report.detailsAppend("TC99-Smoke_HamburgerMenu",
							"Verify the My Bets field is present on the Hamburger Menu and clickable.",
							"Verified the My Bets field present on the Hamburger Menu and clicked.", "Pass");

				} else {
					System.out.println("My Bets Btn In hamburgermenu Not Clicked \n");
					report.detailsAppend("TC99-Smoke_HamburgerMenu",
							"Verify the My Bets field is present on the Hamburger Menu and clickable.",
							"Verified the My Bets field present on the Hamburger Menu and not click.", "Fail");
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
					System.out.println("My Bets Close Popup Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println("My Bets Close Popup Btn Not Clicked \n");
					webdriver.navigate().refresh();
				}

			} else {
				System.out.println("Hamburgermenu Button Not Clicked \n");
				webdriver.navigate().refresh();
			}

			// TC100 : Verify the Free Bets field is present on the Hamburger Menu and
			// clickable.

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("HMFreeBetBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMFreeBetBtn"))).click();
					System.out.println(" Free Bet Btn In hamburgermenu is Clicked \n");
					Thread.sleep(3000);

					report.detailsAppend("TC100-Smoke_HamburgerMenu",
							"Verify the Free Bets field is present on the Hamburger Menu and clickable.",
							"Verified the Free Bets field present on the Hamburger Menu and clicked.", "Pass");

				} else {
					System.out.println("Free Bets Btn In hamburgermenu Not Clicked \n");
					report.detailsAppend("TC100-Smoke_HamburgerMenu",
							"Verify the Free Bets field is present on the Hamburger Menu and clickable.",
							"Verified the Free Bets field present on the Hamburger Menu and not click.", "Fail");
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
					System.out.println("My Bets Close Popup Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println("My Bets Close Popup Btn Not Clicked \n");
					webdriver.navigate().refresh();
				}

			} else {
				System.out.println("Hamburgermenu Button Not Clicked \n");
				webdriver.navigate().refresh();
			}

			// TC101 : Verify the Bet Influencer field is present on the Hamburger Menu and
			// clickable.

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("HMBetInfluencerBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMBetInfluencerBtn"))).click();
					System.out.println(" Bet Influencer Btn In hamburgermenu is Clicked \n");
					Thread.sleep(3000);

					report.detailsAppend("TC101-Smoke_HamburgerMenu",
							"Verify the Bet Influencers field is present on the Hamburger Menu and clickable.",
							"Verified the Bet Influencers field present on the Hamburger Menu and clicked.", "Pass");

				} else {
					System.out.println("Bet Influencers Btn In hamburgermenu Not Clicked \n");
					report.detailsAppend("TC101-Smoke_HamburgerMenu",
							"Verify the Bet Influencers field is present on the Hamburger Menu and clickable.",
							"Verified the Bet Influencers field present on the Hamburger Menu and not click.", "Fail");
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
					System.out.println("My Bets Close Popup Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println("My Bets Close Popup Btn Not Clicked \n");
					webdriver.navigate().refresh();
				}

			} else {
				System.out.println("Hamburgermenu Button Not Clicked \n");
				webdriver.navigate().refresh();
			}

			// TC102 : Verify the Transaction History field is present on the Hamburger Menu
			// and
			// clickable.

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("HMTransactionSummaryOption"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMTransactionSummaryOption"))).click();
					System.out.println(" Transaction History Btn In hamburgermenu is Clicked \n");
					Thread.sleep(3000);

					report.detailsAppend("TC102-Smoke_HamburgerMenu",
							"Verify the Transaction Historys field is present on the Hamburger Menu and clickable.",
							"Verified the Transaction Historys field present on the Hamburger Menu and clicked.",
							"Pass");

				} else {
					System.out.println("Transaction Historys Btn In hamburgermenu Not Clicked \n");
					report.detailsAppend("TC102-Smoke_HamburgerMenu",
							"Verify the Transaction Historys field is present on the Hamburger Menu and clickable.",
							"Verified the Transaction Historys field present on the Hamburger Menu and not click.",
							"Fail");
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
					System.out.println("My Bets Close Popup Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println("My Bets Close Popup Btn Not Clicked \n");
					webdriver.navigate().refresh();
				}

			} else {
				System.out.println("Hamburgermenu Button Not Clicked \n");
				webdriver.navigate().refresh();
			}

			Thread.sleep(3000);
			log.debug("Switch to default tab");

		} catch (Exception e) {

			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			System.out.println("Sport Button is clicked \n");
			log.debug("Switch to default tab");
			return false;
		}
		return true;
	}

//////////Verify Hamburger Menu Remaining Option is present and clickable..  //////////

//TC103-113 (Smoke_HamburgerMenu) @Author: AS66528

	public boolean SM_HamburgerMenuRemainingOptions(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);

			// TC103: Verify the Bonus Summary field is present on the Hamburger Menu and
			// clickable.

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("HMBonusSummaryBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMBonusSummaryBtn"))).click();
					System.out.println(" Bonus Summary Btn In hamburgermenu is Clicked \n");
					Thread.sleep(3000);

					report.detailsAppend("TC103-Smoke_HamburgerMenu",
							"Verify the Bonus Summary field is present on the Hamburger Menu and clickable.",
							"Verified the Bonus Summary field present on the Hamburger Menu and clicked.", "Pass");

				} else {
					System.out.println("Bonus Summary Btn In hamburgermenu Not Clicked \n");
					report.detailsAppend("TC103-Smoke_HamburgerMenu",
							"Verify the Bonus Summary field is present on the Hamburger Menu and clickable.",
							"Verified the Bonus Summary field present on the Hamburger Menu and not click.", "Fail");
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
					System.out.println("My Bets Close Popup Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println("My Bets Close Popup Btn Not Clicked \n");
					webdriver.navigate().refresh();
				}

			} else {
				System.out.println("Hamburgermenu Button Not Clicked \n");
				webdriver.navigate().refresh();
			}

			// TC104 : Verify the Update Details field is present on the Hamburger Menu and
			// clickable.

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("HMUpdateDetailsBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMUpdateDetailsBtn"))).click();
					System.out.println(" Update Details Btn In hamburgermenu is Clicked \n");
					Thread.sleep(3000);

					report.detailsAppend("TC104-Smoke_HamburgerMenu",
							"Verify the Update Details field is present on the Hamburger Menu and clickable.",
							"Verified the Update Details field present on the Hamburger Menu and clicked.", "Pass");

				} else {
					System.out.println("Update Details Btn In hamburgermenu Not Clicked \n");
					report.detailsAppend("TC104-Smoke_HamburgerMenu",
							"Verify the Update Details field is present on the Hamburger Menu and clickable.",
							"Verified the Update Details field present on the Hamburger Menu and not click.", "Fail");
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
					System.out.println("My Bets Close Popup Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println("My Bets Close Popup Btn Not Clicked \n");
					webdriver.navigate().refresh();
				}

			} else {
				System.out.println("Hamburgermenu Button Not Clicked \n");
				webdriver.navigate().refresh();
			}

			// TC105 : Verify the Manage Password field is present on the Hamburger Menu and
			// clickable.

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("HMManagePasswordBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMManagePasswordBtn"))).click();
					System.out.println(" Manage Password Btn In hamburgermenu is Clicked \n");
					Thread.sleep(3000);

					report.detailsAppend("TC105-Smoke_HamburgerMenu",
							"Verify the Manage Passwords field is present on the Hamburger Menu and clickable.",
							"Verified the Manage Passwords field present on the Hamburger Menu and clicked.", "Pass");

				} else {
					System.out.println("Manage Passwords Btn In hamburgermenu Not Clicked \n");
					report.detailsAppend("TC105-Smoke_HamburgerMenu",
							"Verify the Manage Passwords field is present on the Hamburger Menu and clickable.",
							"Verified the Manage Passwords field present on the Hamburger Menu and not click.", "Fail");
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
					System.out.println("My Bets Close Popup Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println("My Bets Close Popup Btn Not Clicked \n");
					webdriver.navigate().refresh();
				}

			} else {
				System.out.println("Hamburgermenu Button Not Clicked \n");
				webdriver.navigate().refresh();
			}

			// TC106 : Verify the Promo Voucher field is present on the Hamburger Menu
			// and
			// clickable.

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("HMPromoVoucherBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMPromoVoucherBtn"))).click();
					System.out.println(" Promo Voucher Btn In hamburgermenu is Clicked \n");
					Thread.sleep(3000);

					report.detailsAppend("TC106-Smoke_HamburgerMenu",
							"Verify the Promo Vouchers field is present on the Hamburger Menu and clickable.",
							"Verified the Promo Vouchers field present on the Hamburger Menu and clicked.", "Pass");

				} else {
					System.out.println("Promo Vouchers Btn In hamburgermenu Not Clicked \n");
					report.detailsAppend("TC106-Smoke_HamburgerMenu",
							"Verify the Promo Vouchers field is present on the Hamburger Menu and clickable.",
							"Verified the Promo Vouchers field present on the Hamburger Menu and not click.", "Fail");
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
					System.out.println("My Bets Close Popup Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println("My Bets Close Popup Btn Not Clicked \n");
					webdriver.navigate().refresh();
				}

			} else {
				System.out.println("Hamburgermenu Button Not Clicked \n");
				webdriver.navigate().refresh();
			}

			// TC107 : Verify the Responsible Gaming field is present on the Hamburger Menu
			// and
			// clickable.

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("ResponsibleGameInHM"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("ResponsibleGameInHM"))).click();
					System.out.println(" Responsible Gaming Btn In hamburgermenu is Clicked \n");
					Thread.sleep(3000);

					report.detailsAppend("TC107-Smoke_HamburgerMenu",
							"Verify the Responsible Gamings field is present on the Hamburger Menu and clickable.",
							"Verified the Responsible Gamings field present on the Hamburger Menu and clicked.",
							"Pass");

				} else {
					System.out.println("Responsible Gamings Btn In hamburgermenu Not Clicked \n");
					report.detailsAppend("TC107-Smoke_HamburgerMenu",
							"Verify the Responsible Gamings field is present on the Hamburger Menu and clickable.",
							"Verified the Responsible Gamings field present on the Hamburger Menu and not click.",
							"Fail");
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
					System.out.println("My Bets Close Popup Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println("My Bets Close Popup Btn Not Clicked \n");
					webdriver.navigate().refresh();
				}

			} else {
				System.out.println("Hamburgermenu Button Not Clicked \n");
				webdriver.navigate().refresh();
			}

			// TC108 : Verify the Document Upload field is present on the Hamburger Menu
			// and
			// clickable.

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("HMDocumentUploadOption"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMDocumentUploadOption"))).click();
					System.out.println(" Document Upload Btn In hamburgermenu is Clicked \n");
					Thread.sleep(3000);

					report.detailsAppend("TC108-Smoke_HamburgerMenu",
							"Verify the Document Uploads field is present on the Hamburger Menu and clickable.",
							"Verified the Document Uploads field present on the Hamburger Menu and clicked.", "Pass");

				} else {
					System.out.println("Document Uploads Btn In hamburgermenu Not Clicked \n");
					report.detailsAppend("TC108-Smoke_HamburgerMenu",
							"Verify the Document Uploads field is present on the Hamburger Menu and clickable.",
							"Verified the Document Uploads field present on the Hamburger Menu and not click.", "Fail");
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
					System.out.println("My Bets Close Popup Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println("My Bets Close Popup Btn Not Clicked \n");
					webdriver.navigate().refresh();
				}

			} else {
				System.out.println("Hamburgermenu Button Not Clicked \n");
				webdriver.navigate().refresh();
			}

			// TC109 : Verify the Log Out field is present on the Hamburger Menu and
			// clickable.

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("HMLogOutBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMLogOutBtn"))).click();
					System.out.println(" Log Out Btn In hamburgermenu is Clicked \n");
					Thread.sleep(3000);

					report.detailsAppend("TC109-Smoke_HamburgerMenu",
							"Verify the Log Outs field is present on the Hamburger Menu and clickable.",
							"Verified the Log Outs field present on the Hamburger Menu and clicked.", "Pass");

				} else {
					System.out.println("Log Outs Btn In hamburgermenu Not Clicked \n");
					report.detailsAppend("TC109-Smoke_HamburgerMenu",
							"Verify the Log Outs field is present on the Hamburger Menu and clickable.",
							"Verified the Log Outs field present on the Hamburger Menu and not click.", "Fail");
				}

				Thread.sleep(3000);

			} else {
				System.out.println("Hamburgermenu Button Not Clicked \n");
				webdriver.navigate().refresh();
			}

			HM_Login();

			// TC110: Verify the Customer hub dropdown is present on the Hamburger Menu and
			// clickable.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("HMCustomerHubOption"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMCustomerHubOption"))).click();
					System.out.println(" CustomerHub Option is Presented and Clicked \n");
					Thread.sleep(3000);

					report.detailsAppend("TC110-Smoke_HamburgerMenu",
							"Verify the CustomerHub dropdown is present on the Hamburger Menu and clickable.",
							"Verified the CustomerHub dropdown present on the Hamburger Menu and clickable.", "Pass");

				} else {
					System.out.println(" CustomerHub Option Presented and Not Clicked \n");

					report.detailsAppend("TC110-Smoke_HamburgerMenu",
							"Verify the CustomerHub dropdown is present on the Hamburger Menu and clickable.",
							"Verified the CustomerHub dropdown present on the Hamburger Menu and not clickable.",
							"Fail");

				}

			} else {
				System.out.println(" CustomerHub Btn in Homepage Not Clicked \n");
				report.detailsAppend("TC110-Smoke_HamburgerMenu",
						"Verify the CustomerHub dropdown is present on the Hamburger Menu and clickable.",
						"Verified the CustomerHub dropdown present on the Hamburger Menu and not clickable.", "Fail");
			}

			// TC111 : Verify the Manage Password field is present on the Hamburger Menu and
			// clickable.

			Thread.sleep(3000);
			try {
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("HMCustomerHubManagePwd"))).isDisplayed());
				System.out.println(" CustomerHub Option Presented and Clicked \n");
				Thread.sleep(3000);
			} catch (Exception e) {
				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("HMCustomerHubOption"))).click();
				System.out.println(" CustomerHub Option Presented and Clicked \n");
			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("HMCustomerHubManagePwd"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("HMCustomerHubManagePwd"))).click();
				System.out.println(" Manage Password Btn under the Customer Hub In hamburgermenu is Clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC111-Smoke_HamburgerMenu",
						"Verify the Manage Passwords field is present under the Customer Hub on the Hamburger Menu and clickable.",
						"Verified the Manage Passwords field present under the Customer Hub on the Hamburger Menu and clicked.",
						"Pass");

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
					System.out.println("My Bets Close Popup Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println("My Bets Close Popup Btn Not Clicked \n");
					webdriver.navigate().refresh();
				}

			} else {
				System.out.println("Manage Passwords Btn under the Customer Hub In hamburgermenu Not Clicked \n");
				report.detailsAppend("TC111-Smoke_HamburgerMenu",
						"Verify the Manage Passwords field is present under the Customer Hub on the Hamburger Menu and clickable.",
						"Verified the Manage Passwords field present under the Customer Hub on the Hamburger Menu and not click.",
						"Fail");
			}

			// TC112 : Verify the How to field is present under the Customer Hub on the
			// Hamburger Menu
			// and
			// clickable.

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("HMCustomerHubHowToBet"))).isDisplayed()) {
					System.out.println(" CustomerHub Option Presented and Clicked \n");
					Thread.sleep(3000);
				} else {
					Thread.sleep(3000);
					webdriver.findElement(By.xpath(XpathMap.get("HMCustomerHubOption"))).click();
					System.out.println(" CustomerHub Option is Presented and Clicked \n");
					Thread.sleep(3000);
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("HMCustomerHubHowToBet"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMCustomerHubHowToBet"))).click();
					System.out.println(" How to Btn under the Customer Hub In hamburgermenu is Clicked \n");
					Thread.sleep(3000);

					report.detailsAppend("TC112-Smoke_HamburgerMenu",
							"Verify the How to field is present under the Customer Hub on the Hamburger Menu and clickable.",
							"Verified the How to field present under the Customer Hub on the Hamburger Menu and clicked.",
							"Pass");

				} else {
					System.out.println("How to Btn under the Customer Hub In hamburgermenu Not Clicked \n");
					report.detailsAppend("TC112-Smoke_HamburgerMenu",
							"Verify the How to field is present under the Customer Hub on the Hamburger Menu and clickable.",
							"Verified the How to field present under the Customer Hub on the Hamburger Menu and not click.",
							"Fail");
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
					System.out.println("My Bets Close Popup Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println("My Bets Close Popup Btn Not Display Clicked \n");

				}

			} else {
				System.out.println("Hamburgermenu Button Not Clicked \n");
				webdriver.navigate().refresh();
			}

			// TC113 : Verify the Responsible Gaming field is present under the Customer Hub
			// on the Hamburger Menu and clickable.

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("HMCustomerHubOption"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMCustomerHubOption"))).click();
					System.out.println(" CustomerHub Option is Presented and Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println(" CustomerHub Option Presented and Not Clicked \n");
					webdriver.navigate().refresh();
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("HMCustomerHubResponsibleGame"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMCustomerHubResponsibleGame"))).click();
					System.out.println(" Responsible Gaming Btn under the Customer Hub In hamburgermenu is Clicked \n");
					Thread.sleep(3000);

					report.detailsAppend("TC113-Smoke_HamburgerMenu",
							"Verify the Responsible Gamings field is present on the Hamburger Menu and clickable.",
							"Verified the Responsible Gamings field present on the Hamburger Menu and clicked.",
							"Pass");

				} else {
					System.out
							.println("Responsible Gamings Btn under the Customer Hub In hamburgermenu Not Clicked \n");
					report.detailsAppend("TC113-Smoke_HamburgerMenu",
							"Verify the Responsible Gamings field is present on the Hamburger Menu and clickable.",
							"Verified the Responsible Gamings field present on the Hamburger Menu and not click.",
							"Fail");
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
					System.out.println("My Bets Close Popup Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println("My Bets Close Popup Btn Not Clicked \n");

				}

			} else {
				System.out.println("Hamburgermenu Button Not Clicked \n");
				webdriver.navigate().refresh();
			}

			Thread.sleep(3000);
			log.debug("Switch to default tab");

		} catch (Exception e) {

			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			System.out.println("Sport Button is clicked \n");
			log.debug("Switch to default tab");
			return false;
		}
		return true;
	}

//////////Verify Hamburger Menu Quick Lick DropDown Option is present and clickable..  //////////

//TC114-125 (Smoke_HamburgerMenu) @Author: AS66528

	public boolean SM_HamburgerMenuLastDDOptions(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);

			// TC114: Verify the Quick Links dropdown is present on the Hamburger Menu and
			// clickable.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).click();
					System.out.println(" Quick Links Option is Presented and Clicked \n");
					Thread.sleep(3000);

					report.detailsAppend("TC114-Smoke_HamburgerMenu",
							"Verify the Quick Links dropdown is present on the Hamburger Menu and clickable.",
							"Verified the Quick Links dropdown present on the Hamburger Menu and clickable.", "Pass");

				} else {
					System.out.println(" Quick Links Option Presented and Not Clicked \n");

					report.detailsAppend("TC114-Smoke_HamburgerMenu",
							"Verify the Quick Links dropdown is present on the Hamburger Menu and clickable.",
							"Verified the Quick Links dropdown present on the Hamburger Menu and not clickable.",
							"Fail");

				}

			} else {
				System.out.println(" HamburgerMenu Btn in Homepage Not Clicked \n");
				report.detailsAppend("TC114-Smoke_HamburgerMenu",
						"Verify the Quick Links dropdown is present on the Hamburger Menu and clickable.",
						"Verified the Quick Links dropdown not present on the Hamburger Menu and not clickable.",
						"Fail");
			}

			// TC115 : Verify the Inside Blog field under the Quick Links is present on the
			// Hamburger Menu and
			// clickable.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("HMInsideBlogBtn"))).isDisplayed()) {
				System.out.println(" Quick Links Option Presented and Clicked \n");
				Thread.sleep(3000);
			} else {
				webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).click();
				System.out.println(" Quick Links Option Presented and Clicked \n");

			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("HMInsideBlogBtn"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("HMInsideBlogBtn"))).click();
				System.out.println(" Inside Blog Btn under the Quick Links In hamburgermenu is Clicked \n");
				Thread.sleep(3000);

				switchToNewTab();
				report.detailsAppend("TC115-Smoke_HamburgerMenu",
						"Verify the Inside Blogs field is present under the Quick Links on the Hamburger Menu and clickable.",
						"Verified the Inside Blog field present under the Quick Links on the Hamburger Menu and clicked.",
						"Pass");

				Thread.sleep(3000);
				switchToParentTab();
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("CloseIconOnHamburgerMenu"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("CloseIconOnHamburgerMenu"))).click();
					System.out.println("Close Btn ON Hamburgermen is  Clicked \n");
					Thread.sleep(3000);
				} else {
					webdriver.navigate().refresh();
					System.out.println("Close Btn ON Hamburgermen is  Clicked \n");
				}

			} else {
				System.out.println("Inside Blog Btn under the Quick Links In hamburgermenu Not Clicked \n");
				report.detailsAppend("TC115-Smoke_HamburgerMenu",
						"Verify the Inside Blog field is present under the Quick Links on the Hamburger Menu and clickable.",
						"Verified the Inside Blog field present under the Customer Hub on the Hamburger Menu and not click.",
						"Fail");
			}

			// TC116 : Verify the Promotions field is present under the Quick Links on the
			// Hamburger Menu and clickable.

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("HMPromotionsBtn"))).isDisplayed()) {
					System.out.println(" Quick Links Option is Presented and Clicked \n");
					Thread.sleep(3000);
				} else {
					Thread.sleep(3000);
					webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).click();
					System.out.println(" Quick Links Option is Presented and Clicked \\n");
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("HMPromotionsBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMPromotionsBtn"))).click();
					System.out.println(" Promotions Btn under the Quick Links In hamburgermenu is Clicked \n");
					Thread.sleep(3000);

					report.detailsAppend("TC116-Smoke_HamburgerMenu",
							"Verify the Promotions field is present under the Quick Links on the Hamburger Menu and clickable.",
							"Verified the Promotions field present under the Quick Links on the Hamburger Menu and clicked.",
							"Pass");

					Thread.sleep(3000);
					if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
						System.out.println("My Bets Close Popup Btn is Clicked \n");
						Thread.sleep(3000);
					} else {
						System.out.println("My Bets Close Popup Btn Not Display Clicked \n");

					}

				} else {
					System.out.println("Promotions Btn under the Quick Links In hamburgermenu Not Clicked \n");
					report.detailsAppend("TC116-Smoke_HamburgerMenu",
							"Verify the Promotions field is present under the Quick Links on the Hamburger Menu and clickable.",
							"Verified the Promotions field present under the Quick Links on the Hamburger Menu and not click.",
							"Fail");
				}

			} else {
				System.out.println("Hamburgermenu Button Not Clicked \n");
				webdriver.navigate().refresh();
			}

			// TC117 : Verify the Betway App field is present under the Quick Links
			// on the Hamburger Menu and clickable.

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).click();
					System.out.println(" Quick Links Option is Presented and Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println(" Quick Links Option Presented and Not Clicked \n");
					webdriver.navigate().refresh();
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("HMBetwayAppBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMBetwayAppBtn"))).click();
					System.out.println(" Betway App Btn under the Quick Links In hamburgermenu is Clicked \n");
					Thread.sleep(3000);

					report.detailsAppend("TC117-Smoke_HamburgerMenu",
							"Verify the Betway App field is present under the Quick Links on the Hamburger Menu and clickable.",
							"Verified the Betway App field present under the Quick Links on the Hamburger Menu and clicked.",
							"Pass");

					Thread.sleep(3000);
					if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
						System.out.println("My Bets Close Popup Btn is Clicked \n");
						Thread.sleep(3000);
					} else {
						System.out.println("My Bets Close Popup Btn Not Display Clicked \n");

					}

				} else {
					System.out.println("Betway App Btn under the Quick Links In hamburgermenu Not Clicked \n");
					report.detailsAppend("TC117-Smoke_HamburgerMenu",
							"Verify the Betway App field is present under the Quick Links on the Hamburger Menu and clickable.",
							"Verified the Betway App field present under the Quick Links on the Hamburger Menu and not click.",
							"Fail");
				}

			} else {
				System.out.println("Hamburgermenu Button Not Clicked \n");
				webdriver.navigate().refresh();
			}

			// TC118 : Verify the Contact Us field is present under the Quick Links
			// on the Hamburger Menu and clickable.

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).click();
					System.out.println(" Quick Links Option is Presented and Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println(" Quick Links Option Presented and Not Clicked \n");
					webdriver.navigate().refresh();
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("HMContactUsBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMContactUsBtn"))).click();
					System.out.println(" Contact Us Btn under the Quick Links In hamburgermenu is Clicked \n");
					Thread.sleep(3000);

					report.detailsAppend("TC118-Smoke_HamburgerMenu",
							"Verify the Contact Us field is present under the Quick Links on the Hamburger Menu and clickable.",
							"Verified the Contact Us field present under the Quick Links on the Hamburger Menu and clicked.",
							"Pass");

					Thread.sleep(3000);
					if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
						System.out.println("My Bets Close Popup Btn is Clicked \n");
						Thread.sleep(3000);
					} else {
						System.out.println("My Bets Close Popup Btn Not Display Clicked \n");

					}

				} else {
					System.out.println("Contact Us Btn under the Quick Links In hamburgermenu Not Clicked \n");
					report.detailsAppend("TC118-Smoke_HamburgerMenu",
							"Verify the Contact Us field is present under the Quick Links on the Hamburger Menu and clickable.",
							"Verified the Contact Us field present under the Quick Links on the Hamburger Menu and not click.",
							"Fail");
				}

			} else {
				System.out.println("Hamburgermenu Button Not Clicked \n");
				webdriver.navigate().refresh();
			}

			// TC119 : Verify the Live Scores field is present under the Quick Links
			// on the Hamburger Menu and clickable.

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).click();
					System.out.println(" Quick Links Option is Presented and Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println(" Quick Links Option Presented and Not Clicked \n");
					webdriver.navigate().refresh();
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("HMLiveScoresBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMLiveScoresBtn"))).click();
					System.out.println(" Live Scores Btn under the Quick Links In hamburgermenu is Clicked \n");
					Thread.sleep(3000);

					report.detailsAppend("TC119-Smoke_HamburgerMenu",
							"Verify the Live Scores field is present under the Quick Links on the Hamburger Menu and clickable.",
							"Verified the Live Scores field present under the Quick Links on the Hamburger Menu and clicked.",
							"Pass");

					Thread.sleep(3000);
					if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
						System.out.println("My Bets Close Popup Btn is Clicked \n");
						Thread.sleep(3000);
					} else {
						System.out.println("My Bets Close Popup Btn Not Display Clicked \n");

					}

				} else {
					System.out.println("Live Scores Btn under the Quick Links In hamburgermenu Not Clicked \n");
					report.detailsAppend("TC119-Smoke_HamburgerMenu",
							"Verify the Live Scores field is present under the Quick Links on the Hamburger Menu and clickable.",
							"Verified the Live Scores field present under the Quick Links on the Hamburger Menu and not click.",
							"Fail");
				}

			} else {
				System.out.println("Hamburgermenu Button Not Clicked \n");
				webdriver.navigate().refresh();
			}

			// TC120 : Verify the Betting Rules field is present under the Quick Links
			// on the Hamburger Menu and clickable.

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).click();
					System.out.println(" Quick Links Option is Presented and Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println(" Quick Links Option Presented and Not Clicked \n");
					webdriver.navigate().refresh();
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("HMBettingRulesBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMBettingRulesBtn"))).click();
					System.out.println(" Betting Rules Btn under the Quick Links In hamburgermenu is Clicked \n");
					Thread.sleep(3000);

					report.detailsAppend("TC120-Smoke_HamburgerMenu",
							"Verify the Betting Rules field is present under the Quick Links on the Hamburger Menu and clickable.",
							"Verified the Betting Rules field present under the Quick Links on the Hamburger Menu and clicked.",
							"Pass");

					Thread.sleep(3000);
					if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
						System.out.println("My Bets Close Popup Btn is Clicked \n");
						Thread.sleep(3000);
					} else {
						System.out.println("My Bets Close Popup Btn Not Display Clicked \n");

					}

				} else {
					System.out.println("Betting Rules Btn under the Quick Links In hamburgermenu Not Clicked \n");
					report.detailsAppend("TC120-Smoke_HamburgerMenu",
							"Verify the Betting Rules field is present under the Quick Links on the Hamburger Menu and clickable.",
							"Verified the Betting Rules field present under the Quick Links on the Hamburger Menu and not click.",
							"Fail");
				}

			} else {
				System.out.println("Hamburgermenu Button Not Clicked \n");
				webdriver.navigate().refresh();
			}

			// TC121 : Verify the Stats Centre field is present under the Quick Links
			// on the Hamburger Menu and clickable.

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMQuickLinksOption"))).click();
					System.out.println(" Quick Links Option is Presented and Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println(" Quick Links Option Presented and Not Clicked \n");
					webdriver.navigate().refresh();
				}

				try {
					Thread.sleep(3000);
					JavascriptExecutor je = (JavascriptExecutor) webdriver;
					WebElement odds = webdriver.findElement(By.xpath(XpathMap.get("HMStatsCentreBtn")));
					je.executeScript("arguments[0].click()", odds);

					System.out.print(" Stats Centre Btn is clicked\n");
					Thread.sleep(3000);

					report.detailsAppend("TC121-Smoke_HamburgerMenu",
							"Verify the Stats Centre field is present under the Quick Links on the Hamburger Menu and clickable.",
							"Verified the Stats Centre field present under the Quick Links on the Hamburger Menu and clicked.",
							"Pass");

				} catch (Exception e) {
					System.out.println(e + "Stats Centre Btn under the Quick Links In hamburgermenu Not Clicked \n");
					report.detailsAppend("TC121-Smoke_HamburgerMenu",
							"Verify the Stats Centre field is present under the Quick Links on the Hamburger Menu and clickable.",
							"Verified the Stats Centre field present under the Quick Links on the Hamburger Menu and not click.",
							"Fail");
				}

			} else {
				System.out.println("Hamburgermenu Button Not Clicked \n");
				webdriver.navigate().refresh();
			}

			// TC122 : Verify the Language dropdown is present and clickable
			// on the Hamburger Menu and clickable.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("HMLanguageDDBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMLanguageDDBtn"))).click();
					System.out.println(" Language dropdown is present and clickable \n");
					Thread.sleep(1000);

					report.detailsAppend("TC122-Smoke_HamburgerMenu",
							"Verify the Language dropdown is present on the Hamburger Menu and clickable.",
							"Verified the Language dropdown present on the Hamburger Menu and clicked.", "Pass");

				} else {
					System.out.println("Language dropdown is present and Not Clicked \n");
					report.detailsAppend("TC122-Smoke_HamburgerMenu",
							"Verify the Language dropdown is present on the Hamburger Menu and clickable.",
							"Verified the Language dropdown present on the Hamburger Menu and Not clickable.", "Fail");
				}

			} else {
				System.out.println("Hamburgermenu Button Not Clicked \n");
				webdriver.navigate().refresh();
			}

			// TC123 : Verify if user is able to change the Language from the Hamburger
			// Menu.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(1000);

				try {
					Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("HMLanguageEnglish"))).isDisplayed());
					webdriver.findElement(By.xpath(XpathMap.get("HMLanguageEnglish"))).click();
					System.out.println("User able to change the language. \n");

				} catch (Exception e) {
					System.out.println("User able to change the language. \n");
				}

				Thread.sleep(1000);
				report.detailsAppend("TC123-Smoke_HamburgerMenu",
						"Verify if user is able to change the Language from the Hamburger Menu.",
						"Verified User able to change the Language from the Hamburger Menu.", "Pass");

				Thread.sleep(3000);
				try {
					webdriver.findElement(By.xpath(XpathMap.get("CloseIconOnHamburgerMenu"))).click();
					System.out.println("Close Btn ON Hamburgermen is  Clicked \n");
					Thread.sleep(3000);

				} catch (Exception e) {
					webdriver.navigate().refresh();
					System.out.println("Close Btn ON Hamburgermen is  Clicked \n");
				}

			} else {
				System.out.println("User unable to change the language \n");
				report.detailsAppend("TC123-Smoke_HamburgerMenu",
						"Verify if user is able to change the Language from the Hamburger Menu.",
						"Verified User not able to change the Language from the Hamburger Menu.", "Fail");
			}

			// TC124 : Verify the Odds Format dropdown is present and clickable
			// on the Hamburger Menu

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("HMOddsFormatDDBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMOddsFormatDDBtn"))).click();
					System.out.println(" Odds Format dropdown is present and clickable \n");
					Thread.sleep(3000);

					report.detailsAppend("TC124-Smoke_HamburgerMenu",
							"Verify the Odds Format dropdown is present on the Hamburger Menu and clickable.",
							"Verified the Odds Format dropdown present on the Hamburger Menu and clicked.", "Pass");

				} else {
					System.out.println("Odds Format  dropdown is present and Not Clicked \n");
					report.detailsAppend("TC124-Smoke_HamburgerMenu",
							"Verify the Odds Format dropdown is present on the Hamburger Menu and clickable.",
							"Verified the Odds Format dropdown present on the Hamburger Menu and Not clickable.",
							"Fail");
				}

			} else {
				System.out.println("Hamburgermenu Button Not Clicked \n");
				webdriver.navigate().refresh();
			}

			// TC125 : Verify if user is able to change the Odds Formatfrom the Hamburger
			// Menu.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("HMOddsDecimalFormat"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMOddsDecimalFormat"))).click();
					System.out.println("User able to change the Odds Format. \n");

				} else {
					System.out.println("User able to change the Odds Format. \n");
				}

				Thread.sleep(3000);
				report.detailsAppend("TC125-Smoke_HamburgerMenu",
						"Verify if user is able to change the Odds Format from the Hamburger Menu.",
						"Verified User able to change the Odds Format from the Hamburger Menu.", "Pass");

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("CloseIconOnHamburgerMenu"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("CloseIconOnHamburgerMenu"))).click();
					System.out.println("Close Btn ON Hamburgermen is  Clicked \n");
					Thread.sleep(3000);
				} else {
					webdriver.navigate().refresh();
					System.out.println("Close Btn ON Hamburgermen is  Clicked \n");
				}

			} else {
				System.out.println("User unable to change the Odds Format \n");
				report.detailsAppend("TC125-Smoke_HamburgerMenu",
						"Verify if user is able to change the Odds Format from the Hamburger Menu.",
						"Verified User not able to change the Odds Format  from the Hamburger Menu.", "Fail");
			}

			Thread.sleep(3000);
			log.debug("Switch to default tab");

		} catch (Exception e) {

			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			System.out.println("Sport Button is clicked \n");
			log.debug("Switch to default tab");
			return false;
		}
		return true;
	}

//// Function to zoom out
//	private static void zoomOut(WebDriver webdriver) {
//		JavascriptExecutor js = (JavascriptExecutor) webdriver;
//		js.executeScript("document.body.style.zoom = 75%;");
//	}

/////////////       Verify the Account Options popup window display...    //////////	
//TC126-139  (Smoke_HamburgerMenu) @Author: AS66528

	public boolean SM_AccountOptions(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);

			// TC126:Verify the Account Options popup window display.

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
					System.out.println(" My Bet Button from hamburgermenu is clicked \n");
					Thread.sleep(3000);

					report.detailsAppend("TC126-Smoke_HamburgerMenu", "Verify the Account Options popup window display",
							"Account Options popup window be displayed.", "Pass");

				} else {
					System.out.println(" My Bet Button from hamburgermenu Not clicked \n");

					report.detailsAppend("TC126-Smoke_Account", "Verify the Account Options popup window display",
							"Account Options popup window be displayed.", "Fail");
				}

			} else {
				System.out.println("Hamburgermenu Button Not Clicked \n");
				webdriver.navigate().refresh();
			}

			// TC127: Verify the Deposit Funds field is present on the Account Options popup
			// window and clickable.

			Thread.sleep(3000);

			if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
				System.out.println(" Account Options popup window display \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("AccountDepositFundBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("AccountDepositFundBtn"))).click();
					System.out.println(" AccountDepositFund Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println(" AccountDepositFund Btn Not Clicked \n");

				}

				report.detailsAppend("TC127-Smoke_Account",
						"Verify the Deposit Funds field present on Account Options popup window and Cickable.",
						"User able to click Deposit Funds field On Account Window and redirected to respective page.",
						"Pass");

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("DepositClose"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("DepositClose"))).click();
					System.out.println("Deposit Close Popup Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println("Deposit Close Popup Btn Not Clicked \n");
					webdriver.navigate().refresh();
				}

			} else {
				System.out.println("Account Options popup window Not display");

				report.detailsAppend("TC127-Smoke_Account",
						"Verify the Deposit Funds field present on Account Options popup window and Cickable.",
						"User Unable to click Deposit Funds field On Account Window and Not redirected to respective page.",
						"Fail");
			}

			// TC128: Verify the Withdraw Funds field is present on the Account Options
			// popup window and clickable.

			Thread.sleep(3000);

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
					System.out.println(" My Bet Button from hamburgermenu is clicked \n");
					Thread.sleep(3000);

					if (webdriver.findElement(By.xpath(XpathMap.get("AccountWithdrawFundBtn"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("AccountWithdrawFundBtn"))).click();
						System.out.println(" AccountWithdrawFund Btn is Clicked \n");
						Thread.sleep(3000);
					} else {
						System.out.println(" AccountWithdrawFund Btn Not Clicked \n");

					}

					report.detailsAppend("TC128-Smoke_Account",
							"Verify the Withdraw Funds field present on Account Options popup window and Cickable.",
							"User able to click Withdraw Funds field On Account Window and redirected to respective page.",
							"Pass");

				} else {
					System.out.println(" My Bet Button from hamburgermenu is clicked \n");

					report.detailsAppend("TC128-Smoke_Account",
							"Verify the Withdraw Funds field present on Account Options popup window and Cickable.",
							"User Unable to click Withdraw Funds field On Account Window and Not redirected to respective page.",
							"Fail");
				}

			} else {
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n ");

				report.detailsAppend("TC128-Smoke_Account",
						"Verify the Withdraw Funds field present on Account Options popup window and Cickable.",
						"User Unable to click Withdraw Funds field On Account Window and Not redirected to respective page.",
						"Fail");
			}

			// TC129: Verify the My Bets Funds field is present on the Account Options
			// popup window and clickable.

			Thread.sleep(3000);

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
					System.out.println(" My Bet Button from hamburgermenu is clicked \n");
					Thread.sleep(3000);

					if (webdriver.findElement(By.xpath(XpathMap.get("AccountMyBetBtn"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("AccountMyBetBtn"))).click();
						System.out.println(" Account MyBets Fund Btn is Clicked \n");
						Thread.sleep(3000);
					} else {
						System.out.println(" Account MyBets Fund Btn Not Clicked \n");

					}

					report.detailsAppend("TC129-Smoke_Account",
							"Verify the MyBets Funds field present on Account Options popup window and Cickable.",
							"User able to click MyBets Funds field On Account Window and redirected to respective page.",
							"Pass");

				} else {
					System.out.println(" My Bet Button from hamburgermenu is clicked \n");

					report.detailsAppend("TC129-Smoke_Account",
							"Verify the MyBets Funds field present on Account Options popup window and Cickable.",
							"User Unable to click MyBets Funds field On Account Window and Not redirected to respective page.",
							"Fail");
				}

			} else {
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n ");

				report.detailsAppend("TC129-Smoke_Account",
						"Verify the MyBets Funds field present on Account Options popup window and Cickable.",
						"User Unable to click MyBets Funds field On Account Window and Not redirected to respective page.",
						"Fail");
			}

			// TC130: Verify the Free Bets field is present on the Account Options popup
			// window and clickable.

			Thread.sleep(3000);

			if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
				System.out.println(" Account Options popup window display \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("AccountFreeBetBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("AccountFreeBetBtn"))).click();
					System.out.println(" Account Free Bets Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println(" Account Free Bets Btn Not Clicked \n");

				}

				report.detailsAppend("TC130-Smoke_Account",
						"Verify the Free Bets field present on Account Options popup window and Cickable.",
						"User able to click Free Bets field On Account Window and redirected to respective page.",
						"Pass");

			} else {
				System.out.println("Account Options popup window Not display");

				report.detailsAppend("TC130-Smoke_Account",
						"Verify the Free Bets field present on Account Options popup window and Cickable.",
						"User Unable to click Free Bets field On Account Window and Not redirected to respective page.",
						"Fail");
			}

			// TC131: Verify the Bet Influencer field is present on the Account Options
			// popup window and clickable.

			Thread.sleep(3000);

			if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
				System.out.println(" Account Options popup window display \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("AccountBetInfluencerBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("AccountBetInfluencerBtn"))).click();
					System.out.println(" Account Bet Influencer Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println(" Account Bet Influencer Btn Not Clicked \n");

				}

				report.detailsAppend("TC131-Smoke_Account",
						"Verify the Bet Influencer field present on Account Options popup window and Cickable.",
						"User able to click Bet Influencer field On Account Window and redirected to respective page.",
						"Pass");

			} else {
				System.out.println("Account Options popup window Not display");

				report.detailsAppend("TC131-Smoke_Account",
						"Verify the Bet Influencer field present on Account Options popup window and Cickable.",
						"User Unable to click Bet Influencer field On Account Window and Not redirected to respective page.",
						"Fail");
			}

			// TC132: Verify the Transaction Summary field is present on the Account Options
			// popup window and clickable.

			Thread.sleep(3000);

			if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
				System.out.println(" Account Options popup window display \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("AccountTransactionSummaryBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("AccountTransactionSummaryBtn"))).click();
					System.out.println(" Account Transaction Summary Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println(" Account Transaction Summary Btn Not Clicked \n");

				}

				report.detailsAppend("TC132-Smoke_Account",
						"Verify the Transaction Summary field present on Account Options popup window and Cickable.",
						"User able to click Transaction Summary field On Account Window and redirected to respective page.",
						"Pass");

			} else {
				System.out.println("Account Options popup window Not display");

				report.detailsAppend("TC132-Smoke_Account",
						"Verify the Transaction Summary field present on Account Options popup window and Cickable.",
						"User Unable to click Transaction Summary field On Account Window and Not redirected to respective page.",
						"Fail");
			}

			// TC133: Verify the Bonus Summary field is present on the Account Options popup
			// window and clickable.

			Thread.sleep(3000);

			if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
				System.out.println(" Account Options popup window display \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("AccountBonusSummaryBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("AccountBonusSummaryBtn"))).click();
					System.out.println(" Account Bonus Summary Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println(" Account Bonus Summary Btn Not Clicked \n");

				}

				report.detailsAppend("TC133-Smoke_Account",
						"Verify the Bonus Summary field present on Account Options popup window and Cickable.",
						"User able to click Bonus Summary field On Account Window and redirected to respective page.",
						"Pass");

			} else {
				System.out.println("Account Options popup window Not display");

				report.detailsAppend("TC133-Smoke_Account",
						"Verify the Bonus Summary field present on Account Options popup window and Cickable.",
						"User Unable to click Bonus Summary field On Account Window and Not redirected to respective page.",
						"Fail");
			}

			// TC134: Verify the Update Details field is present on the Account Options
			// popup window and clickable.

			Thread.sleep(3000);

			if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
				System.out.println(" Account Options popup window display \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("AccountUpdateDetailsBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("AccountUpdateDetailsBtn"))).click();
					System.out.println(" Account Update Details Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println(" Account Update Details Btn Not Clicked \n");

				}

				report.detailsAppend("TC134-Smoke_Account",
						"Verify the Update Details field present on Account Options popup window and Cickable.",
						"User able to click Update Details field On Account Window and redirected to respective page.",
						"Pass");

			} else {
				System.out.println("Account Options popup window Not display");

				report.detailsAppend("TC134-Smoke_Account",
						"Verify the Update Details field present on Account Options popup window and Cickable.",
						"User Unable to click Update Details field On Account Window and Not redirected to respective page.",
						"Fail");
			}

			// TC135: Verify the Manage Password field is present on the Account Options
			// popup window and clickable.

			Thread.sleep(3000);

			if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
				System.out.println(" Account Options popup window display \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("AccountManagePasswordBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("AccountManagePasswordBtn"))).click();
					System.out.println(" Account Manage Password Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println(" Account Manage Password Btn Not Clicked \n");

				}

				report.detailsAppend("TC135-Smoke_Account",
						"Verify the Manage Password field present on Account Options popup window and Cickable.",
						"User able to click Manage Password field On Account Window and redirected to respective page.",
						"Pass");

			} else {
				System.out.println("Account Options popup window Not display");

				report.detailsAppend("TC135-Smoke_Account",
						"Verify the Manage Password field present on Account Options popup window and Cickable.",
						"User Unable to click Manage Password field On Account Window and Not redirected to respective page.",
						"Fail");
			}

			// TC136: Verify the Promo Voucher field is present on the Account Options popup
			// window and clickable.

			Thread.sleep(3000);

			if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
				System.out.println(" Account Options popup window display \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("AccountPromoVoucherBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("AccountPromoVoucherBtn"))).click();
					System.out.println(" Account Promo Voucher Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println(" Account Promo Voucher Btn Not Clicked \n");

				}

				report.detailsAppend("TC136-Smoke_Account",
						"Verify the Promo Voucher field present on Account Options popup window and Cickable.",
						"User able to click Promo Voucher field On Account Window and redirected to respective page.",
						"Pass");

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
					System.out.println(" MyBet Popup Close Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					webdriver.navigate().refresh();
					System.out.println(" MyBet Popup Close Btn Not Clicked \n");

				}

			} else {
				System.out.println("Account Options popup window Not display");

				report.detailsAppend("TC136-Smoke_Account",
						"Verify the Promo Voucher field present on Account Options popup window and Cickable.",
						"User Unable to click Promo Voucher field On Account Window and Not redirected to respective page.",
						"Fail");
			}

			// TC137: Verify the Responsible Gaming field is present on the Account Options
			// popup window and clickable.

			Thread.sleep(3000);

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("ResponsibleGameInHM"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("ResponsibleGameInHM"))).click();
					System.out.println(" HamburgerMenu Responsible Gaming Btn is Clicked \n");
					Thread.sleep(3000);

					report.detailsAppend("TC137-Smoke_Account",
							"Verify the Responsible Gaming field present on Account Options popup window and Cickable.",
							"User able to click Responsible Gaming field On Account Window and redirected to respective page.",
							"Pass");

					Thread.sleep(3000);
					if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
						System.out.println(" MyBet Popup Close Btn is Clicked \n");
						Thread.sleep(3000);
					} else {
						webdriver.navigate().refresh();
						System.out.println(" MyBet Popup Close Btn Not Clicked \n");

					}
				} else {
					System.out.println(" HamburgerMenu Responsible Gaming Btn Not Clicked \n");
					report.detailsAppend("TC137-Smoke_Account",
							"Verify the Responsible Gaming field present on Account Options popup window and Cickable.",
							"User Unable to click Responsible Gaming field On Account Window and Not redirected to respective page.",
							"Fail");
				}

			} else {
				System.out.println(" HamburgerMenu Btn in Homepage Not Clicked \n");

				report.detailsAppend("TC137-Smoke_Account",
						"Verify the Responsible Gaming field present on Account Options popup window and Cickable.",
						"User Unable to click Responsible Gaming field On Account Window and Not redirected to respective page.",
						"Fail");
			}

			// TC138: Verify the Document Upload field is present on the Account Options
			// popup window and clickable.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("HMDocumentUploadOption"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMDocumentUploadOption"))).click();
					System.out.println(" HamburgerMenu Document Upload Btn Not Clicked \n");
					Thread.sleep(3000);

					report.detailsAppend("TC138-Smoke_Account",
							"Verify the Document Upload field present on Account Options popup window and Cickable.",
							"User able to click Document Upload field On Account Window and redirected to respective page.",
							"Pass");
				} else {
					System.out.println(" HamburgerMenu Document Upload Btn Not Clicked \n");
					report.detailsAppend("TC138-Smoke_Account",
							"Verify the Document Upload field present on Account Options popup window and Cickable.",
							"User Unable to click Document Upload field On Account Window and Not redirected to respective page.",
							"Fail");
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
					System.out.println(" MyBet Popup Close Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					webdriver.navigate().refresh();
					System.out.println(" MyBet Popup Close Btn Not Clicked \n");

				}

			} else {
				System.out.println("Account Options popup window Not display");

				report.detailsAppend("TC138-Smoke_Account",
						"Verify the Document Upload field present on Account Options popup window and Cickable.",
						"User Unable to click Document Upload field On Account Window and Not redirected to respective page.",
						"Fail");
			}

			// TC139: Verify the Log Out field is present on the Account Options popup
			// window and clickable.

			Thread.sleep(3000);

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("HMLogOutBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMLogOutBtn"))).click();
					System.out.println(" HamburgerMenu Log Out Btn is Clicked \n");
					Thread.sleep(3000);

					report.detailsAppend("TC139-Smoke_Account",
							"Verify the Log Out field present on Account Options popup window and Cickable.",
							"User able to click Log Out field On Account Window and redirected to respective page.",
							"Pass");

					Thread.sleep(3000);
					HM_Login();

				} else {
					System.out.println(" HamburgerMenu Log Out Btn Not Clicked \n");
					report.detailsAppend("TC139-Smoke_Account",
							"Verify the Log Out field present on Account Options popup window and Cickable.",
							"User Unable to click Log Out field On Account Window and Not redirected to respective page.",
							"Fail");

				}

			} else {
				System.out.println("Account Options popup window Not display");

				report.detailsAppend("TC139-Smoke_Account",
						"Verify the Log Out field present on Account Options popup window and Cickable.",
						"User Unable to click Log Out field On Account Window and Not redirected to respective page.",
						"Fail");
			}

			Thread.sleep(3000);

			log.debug("Switch to default tab");

		} catch (Exception e) {

			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			System.out.println("Sport Button is clicked \n");
			log.debug("Switch to default tab");
			return false;
		}
		return true;
	}

// TC140-150 (Smoke_Account) @Author: AS66528

	public boolean SM_AccountMyBetOptions(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);

			// TC140:Verify the Open Bets and Settled Bets buttons are present on the My
			// Bets field and clickable.

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
					System.out.println(" My Bet Button from hamburgermenu is clicked \n");
					Thread.sleep(4000);

					try {
						webdriver.findElement(By.xpath(XpathMap.get("SettledBets"))).click();
						System.out.println(" Settled Bets Btn is Clicked \n");
						Thread.sleep(3000);
					} catch (Exception e) {
						System.out.println(e + " Settled Bets Btn Not Clicked \n");

					}

					report.detailsAppend("TC140-Smoke_Account",
							"Verify the Open Bets and Settled Bets buttons are present on the My Bets field and clickable.",
							"Verified the Open Bets and Settled Bets buttons presented on the My Bets field and clickable.",
							"Pass");

				} else {
					System.out.println(" My Bet Button from hamburgermenu Not clicked \n");

					report.detailsAppend("TC140-Smoke_Account",
							"Verify the Open Bets and Settled Bets buttons are present on the My Bets field and clickable.",
							"Verified the Open Bets and Settled Bets buttons present on the My Bets field and NOT clickable.",
							"Fail");
				}

			} else {
				System.out.println("Hamburgermenu Button Not Clicked \n");
				webdriver.navigate().refresh();
			}

			// TC141: Verify the Search bar is present on the Open Bets and clickable.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
				System.out.println(" Account Options popup window display \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("OpenBets"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("OpenBets"))).click();
					System.out.println(" OpenBets Btn is Clicked \n");
					Thread.sleep(3000);

					Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("OpenBetSearchBtn"))).isDisplayed());
					webdriver.findElement(By.xpath(XpathMap.get("OpenBetSearchBtn"))).click();
					System.out.println(" In OpenBet SearchBtn is Clicked \n");

					report.detailsAppend("TC141-Smoke_Account",
							"Verify the Search bar is present on the Open Bets and clickable.",
							"Search bar should be present and user able to click on search bar.", "Pass");

				} else {
					System.out.println(" In OpenBet SearchBtn Not Clicked \n");

					report.detailsAppend("TC141-Smoke_Account",
							"Verify the Search bar is present on the Open Bets and clickable.",
							"Search bar presented and user Not able to click on search bar.", "Fail");
				}

				// TC142: Verify the user is able to search the results using search bar on the
				// Open Bets section.

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("AccountEnterTextInSearchBar"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("AccountEnterTextInSearchBar"))).sendKeys("Multibet");
					System.out.println(" Account Enter Text InSearchBar \n");
					Thread.sleep(3000);

					report.detailsAppend("TC142-Smoke_Account",
							"Verify the user is able to search the results using search bar on the Open Bets section.",
							"User abled to search with result and the respective data displayed.", "Pass");

				} else {
					System.out.println(" In OpenBet SearchBtn Not Clicked \n");

					report.detailsAppend("TC142-Smoke_Account",
							"Verify the user is able to search the results using search bar on the Open Bets section.",
							"User unable to search with result and the respective data Not be displayed.", "Fail");
				}

			} else {
				System.out.println(" Account Options popup window not display \n");
				report.detailsAppend("TC142-Smoke_Account",
						"Verify the user is able to search the results using search bar on the Open Bets section.",
						"User unable to search with result and the respective data Not be displayed.", "Fail");
			}

			// TC143: Verify the events selection buttons bar is present on the My Bets and
			// all the buttons are clickable.

			Thread.sleep(3000);

			if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
				System.out.println(" Account Options popup window display \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("AccountMyBetBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("AccountMyBetBtn"))).click();
					System.out.println(" In Account MyBet Btn is Clicked \n");
					Thread.sleep(3000);

					Assert.assertTrue(
							webdriver.findElement(By.xpath(XpathMap.get("MyBetEventSelectInOpenBet"))).isDisplayed());
					webdriver.findElement(By.xpath(XpathMap.get("MyBetEventSelectInOpenBet"))).click();
					System.out.println(" In MyBet Event is Selected \n");
					Thread.sleep(3000);

					report.detailsAppend("TC143-Smoke_Account",
							"Verify the events selection buttons bar is present on the My Bets and all the buttons are clickable.",
							"Verified the events selection buttons bar present on the My Bets and buttons clickable.",
							"Pass");

				} else {
					System.out.println(" In MyBet Event Not Selected \n");

					report.detailsAppend("TC143-Smoke_Account",
							"Verify the events selection buttons bar is present on the My Bets and all the buttons are clickable.",
							"Verified the events selection buttons bar present on the My Bets and buttons not clickable.",
							"Fail");
				}

			} else {
				System.out.println(" Account Options popup window not display \n");
			}

			// TC145: Verify all and Cash Out radio buttons are present on the Open Bets
			// section and clickable.

			Thread.sleep(3000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed());
				System.out.println(" Account Options popup window display \n");
			} catch (Exception e) {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
				System.out.println(" My Bet Button from hamburgermenu is clicked \n");

			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("AccountMyBetBtn"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("AccountMyBetBtn"))).click();
				System.out.println(" In Account MyBet Btn is Clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC145[1]-Smoke_Account",
						"Verify all radio buttons are present on the Open Bets section and clickable.",
						"Verified all radio buttons present on the Open Bets section and clickable.", "Pass");

			} else {
				System.out.println(" OpenBets Btn Not Clicked \n");

				report.detailsAppend("TC145[1]-Smoke_Account",
						"Verify all radio buttons are present on the Open Bets section and clickable.",
						"Verified all radio buttons present on the Open Bets section and Not clickable.", "Fail");
			}

			Thread.sleep(3000);

			if (webdriver.findElement(By.xpath(XpathMap.get("CashOutButton"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("CashOutButton"))).click();
				System.out.println(" Cash out Btn is Clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC145[2]-Smoke_Account",
						"Verify Cash out buttons are present on the Open Bets section and clickable.",
						"Verified Cash out buttons are present on the Open Bets section and clickable.", "Pass");

			} else {
				System.out.println(" Cash out Btn Not Clicked \n");

				report.detailsAppend("TC145[2]-Smoke_Account",
						"Verify Cash out buttons are present on the Open Bets section and clickable.",
						"Verified Cash out buttons are present on the Open Bets section and not clickable.", "Fail");
			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
				System.out.println(" MyBet Popup Close Btn is Clicked \n");
				Thread.sleep(3000);
			} else {
				webdriver.navigate().refresh();
				System.out.println(" MyBet Popup Close Btn Not Clicked \n");

			}

			// TC147: Verify Cashout option is present for Singlebet on the Open Bets
			// section
			// and clickable.

			Thread.sleep(3000);
			SM_SingleBet();

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
					System.out.println(" My Bet Button from hamburgermenu is clicked \n");

				} else {
					System.out.println(" My Bet Button from hamburgermenu Not clicked \n");

				}

				Thread.sleep(3000);
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				for (int i = 0; i <= 4; i++) {
					Thread.sleep(3000);
					try {
						if (webdriver.findElement(By.xpath(XpathMap.get("CashoutMyBet" + i))).isDisplayed()) {
							System.out.print("CashoutMyBet" + i + " is Present");
							webdriver.findElement(By.xpath(XpathMap.get("CashoutMyBet" + i))).click();
							break;
						} else {
							System.out.println("CashoutMyBet" + i + " is not visible");
						}
						Thread.sleep(1000);
						if (i % 2 == 1) {
							je.executeScript("window.scrollBy(0,200)");

						} else {
							System.out.println("CashoutMyBet" + i + " is not visible");
						}

					} catch (Exception e) {
						System.out.println(" My Bet Pupup Cashout not clicked \n");
					}
				}
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("ContinueInCashout"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("ContinueInCashout"))).click();
					System.out.println(" Confirm Btn in Cask Out is clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println(" Confirm Btn in Cask Out Not clicked \n");

				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("AftercashOutContinuebtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("AftercashOutContinuebtn"))).click();
					System.out.println(" Continue Btn After Cask Out is clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println(" Continue Btn After Cask Out Not clicked \n");

				}

				report.detailsAppend("TC147-Smoke_Account",
						"Verify Cashout option is present for Singlebet on the Open Bets section and clickable.",
						"Verified Cashout option present for Singlebet on the Open Bets section and clickable.",
						"Pass");

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
					System.out.println(" MyBet Popup Close Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					webdriver.navigate().refresh();
					System.out.println(" MyBet Popup Close Btn Not Clicked \n");

				}

			} else {
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");

				report.detailsAppend("TC147-Smoke_Account",
						"Verify Cashout option is present for Singlebet on the Open Bets section and clickable.",
						"Verified Cashout option present for Singlebet on the Open Bets section and Not clickable.",
						"Fail");
			}

			// TC146: Verify Cashout option is present for multibet on the Open Bets section
			// and clickable.

			Thread.sleep(4000);
			SM_MultiBet();
			Thread.sleep(4000);
			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
					System.out.println(" My Bet Button from hamburgermenu is clicked \n");

				} else {
					System.out.println(" My Bet Button from hamburgermenu Not clicked \n");

				}

				Thread.sleep(3000);
				Thread.sleep(3000);
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				for (int i = 0; i <= 4; i++) {
					Thread.sleep(3000);
					try {
						if (webdriver.findElement(By.xpath(XpathMap.get("CashoutMyBet" + i))).isDisplayed()) {
							System.out.print("CashoutMyBet" + i + " is Present");
							webdriver.findElement(By.xpath(XpathMap.get("CashoutMyBet" + i))).click();
							break;
						} else {
							System.out.println("CashoutMyBet" + i + " is not visible");
						}

						if (i % 2 == 1) {
							je.executeScript("window.scrollBy(0,200)");

						} else {
							System.out.println("CashoutMyBet" + i + " is not visible");
						}

					} catch (Exception e) {
						System.out.println(" My Bet Pupup Cashout not clicked \n");
					}
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("ContinueInCashout"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("ContinueInCashout"))).click();
					System.out.println(" Confirm Btn in Cask Out is clicked \n");
					Thread.sleep(3000);
				} else {
					System.out.println(" Confirm Btn in Cask Out Not clicked \n");

				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("AftercashOutContinuebtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("AftercashOutContinuebtn"))).click();
					System.out.println(" Continue Btn After Cask Out is clicked \n");

				} else {
					System.out.println(" Continue Btn After Cask Out Not clicked \n");

				}

				Thread.sleep(3000);
				report.detailsAppend("TC146-Smoke_Account",
						"Verify Cashout option is present for multibet on the Open Bets section and clickable.",
						"Verified Cashout option present for multibet on the Open Bets section and clickable.", "Pass");

			} else {
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");

				report.detailsAppend("TC146-Smoke_Account",
						"Verify Cashout option is present for multibet on the Open Bets section and clickable.",
						"Verified Cashout option present for multibet on the Open Bets section and Not clickable.",
						"Fail");
			}

			// TC148: Verify the date, time and Betslip id display for multibet on the Open
			// Bets section and clickable.

			Thread.sleep(3000);
			try {
				if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
					System.out.println(" Account Options popup window display \n");

				} else {
					Thread.sleep(3000);
					webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
					System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
					Thread.sleep(3000);

					webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
					System.out.println(" My Bet Button from hamburgermenu is clicked \n");
				}

				Thread.sleep(3000);
				report.detailsAppend("TC148-Smoke_Account",
						"Verify the date, time and Betslip id display for multibet on the Open Bets section and clickable.",
						"Verified the date, time and Betslip id display for multibet on the Open Bets section and clickable.",
						"Pass");

			} catch (Exception e) {
				System.out.println("Account Options popup window Not display");

				report.detailsAppend("TC148-Smoke_Account",
						"Verify the date, time and Betslip id display for multibet on the Open Bets section and clickable.",
						"Verified the date, time and Betslip id display for multibet on the Open Bets section and Not clickable.",
						"Fail");
			}

			// TC149: Verify Multibet dropdown is present with the leg count on the Open
			// Bets section and clickable.

			Thread.sleep(3000);

			if (webdriver.findElement(By.xpath(XpathMap.get("MultibetDDinOpenbet"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("MultibetDDinOpenbet"))).click();
				System.out.println(" Multibet dropdown is Clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC149-Smoke_Account",
						"Verify Multibet dropdown is present with the leg count on the Open Bets section and clickable.",
						"Verified Multibet dropdown present with the leg count on the Open Bets section and clickable.",
						"Pass");

			} else {
				System.out.println(" Multibet dropdown is Clicked \n");

				report.detailsAppend("TC149-Smoke_Account",
						"Verify Multibet dropdown is present with the leg count on the Open Bets section and clickable.",
						"Verified Multibet dropdown present with the leg count on the Open Bets section and Not clickable.",
						"Fail");
			}

			// TC150: Verify Download betslip button is present on the Open Bets section and
			// clickable.

			Thread.sleep(3000);

			if (webdriver.findElement(By.xpath(XpathMap.get("DownloadbtnInOpenbet"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("DownloadbtnInOpenbet"))).click();
				System.out.println(" Download btn InOpenbet is Clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC150-Smoke_Account",
						"Verify Download betslip button is present on the Open Bets section and clickable.",
						"Verify Download betslip button present on the Open Bets section and clickable.", "Pass");

			} else {
				System.out.println(" Download btn InOpenbet is Clicked \n");

				report.detailsAppend("TC150-Smoke_Account",
						"Verify Download betslip button is present on the Open Bets section and clickable.",
						"Verified Download betslip button present on the Open Bets section and not clickable.", "Fail");
			}

			Thread.sleep(3000);
			log.debug("Switch to default tab");

		} catch (Exception e) {

			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			System.out.println("Sport Button is clicked \n");
			log.debug("Switch to default tab");
			return false;
		}
		return true;
	}

// TC151-160 (Smoke_Account) @Author: AS66528

	public boolean SM_MybetAccountOpenBetSection(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);

			// TC151 :Verify share button is present on the Open Bets section and clickable.

			if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
				System.out.println(" Account Options popup window display \n");
				Thread.sleep(3000);
			} else {
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
					System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
					Thread.sleep(3000);

					if (webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
						System.out.println(" My Bet Button from hamburgermenu is clicked \n");

					} else {
						System.out.println(" My Bet Button from hamburgermenu Not clicked \n");

					}

				} else {
					System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");

				}

			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("ShareBtnInOpenBet"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("ShareBtnInOpenBet"))).click();
				System.out.println(" Share btn InOpenbet is Clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC151-Smoke_Account",
						"Verify share button is present on the Open Bets section and clickable.",
						"User abled to click on the share button and bet popup displayed.", "Pass");

			} else {
				System.out.println(" Share btn InOpenbet is Clicked \n");

				report.detailsAppend("TC151-Smoke_Account",
						"Verify share button is present on the Open Bets section and clickable.",
						"User Not able to click on the share button and bet popup Not be displayed.", "Fail");
			}

			// Tc 152:Verify WhatsApp, Tweet, Share on Facebook, Send Sms, Send email
			// buttons are present on the Open Bets section and clickable.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("WtsAppShareInOpenBet"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("WtsAppShareInOpenBet"))).click();
				System.out.println(" Wts app In Share btn is Clicked \n");
				Thread.sleep(3000);

				switchToNewTab();
				report.detailsAppend("TC152[1]-Smoke_Account",
						"Verify WhatsApp button present on Open Bets section and clickable.",
						"Verified WhatsApp button present on Open Bets section and clickable.", "Pass");

				Thread.sleep(3000);
				switchToParentTab();

			} else {
				System.out.println(" Wts app In Share btn Not Clicked \n");

				report.detailsAppend("TC152[1]-Smoke_Account",
						"Verify WhatsApp button present on Open Bets section and clickable.",
						"Verified WhatsApp button present on Open Bets section and Not clickable.", "Fail");
			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("TwitterShareInOpenBet"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("TwitterShareInOpenBet"))).click();
				System.out.println(" Twitter App In Share btn is Clicked \n");
				Thread.sleep(3000);

				switchToNewTab();
				report.detailsAppend("TC152[2]-Smoke_Account",
						"Verify Tweet button present on Open Bets section and clickable.",
						"Verified Tweet button present on Open Bets section and clickable.", "Pass");

				Thread.sleep(3000);
				switchToParentTab();

			} else {
				System.out.println(" Twitter App In Share btn Not Clicked \\n");

				report.detailsAppend("TC152[2]-Smoke_Account",
						"Verify Tweet button present on Open Bets section and clickable.",
						"Verified Tweet button present on Open Bets section and Not clickable.", "Fail");
			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("FacebookShareInOpenBet"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("FacebookShareInOpenBet"))).click();
				System.out.println(" FacebookApp In Share btn is Clicked \n");
				Thread.sleep(3000);

				switchToNewTab();
				report.detailsAppend("TC152[3]-Smoke_Account",
						"Verify Facebook button present on Open Bets section and clickable.",
						"Verified Facebook button present on Open Bets section and clickable.", "Pass");

				Thread.sleep(3000);
				switchToParentTab();

			} else {
				System.out.println(" FacebookApp In Share btn Not Clicked \\n");

				report.detailsAppend("TC152[3]-Smoke_Account",
						"Verify Facebook button present on Open Bets section and clickable.",
						"Verified Facebook button present on Open Bets section and Not clickable.", "Fail");
			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("SendSmsShareInOpenBet"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("SendSmsShareInOpenBet"))).click();
				System.out.println(" SendSMS In Share btn is Clicked \n");
				Thread.sleep(3000);

				switchToNewTab();
				report.detailsAppend("TC152[4]-Smoke_Account",
						"Verify Send Sms button present on Open Bets section and clickable.",
						"Verified Send Sms button present on Open Bets section and clickable.", "Pass");

				Thread.sleep(3000);
				switchToParentTab();
				Thread.sleep(3000);

			} else {
				System.out.println(" SendSMS In Share btn Not Clicked \\n");

				report.detailsAppend("TC152[4]-Smoke_Account",
						"Verify Send Sms button present on Open Bets section and clickable.",
						"Verified Send Sms button present on Open Bets section and Not clickable.", "Fail");
			}

			// Tc 153:Verify if user is able to click on the close button over Share Your
			// Bet popup on the Open Bets section and clickable.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("CloseBtnInSharePopup"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("CloseBtnInSharePopup"))).click();
				System.out.println(" Close btn In Share Bet Popup is Clicked \n");

				report.detailsAppend("TC153-Smoke_Account",
						"Verify if user is able to click on the close button over Share Your Bet popup on the Open Bets section ",
						"Verified user able to click on the close button over Share Your Bet popup on the Open Bets section",
						"Pass");

			} else {
				System.out.println(" Close btn In Share Bet Popup Not Clicked \n");

				report.detailsAppend("TC153-Smoke_Account",
						"Verify if user is able to click on the close button over Share Your Bet popup on the Open Bets section ",
						"Verified user Not able to click on the close button over Share Your Bet popup on the Open Bets section",
						"Fail");
			}

			// Tc 154:Verify if user is able to click on the Cross button over Share Your
			// Bet popup on the Open Bets section and clickable.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("ShareBtnInOpenBet"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("ShareBtnInOpenBet"))).click();
				System.out.println(" Share btn InOpenbet is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("CrossBtnInSharePopup"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("CrossBtnInSharePopup"))).click();
					System.out.println(" Cross btn In Share Bet Popup is Clicked \n");

					report.detailsAppend("TC154-Smoke_Account",
							"Verify if user is able to click on the Cross button over Share Your Bet popup on the Open Bets section ",
							"Verified user able to click on the Cross button over Share Your Bet popup on the Open Bets section",
							"Pass");

				} else {
					System.out.println(" Cross btn In Share Bet Popup Not Clicked \n");

					report.detailsAppend("TC154-Smoke_Account",
							"Verify if user is able to click on the Cross button over Share Your Bet popup on the Open Bets section ",
							"Verified user Not able to click on the Cross button over Share Your Bet popup on the Open Bets section",
							"Fail");
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
					System.out.println(" MyBet Popup Close Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					webdriver.navigate().refresh();
					System.out.println(" MyBet Popup Close Btn Not Clicked \n");

				}

			} else {
				System.out.println(" Share Btn in Open bet nto clicked \n ");
				report.detailsAppend("TC154-Smoke_Account",
						"Verify if user is able to click on the Cross button over Share Your Bet popup on the Open Bets section ",
						"Verified user Not able to click on the Cross button over Share Your Bet popup on the Open Bets section",
						"Fail");
			}

			// Tc 155:Verify Win Boost button is present on the Open Bets section and
			// clickable.

			Thread.sleep(3000);
			BSoddsInBetBook();
			Thread.sleep(3000);
			BetslipClick();
			Thread.sleep(3000);
			BetSlipClose();

			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
					System.out.println(" My Bet Button from hamburgermenu is clicked \n");
				} else {
					System.out.println(" My Bet Button from hamburgermenu Not clicked \n");

				}
				Thread.sleep(4000);
				try {
					webdriver.findElement(By.xpath(XpathMap.get("WinboostInOpenbet"))).click();
					System.out.println(" Winboost btn In Open Bet is Clicked \n");
					Thread.sleep(3000);
					report.detailsAppend("TC155-Smoke_Account",
							"Verify if user is able to click on the Win Boost button is present on the Open Bets section ",
							"Verified user able to click on the Win Boost button and present on the Open Bets section",
							"Pass");

				} catch (Exception e) {
					System.out.println(" Winboost btn In Open Bet Not Visible in MY bet \n");

					report.detailsAppend("TC155-Smoke_Account",
							"Verify if user is able to click on the Win Boost button is present on the Open Bets section ",
							"Verified user Not able to click on the Win Boost button Not present on the Open Bets section",
							"Fail");
				}

			} else {
				System.out.println(" HamburgerMenu Btn in Homepage Not Clicked \n");

			}

			// Tc 156:Verify Continue button is present over the Win Boost and clickable.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("ContinueBtnInWinboost"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("ContinueBtnInWinboost"))).click();
				System.out.println(" Continue button over the Win Boost is Clicked \n");
				Thread.sleep(3000);
				report.detailsAppend("TC156-Smoke_Account",
						"Verify if user is able to click on the Continue button is present over the Win Boost",
						"Verified user able to click on the Continue button is present over the Win Boost", "Pass");

			} else {
				System.out.println(" Continue button over the Win Boost Not Visible \n");

				report.detailsAppend("TC156-Smoke_Account",
						"Verify if user is able to click on the Continue button is present over the Win Boost",
						"Verified user Not able to click on the Continue button is present over the Win Boost and Not display",
						"Fail");
			}

			// Tc 157:Verify Bet Saver button is present over the Win Boost and clickable.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("WinboostInOpenbet"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("WinboostInOpenbet"))).click();
				System.out.println(" Winboost btn In Open Bet is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("BetSaverInWinBoostPopup"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BetSaverInWinBoostPopup"))).click();
					System.out.println(" Bet Saver btn in Win Boost is Clicked \n");
					Thread.sleep(3000);
					report.detailsAppend("TC157-Smoke_Account",
							"Verify if user is able to click on the Bet Saver button is present over the Win Boost",
							"Verified user able to click on the Bet Saver button and presented over the Win Boost",
							"Pass");

				} else {
					System.out.println(" Bet Saver btn in Win Boost Not Clicked \n");

					report.detailsAppend("TC157-Smoke_Account",
							"Verify if user is able to click on the Bet Saver button is present over the Win Boost ",
							"Verified user Not able to click on the Bet Saver button Not present over the Win Boost",
							"Fail");
				}

			} else {
				System.out.println(" Winboost btn In Open Bet Not Visible to Click \n");

				report.detailsAppend("TC157-Smoke_Account",
						"Verify if user is able to click on the Bet Saver button is present over the Win Boost ",
						"Verified user Not able to click on the Bet Saver button Not present over the Win Boost",
						"Fail");
			}

			// Tc 158:Verify the Close button is present over the Win Boost and clickable.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("CloseBtnInWinBoostPopup"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("CloseBtnInWinBoostPopup"))).click();
				System.out.println(" Close button over the Win Boost is Clicked \n");
				Thread.sleep(3000);
				report.detailsAppend("TC158-Smoke_Account",
						"Verify if user is able to click on the Close button is present over the Win Boost ",
						"Verified user able to click on the Close button and present over the Win Boost", "Pass");

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
					System.out.println(" MyBet Popup Close Btn is Clicked \n");
					Thread.sleep(3000);
				} else {
					webdriver.navigate().refresh();
					System.out.println(" MyBet Popup Close Btn Not Clicked \n");

				}

			} else {
				System.out.println(" Close button over the Win Boost Not Clicked and Not display \n");

				report.detailsAppend("TC158-Smoke_Account",
						"Verify if user is able to click on the Close button is present over the Win Boost ",
						"Verified user Not able to click on the Close button Not present over the Win Boost", "Fail");
			}

			// Tc 159:Verify Bet Saver button is present on the Open Bets section and
			// clickable.

			Thread.sleep(3000);
			BSoddsInBetBook();
			Thread.sleep(3000);
			BetslipClick();
			Thread.sleep(2000);
			BetSlipClose();
			Thread.sleep(2000);
			try {
//				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(4000);

				if (webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
					System.out.println(" My Bet Button from hamburgermenu is clicked \n");
					Thread.sleep(5000);
				} else {
					System.out.println(" My Bet Button from hamburgermenu Not clicked \\n");
				}

				if (webdriver.findElement(By.xpath(XpathMap.get("BetSaverInOpenBetsection"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BetSaverInOpenBetsection"))).click();
					System.out.println(" BetSaver In OpenBet Section is Clicked \n");
					Thread.sleep(2000);

					report.detailsAppend("TC159-Smoke_Account",
							"Verify Bet Saver button is present on the Open Bets section and clickable.",
							"Verified Bet Saver button present on the Open Bets section and clickable.", "Pass");

					Thread.sleep(2000);
					if (webdriver.findElement(By.xpath(XpathMap.get("CloseBtnInWinBoostPopup"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("CloseBtnInWinBoostPopup"))).click();
						System.out.println(" Close button over the Win Boost is Clicked \n");

					} else {
						System.out.println(" Close button over the Win Boost is Clicked \n");

					}

					Thread.sleep(2000);
					if (webdriver.findElement(By.xpath(XpathMap.get("AccountMyBetBtn"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("AccountMyBetBtn"))).click();
						System.out.println(" My Bet Button from Account is clicked \n");
						Thread.sleep(2000);
					} else {
						System.out.println(" My Bet Button from Account Not clicked \n");
					}

				} else {
					System.out.println(" BetSaver In OpenBet Section not displyed \n");
					report.detailsAppend("TC159-Smoke_Account",
							"Verify Bet Saver button is present on the Open Bets section and clickable.",
							"Verified Bet Saver button Not present on the Open Bets section and Not clickable.",
							"Fail");

					Thread.sleep(1000);
					webdriver.findElement(By.xpath(XpathMap.get("CloseBtnInWinBoostPopup"))).click();
					System.out.println(" Close button over the Win Boost is Clicked \n");
				}

			} catch (Exception e) {

				report.detailsAppend("TC159-Smoke_Account",
						"Verify Bet Saver button is present on the Open Bets section and clickable.",
						"Verified Bet Saver button Not present on the Open Bets section and Not clickable.", "Fail");
				System.out.println(e + " HamburgerMenu Btn in Homepage Not Clicked \n");

			}

			// Tc 160:Verify Wager Amount, Potential Return, Win Boost,Total Betway Return
			// values are present on the Open Bets section.

			Thread.sleep(2000);
			if (webdriver.findElement(By.xpath(XpathMap.get("OpenBets"))).isDisplayed()) {
				System.out.println(" OpenBets section in my bet is displayed /n ");
				Thread.sleep(3000);
				report.detailsAppend("TC160-Smoke_Account",
						"Verify Wager Amount, Potential Return, Win Boost,Total Betway Return values are present on the Open Bets section.",
						"Verify Wager Amount, Potential Return, Win Boost,Total Betway Return values are present on the Open Bets section.",
						"Pass");

			} else {
				System.out.println(" OpenBets section in my bet is displayed /n ");

				report.detailsAppend("TC160-Smoke_Account",
						"Verify Wager Amount, Potential Return, Win Boost,Total Betway Return values are present on the Open Bets section.",
						"Verified Wager Amount, Potential Return, Win Boost,Total Betway Return values Not present on the Open Bets section.",
						"Fail");
			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
				System.out.println(" MyBet Popup Close Btn is Clicked \n");
				Thread.sleep(3000);
			} else {
				webdriver.navigate().refresh();
				System.out.println(" MyBet Popup Close Btn Not Clicked \n");

			}

			log.debug("Switch to default tab");

		} catch (Exception e) {

			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			System.out.println("Sport Button is clicked \n");
			log.debug("Switch to default tab");
			return false;
		}
		return true;
	}

	public void SM_CashoutInMybet() throws Exception {
		webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		try {
			Thread.sleep(3000);
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
			System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
			Thread.sleep(3000);

			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
			System.out.println(" My Bet Button from hamburgermenu is clicked \n");

		} catch (Exception e) {
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("MyBetsHeader"))).click();
			System.out.println(" My Bet Button from Homepage is clicked \n");
		}

		Thread.sleep(3000);
		JavascriptExecutor je = (JavascriptExecutor) webdriver;
		for (int i = 0; i <= 4; i++) {
			Thread.sleep(3000);
			try {
				if (webdriver.findElement(By.xpath(XpathMap.get("CashoutMyBet" + i))).isDisplayed()) {
					System.out.print("CashoutMyBet" + i + " is Present");
					webdriver.findElement(By.xpath(XpathMap.get("CashoutMyBet" + i))).click();
					break;
				} else {
					System.out.println("CashoutMyBet" + i + " is not visible");
				}

				if (i % 2 == 1) {
					je.executeScript("window.scrollBy(0,200)");

				} else {
					System.out.println("CashoutMyBet" + i + " is not visible");
				}

			} catch (Exception e) {
				System.out.println(" My Bet Pupup Cashout not clicked \n");
			}
		}

		Thread.sleep(3000);
		try {
			WebElement ContinueBtninCashout = webdriver.findElement(By.xpath(XpathMap.get("ContinueInCashout")));
			((JavascriptExecutor) webdriver).executeScript("arguments[0].click();", ContinueBtninCashout);
			System.out.println(" Confirm Btn in Cask Out is clicked \n");
			Thread.sleep(3000);
		} catch (Exception e) {
			System.out.println(" Confirm Btn in Cask Out Not clicked \n");

		}

		Thread.sleep(3000);
		try {
			WebElement AftercashOutBtn = webdriver.findElement(By.xpath(XpathMap.get("AftercashOutContinuebtn")));
			((JavascriptExecutor) webdriver).executeScript("arguments[0].click();", AftercashOutBtn);
			System.out.println(" Continue Btn After Cask Out is clicked \n");
			Thread.sleep(3000);
		} catch (Exception e) {
			System.out.println(" Continue Btn After Cask Out Not clicked \n");

		}

		webdriver.navigate().refresh();
	}

//////////////   MY Bet Account Option in Settle bet Section    ////////////

// TC161-168 (Smoke_Account) @Author: AS66528

	public boolean SM_MybetSettleBetSection(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			// TC161 :Verify user is able to edit the placed bet on the Open Bets section.

			SM_MultiBet();
			try {
				Thread.sleep(3000);
				SM_CashoutInMybet();
			} catch (Exception e) {
				System.out.println(e + "cashout not clicked in my bet");
			}

			Thread.sleep(3000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

//			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
				System.out.println(" My Bet Button from hamburgermenu is clicked \n");

				Thread.sleep(3000);
				try {
					Assert.assertTrue(
							webdriver.findElement(By.xpath(XpathMap.get("MultibetDDinOpenbet"))).isDisplayed());
					webdriver.findElement(By.xpath(XpathMap.get("MultibetDDinOpenbet"))).click();
					System.out.println(" Multibet dropdown is Clicked \n");
					Thread.sleep(3000);

				} catch (Exception e) {
					System.out.println(" Multibet dropdown is Clicked \n");

				}
				Thread.sleep(3000);
				try {
					WebElement EditBetInOpenbet = webdriver.findElement(By.xpath(XpathMap.get("EditBetBtnInOpenbet")));
					((JavascriptExecutor) webdriver).executeScript("arguments[0].click();", EditBetInOpenbet);
					System.out.println(" Edit Bet Btn InOpenbet is Clicked \n");
					Thread.sleep(3000);

					report.detailsAppend("TC161-Smoke_Account",
							"Verify user is able to edit the placed bet on the Open Bets section.",
							"Verified user able to edit the placed bet on the Open Bets section.", "Pass");

					// TC 162 : Verify user is able to edit only two legs from the placed bet on the
					// Open Bets section.

					Thread.sleep(3000);
					try {
						Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("RemoveButton"))).isDisplayed());
						webdriver.findElement(By.xpath(XpathMap.get("RemoveButton"))).click();
						System.out.println(" Edit Bet Popup is Closed \n");
						Thread.sleep(3000);

						report.detailsAppend("TC162-Smoke_Account",
								"Verify user is able to edit only two legs from the placed bet on the Open Bets section.",
								"Verified user able to edit only two legs from the placed bet on the Open Bets section.",
								"Pass");

						Thread.sleep(1000);
						if (webdriver.findElement(By.xpath(XpathMap.get("RemovebetPopupClose"))).isDisplayed()) {
							webdriver.findElement(By.xpath(XpathMap.get("RemovebetPopupClose"))).click();
							System.out.println("Removebet Popup Close is Clicked \n");
							Thread.sleep(1000);

						} else {
							System.out.println("Removebet Popup Close is Clicked \n");
						}

					} catch (Exception e) {
						report.detailsAppend("TC162-Smoke_Account",
								"Verify user is able to edit only two legs from the placed bet on the Open Bets section.",
								"Verified user Not able to edit only two legs from the placed bet on the Open Bets section.",
								"Fail");

						System.out.println(e + " Edit Bet Popup Not Closed \n");

					}

				} catch (Exception e) {
					System.out.println(e + " Edit Bet Btn InOpenbet is Clicked \n");

					report.detailsAppend("TC161-Smoke_Account",
							"Verify user is able to edit the placed bet on the Open Bets section.",
							"Verified user Not able to edit the placed bet on the Open Bets section.", "Fail");

					report.detailsAppend("TC162-Smoke_Account",
							"Verify user is able to edit only two legs from the placed bet on the Open Bets section.",
							"Verified user Not able to edit only two legs from the placed bet on the Open Bets section.",
							"Fail");
				}

			} catch (Exception e) {
				System.out.println(e + " HamburgerMenu Btn in Homepage is Clicked \n");

			}

			// TC 163 : Verify all, Cash Out, Win, Loss radio buttons are present on the
			// Settled Bets section and clickable.

			Thread.sleep(3000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("SettledBets"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SettledBets"))).click();
				System.out.println(" Settled Bet Section is Clicked \n");
				Thread.sleep(3000);

			} catch (Exception e) {
				Thread.sleep(3000);
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(1000);

				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("MyBetButtonInAccount"))).click();
				System.out.println(" My Bet Button from hamburgermenu is clicked \n");

			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("LossButtonInSettlebet"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("LossButtonInSettlebet"))).click();
				System.out.println(" LossButton in Settled Bet Section is Clicked \n");
				Thread.sleep(1000);

				report.detailsAppend("TC163[1]-Smoke_Account",
						"Verify Loss radio buttons are present on the Settled Bets and clickable.",
						"Verified Loss radio buttons are present on the Settled Bets and clickable.", "Pass");

			} else {
				System.out.println(" LossButton in Settled Bet Section Not Clicked \n");
				report.detailsAppend("TC163[1]-Smoke_Account",
						"Verify Loss radio buttons are present on the Settled Bets and clickable.",
						"Verified Loss radio buttons are present on the Settled Bets and Not clickable.", "Fail");
			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("WinButtonInSettlebet"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("WinButtonInSettlebet"))).click();
				System.out.println(" WinButton in Settled Bet Section is Clicked \n");
				Thread.sleep(1000);

				report.detailsAppend("TC163[2]-Smoke_Account",
						"Verify Win radio buttons are present on the Settled Bets and clickable.",
						"Verified Win radio buttons are present on the Settled Bets and clickable.", "Pass");

			} else {
				System.out.println(" WinButton in Settled Bet Section Not Clicked \n");
				report.detailsAppend("TC163[2]-Smoke_Account",
						"Verify Win radio buttons are present on the Settled Bets and clickable.",
						"Verified Win radio buttons are present on the Settled Bets and Not clickable.", "Fail");
			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("CashOutButton"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("CashOutButton"))).click();
				System.out.println(" CashOutButton in Settled Bet Section is Clicked \n");
				Thread.sleep(1000);

				report.detailsAppend("TC163[3]-Smoke_Account",
						"Verify CashOut radio buttons are present on the Settled Bets and clickable.",
						"Verified CashOut radio buttons are present on the Settled Bets and clickable.", "Pass");

			} else {
				System.out.println(" CashOutButton in Settled Bet Section Not Clicked \n");
				report.detailsAppend("TC163[3]-Smoke_Account",
						"Verify CashOut radio buttons are present on the Settled Bets and clickable.",
						"Verified CashOut radio buttons are present on the Settled Bets and Not clickable.", "Fail");
			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("AllRadioButton"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("AllRadioButton"))).click();
				System.out.println(" AllRadio Button in Settled Bet Section is Clicked \n");
				Thread.sleep(1000);

				report.detailsAppend("TC163[4]-Smoke_Account",
						"Verify All radio buttons are present on the Settled Bets and clickable.",
						"Verified All radio buttons are present on the Settled Bets and clickable.", "Pass");

			} else {
				System.out.println(" AllRadio Button in Settled Bet Section Not Clicked \n");
				report.detailsAppend("TC163[4]-Smoke_Account",
						"Verify All radio buttons are present on the Settled Bets and clickable.",
						"Verified All radio buttons are present on the Settled Bets and Not clickable.", "Fail");
			}

			// TC 164: Verify Hide Losses toggle button is present on the Settled Bets
			// section and clickable.

			Thread.sleep(3000);
			try {
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				WebElement hidelossbtn = webdriver.findElement(By.xpath(XpathMap.get("HideLossesCheckBox")));
				je.executeScript("arguments[0].click()", hidelossbtn);
				Thread.sleep(3000);

				report.detailsAppend("TC164-Smoke_Account",
						"Verify Hide Losses toggle button is present on the Settled Bets section and clickable",
						"Verified Hide Losses toggle button present on the Settled Bets section and clickable", "Pass");

			} catch (Exception e) {
				System.out.println(e + " HideLossesCheckBox in Settled Bet Section Not Clicked \n");

				report.detailsAppend("TC164-Smoke_Account",
						"Verify Hide Losses toggle button is present on the Settled Bets section and clickable",
						"Verified Hide Losses toggle button present on the Settled Bets section and Not clickable",
						"Fail");
			}

			// TC 165,166: Verify Rebet button is present on the Settled Bets section and
			// clickable.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("RebetOptionInSettlebet"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("RebetOptionInSettlebet"))).click();
				System.out.println(" RebetOption in Settled Bet Section is Clicked \n");
				Thread.sleep(1000);

				report.detailsAppend("TC165-Smoke_Account",
						"Verify Rebet button is present on the Settled Bets section and clickable.",
						"Verified Rebet button present on the Settled Bets section and clickable.", "Pass");

				report.detailsAppend("TC166-Smoke_Account",
						"Verify Rebet button is present on the Settled Bets section and clickable.",
						"Verified Rebet button present on the Settled Bets section and clickable.", "Pass");

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
					System.out.println(" MyBet Popup Close Btn is Clicked \n");
					Thread.sleep(1000);
				} else {
					webdriver.navigate().refresh();
					System.out.println(" MyBet Popup Close Btn Not Clicked \n");

				}

				// TC 167: Verify user is able to place a bet using rebet option on the Settled
				// Bets section and clickable.
				try {

					Thread.sleep(3000);
					if (webdriver.findElement(By.xpath(XpathMap.get("BetNowBS"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("BetNowBS"))).click();
						Thread.sleep(3000);
					} else {
						throw new Exception("Bet now Button is not present");
					}
					Thread.sleep(3000);
					try {
						webdriver.findElement(By.xpath(XpathMap.get("ConfirmBetBtn"))).click();
						System.out.println("ConfirmBetBtn button is clicked \n");
						Thread.sleep(3000);
						if (webdriver.findElement(By.xpath(XpathMap.get("ConfirmBetBtn"))).isDisplayed()) {
							webdriver.findElement(By.xpath(XpathMap.get("ConfirmBetBtn"))).click();
							System.out.println("ConfirmBetBtn button Again clicked \n");
							Thread.sleep(3000);
						} else {
							System.out.println("ConfirmBetBtn button Not Displayed \n");
						}

					} catch (Exception e) {
						System.out.println("ConfirmBetBtn button NOt clicked \n");
					}

					Thread.sleep(3000);
					report.detailsAppend("TC167-SM_BetSlipBeforeLogin",
							"Verify user is able to place a bet using rebet option on the Settled Bets section and clickable.",
							"User able to place a bet using rebet option on the Settled Bets section and clickable.",
							"Pass");

					Thread.sleep(3000);
					try {
						webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).click();
						System.out.println(" Betnow Popup Close Button is Clicked \n");
						Thread.sleep(3000);
					} catch (Exception e) {
						webdriver.navigate().refresh();
						System.out.println(" Betnow Popup Close Button not Clicked \n");
					}

				} catch (Exception e) {
					System.out.println(e + "Cant Rebet bec Odds not placed");

					report.detailsAppend("TC167-SM_BetSlipBeforeLogin",
							"Verify user is able to place a bet using rebet option on the Settled Bets section and clickable.",
							"User Not able to place a bet using rebet option on the Settled Bets section and Not clickable.",
							"Fail");
				}

			} else {
				System.out.println(" RebetOption in Settled Bet Section Not Clicked \n");

				report.detailsAppend("TC165-Smoke_Account",
						"Verify Rebet button is present on the Settled Bets section and clickable.",
						"Verified Rebet button Not present on the Settled Bets section and Not clickable.", "Fail");

				report.detailsAppend("TC166-Smoke_Account",
						"Verify Rebet button is present on the Settled Bets section and clickable.",
						"Verified Rebet button Not present on the Settled Bets section and Not clickable.", "Fail");

				report.detailsAppend("TC167-SM_BetSlipBeforeLogin",
						"Verify user is able to place a bet using rebet option on the Settled Bets section and clickable.",
						"User Not able to place a bet using rebet option on the Settled Bets section and Not clickable.",
						"Fail");

			}

			Thread.sleep(3000);
			log.debug("Switch to default tab");

		} catch (

		Exception e) {

			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			System.out.println("Sport Button is clicked \n");
			log.debug("Switch to default tab");
			return false;
		}
		return true;
	}

////// TC168 (Smoke_Account) @Author: AS66528

	public boolean SM_BetInfluencerAvailableButtons(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

			// TC168 :Verify the Summary and Details buttons are present on the Bet
			// Influencer field and clickable.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("HMBetInfluencerBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMBetInfluencerBtn"))).click();
					System.out.println(" Influencer Button from hamburgermenu is clicked \n");
					Thread.sleep(4000);

					report.detailsAppend("TC168[1]-Smoke_Account",
							"Verify the Summary buttons are present on the Bet Influencer field and clickable.",
							"Verified the Summary buttons are present on the Bet Influencer field and clickable.",
							"Pass");

					try {
						Thread.sleep(3000);
						JavascriptExecutor js = (JavascriptExecutor) webdriver;
						String shadowHost = "return document.querySelector(\"#accountOptionsModalBody > div > div.accountOptionsBody > influencer-widget\").shadowRoot.querySelector(\"div.bg-white.py-2.flex.justify-center.header > div > button:nth-child(2) > span > span\")";
						Thread.sleep(5000);
						WebElement shadowRoot = (WebElement) js.executeScript(shadowHost);
						Thread.sleep(3000);
						shadowRoot.click();
						Thread.sleep(3000);

						System.out.print(" Deatils Btn In bet Influencer is Clicked \n");
						report.detailsAppend("TC168[2]-Smoke_Account",
								"Verify the Deatils buttons are present on the Bet Influencer field and clickable.",
								"Verified the Deatils buttons are present on the Bet Influencer field and clickable.",
								"Pass");

					} catch (Exception e) {
						System.out.println(e + " Deatils Btn In bet Influencer Not Clicked \n");

						report.detailsAppend("TC168[2]-Smoke_Account",
								"Verify the Deatils buttons are present on the Bet Influencer field and clickable.",
								"Verified the Deatils buttons are present on the Bet Influencer field and clickable.",
								"Fail");
					}

					Thread.sleep(3000);
					if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
						System.out.println(" MyBet Popup Close Btn is Clicked \n");
						Thread.sleep(3000);
					} else {
						webdriver.navigate().refresh();
						System.out.println(" MyBet Popup Close Btn Not Clicked \n");

					}

				} else {
					System.out.println(" Influencer Button from hamburgermenu is clicked \n");

					report.detailsAppend("TC168[1]-Smoke_Account",
							"Verify the Summary buttons are present on the Bet Influencer field and clickable.",
							"Verified the Summary buttons are present on the Bet Influencer field and Not clickable.",
							"Fail");

					report.detailsAppend("TC168[2]-Smoke_Account",
							"Verify the Deatils buttons are present on the Bet Influencer field and clickable.",
							"Verified the Deatils buttons are present on the Bet Influencer field and clickable.",
							"Fail");

				}

			} else {
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");

			}

			Thread.sleep(3000);
			log.debug("Switch to default tab");

		} catch (Exception e) {

			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			System.out.println("Sport Button is clicked \n");
			log.debug("Switch to default tab");
			return false;
		}
		return true;
	}

////// TC187-188 (Smoke_Account) @Author: AS66528

	public boolean SM_SportBonus(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			// TC187: Verify Active-Upcoming and Completed buttons are present on the Sport
			// Bonus filed and clickable.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				Thread.sleep(3000);

				if (webdriver.findElement(By.xpath(XpathMap.get("HMBonusSummaryBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("HMBonusSummaryBtn"))).click();
					System.out.println(" BonusSummary Button from hamburgermenu is clicked \n");
					Thread.sleep(4000);

					report.detailsAppend("TC187[1]-Smoke_Account",
							"Verify the ActiveBonus buttons are present on the Sport Bonus filed and clickable.",
							"Verified the ActiveBonus buttons presented on the Sport Bonus filed and clickable.",
							"Pass");

					Thread.sleep(3000);
					if (webdriver.findElement(By.xpath(XpathMap.get("CompleteBtnInSportBonus"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("CompleteBtnInSportBonus"))).click();
						System.out.println(" Complete Button on Sport Bonus filed is clicked \n");
						Thread.sleep(3000);

						report.detailsAppend("TC187[2]-Smoke_Account",
								"Verify the Complete buttons are present on the Sport Bonus filed and clickable.",
								"Verified the Complete buttons presented on the Sport Bonus filed and clickable.",
								"Pass");

					} else {
						System.out.println(" Complete Button on Sport Bonus filed Not clicked \n");
						report.detailsAppend("TC187[2]-Smoke_Account",
								"Verify the Complete buttons are present on the Sport Bonus filed and clickable.",
								"Verified the Complete buttons presented on the Sport Bonus filed and Not clickable.",
								"Fail");
					}

					// TC 188: Verify Sport Bonus card is present with all the details.

					Thread.sleep(3000);
					if (webdriver.findElement(By.xpath(XpathMap.get("ActiveUpcomingBtnInSportBonus"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("ActiveUpcomingBtnInSportBonus"))).click();
						System.out.println(" ActiveUpcoming in Sport Bonus clicked \n");
						Thread.sleep(3000);

						try {
							Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("IiconInSportActiveBonus")))
									.isDisplayed());
							webdriver.findElement(By.xpath(XpathMap.get("IiconInSportActiveBonus"))).click();
							System.out.println(" Sport Bonus card is present with all the details \n");
							Thread.sleep(3000);

							report.detailsAppend("TC188-Smoke_Account",
									"Verify Sport Bonus card is present with all the details.",
									"Verified Sport Bonus card present with all the details.", "Pass");

						} catch (Exception e) {
							System.out.println(e + " Sport Bonus card Not present with all the details \n");

							report.detailsAppend("TC188-Smoke_Account",
									"Verify Sport Bonus card is present with all the details.",
									"Verified Sport Bonus card Not present with all the details.", "Fail");
						}

					} else {
						System.out.println(" ActiveUpcoming in Sport Bonus clicked \n");
						report.detailsAppend("TC188-Smoke_Account",
								"Verify Sport Bonus card is present with all the details.",
								"Verified Sport Bonus card Not present with all the details.", "Fail");
					}

				} else {
					System.out.println(" BonusSummary Button from hamburgermenu Not clicked \n");
					report.detailsAppend("TC187[1]-Smoke_Account",
							"Verify the ActiveBonus buttons are present on the Sport Bonus filed and clickable.",
							"Verified the ActiveBonus buttons presented on the Sport Bonus filed andNot clickable.",
							"Fail");

					report.detailsAppend("TC187[2]-Smoke_Account",
							"Verify the Complete buttons are present on the Sport Bonus filed and clickable.",
							"Verified the Complete buttons presented on the Sport Bonus filed and Not clickable.",
							"Fail");

					report.detailsAppend("TC188-Smoke_Account",
							"Verify Sport Bonus card is present with all the details.",
							"Verified Sport Bonus card Not present with all the details.", "Fail");
					webdriver.navigate().refresh();

				}

			} else {
				System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
				webdriver.navigate().refresh();
			}

			Thread.sleep(3000);
			log.debug("Switch to default tab");

		} catch (Exception e) {

			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			System.out.println("Sport Button is clicked \n");
			log.debug("Switch to default tab");
			return false;
		}
		return true;
	}

////// TC189-190 (Smoke_Account) @Author: AS66528

	public boolean SM_ManagePassword(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

			// TC189: Verify the Im not robot captcha is present on the Manage Password
			// field and clickable.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("AccountManagePasswordBtn"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("AccountManagePasswordBtn"))).click();
				System.out.println("  Manage Password Button from MYBet is clicked  \n");
				Thread.sleep(3000);

			} else {
				if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
					System.out.println(" HamburgerMenu Btn in Homepage is Clicked \n");
					Thread.sleep(3000);

					if (webdriver.findElement(By.xpath(XpathMap.get("HMManagePasswordBtn"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("HMManagePasswordBtn"))).click();
						System.out.println(" Manage Password Button from hamburgermenu is clicked \n");
						Thread.sleep(4000);

					} else {
						System.out.println(" Manage Password Button from hamburgermenu Not clicked \n");
					}

				} else {
					System.out.println(" HamburgerMenu Btn in Homepage Not Clicked \n");
				}

			}

			// TC 189 : Verify the Im not robot captcha is present on the Manage Password
			// field and clickable.
			Thread.sleep(3000);
			try {
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("ManagePasswordCaptchaBox"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("ManagePasswordCaptchaBox"))).click();
				System.out.println(" Password CaptchaBox is clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC189-Smoke_Account",
						"Verify the I am not robot captcha is present on the Manage Password field and clickable.",
						"Verified I am not robot captcha is present on Manage Password Window and clickable.", "Pass");

			} catch (Exception e) {
				System.out.println(e + " Password CaptchaBox Not clicked \n");
				report.detailsAppend("TC189-Smoke_Account",
						"Verify the I am not robot captcha is present on the Manage Password field and clickable.",
						"Verified I am not robot captcha is present on the Manage Password Window and Not clickable.",
						"Fail");

				webdriver.findElement(By.xpath(XpathMap.get("ManagePasswordCaptchaBox"))).click();
				Thread.sleep(1000);
			}

			// TC 190 : Verify Password Reset button is present on the Manage Password
			// Window
			// and clickable.
			Thread.sleep(3000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("PasswordResetBtn"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("PasswordResetBtn"))).click();
				System.out.println(" PasswordReset Button on Manage Passwor filed is clicked \n");
				Thread.sleep(3000);

				report.detailsAppend("TC190-Smoke_Account",
						"Verify Password Reset button is present on the Manage Password Window and clickable.",
						"Verified Password Reset button present on the Manage Password Window and clickable.", "Pass");

			} catch (Exception e) {
				System.out.println(e + " PasswordReset Button on Manage Passwor filed Not clicked \n");
				report.detailsAppend("TC190-Smoke_Account",
						"Verify Password Reset button is present on the Manage Password Window and clickable.",
						"Verified Password Reset button Not Visible on the Manage Password Window and Not clickable.",
						"Fail");
			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
				System.out.println(" MyBet Popup Close Btn is Clicked \n");
				Thread.sleep(3000);
			} else {
				webdriver.navigate().refresh();
				System.out.println(" MyBet Popup Close Btn Not Clicked \n");

			}

			Thread.sleep(3000);
			log.debug("Switch to default tab");

		} catch (Exception e) {

			webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			System.out.println("Sport Button is clicked \n");
			log.debug("Switch to default tab");
			return false;
		}
		return true;
	}

/////////////////////// Betslip before Login //////////////////////////////

// TC 191-196 (Smoke) @Author: AS66528
	public boolean SM_BetSlipBeforeLogin(Desktop_HTML_Report report) {
		// TC191
		// Verify if Betslip button is displayed on Carousel bar and button is
		// clickable.
		try {
			webdriver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);
			HM_Logout();
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("BetslipBtnInHeader"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("BetslipBtnInHeader"))).click();
				Thread.sleep(3000);
			} else {
				throw new Exception("BetslipOdds is not present");
			}
			report.detailsAppend("TC191-SM_BetSlipBeforeLogin",
					"Verify if Betslip button is displayed on Carousel bar and button is clickable.",
					"User can able to see and click Betslip button is on Carousel bar.", "Pass");
		} catch (Exception e) {
			report.detailsAppend("TC191-SM_BetSlipBeforeLogin",
					"Verify if Betslip button is displayed on Carousel bar and button is clickable.",
					"User can able to see and click Betslip button is on Carousel bar.", "Fail");
		}

		// TC192
		// Verify if Single Bet button is displayed on betslip and button is clickable.
		try {
			if (webdriver.findElement(By.xpath(XpathMap.get("SingleBetBS"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("SingleBetBS"))).click();
				Thread.sleep(3000);
			} else {
				throw new Exception("MultiBetBS is not present");
			}
			report.detailsAppend("TC192-SM_BetSlipBeforeLogin",
					"Verify if Single Bet button is displayed on betslip and button is clickable..",
					"User can able to see and click Single bet button on Betslip.", "Pass");
		} catch (Exception e) {
			report.detailsAppend("TC192-SM_BetSlipBeforeLogin",
					"Verify if Single Bet button is displayed on betslip and button is clickable..",
					"User can able to see and click Single bet button on Betslip.", "Fail");
		}
		// TC193
		// Verify if Multi Bet button is displayed on betslip and button is clickable.
		try {
			if (webdriver.findElement(By.xpath(XpathMap.get("MultiBetBS"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("MultiBetBS"))).click();
				Thread.sleep(3000);
			} else {
				throw new Exception("MultiBetBS is not present");
			}
			report.detailsAppend("TC193-SM_BetSlipBeforeLogin",
					"Verify if Multi Bet button is displayed on betslip and button is clickable..",
					"User can able to see and click Multi bet button on Betslip.", "Pass");
		} catch (Exception e) {
			report.detailsAppend("TC193-SM_BetSlipBeforeLogin",
					"Verify if Multi Bet button is displayed on betslip and button is clickable..",
					"User can able to see and click Multi bet button on Betslip.", "Fail");
		}
		// TC194
		// Verify if text field button is displayed below the Single and Multi Bet
		// buttons is displayed and user can enter code.
		try {
			if (webdriver.findElement(By.xpath(XpathMap.get("BookingCodeTB"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("BookingCodeTB"))).sendKeys("U67TRJ7");
				Thread.sleep(3000);
			} else {
				throw new Exception("BookingCodeTB is not present");
			}
			if (webdriver.findElement(By.xpath(XpathMap.get("SearchBtnBS"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("SearchBtnBS"))).click();
				Thread.sleep(3000);
			} else {
				throw new Exception("SearchBtnBS is not present");
			}
			report.detailsAppend("TC194-SM_BetSlipBeforeLogin",
					"Verify if text field button is displayed below the Single and Multi Bet buttons is displayed and user can enter code.",
					"User can able to see and enter text in Booking code Text box below the single and Multibet buttons.",
					"Pass");

		} catch (Exception e) {
			report.detailsAppend("TC194-SM_BetSlipBeforeLogin",
					"Verify if text field button is displayed below the Single and Multi Bet buttons is displayed and user can enter code.",
					"User can able to see and enter text in Booking code Text box below the single and Multibet buttons.",
					"Fail");
		}

		// TC195
		// Verify if Load button is displayed below Booking Code field and is clickable.
		try {
			if (webdriver.findElement(By.xpath(XpathMap.get("LoadBtnInBS"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("LoadBtnInBS"))).click();
				Thread.sleep(3000);
			} else {
				throw new Exception("MultiBetBS is not present");
			}
			report.detailsAppend("TC195-SM_BetSlipBeforeLogin",
					"Verify if Load button is displayed below Booking Code field and is clickable.",
					"User can able to see and click Load button on Betslip.", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC195-SM_BetSlipBeforeLogin",
					"Verify if Load button is displayed below Booking Code field and is clickable.",
					"User can able to see and click Load button on Betslip.", "Fail");
		}

		// TC196
		// Verify if Login button is displayed upon clicking on Bet Now button.
		try {
			oddsInBetBook();
			Thread.sleep(3000);

			try {
				webdriver.findElement(By.xpath(XpathMap.get("MultiBetBS"))).click();
				Thread.sleep(1000);
			} catch (Exception e) {
				System.out.println(e + "MultiBetBS button is not present");
			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("BetNowBS"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("BetNowBS"))).click();
				Thread.sleep(3000);
			} else {
				throw new Exception("Bet now Button is not present");
			}

			report.detailsAppend("TC196-SM_BetSlipBeforeLogin",
					"Verify if Login button is displayed upon clicking on Bet Now button.",
					"User can able to see Login button upon clicking on Betnow on Betslip.", "Pass");

			Thread.sleep(3000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("LoginCloseButton"))).click();
				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).click();
				Thread.sleep(3000);
				HM_Login();
			} catch (Exception e) {
				HM_Login();
				throw new Exception(e + "Bet now Button is not present");
			}

		} catch (Exception e) {
			report.detailsAppend("TC196-SM_BetSlipBeforeLogin",
					"Verify if Login button is displayed upon clicking on Bet Now button.",
					"User can able to see Login button upon clicking on Betnow on Betslip.", "Fail");
		}
		return true;
	}

	public void SportBoddsInBetBook() throws Exception {
		webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
		JavascriptExecutor je = (JavascriptExecutor) webdriver;
		
		if (webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).isDisplayed()) {
			System.out.print("UpcomingTab is Present");
			webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).click();
		} else {
			throw new Exception("UpcomingTab is not present");
		}

		Thread.sleep(3000);
		for (int i = 1; i <= 4; i++) {
			Thread.sleep(2000);
			if (webdriver.findElement(By.xpath(XpathMap.get("UpcomingOdd" + i))).isDisplayed()) {
				System.out.print("UpcomingOdd" + i + " is Present");
				webdriver.findElement(By.xpath(XpathMap.get("UpcomingOdd" + i))).click();
			} else {
				throw new Exception("UpcomingOdd" + i + " is not present");
			}
			Thread.sleep(2000);
			if (i % 2 == 1) {
				je.executeScript("window.scrollBy(0,200)");
			}
		}
	}

	public void PromoClose() {
		try {
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("PromoClose"))).click();
			Thread.sleep(1000);
		} catch (Exception e) {
			System.out.print(e + "Promo Code is not present");
		}
	}

	public void oddsInBetBook() throws Exception {
		webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
		JavascriptExecutor je = (JavascriptExecutor) webdriver;
		
		if (webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).isDisplayed()) {
		    System.out.print("UpComingButton is Present");
		    webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).click();

		    int scrollAmount = 0; // Variable to store the total scroll amount

		    for (int i = 1; i <= 3; i++) {
		        try {
		            Thread.sleep(3000);
		            if (webdriver.findElement(By.xpath(XpathMap.get("UpcomingOdd" + i))).isDisplayed()) {
		                System.out.print("UpcomingOdd" + i + " is Present");
		                webdriver.findElement(By.xpath(XpathMap.get("UpcomingOdd" + i))).click();
		            } else {
		                throw new Exception("UpcomingOdd" + i + " is not present");
		            }
		        } catch (Exception e) {
		            e.printStackTrace();
		        }
		        if (i % 2 == 1) {
		            int scrollBy = 200; // Amount to scroll by
		            je.executeScript("window.scrollBy(0," + scrollBy + ")");
		            scrollAmount += scrollBy; // Accumulate the scroll amount
		        }
		    }
		    Thread.sleep(2000);

		    // Scroll back up by the accumulated scroll amount
		    je.executeScript("window.scrollBy(0,-" + scrollAmount + ")");
		} else {
		    throw new Exception("UpComingButton is not present");
		}
		
	}

	public void BetslipClick() throws Exception {
		webdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
		try {
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("BetNowButton"))).click();
				System.out.println("Betnow Button is Clicked \n");
			} else {
				System.out.println("Betnow Button Not Clicked \n");
			}
			Thread.sleep(4000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("ConfirmBetBtn"))).click();
				System.out.println("ConfirmBetBtn button is clicked \n");
				Thread.sleep(3000);
				try {
					webdriver.findElement(By.xpath(XpathMap.get("ConfirmBetBtn"))).click();
					System.out.println("ConfirmBetBtn button again clicked \n");
				} catch (Exception e) {
					System.out.println(e + "ConfirmBetBtn button Not Display again \n");
				}
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println(e + "ConfirmBetBtn button Not Display again \n");
			}

		} catch (Exception e) {
			System.out.println(e);
		}
	}

	public void BetSlipClose() throws Exception {
		webdriver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);
		try {
			Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).isDisplayed());
			webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).click();
			System.out.println(" Betnow Popup Close Button is Clicked \n");
			Thread.sleep(3000);
		} catch (Exception e) {
			Thread.sleep(1000);
			webdriver.findElement(By.xpath(XpathMap.get("ContinueBettingBtnBS"))).click();
			System.out.println(" Betnow Continous Button not Clicked \n");
			Thread.sleep(1000);
		}
	}

////////////////////// Betslip After Login //////////////////

// TC 197-212 (Smoke) @Author: AS66528

	public boolean SM_BetSlipAfterLogin(Desktop_HTML_Report report) {
		// TC-197 AS66528
		// Verify if Bestlip button is displayed on Carousel bar and button is
		// clickable.

		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			if (webdriver.findElement(By.xpath(XpathMap.get("BetslipBtnInHeader"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("BetslipBtnInHeader"))).click();
				Thread.sleep(3000);
			} else {
				throw new Exception("BetslipOdds is not present");
			}

			report.detailsAppend("TC197-SM_BetSlipLoggedIn",
					"Verify if user is able to see and click Bestlip button  displayed on Carousel bar.",
					"User is able to see and click Bestlip button  displayed on Carousel bar ", "Pass");

			// TC-198 AS66528
			// Verify if Single Bet, Multi Bet, Settings, Load button and Booking Code text
			// field is displayed on betslip.

			if (webdriver.findElement(By.xpath(XpathMap.get("LoadBtnInBS"))).isDisplayed()) {
				Thread.sleep(3000);
			} else {
				throw new Exception("LoadBtnInBS is not present");
			}

			report.detailsAppend("TC198-SM_BetSlipLoggedIn",
					"Verify if Single Bet, Multi Bet, Settings, Load button and Booking Code text field are displayed on betslip. ",
					"User is able to see  Single Bet, Multi Bet, Settings, Load button and Booking Code text fields on betslip",
					"Pass");

			// TC-199 AS66528
			// Verify if Setting button can be clicked on Betslip.
			if (webdriver.findElement(By.xpath(XpathMap.get("SettingsButton"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("SettingsButton"))).click();
				Thread.sleep(3000);
			} else {
				throw new Exception("SettingsButton is not present");
			}
			report.detailsAppend("TC199-SM_BetSlipLoggedIn", "Verify if Setting button can be clicked on Betslip. ",
					"User is able to click Setting button on betslip", "Pass");

			// TC-200 AS66528
			// Verify Radio button can be toggled on Betslip Settings.
			if (webdriver.findElement(By.xpath(XpathMap.get("AcceptAllOddsBS"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("AcceptAllOddsBS"))).click();
				Thread.sleep(3000);
			} else {
				throw new Exception("AcceptAllOddsBS is not present");
			}
			if (webdriver.findElement(By.xpath(XpathMap.get("KeepBetsBS"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("KeepBetsBS"))).click();
				Thread.sleep(3000);
			} else {
				throw new Exception("KeepBetsBS is not present");
			}
			report.detailsAppend("TC200-SM_BetSlipLoggedIn", "Verify Radio button can be toggled on Betslip Settings. ",
					"User is able to toggle Radio buttons on Betslip Settings", "Pass");
			// TC-201 AS66528
			// Verify Continue button can be clicked on Betslip Settings.
			if (webdriver.findElement(By.xpath(XpathMap.get("ContinueBtnInSettingsBS"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("ContinueBtnInSettingsBS"))).click();
				Thread.sleep(3000);
			} else {
				throw new Exception("ContinueBtnInSettingsBS is not present");
			}
			report.detailsAppend("TC201-SM_BetSlipLoggedIn",
					"Verify Continue button can be clicked on Betslip Settings. ",
					"User is able to click Continue button on Betslip Settings", "Pass");

			Thread.sleep(3000);
			log.debug("Switch to default tab");
		} catch (Exception e) {
			System.out.println(e);
			report.detailsAppend("TC197-SM_BetSlipLoggedIn",
					"Verify if user is able to see and click Bestlip button  displayed on Carousel bar.",
					"User is not able to see and click Bestlip button  displayed on Carousel bar ", "Fail");

			report.detailsAppend("TC198-SM_BetSlipLoggedIn",
					"Verify if Single Bet, Multi Bet, Settings, Load button and Booking Code text field are displayed on betslip. ",
					"User is not able to see  Single Bet, Multi Bet, Settings, Load button and Booking Code text fields on betslip",
					"Fail");
			report.detailsAppend("TC199-SM_BetSlipLoggedIn", "Verify if Setting button can be clicked on Betslip. ",
					"User is not able to click Setting button on betslip", "Fail");

			report.detailsAppend("TC200-SM_BetSlipLoggedIn", "Verify Radio button can be toggled on Betslip Settings. ",
					"User is not able to toggle Radio buttons on Betslip Settings", "Pass");

			report.detailsAppend("TC201-SM_BetSlipLoggedIn",
					"Verify Continue button can be clicked on Betslip Settings. ",
					"User is not able to click Continue button on Betslip Settings", "Fail");
			webdriver.navigate().refresh();
			return false;
		}

		// TC-202 AS66528
		// Verify if Bets is added to Betslip.
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			oddsInBetBook();

			Thread.sleep(3000);
			report.detailsAppend("TC202-SM_BetSlipLoggedIn", "Verify if Bets is added to Betslip.",
					"User is able to add Bets to Betslip. ", "Pass");

			// TC-203 AS66528
			// Verify if User can switch between Multi and Single bets after adding legs.
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("SingleBetBS"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("SingleBetBS"))).click();
				Thread.sleep(3000);
			} else {
				throw new Exception("SingleBetBS is not present");
			}

			report.detailsAppend("TC203-SM_BetSlipLoggedIn",
					"Verify if User can switch between Multi and Single bets after adding legs.",
					"User is able to switch between Multi and Single bets after adding legs. ", "Pass");

			// TC-204 AS66528
			// Verify if user is able to click on Hide icons button over betslip after
			// adding legs.

			if (webdriver.findElement(By.xpath(XpathMap.get("HideBtnBS"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("HideBtnBS"))).click();
				Thread.sleep(3000);
			} else {
				throw new Exception("HideBtnBS is not present");
			}

			report.detailsAppend("TC204-SM_BetSlipLoggedIn",
					"Verify if user is able to click on Hide icons button over betslip after adding legs.",
					"user is able to click on Hide icons button over betslip after adding legs. ", "Pass");
			// TC-205 AS66528
			// Verify if user is able to click on Select/Deselect All check box over betslip
			// after adding legs.
			if (webdriver.findElement(By.xpath(XpathMap.get("SelectAllBS"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("SelectAllBS"))).click();
				Thread.sleep(3000);
			} else {
				throw new Exception("SelectAllBS is not present");
			}
			report.detailsAppend("TC205-SM_BetSlipLoggedIn",
					"Verify if user is able to click on Select/Deselect All check box over betslip after adding legs.",
					"User is able to click on Select/Deselect All check box over betslip after adding legs. ", "Pass");
			// TC-206 AS66528
			// Verify if user is able to click on Delete button over betslip after adding
			// legs.
			if (webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).click();
				Thread.sleep(3000);
			} else {
				throw new Exception("DeleteBS is not present");
			}
			report.detailsAppend("TC206-SM_BetSlipLoggedIn",
					"Verify if user is able to click on Delete button over betslip after adding legs.",
					"User is able to click on Delete button over betslip after adding legs. ", "Pass");

			log.debug("Switch to default tab");
		} catch (Exception e) {
			report.detailsAppend("TC202-SM_BetSlipLoggedIn", "Verify if Bets is added to Betslip.",
					"User is not able to add Bets to Betslip. ", "Fail");

			report.detailsAppend("TC203-SM_BetSlipLoggedIn",
					"Verify if User can switch between Multi and Single bets after adding legs.",
					"User is able to switch between Multi and Single bets after adding legs. ", "Fail");

			report.detailsAppend("TC204-SM_BetSlipLoggedIn",
					"Verify if user is able to click on Hide icons button over betslip after adding legs.",
					"User is not able to click on Hide icons button over betslip after adding legs. ", "Fail");

			report.detailsAppend("TC205-SM_BetSlipLoggedIn",
					"Verify if user is able to click on Select/Deselect All check box over betslip after adding legs.",
					"User is not able to click on Select/Deselect All check box over betslip after adding legs. ",
					"Pass");

			report.detailsAppend("TC206-SM_BetSlipLoggedIn",
					"Verify if user is able to click on Delete button over betslip after adding legs.",
					"User is not able to click on Delete button over betslip after adding legs. ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}

		// TC-207 AS66528
		// Verify Single Leg added to betslip.
		try {

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			try {
				Thread.sleep(3000);
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,-200)");
				if (webdriver.findElement(By.xpath(XpathMap.get("UpcomingOdd1"))).isDisplayed()) {
					System.out.print("UpcomingOdd1 is Present");
					webdriver.findElement(By.xpath(XpathMap.get("UpcomingOdd1"))).click();
				} else {
					throw new Exception("UpcomingOdd1 is not present");
				}

				Thread.sleep(3000);
				report.detailsAppend("TC207-SM_BetSlipLoggedIn", "Verify Single Leg added to betslip.	.",
						"User is able to add Single Bet to Betslip. ", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC207-SM_BetSlipLoggedIn", "Verify Single Leg added to betslip.",
						"User is not able to add Single Bet to Betslip. ", "Fail");
			}

			// TC-209 AS66528
			// Verify if user is able to select or deselect a Single leg by clicking on
			// check box.
			try {
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("SelectAllBS"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("SelectAllBS"))).click();
					Thread.sleep(3000);
				} else {
					throw new Exception("SelectAllBS is not present");
				}
				report.detailsAppend("TC209-SM_BetSlipLoggedIn",
						"Verify if user is able to select or deselect a Single leg by clicking on check box.",
						"User is able to select or deselect a Single leg by clicking on check box. ", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC209-SM_BetSlipLoggedIn",
						"Verify if user is able to select or deselect a Single leg by clicking on check box.",
						"User is not able to select or deselect a Single leg by clicking on check box. ", "Fail");
			}

			// TC-208 AS66528
			// Verify if user is able to delete a Single leg by clicking on cross button.
			try {
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("CrossButtonBS"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("CrossButtonBS"))).click();
					Thread.sleep(3000);
				} else {
					throw new Exception("CrossButtonBS is not present");
				}

				report.detailsAppend("TC208-SM_BetSlipLoggedIn",
						"Verify if user is able to delete a Single leg by clicking on cross button.",
						"User is able to delete a Single leg by clicking on cross button. ", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC208-SM_BetSlipLoggedIn",
						"Verify if user is able to delete a Single leg by clicking on cross button.",
						"User is not able to delete a Single leg by clicking on cross button. ", "Fail");

			}

			// TC-210 AS66528
			// Verify Multiple Legs added to betslip.

			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			try {
				Thread.sleep(3000);
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				for (int i = 1; i <= 3; i++) {
					try {
						Thread.sleep(3000);
						if (webdriver.findElement(By.xpath(XpathMap.get("UpcomingOdd" + i))).isDisplayed()) {
							System.out.print("UpcomingOdd" + i + " is Present");
							webdriver.findElement(By.xpath(XpathMap.get("UpcomingOdd" + i))).click();
						} else {
							throw new Exception("UpcomingOdd" + i + " is not present");
						}
					} catch (Exception e) {
						e.printStackTrace();
					}

					if (i % 2 == 1) {
						je.executeScript("window.scrollBy(0,200)");
					}
				}

				Thread.sleep(3000);

				report.detailsAppend("TC210-SM_BetSlipLoggedIn", "Verify Multiple Legs added to betslip.",
						"User is able to add Multiple Legs to Betslip. ", "Pass");

			} catch (Exception e) {

				report.detailsAppend("TC210-SM_BetSlipLoggedIn", "Verify Multiple Legs added to betslip.",
						"User is not able to add Multiple Legs to Betslip. ", "Fail");
			}

			// TC-212 AS66528
			// Verify if user is able to select or deselect a Multiple legs by clicking on
			// check box.
			try {
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("SelectAllBS"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("SelectAllBS"))).click();
					Thread.sleep(3000);
				} else {
					throw new Exception("SelectAllBS is not present");
				}
				report.detailsAppend("TC212-SM_BetSlipLoggedIn",
						"Verify if user is able to select or deselect a Multiple Legs by clicking on check box.",
						"User is able to select or deselect a Multiple Legs by clicking on check box. ", "Pass");

				Thread.sleep(1000);
				webdriver.findElement(By.xpath(XpathMap.get("SelectAllBS"))).click();
				Thread.sleep(1000);

			} catch (Exception e) {

				report.detailsAppend("TC212-SM_BetSlipLoggedIn",
						"Verify if user is able to select or deselect a Multiple Legs by clicking on check box.",
						"User is  not able to select or deselect a Multiple Legs by clicking on check box.", "Fail");
			}

			// TC-211 AS66528
			// Verify if user is able to delete a Multiple legs by clicking on cross button.
			Thread.sleep(2000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("CrossButtonBS"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("CrossButtonBS"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.print(e + "CrossButtonBS is not present");
			}

			Thread.sleep(2000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("CrossButtonBS"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("CrossButtonBS"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				throw new Exception("CrossButtonBS is not present");
			}

			report.detailsAppend("TC211-SM_BetSlipLoggedIn",
					"Verify if user is able to delete a Multiple Legs by clicking on cross button.",
					"User is able to delete a Multiple Legs by clicking on cross button. ", "Pass");

			log.debug("Switch to default tab");

			Thread.sleep(2000);
			if (webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).click();
				Thread.sleep(2000);
			} else {
				throw new Exception("DeletBS is not present");
			}

		} catch (Exception e) {

			report.detailsAppend("TC211-SM_BetSlipLoggedIn",
					"Verify if user is able to delete a Multiple Legs by clicking on cross button.",
					"User is not able to delete a Multiple Legs by clicking on cross button. ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}

		return true;
	}

// TC213-217, 221 AS66528
	public boolean SM_BetSlipFeatures(Desktop_HTML_Report report) {

		try {
			webdriver.manage().timeouts().implicitlyWait(25, TimeUnit.SECONDS);

			// TC214
			// Verify if user is able to click on i button over Win Boost.
			try {
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
					Thread.sleep(7000);
				} else {
					throw new Exception("Sport Btn is not present");
				}
				Thread.sleep(2000);
				oddsInBetBook();
				Thread.sleep(3000);
				try {
					webdriver.findElement(By.xpath(XpathMap.get("MultiBetBS"))).click();
					Thread.sleep(2000);
				} catch (Exception e) {
					System.out.println("MultiBet is Clicked");
				}

				try {
					webdriver.findElement(By.xpath(XpathMap.get("WinBoostBS"))).click();
					Thread.sleep(3000);
				} catch (Exception e) {
					throw new Exception("WinBoostBS is not present");
				}

				report.detailsAppend("TC214-SM_BetSlipLoggedIn",
						"Verify if user is able to click on i button over Win Boost.",
						"User is  able to click on i button over Win Boost. ", "Pass");

				Thread.sleep(2000);
				if (webdriver.findElement(By.xpath(XpathMap.get("ContinueWB"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("ContinueWB"))).click();
					Thread.sleep(3000);
				} else {
					throw new Exception("ContinueWB is not present");
				}

			} catch (Exception e) {

				report.detailsAppend("TC214-SM_BetSlipLoggedIn",
						"Verify if user is able to click on i button over Win Boost.",
						"User is  able to click on i button over Win Boost. ", "Fail");
			}

			// TC215
			// Verify if user is able to click on i button over Win Boost.

			try {
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BetSaverBS"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BetSaverBS"))).click();
					Thread.sleep(3000);
				} else {
					throw new Exception("BetSaverBS is not present");
				}
				report.detailsAppend("TC215-SM_BetSlipLoggedIn",
						"Verify if user is able to click on i button over BetSaver.",
						"User is  able to click on i button over BetSaver. ", "Pass");

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("ContinueWB"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("ContinueWB"))).click();
				} else {
					throw new Exception("ContinueWB is not present");
				}

				Thread.sleep(3000);
				report.detailsAppend("TC213-SM_BetSlipLoggedIn",
						"Verify if Win Boost and Bet Saver icon are displayed below the legs added to the betslip.",
						"User able to see WinBoost and BetSaver Icons in the BetSlip.", "Pass");

			} catch (Exception e) {
				report.detailsAppend("TC215-SM_BetSlipLoggedIn",
						"Verify if user is able to click on i button over BetSaver.",
						"User is not able to click on i button over BetSaver. ", "Fail");

				report.detailsAppend("TC213-SM_BetSlipLoggedIn",
						"Verify if Win Boost and Bet Saver icon are displayed below the legs added to the betslip.",
						"User is not able to see WinBoost and BetSaver Icons in the BetSlip.", "Fail");
			}

			// TC216
			// Verify is user is able to see calculation for all legs added at the bottom of
			// betslip and amount can be edited.
			try {
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("ExpandBtnBS"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("ExpandBtnBS"))).click();
					Thread.sleep(3000);
				} else {
					throw new Exception("ExpandBtnBS is not present");
				}
				if (webdriver.findElement(By.xpath(XpathMap.get("WagerInputBS"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("WagerInputBS"))).clear();
					Thread.sleep(3000);
					webdriver.findElement(By.xpath(XpathMap.get("WagerInputBS"))).sendKeys("4");
					Thread.sleep(3000);
				} else {
					throw new Exception("WagerInputBS is not present");
				}
				report.detailsAppend("TC216-SM_BetSlipLoggedIn",
						"Verify is user is able to see calculation for all legs added at the bottom of betslip and amount can be edited.",
						"User is able to see calculation for all legs added at the bottom of betslip and amount can be edited.",
						"Pass");

			} catch (Exception e) {

				report.detailsAppend("TC216-SM_BetSlipLoggedIn",
						"Verify is user is able to see calculation for all legs added at the bottom of betslip and amount can be edited.",
						"User is not able to see calculation for all legs added at the bottom of betslip and amount can be edited.",
						"Fail");
			}

			// TC217,221
			// Verify if user is able to click on Cash Balance button and place a bet in
			// Multi Bet.
			// Verify is user is able to click on Bet Now button and bet is placed.

			try {
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BetNowBS"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BetNowBS"))).click();
					Thread.sleep(3000);
				} else {
					throw new Exception("Bet now Button is not present");
				}
				Thread.sleep(3000);
				try {
					webdriver.findElement(By.xpath(XpathMap.get("ConfirmBetBtn"))).click();
					System.out.println("ConfirmBetBtn button is clicked \n");
					Thread.sleep(3000);
					if (webdriver.findElement(By.xpath(XpathMap.get("ConfirmBetBtn"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("ConfirmBetBtn"))).click();
						System.out.println("ConfirmBetBtn button Again clicked \n");
						Thread.sleep(3000);
					} else {
						System.out.println("ConfirmBetBtn button Not Displayed \n");
					}

				} catch (Exception e) {
					System.out.println("ConfirmBetBtn button NOt clicked \n");
				}

				Thread.sleep(3000);
				report.detailsAppend("TC217-SM_BetSlipLoggedIn",
						"Verify if user is able to click on Cash Balance button and place a bet in Multi Bet.",
						"User is  able to click on Cash Balance button and place a bet in Multi Bet.", "Pass");

				report.detailsAppend("TC221-SM_BetSlipLoggedIn",
						"Verify is user is able to click on Bet Now button and bet is placed.",
						"User is able to click on Bet Now button and bet is placed.", "Pass");

				Thread.sleep(3000);
				try {
					webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).click();
					System.out.println(" Betnow Popup Close Button is Clicked \n");
					Thread.sleep(3000);
				} catch (Exception e) {
					System.out.println(" Betnow Popup Close Button not Clicked \n");
				}

			} catch (Exception e) {

				report.detailsAppend("TC217-SM_BetSlipLoggedIn",
						"Verify if user is able to click on Cash Balance button and place a bet in Multi Bet.",
						"User is not able to click on Cash Balance button and place a bet in Multi Bet.", "Fail");

				report.detailsAppend("TC221-SM_BetSlipLoggedIn",
						"Verify is user is able to click on Bet Now button and bet is placed.",
						"User is not able to click on Bet Now button and bet is placed.", "Fail");
			}

			// TC220
			// Verify is Share button is displayed at bottom of the betslip and is
			// clickable.

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
				Thread.sleep(7000);
			} else {
				throw new Exception("Sport Btn is not present");
			}
			Thread.sleep(2000);
			oddsInBetBook();
			Thread.sleep(3000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("MultiBetBS"))).click();
				Thread.sleep(2000);
			} catch (Exception e) {
				System.out.println("MultiBet is Clicked");
			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("ShareBtnBS"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("ShareBtnBS"))).click();
				Thread.sleep(3000);
			} else {
				throw new Exception("ShareBtnBS is not present");
			}

			report.detailsAppend("TC220-SM_BetSlipLoggedIn",
					"Verify if Share button is displayed at bottom of the betslip and is clickable.",
					"User is able to see and Click Share button at bottom of the betslip ", "Pass");

			Thread.sleep(3000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("BetPopupClose"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("BetPopupClose"))).click();
				System.out.println(" Bet ClosePopup is Clicked /n");
				Thread.sleep(1000);
			} catch (Exception e) {
				throw new Exception("Bet ClosePopup is not present");
			}

			Thread.sleep(3000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).click();
				Thread.sleep(3000);
			} catch (Exception e) {
				throw new Exception(e + "DeleteBS is not present");
			}

		} catch (Exception e) {
			System.out.println(e);

			report.detailsAppend("TC220-SM_BetSlipLoggedIn",
					"Verify if Share button is displayed at bottom of the betslip and is clickable.",
					"User is not able to see and Click Share button at bottom of the betslip ", "Fail");
			webdriver.navigate().refresh();
			return false;
		}

		return true;

	}

// TC218 AS66528
	public boolean SM_PlacingBetwithSportBonus(Desktop_HTML_Report report) throws InterruptedException {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			// TC218
			// Verify if user is able to click on Sport Bonus Balance button and place a bet
			// in Multi Bet.

			Thread.sleep(2000);
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			je.executeScript("window.scrollBy(0,-200)");
			Thread.sleep(2000);
			oddsInBetBook();
			Thread.sleep(2000);
			try {
				webdriver.navigate().refresh();
				System.out.print("Refresh the page is Selected \n ");
				Thread.sleep(5000);
			} catch (Exception e) {
				System.out.print("Refresh the page Not Selected \n ");
			}

			try {
				webdriver.findElement(By.xpath(XpathMap.get("MultiBetBS"))).click();
				Thread.sleep(3000);
			} catch (Exception e) {
				System.out.println("MultiBet is Clicked");
			}

			webdriver.findElement(By.xpath(XpathMap.get("SportBonusBtnMB"))).click();
			Thread.sleep(2000);
			if (webdriver.findElement(By.xpath(XpathMap.get("BetNowBS"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("BetNowBS"))).click();
				Thread.sleep(1000);
			} else {
				throw new Exception("Bet now Button is not present");
			}
			Thread.sleep(3000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("ConfirmBetBtn"))).click();
				System.out.println("ConfirmBetBtn button is clicked \n");
				Thread.sleep(2000);
				if (webdriver.findElement(By.xpath(XpathMap.get("ConfirmBetBtn"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("ConfirmBetBtn"))).click();
					System.out.println("ConfirmBetBtn button Again clicked \n");
					Thread.sleep(2000);
				} else {
					System.out.println("ConfirmBetBtn button Not Displayed \n");
				}

			} catch (Exception e) {
				System.out.println("ConfirmBetBtn button Not Displayed \n");
			}

			Thread.sleep(2000);
			report.detailsAppend("TC218-SM_BetSlipLoggedIn",
					"Verify if user is able to click on Sport Bonus Balance button and place a bet in Multi Bet.",
					"User is able to click on Sport Bonus Balance button and place a bet in Multi Bet.", "Pass");

			Thread.sleep(2000);
			if (webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).click();
				Thread.sleep(3000);
			} else {
				webdriver.navigate().refresh();
				throw new Exception("Bet ClosePopup is not present");
			}

		} catch (Exception e) {
			System.out.println(e + "Sport Bonus InBetSlip Not present");

			report.detailsAppend("TC218-SM_BetSlipLoggedIn",
					"Verify if user is able to click on Sport Bonus Balance button and place a bet in Multi Bet.",
					"User is not able to click on Sport Bonus Balance button and place a bet in Multi Bet.", "Fail");

			webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).click();
			Thread.sleep(3000);
			return false;
		}

		return true;
	}

	public boolean SM_PlacingBetwithFreeBet(Desktop_HTML_Report report) {
		// TC219
		// Verify if user is able to click on Free Bet Balance button and place a bet in
		// Multi Bet.
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			je.executeScript("window.scrollBy(0,-200)");
			Thread.sleep(2000);
			oddsInBetBook();
			Thread.sleep(2000);
			try {
				webdriver.navigate().refresh();
				System.out.print("Refresh the page is Selected \n ");
			} catch (Exception e) {
				System.out.print("Refresh the page Not Selected \n ");
			}
			Thread.sleep(5000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("FreeBetBtnMB"))).click();
				Thread.sleep(2000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BetNowBS"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BetNowBS"))).click();
					Thread.sleep(2000);
				} else {
					throw new Exception("Bet now Button is not present");
				}
				Thread.sleep(3000);
				try {
					webdriver.findElement(By.xpath(XpathMap.get("ConfirmBetBtn"))).click();
					System.out.println("ConfirmBetBtn button is clicked \n");
					Thread.sleep(3000);
					if (webdriver.findElement(By.xpath(XpathMap.get("ConfirmBetBtn"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("ConfirmBetBtn"))).click();
						System.out.println("ConfirmBetBtn button Again clicked \n");
						Thread.sleep(3000);
					} else {
						System.out.println("ConfirmBetBtn button Not Displayed \n");
					}

				} catch (Exception e) {
					System.out.println("ConfirmBetBtn button NOt clicked \n");
				}

				report.detailsAppend("TC219-SM_BetSlipLoggedIn",
						"Verify if user is able to click on Free Bet Balance button and place a bet in Multi Bet.",
						"User is able to click on Free Bet Balance button and place a bet in Multi Bet.", "Pass");

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).click();
					Thread.sleep(3000);
				} else {
					webdriver.navigate().refresh();
					throw new Exception("Bet ClosePopup is not present");
				}

			} catch (Exception e) {
				System.out.println(e + "Free Bet Balance button is not present");

				report.detailsAppend("TC219-SM_BetSlipLoggedIn",
						"Verify if user is able to click on Free Bet Balance button and place a bet in Multi Bet.",
						"User is not able to click on Free Bet Balance button and place a bet in Multi Bet.", "Fail");

				webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).click();
				Thread.sleep(3000);
				return false;
			}

		} catch (Exception e) {
			System.out.println(e + "Odds not not present");
		}
		return true;

	}

// TC222-228
	public boolean SM_BetSlipDifferentBets(Desktop_HTML_Report report) throws InterruptedException {
		webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
		PromoClose();
		// TC222
		// Verify if user is able to add single bet in Single Bets section.
		try {
			Thread.sleep(3000);
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			je.executeScript("window.scrollBy(0,-300)");
			Thread.sleep(2000);
			if (webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).isDisplayed()) {
				System.out.print("UpComingButton is Present");
				webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).click();
			} else {
				throw new Exception("UpComingButton is not present");
			}

			if (webdriver.findElement(By.xpath(XpathMap.get("UpcomingOdd1"))).isDisplayed()) {
				System.out.print("UpcomingOdd1 is Present");
				webdriver.findElement(By.xpath(XpathMap.get("UpcomingOdd1"))).click();
			} else {
				throw new Exception("UpcomingOdd1 is not present");
			}

			Thread.sleep(2000);
			report.detailsAppend("TC222-SM_BetSlipLoggedIn",
					"Verify if user is able to add single bet in Single Bets section..",
					"User is able to add single bet in Single Bets section.", "Pass");

			Thread.sleep(2000);
			if (webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).click();
				Thread.sleep(2000);
			} else {
				throw new Exception("DeleteBS is not present");
			}

		} catch (Exception e) {
			System.out.println(e);
			report.detailsAppend("TC222-SM_BetSlipLoggedIn",
					"Verify if user is able to add single bet in Single Bets section..",
					"User is not able to add single bet in Single Bets section.", "Fail");

		}
		// TC223
		// Verify if user is able to add multiple bet in Single Bets section.
		try {
			Thread.sleep(2000);
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			je.executeScript("window.scrollBy(0,-200)");
			Thread.sleep(2000);
			oddsInBetBook();
			Thread.sleep(3000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("SingleBetBS"))).click();
				Thread.sleep(3000);
			} catch (Exception e) {
				System.out.println("SingleBetBS is not Clicked");
			}
			report.detailsAppend("TC223-SM_BetSlipLoggedIn",
					"Verify if user is able to add multiple bet in Single Bets section..",
					"User is able to add multiple bet in Single Bets section.", "Pass");
			Thread.sleep(3000);
		} catch (Exception e) {
			System.out.println(e);
			report.detailsAppend("TC223-SM_BetSlipLoggedIn",
					"Verify if user is able to add multiple bet in Single Bets section..",
					"User is not able to add multiple bet in Single Bets section.", "Fail");

		}
		// TC224, 225
		// Verify is wager amount text box is displayed in from of every individual leg
		// and amount can be edited.
		// Verify if Cash and Free Bet button is displayed for all legs in Single Bet
		// section.
		try {
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("SingleBetWagerBS"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("SingleBetWagerBS"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("SingleBetWagerBS"))).sendKeys("1");
				System.out.println("Betslip button in header is clicked \n");
				Thread.sleep(3000);

			} else {
				System.out.println("Betslip Btn InHeader is not displayed \n");
			}
			report.detailsAppend("TC224-SM_BetSlipLoggedIn",
					"Verify is wager amount text box is displayed in from of every individual leg and amount can be edited.",
					"User is able to edit and see Amount text box for every individual Leg.", "Pass");

			report.detailsAppend("TC225-SM_BetSlipLoggedIn",
					"Verify if Cash and Free Bet button is displayed for all legs in Single Bet section.",
					"User is able to see Cash and Free Bet button for every individual Leg.", "Pass");
			Thread.sleep(3000);
		} catch (Exception e) {
			System.out.println(e);
			report.detailsAppend("TC224-SM_BetSlipLoggedIn",
					"Verify is wager amount text box is displayed in from of every individual leg and amount can be edited.",
					"User is not able to edit and see Amount text box for every individual Leg.", "Fail");
			report.detailsAppend("TC225-SM_BetSlipLoggedIn",
					"Verify if Cash and Free Bet button is displayed for all legs in Single Bet section.",
					"User is not able to see Cash and Free Bet button for every individual Leg.", "Fail");
		}

		// TC226
		// Verify is user is unable to place a bet with less than the required amount
		// that us 1 Rand.
		try {
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("SingleBetWagerBS"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("SingleBetWagerBS"))).clear();
				webdriver.findElement(By.xpath(XpathMap.get("SingleBetWagerBS"))).sendKeys("0.1");
				System.out.println("Betslip button in header is clicked \n");
				Thread.sleep(3000);

			} else {
				System.out.println("BetslipBtnInHeader is not displayed \n");
			}
			if (webdriver.findElement(By.xpath(XpathMap.get("BetNowBS"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("BetNowBS"))).click();
				Thread.sleep(3000);
			} else {
				throw new Exception("Bet now Button is not present");
			}

			report.detailsAppend("TC226-SM_BetSlipLoggedIn",
					"Verify is user is unable to place a bet with less than the required amount that us 1 Rand.",
					"User is unable to place a bet with less than the required amount that us 1 Rand.", "Pass");

			Thread.sleep(2000);
			if (webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).click();
				System.out.println(" Delete All BS is Clicked \n ");
				Thread.sleep(2000);
			} else {
				throw new Exception("Delete Btn BS is not present \n");
			}

		} catch (Exception e) {
			System.out.println(e);
			report.detailsAppend("TC226-SM_BetSlipLoggedIn",
					"Verify is user is unable to place a bet with less than the required amount that us 1 Rand.",
					"User is unable to place a bet with less than the required amount that us 1 Rand.", "Fail");
			webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).click();
			Thread.sleep(2000);
		}

		// TC227
		// Verify is user can add 40 legs to the betslip and place a bet.
		// TC228
		// Verify is user can add Trending bets to the betslip and place a bet.
		try {
			Thread.sleep(3000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
				System.out.println("SportBtn is Clicked");
			} catch (Exception e) {
				System.out.println("SportBtn is not Clicked");
			}

			Thread.sleep(6000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("RightArrowBtnInEvents"))).click();
				System.out.print(" Right brackets  on Sport vertical clicked\n ");
				Thread.sleep(3000);
				try {
					webdriver.findElement(By.xpath(XpathMap.get("TrendingBets"))).click();
					System.out.println("TrendingBets button in header is clicked \n");
				} catch (Exception e) {
					System.out.println(e + "TrendingBets is not displayed \n");
				}

			} catch (Exception e) {
				System.out.println(e + "Right brackets on Sport vertical Not clicked\n ");
			}

			Thread.sleep(3000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("AddAlltoBS"))).click();
				Thread.sleep(3000);
			} catch (Exception e) {
				System.out.println("AddAlltoBS is not Clicked");
			}

			BetslipClick();
			report.detailsAppend("TC227-SM_BetSlipLoggedIn",
					"Verify is user can add 40 legs to the betslip and place a bet.",
					"User can add 40 legs to the betslip and place a bet.", "Pass");
			Thread.sleep(3000);
			report.detailsAppend("TC228-SM_BetSlipLoggedIn",
					"Verify is user can add Trending bets to the betslip and place a bet.",
					"User can add Trending bets to the betslip and place a bet.", "Pass");
			Thread.sleep(3000);
			BetSlipClose();
			Thread.sleep(2000);
		} catch (Exception e) {
			System.out.println(e);
			report.detailsAppend("TC227-SM_BetSlipLoggedIn",
					"Verify is user can add 40 legs to the betslip and place a bet.",
					"User can add 40 legs to the betslip and place a bet.", "Fail");
			report.detailsAppend("TC228-SM_BetSlipLoggedIn",
					"Verify is user can add Trending bets to the betslip and place a bet.",
					"User can not add Trending bets to the betslip and place a bet.", "Fail");
			Thread.sleep(2000);
			webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).click();

		}
		return true;

	}

// TC229-235
	public boolean SM_OddsClickFromFeatures(Desktop_HTML_Report report) throws Exception {
		webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

		// TC229: Verify is user can add Esport legs from header place a bet.
		Thread.sleep(2000);
		try {
			clickButton("Esports");
			Thread.sleep(3000);
			ESoddsInBetBook();
			Thread.sleep(3000);
			BetslipClick();
			report.detailsAppend("TC229-SM_BetSlipLoggedIn", "Verify user can add Esport legs from header place a bet.",
					"User add Esport legs from header place a bet.", "Pass");
			Thread.sleep(3000);
			BetSlipClose();
			Thread.sleep(3000);

		} catch (Exception e) {
			System.out.println(e);
			report.detailsAppend("TC229-SM_BetSlipLoggedIn", "Verify user can add Esport legs from header place a bet.",
					"User Cant add Esport legs from header place a bet.", "Fail");
		}

		// TC230 : Verify if user can add Live odds and place a bet.
		try {
			Thread.sleep(3000);
			webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).click();
			Thread.sleep(3000);
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			for (int i = 1; i <= 3; i++) {
				Thread.sleep(3000);
				try {
					if (webdriver.findElement(By.xpath(XpathMap.get("LiveOdds" + i))).isDisplayed()) {
						System.out.print("LiveOdds" + i + " is Present");
						webdriver.findElement(By.xpath(XpathMap.get("LiveOdds" + i))).click();
					} else {
						System.out.println("LiveOdds" + i + " is not visible");
					}

					if (i % 2 == 1) {
						je.executeScript("window.scrollBy(0,200)");
					}

				} catch (Exception e) {
					// Log the exception but continue the loop
					System.out.println("Exception for LiveOdds" + i + ": " + e.getMessage());
				}
			}

			Thread.sleep(3000);
			BetslipClick();

			report.detailsAppend("TC230-SM_BetSlipLoggedIn", "Verify if user can add Live odds and place a bet.",
					"User can add Live odds and place a bet.", "Pass");

			Thread.sleep(3000);
			BetSlipClose();
		} catch (Exception e) {
			System.out.println(e);
			report.detailsAppend("TC230-SM_BetSlipLoggedIn", "Verify if user can add Live odds and place a bet.",
					"User can add Live odds and place a bet.", "Fail");

		}

////TC231
		// Verify if user is able to place combination bet of Highlights, Upcoming,
		// Live, Esports, Outrights,Draw No Bet
		try {

			///// Selecting odds in Live Section
			Thread.sleep(3000);
			try {
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				for (int i = 1; i <= 2; i++) {
					Thread.sleep(3000);
					try {
						if (webdriver.findElement(By.xpath(XpathMap.get("LiveOdds" + i))).isDisplayed()) {
							System.out.print("LiveOdds" + i + " is Present");
							webdriver.findElement(By.xpath(XpathMap.get("LiveOdds" + i))).click();
						} else {
							System.out.println("LiveOdds" + i + " is not visible");
						}

						if (i % 2 == 1) {
							je.executeScript("window.scrollBy(0,200)");
						}

					} catch (Exception e) {
						// Log the exception but continue the loop
						System.out.println("Exception for LiveOdds" + i + ": " + e.getMessage());
					}
				}

			} catch (Exception e) {
				System.out.println("Live odds is not present ");
			}

			Thread.sleep(3000);
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			je.executeScript("window.scrollBy(0,-300)");

			Thread.sleep(2000);
			if (webdriver.findElement(By.xpath(XpathMap.get("UpcomingBtnInLivePage"))).isDisplayed()) {
				System.out.print("UpComingButton is Present & Clicked ");
				webdriver.findElement(By.xpath(XpathMap.get("UpcomingBtnInLivePage"))).click();
			} else {
				throw new Exception("UpComingButton is not present");
			}
			Thread.sleep(8000);
			je.executeScript("window.scrollBy(0,200)");
			if (webdriver.findElement(By.xpath(XpathMap.get("UpcomingOdd1"))).isDisplayed()) {
				System.out.print("UpcomingOdd1 is Present");
				webdriver.findElement(By.xpath(XpathMap.get("UpcomingOdd1"))).click();
			} else {
				throw new Exception("UpcomingOdd1 is not present");
			}
			Thread.sleep(3000);

//		clickButton("Esports");
			try {
				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("CounterStrikeES"))).click();
				System.out.print("CounterStrikeES is Present");
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).isDisplayed()) {
					System.out.print("UpComingButton is Present");
					webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).click();
				} else {
					throw new Exception("Upcoming is not present");
				}
				Thread.sleep(3000);
				for (int i = 1; i <= 2; i++) {
					Thread.sleep(3000);
					if (webdriver.findElement(By.xpath(XpathMap.get("EsoprtsOdds" + i))).isDisplayed()) {
						System.out.print("EsoprtsOdds" + i + " is Present");
						webdriver.findElement(By.xpath(XpathMap.get("EsoprtsOdds" + i))).click();
					} else {
						throw new Exception("EsoprtsOdds" + i + " is not present");
					}
					if (i % 2 == 1) {
						je.executeScript("window.scrollBy(0,200)");
					}
				}

				Thread.sleep(3000);
				clickButton("VuvuSportButton");
				Thread.sleep(8000);
			} catch (Exception e) {
				System.out.println("Esports is not present");
			}

			webdriver.navigate().refresh();
			Thread.sleep(4000);
			try {
				Thread.sleep(2000);
				if (webdriver.findElement(By.xpath(XpathMap.get("OutrightsButton"))).isDisplayed()) {
					System.out.print("OutrightsButton is Present");
					webdriver.findElement(By.xpath(XpathMap.get("OutrightsButton"))).click();
				} else {
					throw new Exception("OutrightsButton is not present");
				}
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("CountryInOR"))).isDisplayed()) {
					System.out.print("CountryInOR is Present");
					webdriver.findElement(By.xpath(XpathMap.get("CountryInOR"))).click();
				} else {
					throw new Exception("CountryInOR is not present");
				}
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("LeagueInOR"))).isDisplayed()) {
					System.out.print("LeagueInOR is Present");
					webdriver.findElement(By.xpath(XpathMap.get("LeagueInOR"))).click();
				} else {
					throw new Exception("LeagueInOR is not present");
				}
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BetTypeInOR"))).isDisplayed()) {
					System.out.print("BetTypeInOR is Present");
					webdriver.findElement(By.xpath(XpathMap.get("BetTypeInOR"))).click();
				} else {
					throw new Exception("BetTypeInOR is not present");
				}
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("OddsInOR"))).isDisplayed()) {
					System.out.print("OddsInOR is PrThread.sleep(3000);esent");
					webdriver.findElement(By.xpath(XpathMap.get("OddsInOR"))).click();
				} else {
					throw new Exception("OddsInOR is not present");
				}

			} catch (Exception e) {
				System.out.println(e);
			}

			Thread.sleep(3000);
			try {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
				System.out.println(" Sport Btn is Clicked \n");
				Thread.sleep(7000);
			} catch (Exception e) {
				System.out.println(e + " Sport Btn Not Clicked \n");
			}

			try {
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("HighlightsTab"))).isDisplayed()) {
					System.out.print("HighlightsTab is Present");
					webdriver.findElement(By.xpath(XpathMap.get("HighlightsTab"))).click();
				} else {
					throw new Exception("HighlightsTab is not present");
				}
				if (webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed()) {
					System.out.print("SBBetTypeDD is Present");
					webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
				} else {
					throw new Exception("SBBetTypeDD is not present");
				}
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("DrawNoBetInBetTypeDD"))).isDisplayed()) {
					System.out.print("DrawNoBet is Present");
					webdriver.findElement(By.xpath(XpathMap.get("DrawNoBetInBetTypeDD"))).click();
				} else {
					throw new Exception("DrawNoBet is not present");
				}
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("DrawNoBetsOdds"))).isDisplayed()) {
					System.out.print("DrawNoBetsOdds is Present");
					webdriver.findElement(By.xpath(XpathMap.get("DrawNoBetsOdds"))).click();
				} else {
					throw new Exception("DrawNoBetsOdds is not present");
				}
			} catch (Exception e) {
				System.out.println(e);
			}
			BetslipClick();
			report.detailsAppend("TC231-SM_BetSlipLoggedIn",
					"Verify if user is able to place  combination bet of Highlights, Upcoming, Live, Esports, Outrights,Draw No Bet",
					"User is able to place  combination bet of Highlights, Upcoming, Live, Esports, Outrights,Draw No Bet",
					"Pass");
			Thread.sleep(3000);
			BetSlipClose();
			Thread.sleep(2000);
			if (webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).click();
				Thread.sleep(2000);
			} else {
				throw new Exception("DeletBS is not present");
			}

		} catch (Exception e) {
			System.out.println(e);
			report.detailsAppend("TC231-SM_BetSlipLoggedIn",
					"Verify if user is able to place  combination bet of Highlights, Upcoming, Live, Esports, Outrights,Draw No Bet",
					"User is able to place  combination bet of Highlights, Upcoming, Live, Esports, Outrights,Draw No Bet",
					"Fail");

		}

		// TC232
		// Verify if Build A Bet can be added and bet can be placed.
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			je.executeScript("window.scrollBy(0,200)");
			Thread.sleep(2000);
			if (webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed()) {
				System.out.print("SBBetTypeDD is Present");
				webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
			} else {
				throw new Exception("SBBetTypeDD is not present");
			}
			Thread.sleep(2000);
			if (webdriver.findElement(By.xpath(XpathMap.get("MatchResultInBetTypeDD"))).isDisplayed()) {
				System.out.print("MatchResult is Present");
				webdriver.findElement(By.xpath(XpathMap.get("MatchResultInBetTypeDD"))).click();
			} else {
				throw new Exception("MatchResult is not present");
			}
			Thread.sleep(2000);
			je.executeScript("window.scrollBy(0,100)");
			Thread.sleep(2000);
			if (webdriver.findElement(By.xpath(XpathMap.get("Upcoming1stLeaugeEvent"))).isDisplayed()) {
				System.out.print("League Event is Present");
				webdriver.findElement(By.xpath(XpathMap.get("Upcoming1stLeaugeEvent"))).click();
			} else {
				throw new Exception("League Event is not present");
			}
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("BuildABet"))).isDisplayed()) {
				System.out.print("BuildABet is Present");
				webdriver.findElement(By.xpath(XpathMap.get("BuildABet"))).click();
			} else {
				throw new Exception("BuildABet is not present");
			}
			Thread.sleep(6000);
			if (webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketClick"))).isDisplayed()) {
				System.out.print("BuildABetMarketClick is Present");
				webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketClick"))).click();
			} else {
				throw new Exception("BuildABetMarketClick is not present");
			}
			Thread.sleep(4000);
			if (webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketDD2"))).isDisplayed()) {
				System.out.print("BuildABetMarketDD2 is Present");
				webdriver.findElement(By.xpath(XpathMap.get("BuildABetMarketDD2"))).click();
			} else {
				throw new Exception("BuildABetMarketDD2 is not present");
			}
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("BuildABetmarketclick3"))).isDisplayed()) {
				System.out.print("BuildABetmarketclick3 is Present");
				webdriver.findElement(By.xpath(XpathMap.get("BuildABetmarketclick3"))).click();
			} else {
				throw new Exception("BuildABetmarketclick3 is not present");
			}
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("AddToBSBAB"))).isDisplayed()) {
				System.out.print("AddToBSBAB is Present");
				webdriver.findElement(By.xpath(XpathMap.get("AddToBSBAB"))).click();
			} else {
				throw new Exception("AddToBSBAB is not present");
			}
			Thread.sleep(3000);
			BetslipClick();
			report.detailsAppend("TC232-SM_BetSlipLoggedIn",
					"Verify if Build A Bet can be added and bet can be placed..",
					"User can add Build A Bet odds and place a bet.", "Pass");
			Thread.sleep(3000);
			BetSlipClose();

		} catch (Exception e) {
			System.out.println(e);
			report.detailsAppend("TC232-SM_BetSlipLoggedIn",
					"Verify if Build A Bet can be added and bet can be placed..",
					"User can add Build A Bet odds and place a bet.", "Fail");

		}

		// TC233
		// Verify if Draw No Market bet can be added and placed.
		try {

			Thread.sleep(2000);
			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed()) {
				System.out.print("SportButton is Present");
				webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			} else {
				webdriver.navigate().refresh();
				Thread.sleep(4000);
				webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
				throw new Exception("SportButton is not present");
			}
			Thread.sleep(7000);
			try {
				Thread.sleep(2000);
				if (webdriver.findElement(By.xpath(XpathMap.get("HighlightsTab"))).isDisplayed()) {
					System.out.print("HighlightsTab is Present");
					webdriver.findElement(By.xpath(XpathMap.get("HighlightsTab"))).click();
				} else {
					throw new Exception("HighlightsTab is not present");
				}
				Thread.sleep(2000);
				JavascriptExecutor je = (JavascriptExecutor) webdriver;
				je.executeScript("window.scrollBy(0,200)");
				Thread.sleep(2000);
				if (webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).isDisplayed()) {
					System.out.print("SBBetTypeDD is Present");
					webdriver.findElement(By.xpath(XpathMap.get("SBBetTypeDD"))).click();
				} else {
					throw new Exception("SBBetTypeDD is not present");
				}
				Thread.sleep(2000);
				if (webdriver.findElement(By.xpath(XpathMap.get("DrawNoBetInBetTypeDD"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("DrawNoBetInBetTypeDD"))).click();
				} else {
					throw new Exception("DrawNoBet is not present");
				}
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("DrawNoBetsOdds"))).isDisplayed()) {
					System.out.print("DrawNoBetsOdds is Present");
					webdriver.findElement(By.xpath(XpathMap.get("DrawNoBetsOdds"))).click();
				} else {
					throw new Exception("DrawNoBetsOdds is not present");
				}
			} catch (Exception e) {
				System.out.println(e);
			}
			BetslipClick();
			report.detailsAppend("TC233-SM_BetSlipLoggedIn", "Verify if  Draw No Market bet can be added and placed.",
					"User can add Draw No Market bet and place a bet.", "Pass");
			Thread.sleep(3000);
			BetSlipClose();
		} catch (Exception e) {
			System.out.println(e);
			report.detailsAppend("TC233-SM_BetSlipLoggedIn", "Verify if  Draw No Market bet can be added and placed.",
					"User can add Draw No Market bet and place a bet.", "Fail");

		}

		// TC234
		// Verify Booking Code before and after placing bet.
		try {
			Thread.sleep(2000);
			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed()) {
				System.out.print("SportButton is Present");
				webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			} else {
				webdriver.navigate().refresh();
				Thread.sleep(4000);
				webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
				throw new Exception("SportButton is not present");
			}
			Thread.sleep(7000);
			try {
				Thread.sleep(2000);
				oddsInBetBook();
				Thread.sleep(2000);
				try {
					webdriver.findElement(By.xpath(XpathMap.get("MultiBetBS"))).click();
					Thread.sleep(3000);
				} catch (Exception e) {
					System.out.println("Multibet is not present");
				}
				if (webdriver.findElement(By.xpath(XpathMap.get("ShareBtnBS"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("ShareBtnBS"))).click();
					System.out.println("Share button in Betslip is clicked \n");
					Thread.sleep(3000);

				} else {
					System.out.println("Share button in Betslip is clicked \n");
				}
				report.detailsAppend("TC234-[1]-SM_BetSlipLoggedIn", "Verify Booking Code before placing bet.",
						"User can see Booking code before placing bet", "Pass");

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BetPopupClose"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BetPopupClose"))).click();
					Thread.sleep(3000);
				} else {
					throw new Exception("Bet ClosePopup is not present");
				}
				if (webdriver.findElement(By.xpath(XpathMap.get("BetNowBS"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BetNowBS"))).click();
					Thread.sleep(1000);
				} else {
					throw new Exception("Bet now Button is not present");
				}

				Thread.sleep(3000);
				try {
					webdriver.findElement(By.xpath(XpathMap.get("ConfirmBetBtn"))).click();
					System.out.println("ConfirmBetBtn button is clicked \n");
					Thread.sleep(3000);
					if (webdriver.findElement(By.xpath(XpathMap.get("ConfirmBetBtn"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("ConfirmBetBtn"))).click();
						System.out.println("ConfirmBetBtn button Again clicked \n");
						Thread.sleep(3000);
					} else {
						System.out.println("ConfirmBetBtn button Not Displayed \n");
					}

				} catch (Exception e) {
					System.out.println("ConfirmBetBtn button NOt clicked \n");
				}

				report.detailsAppend("TC234-[2]-SM_BetSlipLoggedIn", "Verify Booking Code after placing bet.",
						"User can see Booking code after placing bet", "Pass");

				Thread.sleep(1000);
				if (webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).click();
					Thread.sleep(2000);
				} else {
					webdriver.findElement(By.xpath(XpathMap.get("ContinueBettingBtnBS"))).click();
					throw new Exception("Bet ClosePopup is not present");
				}

			} catch (Exception e) {
				System.out.println(e);
				report.detailsAppend("TC234-[2]-SM_BetSlipLoggedIn", "Verify Booking Code after placing bet.",
						"User cant see Booking code after placing bet", "Fail");
			}

		} catch (Exception e) {
			System.out.println(e);

		}
		// TC 235
		// Verify if Confirm Bet popup is displayed if user has not selected "Accept All
		// Odds Line Change" from betslip Setting for Live Games.
		try {
			Thread.sleep(2000);
			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VuvuLive"))).click();
				System.out.print("Live Btn is Present & Clicked \n");

			} else {
				throw new Exception("Live Btn is not present \n");
			}
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("TennisBtnInCarosel"))).isDisplayed()) {
				System.out.print("TennisBtnInCarosel is Present");
				webdriver.findElement(By.xpath(XpathMap.get("TennisBtnInCarosel"))).click();
			} else {
				throw new Exception("TennisBtnInCarosel is not present");
			}
			Thread.sleep(5000);
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			for (int i = 1; i <= 4; i++) {
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("LiveTennisOdds" + i))).isDisplayed()) {
					System.out.print("LiveTennisOdds" + i + " is Present");
					webdriver.findElement(By.xpath(XpathMap.get("LiveTennisOdds" + i))).click();
				} else {
					throw new Exception("LiveTennisOdds" + i + " is not present");
				}
				if (i % 2 == 1) {
					je.executeScript("window.scrollBy(0,200)");
				}
			}

			try {
				webdriver.findElement(By.xpath(XpathMap.get("MultiBetBS"))).click();
				Thread.sleep(3000);
			} catch (Exception e) {
				System.out.println(e + "MultiBetBS button is not present");
			}

			BetslipClick();

			report.detailsAppend("TC235-SM_BetSlipLoggedIn",
					"Verify if Confirm Bet popup is displayed if user has not selected \"Accept All Odds Line Change\" from betslip Setting for Live Games.",
					"User can see Confirm Bet popup if user has not selected \"Accept All Odds Line Change\" from betslip Setting for Live Games.",
					"Pass");

			Thread.sleep(2000);
			if (webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).click();
				Thread.sleep(2000);
			} else {
				webdriver.findElement(By.xpath(XpathMap.get("ContinueBettingBtnBS"))).click();
				throw new Exception("Bet ClosePopup is not present");
			}

			Thread.sleep(3000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).click();
				Thread.sleep(3000);
			} catch (Exception e) {
				throw new Exception(e + "DeleteBS is not present");
			}

		} catch (Exception e) {
			System.out.println(e);
			report.detailsAppend("TC235-SM_BetSlipLoggedIn",
					"Verify if Confirm Bet popup is displayed if user has not selected \"Accept All Odds Line Change\" from betslip Setting for Live Games.",
					"User can see Confirm Bet popup if user has not selected \"Accept All Odds Line Change\" from betslip Setting for Live Games.",
					"Fail");
		}
		return true;

	}

	public void ESoddsInBetBook() throws Exception {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("CounterStrikeES"))).isDisplayed()) {
				System.out.print("CounterStrikeES is Present");
				webdriver.findElement(By.xpath(XpathMap.get("CounterStrikeES"))).click();
			} else {
				throw new Exception("CounterStrikeES is not present");
			}
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).isDisplayed()) {
				System.out.print("UpComingButton is Present");
				webdriver.findElement(By.xpath(XpathMap.get("UpComingButton"))).click();
			} else {
				throw new Exception("VuvuSportButton is not present");
			}
			Thread.sleep(5000);
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			for (int i = 1; i <= 10; i++) {
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("EsoprtsOdds" + i))).isDisplayed()) {
					System.out.print("EsoprtsOdds" + i + " is Present");
					webdriver.findElement(By.xpath(XpathMap.get("EsoprtsOdds" + i))).click();
				} else {
					throw new Exception("EsoprtsOdds" + i + " is not present");
				}
				if (i % 2 == 1) {
					je.executeScript("window.scrollBy(0,200)");
				}
			}
		} catch (Exception e) {
			System.out.println("Esports is not present");
		}
	}

	public void clickButton(String buttonName) throws InterruptedException, Exception {
		webdriver.manage().timeouts().implicitlyWait(20, null);

		// Click the button specified by the argument
		String buttonXpath = XpathMap.get(buttonName);
		if (webdriver.findElement(By.xpath(buttonXpath)).isDisplayed()) {
			webdriver.findElement(By.xpath(buttonXpath)).click();
			System.out.println(buttonName + " Button is clicked \n");
			Thread.sleep(3000);
		} else {
			System.out.println(buttonName + " is not present");
		}
	}

// TC236-42
	public boolean SM_Jackpots(Desktop_HTML_Report report) {
		webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
		// TC236
		// Verify if Betway Jackpot button is displayed on Header and is clickable.
		try {
			Thread.sleep(1000);
			if (webdriver.findElement(By.xpath(XpathMap.get("BetwayJackpot"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("BetwayJackpot"))).click();
				System.out.println(" Betway Jackpot Btn is Clicked \n ");
				Thread.sleep(4000);
			} else {
				webdriver.findElement(By.xpath(XpathMap.get("BetwayJackpot"))).click();
				throw new Exception("BetwayJackpot Btn is not Clicked \n");
			}

			report.detailsAppend("TC236-SM_Jackpots",
					"Verify if Betway Jackpot button is displayed on Header and is clickable.",
					"User can able to see and click Betway Jackpots Button", "Pass");

		} catch (Exception e) {
			report.detailsAppend("TC236-SM_Jackpots",
					"Verify if Betway Jackpot button is displayed on Header and is clickable.",
					"User cant able to see and click Betway Jackpots Button", "Fail");
		}

		// TC237
		// Verify if user can place bet on Mahala Jackpot using Favorite picks.
		try {
			Thread.sleep(3000);
			MahalaJackpotClick("FavoritesBtnJP");
			Thread.sleep(2000);
			report.detailsAppend("TC237-SM_Jackpots",
					"Verify if user can place bet on Mahala Jackpot using Favorite picks.",
					"User can place bet on Mahala Jackpot using Favorite picks.", "Pass");

			Thread.sleep(2000);
			if (webdriver.findElement(By.xpath(XpathMap.get("ContinueBettingBtnBS"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("ContinueBettingBtnBS"))).click();
				Thread.sleep(2000);
			} else {
				throw new Exception("Bet ClosePopup is not present");
			}

		} catch (Exception e) {
			report.detailsAppend("TC237-SM_Jackpots",
					"Verify if user can place bet on Mahala Jackpot using Favorite picks.",
					"User cant place bet on Mahala Jackpot using Favorite picks.", "Fail");
		}

		// TC238
		// Verify if user can place bet on Mahala Jackpot using Random picks.
		try {
			Thread.sleep(2000);
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			je.executeScript("window.scrollBy(0,-700)");
			Thread.sleep(2000);

			if (webdriver.findElement(By.xpath(XpathMap.get("RandomPickBtnJP"))).isDisplayed()) {
				System.out.print("RandomPickBtnJP  is Present");
				webdriver.findElement(By.xpath(XpathMap.get("RandomPickBtnJP"))).click();
			} else {
				throw new Exception("RandomPickBtnJP is not present");
			}
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("FreeTicketBtnJP"))).isDisplayed()) {
				System.out.print("FreeTicketBtnJP is Present");
				webdriver.findElement(By.xpath(XpathMap.get("FreeTicketBtnJP"))).click();
			} else {
				throw new Exception("FreeTicketBtnJP is not present");
			}
			Thread.sleep(3000);
			report.detailsAppend("TC238-SM_Jackpots",
					"Verify if user can place bet on Mahala Jackpot using Random picks.",
					"User can place bet on Mahala Jackpot using Random picks.", "Pass");

			Thread.sleep(2000);
			if (webdriver.findElement(By.xpath(XpathMap.get("ContinueBettingBtnBS"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("ContinueBettingBtnBS"))).click();
				Thread.sleep(2000);
			} else {
				throw new Exception("Bet ClosePopup is not present");
			}

		} catch (Exception e) {
			report.detailsAppend("TC238-SM_Jackpots",
					"Verify if user can place bet on Mahala Jackpot using Random picks.",
					"User not place bet on Mahala Jackpot using Random picks.", "Fail");
		}

		// TC239
		// Verify if user can place bet on Bamba13 Jackpot using Favorite picks.
		try {
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			je.executeScript("window.scrollBy(0,200)");
			Thread.sleep(2000);
			if (webdriver.findElement(By.xpath(XpathMap.get("BetwayJackpot"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("BetwayJackpot"))).click();
				System.out.println(" Betway ackpot is Clicked \n ");
				Thread.sleep(2000);
			} else {
				throw new Exception("Betway Jackpot is not present \n");
			}
			Thread.sleep(2000);
			Bamba13JackpotClick("FavoritesBtnJP");
			Thread.sleep(2000);
			if (webdriver.findElement(By.xpath(XpathMap.get("BetnowBtnBambaJP"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("BetnowBtnBambaJP"))).click();
				System.out.print("BetnowBtnJP is Clicked \n ");
			} else {
				throw new Exception("BetnowBtnJP is not present \n");
			}
			Thread.sleep(2000);
			report.detailsAppend("TC239-SM_Jackpots",
					"Verify if user can place bet on Bamba13 Jackpot using Favorite picks.",
					"User can place bet on Bamba13 Jackpot using Favorite picks.", "Pass");

			Thread.sleep(2000);
			if (webdriver.findElement(By.xpath(XpathMap.get("ContinueBettingBtnBS"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("ContinueBettingBtnBS"))).click();
				Thread.sleep(3000);
			} else {
				throw new Exception("Bet ClosePopup is not present");
			}
		} catch (Exception e) {
			report.detailsAppend("TC239-SM_Jackpots",
					"Verify if user can place bet on Bamba13 Jackpot using Favorite picks.",
					"User cant place bet on Bamba13 Jackpot using Favorite picks.", "Fail");
		}
		// TC240
		// Verify if user can place bet on Bamba13 Jackpot using Random picks.
		try {
			Thread.sleep(3000);
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			je.executeScript("window.scrollBy(0,-800)");
			Thread.sleep(2000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("RandomPickBtnJP"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("ScrollToTop"))).click();
			} catch (Exception e) {
				System.out.println(" Scroll to Top Btn Not Visible \n");
			}
			Thread.sleep(2000);

			if (webdriver.findElement(By.xpath(XpathMap.get("RandomPickBtnJP"))).isDisplayed()) {
				System.out.print("RandomPickBtnJP  is Present");
				webdriver.findElement(By.xpath(XpathMap.get("RandomPickBtnJP"))).click();
			} else {
				throw new Exception("RandomPickBtnJP is not present");
			}
			Thread.sleep(2000);
			je.executeScript("window.scrollBy(0,700)");
			Thread.sleep(2000);
			if (webdriver.findElement(By.xpath(XpathMap.get("BetnowBtnBambaJP"))).isDisplayed()) {
				System.out.print("BetnowBtnJP is Present");
				webdriver.findElement(By.xpath(XpathMap.get("BetnowBtnBambaJP"))).click();
			} else {
				throw new Exception("BetnowBtnJP is not present");
			}
			Thread.sleep(2000);
			report.detailsAppend("TC240-SM_Jackpots",
					"Verify if user can place bet on Bamba13 Jackpot using Random picks.",
					"User can place bet on Bamba13 Jackpot using Random picks.", "Pass");

			Thread.sleep(2000);
			if (webdriver.findElement(By.xpath(XpathMap.get("ContinueBettingBtnBS"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("ContinueBettingBtnBS"))).click();
				Thread.sleep(2000);
			} else {
				throw new Exception("Bet ClosePopup is not present");
			}

		} catch (Exception e) {
			report.detailsAppend("TC240-SM_Jackpots",
					"Verify if user can place bet on Bamba13 Jackpot using Random picks.",
					"User cant place bet on Bamba13 Jackpot using Random picks.", "Fail");
		}
		// TC241
		// Verify is user can view consolation prizes for Bamba 13 Jackpot.
		try {
			Thread.sleep(3000);
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			je.executeScript("window.scrollBy(0,-700)");
			Thread.sleep(2000);
			try {
				Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("ConsolationPrizes"))).isDisplayed());
			} catch (Exception e) {
				webdriver.findElement(By.xpath(XpathMap.get("ScrollToTop"))).click();
				System.out.println(" Scroll to Top Btn Is Clicked \n");
			}
			Thread.sleep(2000);

			if (webdriver.findElement(By.xpath(XpathMap.get("ConsolationPrizes"))).isDisplayed()) {
				System.out.print("ConsolationPrizes is Present");
				webdriver.findElement(By.xpath(XpathMap.get("ConsolationPrizes"))).click();
			} else {
				throw new Exception("ConsolationPrizes is not present");
			}
			Thread.sleep(3000);

			report.detailsAppend("TC241-SM_Jackpots",
					"Verify is user can view consolation prizes for Bamba 13 Jackpot.",
					"User can view consolation prizes for Bamba 13 Jackpot.", "Pass");

			Thread.sleep(2000);
			if (webdriver.findElement(By.xpath(XpathMap.get("ConPriceCloseJP"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("ConPriceCloseJP"))).click();
				Thread.sleep(3000);
			} else {
				throw new Exception("ConPriceCloseJP is not present");
			}
		} catch (Exception e) {
			report.detailsAppend("TC241-SM_Jackpots",
					"Verify is user can view consolation prizes for Bamba 13 Jackpot.",
					"User can view consolation prizes for Bamba 13 Jackpot.", "Fail");
		}
		// TC242
		// Verify if user can switch between Archieve and Play buttons.
		try {
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("ArchiveJP"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("ArchiveJP"))).click();
				Thread.sleep(5000);
			} else {
				throw new Exception("ArchiveJP is not present");
			}
			report.detailsAppend("TC242-SM_Jackpots", "Verify if user can switch between Archive and Play buttons.",
					"User can switch between Archive and Play buttons.", "Pass");

			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			je.executeScript("window.scrollBy(0,200)");

			try {
				Thread.sleep(3000);
				Assert.assertTrue(
						webdriver.findElement(By.xpath(XpathMap.get("SMKeepSelectionCheckBox"))).isDisplayed());
				webdriver.findElement(By.xpath(XpathMap.get("SMKeepSelectionCheckBox"))).click();
				System.out.print(" Keep Selection CheckBoc Visibel and click \n");
				Thread.sleep(3000);

				report.detailsAppend("TC243-SM_Jackpots", "Verify if user can check the Keep selections checkbox.",
						"Verified user can check the Keep selections checkbox.", "Pass");

			} catch (Exception e) {
				System.out.print(" Keep Selection CheckBoc Visibel and Not click \n");
				report.detailsAppend("TC243-SM_Jackpots", "Verify if user can check the Keep selections checkbox.",
						"Verified user not click on check the Keep selections checkbox.", "Fail");
			}

		} catch (Exception e) {
			report.detailsAppend("TC242-SM_Jackpots", "Verify if user can switch between Archive and Play buttons.",
					"User not switch between Archive and Play buttons.", "Fail");

			report.detailsAppend("TC243-SM_Jackpots", "Verify if user can check the Keep selections checkbox.",
					"Verified user not click on check the Keep selections checkbox.", "Fail");
		}
		return true;

	}

	public void MahalaJackpotClick(String buttonToClick) throws Exception {
		webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);

		WebElement odds = webdriver.findElement(By.xpath(XpathMap.get("MahalaJackpotsPage")));
		Actions action = new Actions(webdriver);
		action.moveToElement(odds).perform();
		Thread.sleep(2000);
		JavascriptExecutor je = (JavascriptExecutor) webdriver;
		je.executeScript("window.scrollBy(0,100)");
		if (webdriver.findElement(By.xpath(XpathMap.get("MahalaJackpotsPage"))).isDisplayed()) {
			System.out.print("MahalaJackpotsPage is Present");
			webdriver.findElement(By.xpath(XpathMap.get("MahalaJackpotsPage"))).click();
		} else {
			throw new Exception("MahalaJackpotsPage is not present");
		}

		Thread.sleep(5000);
		if (webdriver.findElement(By.xpath(XpathMap.get(buttonToClick))).isDisplayed()) {
			System.out.print(buttonToClick + " is Present");
			webdriver.findElement(By.xpath(XpathMap.get(buttonToClick))).click();
		} else {
			throw new Exception(buttonToClick + " is not present");
		}
		Thread.sleep(3000);
		if (webdriver.findElement(By.xpath(XpathMap.get("FreeTicketBtnJP"))).isDisplayed()) {
			System.out.print("FreeTicketBtnJP is Present");
			webdriver.findElement(By.xpath(XpathMap.get("FreeTicketBtnJP"))).click();
		} else {
			throw new Exception("FreeTicketBtnJP is not present");
		}

	}

	public void Bamba13JackpotClick(String buttonToClick) throws Exception {
		WebElement odds = webdriver.findElement(By.xpath(XpathMap.get("Bamba13JP")));
		Actions action = new Actions(webdriver);
		action.moveToElement(odds).perform();
		Thread.sleep(3000);
		JavascriptExecutor je = (JavascriptExecutor) webdriver;
		je.executeScript("window.scrollBy(0,100)");
		if (webdriver.findElement(By.xpath(XpathMap.get("Bamba13JP"))).isDisplayed()) {
			System.out.print("Bamba13JP is Present");
			webdriver.findElement(By.xpath(XpathMap.get("Bamba13JP"))).click();
		} else {
			throw new Exception("Bamba13JP is not present");
		}
		Thread.sleep(4000);

		if (webdriver.findElement(By.xpath(XpathMap.get("FavDropdownJP"))).isDisplayed()) {
			System.out.print("FavDropdownJP is Present");
			webdriver.findElement(By.xpath(XpathMap.get("FavDropdownJP"))).click();
		} else {
			throw new Exception("FavDropdownJP is not present");
		}
		Thread.sleep(3000);
		if (webdriver.findElement(By.xpath(XpathMap.get("NoofSelectionsJP"))).isDisplayed()) {
			System.out.print("NoofSelectionsJP is Present");
			webdriver.findElement(By.xpath(XpathMap.get("NoofSelectionsJP"))).click();
		} else {
			throw new Exception("NoofSelectionsJP is not present");
		}
		Thread.sleep(2000);

		if (webdriver.findElement(By.xpath(XpathMap.get("SelectionsValueJP"))).isDisplayed()) {
			System.out.print("SelectionsValueJP is Present");
			webdriver.findElement(By.xpath(XpathMap.get("SelectionsValueJP"))).click();
		} else {
			throw new Exception("SelectionsValueJP is not present");
		}
		Thread.sleep(3000);
		if (webdriver.findElement(By.xpath(XpathMap.get("NoofLinesJP"))).isDisplayed()) {
			System.out.print("NoofLinesJP is Present");
			webdriver.findElement(By.xpath(XpathMap.get("NoofLinesJP"))).click();
		} else {
			throw new Exception("NoofLinesJP is not present");
		}
		Thread.sleep(2000);

		if (webdriver.findElement(By.xpath(XpathMap.get("LinesValueJP"))).isDisplayed()) {
			System.out.print("LinesValueJP is Present");
			webdriver.findElement(By.xpath(XpathMap.get("LinesValueJP"))).click();
		} else {
			throw new Exception("LinesValueJP is not present");
		}
		Thread.sleep(2000);
		if (webdriver.findElement(By.xpath(XpathMap.get(buttonToClick))).isDisplayed()) {
			System.out.print(buttonToClick + " is Present");
			webdriver.findElement(By.xpath(XpathMap.get(buttonToClick))).click();
		} else {
			throw new Exception(buttonToClick + " is not present");
		}
		Thread.sleep(2000);
		je.executeScript("window.scrollBy(0,800)");

	}

// TC 244
// Verify if Bet Influencer is displayed after placing bet using more than 5
// legs.

	public boolean SM_BetInfluencer(Desktop_HTML_Report report) {
		try {
			webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
			PromoClose();
			try {
				if (webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed()) {
					System.out.print("Sport Button  is Present & Clicked \n ");
					webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
				} else {
					throw new Exception("Sport Button is not present");
				}

				Thread.sleep(7000);
				SportBoddsInBetBook();
				BetslipClick();
				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("CopyToCB"))).isDisplayed()) {
					System.out.print("CopyToCB  is Present");
					webdriver.findElement(By.xpath(XpathMap.get("CopyToCB"))).click();
				} else {
					throw new Exception("CopyToCB is not present");
				}
				Thread.sleep(4000);
				report.detailsAppend("TC244-SM_BetInfluencer",
						"Verify if Bet Influencer is displayed after placing bet using more than 5 legs.",
						"User can see Bet Influencer after placing bet using more than 5 legs.", "Pass");

				Thread.sleep(2000);
				if (webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).click();
				} else {
					webdriver.findElement(By.xpath(XpathMap.get("ContinueBettingBtnBS"))).click();
					throw new Exception("Bet ClosePopup is not present");
				}

				Thread.sleep(3000);
				HM_Logout();

				// TC245 : Verify if Bet Influencer is working as expected.

				Thread.sleep(5000);
				// Get the current URL
				String currentURL = webdriver.getCurrentUrl();
				String mobileNumber;
				String password;

				// Determine which credentials to use based on the URL
				if (currentURL.contains("za")) {
					mobileNumber = XpathMap.get("HMPH1");
					password = XpathMap.get("HMPD1");
				} else if (currentURL.contains("ng")) {
					mobileNumber = XpathMap.get("HMNGPH");
					password = XpathMap.get("HMNGPD");
				} else {
					throw new Exception("URL does not contain za or ng");
				}

				// MobileNoFieldZA
				if (webdriver.findElement(By.xpath(XpathMap.get("MobileNoFieldZA"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("MobileNoFieldZA"))).sendKeys(mobileNumber);
					Thread.sleep(3000);
					System.out.print("MobileNumber is Entered \n");
				} else {
					System.out.print("MobileNoFieldZA is not displayed \n");
				}

				// PasswordFieldZA
				if (webdriver.findElement(By.xpath(XpathMap.get("PasswordFieldZA"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("PasswordFieldZA"))).sendKeys(password);
					System.out.print("Password is Entered \n");
					Thread.sleep(2000);
				} else {
					System.out.print("PasswordFieldZA is not displayed \n");
				}

				Thread.sleep(2000);
				// LoginOnLoginpage
				try {
					Assert.assertTrue(webdriver.findElement(By.xpath(XpathMap.get("LoginOnHomepage"))).isDisplayed());
					webdriver.findElement(By.xpath(XpathMap.get("LoginOnHomepage"))).click();
					System.out.print("LoginBtn is Clicked \n ");
					Thread.sleep(3000);
				} catch (Exception e) {
					System.out.print(e + "LoginBtn is not displayed \n");
				}

				Thread.sleep(2000);
				// PromoClose
				try {
					if (webdriver.findElement(By.xpath(XpathMap.get("PromoClose"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("PromoClose"))).click();
						Thread.sleep(3000);
					} else {
						System.out.print("PromoClose is not displayed");
					}
				} catch (Exception e) {
					System.out.print("Promo Code is not present");
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BookingCodeTB"))).isDisplayed()) {
					System.out.println("Betslip button in header is displayed \n");

				} else {
					webdriver.findElement(By.xpath(XpathMap.get("BetslipBtnInHeader"))).click();
					System.out.println("Betslip button in header is clicked \n");
				}

				Thread.sleep(3000);
				String copiedUrl = getClipboardContents();
				String code = copiedUrl.substring(copiedUrl.lastIndexOf("/") + 1);
				System.out.println("Extracted code: " + code);
				Thread.sleep(3000);

				try {
//					webdriver.findElement(By.xpath(XpathMap.get("BookingCodeTB"))).click();
					webdriver.findElement(By.xpath(XpathMap.get("BookingCodeTB"))).sendKeys(code);
					System.out.println("BookingCodeTB in Betslip is clicked \n");

				} catch (Exception e) {
					System.out.println(e + "BookingCodeTB is displayed \n");
					webdriver.findElement(By.xpath(XpathMap.get("BookingCodeTB"))).click();
					Thread.sleep(2000);
					webdriver.findElement(By.xpath(XpathMap.get("BookingCodeTB"))).sendKeys(code);
				}

				Thread.sleep(2000);
				if (webdriver.findElement(By.xpath(XpathMap.get("SearchBtnBS"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("SearchBtnBS"))).click();
					Thread.sleep(1000);
				} else {
					throw new Exception("SearchBtnBS is not present");
				}

				Thread.sleep(2000);
				if (webdriver.findElement(By.xpath(XpathMap.get("BetNowBS"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BetNowBS"))).click();
				} else {
					throw new Exception("Bet now Button is not present");
				}

				Thread.sleep(3000);
				try {
					webdriver.findElement(By.xpath(XpathMap.get("ConfirmBetBtn"))).click();
					System.out.println("ConfirmBetBtn button is clicked \n");
					Thread.sleep(3000);
					if (webdriver.findElement(By.xpath(XpathMap.get("ConfirmBetBtn"))).isDisplayed()) {
						webdriver.findElement(By.xpath(XpathMap.get("ConfirmBetBtn"))).click();
						System.out.println("ConfirmBetBtn button Again clicked \n");
						Thread.sleep(3000);
					} else {
						System.out.println("ConfirmBetBtn button Not Displayed \n");
					}

				} catch (Exception e) {
					System.out.println("ConfirmBetBtn button NOt clicked \n");
				}

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).click();
				} else {
					Thread.sleep(3000);
					webdriver.findElement(By.xpath(XpathMap.get("ContinueBettingBtnBS"))).click();
					throw new Exception("Bet ClosePopup is not present");
				}

				Thread.sleep(3000);
				HM_Logout();
				Thread.sleep(3000);
				HM_Login();

				Thread.sleep(3000);
				if (webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("VuvuHamburgerMenu"))).click();
					System.out.println("VuvuHamburgerMenu button in header is clicked \n");
					Thread.sleep(3000);

				} else {
					System.out.println("VuvuHamburgerMenu is not displayed \n");
				}
				if (webdriver.findElement(By.xpath(XpathMap.get("BetInfluencer"))).isDisplayed()) {
					webdriver.findElement(By.xpath(XpathMap.get("BetInfluencer"))).click();
					Thread.sleep(3000);
				} else {
					throw new Exception("Bet now Button is not present");
				}
				try {
					Thread.sleep(3000);
					JavascriptExecutor js = (JavascriptExecutor) webdriver;
					String shadowHost = "return document.querySelector(\"#accountOptionsModalBody > div > div.accountOptionsBody > influencer-widget\").shadowRoot.querySelector(\"div.bg-white.py-2.flex.justify-center.header > div > button:nth-child(2)\")";
					Thread.sleep(5000);
					WebElement shadowRoot = (WebElement) js.executeScript(shadowHost);
					Thread.sleep(3000);
					shadowRoot.click();
					Thread.sleep(3000);
					try {
						String shadowHostDD = "return document.querySelector(\"div > div.grey-background.sticky-nav > div.p-2.inline-flex.full-width > div.ml-auto.inline-flex > button > svg\")";
						Thread.sleep(4000);
						WebElement Bookingcode = (WebElement) js.executeScript(shadowHostDD);
						Thread.sleep(2000);
						Bookingcode.click();
						Thread.sleep(2000);
						Bookingcode.click();
					} catch (Exception e) {
						System.out.println(e);
					}

				} catch (Exception e) {
					System.out.println(e);
				}

				Thread.sleep(3000);
				report.detailsAppend("TC245-SM_BetInfluencer", "Verify if Bet Influencer is working as expected.",
						"User can see Bet Influencer is working as expected.", "Pass");

				try {
					Thread.sleep(2000);
					Assert.assertTrue(
							webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).isDisplayed());
					webdriver.findElement(By.xpath(XpathMap.get("BSMyBetPopupCloseBtn"))).click();
					Thread.sleep(3000);
				} catch (Exception e) {
					webdriver.navigate().refresh();
				}

			} catch (Exception e) {
				report.detailsAppend("TC244-SM_BetInfluencer",
						"Verify if Bet Influencer is displayed after placing bet using more than 5 legs.",
						"User can see Bet Influencer after placing bet using more than 5 legs.", "Fail");

				report.detailsAppend("TC245-SM_BetInfluencer", "Verify if Bet Influencer is working as expected.",
						"User can see Bet Influencer is working as expected.", "Fail");
			}

		} catch (Exception e) {
			System.out.println(e);
		}
		return true;

	}

// TC246
// Verify if Bet Saver is working as expected.
	public boolean SM_BetSaver(Desktop_HTML_Report report) {
		webdriver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
		PromoClose();
		try {
			BSoddsInBetBook();
			Thread.sleep(3000);

			try {
				webdriver.findElement(By.xpath(XpathMap.get("MultiBetBS"))).click();

			} catch (Exception e) {
				System.out.println(e + "MultiBetBS button is not present");
			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("BetSaverBS"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("BetSaverBS"))).click();
				System.out.println("BetSaverBS button in header is clicked \n");
				Thread.sleep(3000);

			} else {
				System.out.println("BetSaverBS is not displayed \n");
			}

			report.detailsAppend("TC246-SM_BetSaver", "Verify if Bet Saver is working as expected.",
					"User can see Bet Saver is working as expected.", "Pass");

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("ContinueWB"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("ContinueWB"))).click();
			} else {
				throw new Exception("ContinueWB is not present");
			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("DeleteBS"))).click();
				Thread.sleep(3000);
			} else {
				throw new Exception("DeleteBS is not present");
			}

		} catch (Exception e) {
			System.out.println(e);
			report.detailsAppend("TC246-SM_BetSaver", "Verify if Bet Saver is working as expected.",
					"User can see Bet Saver is working as expected.", "Fail");
		}
		return true;
	}

// TC248
// Verify is Cashout is disabled after editing a bet.
	public boolean SM_CashoutEB(Desktop_HTML_Report report) {
		try {
			JavascriptExecutor je = (JavascriptExecutor) webdriver;
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).isDisplayed()) {
				System.out.print("Sport Button  is Present & Clicked \n ");
				webdriver.findElement(By.xpath(XpathMap.get("VuvuSportButton"))).click();
			} else {
				throw new Exception("Sport Button is not present");
			}
			Thread.sleep(5000);
			try {

				for (int i = 1; i <= 5; i++) {
					Thread.sleep(3000);
					if (webdriver.findElement(By.xpath(XpathMap.get("HighlightsOdds" + i))).isDisplayed()) {
						System.out.print("HighlightsOdds" + i + " is Present");
						webdriver.findElement(By.xpath(XpathMap.get("HighlightsOdds" + i))).click();
					} else {
						throw new Exception("HighlightsOdds" + i + " is not present");
					}
					if (i % 2 == 1) {
						je.executeScript("window.scrollBy(0,200)");
					}
				}
			} catch (Exception e) {
				System.out.println("Live odds is not present ");
			}

			Thread.sleep(2000);
			BetslipClick();
			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("MBBetnowPopupClose"))).click();
				Thread.sleep(3000);
			} else {
				Thread.sleep(3000);
				webdriver.findElement(By.xpath(XpathMap.get("ContinueBettingBtnBS"))).click();
				throw new Exception("Bet ClosePopup is not present");
			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("MyBetsHeader"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("MyBetsHeader"))).click();
				System.out.println(" Mybet in Header is clicked\n ");

			} else {
				throw new Exception("MyBets in Header is not present");
			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("EditbtnMB"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("EditbtnMB"))).click();

			} else {
				throw new Exception("EditbtnMB is not present");
			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("VoidBetBtnMB"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("VoidBetBtnMB"))).click();

			} else {
				throw new Exception("VoidBetBtnMB is not present");
			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("RemovenowBtnMB"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("RemovenowBtnMB"))).click();
				Thread.sleep(1000);
			} else {
				throw new Exception("Bet ClosePopup is not present");
			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("RemovebetPopupClose"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("RemovebetPopupClose"))).click();
				System.out.println("Removebet Popup Close is Clicked \n");
				Thread.sleep(1000);

			} else {
				System.out.println("Removebet Popup Close is Clicked \n");
			}

			Thread.sleep(3000);
			if (webdriver.findElement(By.xpath(XpathMap.get("EditbtnMB"))).isDisplayed()) {
				webdriver.findElement(By.xpath(XpathMap.get("EditbtnMB"))).click();
				Thread.sleep(3000);
			} else {
				throw new Exception("EditbtnMB is not present");
			}

			report.detailsAppend("TC248-SM_Cashout", "Verify is Cashout is disabled after editing a bet.",
					"User can see Cashout is disabled after editing a bet.", "Pass");

		} catch (Exception e) {
			System.out.println(e);
			report.detailsAppend("TC248-SM_Cashout", "Verify is Cashout is disabled after editing a bet.",
					"User can see Cashout is disabled after editing a bet.", "Fail");
		}
		return true;

	}

	public boolean spinclick() throws InterruptedException {
		// TODO Auto-generated method stub
		return false;
	}

	public int[] CaptureScreenshot_Helpfile(Desktop_HTML_Report markets, String languageCode) {
		// TODO Auto-generated method stub
		return null;
	}

	public String[][] AllBulletPointsText(Desktop_HTML_Report markets, String languageCode, int english_Heading_Count) throws InterruptedException {
		// TODO Auto-generated method stub
		return null;
	}

	public String[] Helpfile_headings_String(Desktop_HTML_Report markets, String languageCode) throws InterruptedException {
		// TODO Auto-generated method stub
		return null;
	}

	public void helpfileContentString_Comparison(WebDriver webdriver2, Desktop_HTML_Report markets,
			CFNLibrary_Desktop cfnlib, String languageCode, int[] english, String[] englishHeadingTxtString,
			String[][] allBulletsTextStores, String regMarket, int english_Heading_Count) {
		// TODO Auto-generated method stub
		
	}

	public String getHelpButtonXpath(String regMarket, String helpTextLink) {
		// TODO Auto-generated method stub
		return null;
	}

}